-------------------------------
---Common fields---------------             ;EFN = empty for none

main_chain = 'runs/spartan/samples/results.hdf5:/spartan'    ;Filename of chain to operate on
comparison_chain =                          ;Filename of secondary chain to operate on, for comparison (EFN)

do_posterior_pdf = F                        ;Parse, script or plot posterior pdfs
do_profile_like = T                         ;Parse, script or plot chain into profile likelihoods
oneD_contour_levels = 68.3 95.4             ;Contour levels to plot in 1D plots (EFN; script operation ignores actual values)
twoD_contour_levels = 68.3 95.4             ;Contour levels to plot in 2D plots (EFN; script operation ignores actual values)
oneD_plot_quantities = 2 3                  ;Parameters/observables to construct 1D plots of (EFN)
twoD_plot_quantities = {2,3}                ;Parameters/observable combinations to make 2D plots of (EFN)
plot_observables =                          ;Observables to make 2D plots of (EFN)

-------------------------------
---Parsing---------------------

parse_dir = 'runs/spartan/parse'            ;Directory to save parsing output in (EFN; default is to place parsed data in same folder as chains)

cut_on_invalid_observables = F              ;Cut on any invalid entries in an hdf5 file, not just the likelihood (defaults to false, meaning cut on likelihood only)

default_bins = 50                           ;Default number of bins to sort samples into in each direction.
specific_bins =                             ;Bins to use for specific observables (EFN; overrides default)
default_resolution = 500                    ;Default resolution of binwise interpolation for plotting (~300+ for publication)
specific_resolution =                       ;Resolution of binwise interpolation for specific observables (EFN; overrides default)
interpolation_method = 'bilinear'           ;Either bilinear (default) or spline (watch out for ringing in the latter case)

chain_type = other                          ;Algorithm used to generate chain (valid: MCMC, MultiNest, other)
compute_evidence = F                        ;Compute and print evidence (only if chain_type = MCMC)
bf_lnlike_for_profile_like =                ;Denominator of profile likelihood ratio (if empty, set to best fit determined from chain)

use_log_scale =                             ;Parameters/observables that need to be converted to a log scale for display (EFN)
quantity_rescalings =                       ;Scaling factors to apply to any columns in chains (EFN)
data_ranges =                               ;Discard any points outside these ranges of parameters/observables

labels_from_file =                          ;Either a filename or blank (quantity_labels is ignored if a filename is given)
preamble = 'from gambit_preamble import *'  ;A one-line python preamble to run before processing functional datastreams.
assign_to_pippi_datastream  =  'LogLike':0 \
                               '#NormalDist_parameters @NormalDist::primary_parameters::mu':2 \
                               '#NormalDist_parameters @NormalDist::primary_parameters::sigma':3 \
                                            ;To plot MultiNest posteriors, add 'Posterior':1 \ above; to plot t-walk posteriors, add 'mult':1 \ above
                                            ;Also adjust the chain_type and do_posterior_pdf fields
                                            ;Reassign a named hdf5 data stream to a particular column index in pippi (use pippi probe to test; EFN)
quantity_labels =   0:'lnlike' \
                    2:'$\mu$' \
                    3:'$\sigma$'
                                            ;To plot posteriors, add 1:'multiplicity' \ above.
                                            ;labels for columns in chains (LaTeX for all but multiplicity, prior and likelihood)

-------------------------------
---Scripting-------------------

script_dir = 'runs/spartan/scripts'         ;Directory to save scripts in (EFN; default is to place scripts in same folder as parse output)

legend_on_1D = 2 3                          ;1D plots that should include legends
legend_locations_1D = 2:'br' 3:'br'         ;Locations of legends for 1D plots (subset of oneD_plot_quantities)
plot_as_histograms_1D = F                   ;Plot 1D distributions as histograms with no interpolation
key_on_1D = 2 3                             ;2D plots that should include keys for best fit, posterior mean and/or reference pt
key_locations_1D = 'tr'                     ;Locations of keys for 1D plots

legend_on_2D = {2,3}                        ;2D plots that should include legends
legend_locations_2D = 'br'                  ;Locations of legends for 2D plots (single location or partial list that will be filled in with 'bl')
key_on_2D =  {2,3}                          ;2D plots that should include keys for best fit, posterior mean and/or reference pt
key_locations_2D =                          ;Locations of keys for 2D plots
plot_colourbar_2D = {1,2}                   ;2D plots that should include colourbars

plot_comparison = F                         ;Overplot distributions from comparisonFilename in 1D plots and contours in 2D plots
extra_legend_lines = 'Spartan example'      ;Additional text lines to be included in any legends (EFN)
blame = '\textsf{GAMBIT} 2.2.0'             ;Credit line to be placed in top corner of all plots
yaxis_number_angle = -90                    ;Angle relative to vertical for y-axis numerical labels

plot_posterior_mean_on_posterior_pdf = T    ;Indicate the posterior mean in all posterior pdf plots
plot_posterior_mean_on_profile_like = F     ;Indicate the posterior mean in all profile likelihood plots
plot_best_fit_on_posterior_pdf = T          ;Indicate the best fit in all posterior pdf plots
plot_best_fit_on_profile_like = T           ;Indicate the best fit in all profile likelihood plots

axis_ranges =                               ;Axis ranges for parameters/observables (set from chain contents where absent)

reference_point =                           ;Coordinates of reference point (only plotted where one of the listed axes is present)
reference_text =                            ;Key string to be printed for reference point

logo_file =                                 ;Logo pdf file to overplot (EFN)
logo_loc = {0.9,0.1}                        ;Normalised plot x,y co-ordinates of logo centre
logo_width = 0.1                            ;Width to display logo with (as a fraction of default plot width)
colour_scheme = Basic                       ;A recognised pippi colourScheme object (Basic, BlueGold, IceCube, SBClassic,
                                            ; NightOfTheAllanachs, etc - add your own to pippi_colours.py)
-------------------------------
---Plotting--------------------

plot_dir = 'runs/spartan/plots'             ;Directory to save plots in (EFN; default is to place plots in the current directory)
file_prefix =                               ;Prepend prefix to plot filenames (EFN)
file_suffix =                               ;Append suffix to filenames of output plots (EFN)
