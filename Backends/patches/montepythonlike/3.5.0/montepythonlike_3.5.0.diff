diff --git a/data/FIRAS_nu_delta_I.dat b/data/FIRAS_nu_delta_I.dat
new file mode 100644
index 0000000..064bdca
--- /dev/null
+++ b/data/FIRAS_nu_delta_I.dat
@@ -0,0 +1,49 @@
+# This files contains the 
+#  1) the frequency array in GHz,
+#  2) the uncertainty of the monopole spectrum in 10^-26 W/(m^2 Hz sr) and
+# for COBE/FIRAS as given in Tables 3 and 4 of Fixsen et al. 1996.
+# The first line contains the number of lines and the number of columns.
+43 2
+68.05    14.0e3
+81.54    19.0e3
+95.33    25.0e3
+108.82   23.0e3
+122.32   22.0e3
+136.11   21.0e3
+149.60   18.0e3
+163.39   18.0e3
+176.88   16.0e3
+190.37   14.0e3
+204.16   13.0e3
+217.65   12.0e3
+231.14   11.0e3
+244.93   10.0e3
+258.42   11.0e3
+272.21   12.0e3
+285.70   14.0e3
+299.19   16.0e3
+312.98   18.0e3
+326.47   22.0e3
+339.96   22.0e3
+353.76   23.0e3
+367.25   23.0e3
+381.04   23.0e3
+394.53   22.0e3
+408.02   21.0e3
+421.81   20.0e3
+435.30   19.0e3
+448.79   19.0e3
+462.58   19.0e3
+476.07   21.0e3
+489.86   23.0e3
+503.35   26.0e3
+516.84   28.0e3
+530.63   30.0e3
+544.12   32.0e3
+557.91   33.0e3
+571.40   35.0e3
+584.90   41.0e3
+598.69   55.0e3
+612.18   88.0e3
+625.67   155.0e3
+639.46   282.0e3
diff --git a/data/firas_fiducial.dat b/data/firas_fiducial.dat
new file mode 100644
index 0000000..1d951dd
--- /dev/null
+++ b/data/firas_fiducial.dat
@@ -0,0 +1,44 @@
+# Fiducial parameters, n_s = 0.9665, A_s = 2.105e-09, sd_delta_T = 0, sd_T_D = 21, sd_beta_D = 1.53, sd_A_D = 1.49e+06, sd_T_CIB = 18.8, sd_beta_CIB = 0.86, sd_A_CIB = 410000, sd_alpha_sync = 0.82, sd_omega_sync = 0.2, sd_A_sync = 288, sd_T_e = 7000, sd_EM = 15, sd_nu_p_spin = 19, sd_A_spin = 1485.33, sd_A_CO = 1, sd_y_reio_nuisance = 1.77e-06, y_sd = 0, mu_sd = 0
+    68  18851.243
+    81  26705.273
+    95  36980.925
+   108  40645.696
+   122  46971.096
+   136  55350.546
+   149  63541.612
+   163  77288.436
+   176  91148.785
+   190  107655.62
+   204  128492.12
+   217  151872.52
+   231  178403.17
+   244  208932.76
+   258  244225.14
+   272  283934.42
+   285  327469.14
+   299  374739.49
+   312  426961.15
+   326  484039.6
+   339  541097.3
+   353  604652.84
+   367  669959.7
+   381  741019.03
+   394  813782.37
+   408  890782.19
+   421  973920.59
+   435  1059551.5
+   448  1150462.9
+   462  1247816
+   476  1349361
+   489  1457501.8
+   503  1568588.1
+   516  1682842.1
+   530  1803850
+   544  1926376.7
+   557  2054716.2
+   571  2185255.9
+   584  2323743.7
+   598  2476969.2
+   612  2649879.3
+   625  2860365.4
+   639  3137632.7
diff --git a/data/pixie_fiducial.dat b/data/pixie_fiducial.dat
new file mode 100644
index 0000000..1fb6116
--- /dev/null
+++ b/data/pixie_fiducial.dat
@@ -0,0 +1,66 @@
+# Fiducial parameters, n_s = 0.9665, A_s = 2.105e-09, sd_delta_T = 0, sd_T_D = 21, sd_beta_D = 1.53, sd_A_D = 1.49e+06, sd_T_CIB = 18.8, sd_beta_CIB = 0.86, sd_A_CIB = 410000, sd_alpha_sync = 0.82, sd_omega_sync = 0.2, sd_A_sync = 288, sd_T_e = 7000, sd_EM = 15, sd_nu_p_spin = 19, sd_A_spin = 1485.33, sd_A_CO = 1, sd_y_reio_nuisance = 1.77e-06, y_sd = 0, mu_sd = 0
+    30  2889.4487
+    45  2521.1593
+    60  3697.1264
+    75  6174.8439
+    90  10155.002
+   105  15882.505
+   120  23601.186
+   135  33521.169
+   150  45910.777
+   165  61055.409
+   180  79189.287
+   195  100654.23
+   210  125669.89
+   225  154476.1
+   240  187258.71
+   255  224208.09
+   270  265485.78
+   285  311227.3
+   300  361582.8
+   315  416663.4
+   330  476587.52
+   345  541453.58
+   360  611352.33
+   375  686361.79
+   390  766546.17
+   405  851955.83
+   420  942627.42
+   435  1038583.3
+   450  1139831.3
+   465  1246365.3
+   480  1358164.8
+   495  1475195.9
+   510  1597411.5
+   525  1724751.7
+   540  1857144.2
+   555  1994505.5
+   570  2136740.6
+   585  2283744.3
+   600  2435401.2
+   615  2591586.9
+   630  2752167.9
+   645  2917003
+   660  3085942.9
+   675  3258831.6
+   690  3435506.6
+   705  3615799.3
+   720  3799535.8
+   735  3986537.3
+   750  4176620.5
+   765  4369598.4
+   780  4565280.3
+   795  4763472.8
+   810  4963979.9
+   825  5166603.7
+   840  5371144.4
+   855  5577401.3
+   870  5785172.8
+   885  5994256.9
+   900  6204451.7
+   915  6415555.5
+   930  6627367.5
+   945  6839687.8
+   960  7052318
+   975  7265061.4
+   990  7477723.2
diff --git a/data/sdss_lrgDR7_fiducialmodel.dat b/data/sdss_lrgDR7_fiducialmodel.dat
new file mode 100644
index 0000000..2fa69fe
--- /dev/null
+++ b/data/sdss_lrgDR7_fiducialmodel.dat
@@ -0,0 +1,691 @@
+1.000000000000000671e-03 9.993255955099999976e-01 9.994755192199999971e-01 9.995316620399999907e-01 9.995004675475646083e-01 9.995479499496103815e-01 9.995805826940706851e-01
+1.010061519641926525e-03 9.993188758459677912e-01 9.994703063568446400e-01 9.995270178376459702e-01 9.994954760283906170e-01 9.995434357466648212e-01 9.995763961652096574e-01
+1.020224273461357205e-03 9.993120899040766059e-01 9.994650423429752850e-01 9.995223282825914657e-01 9.994904347594302241e-01 9.995388766025367078e-01 9.995721679911514501e-01
+1.030489280027957304e-03 9.993052370444127641e-01 9.994597266900013821e-01 9.995175929463284703e-01 9.994853432216115330e-01 9.995342720494917454e-01 9.995678977392642439e-01
+1.040857568159752602e-03 9.992983166211688584e-01 9.994543589051498866e-01 9.995128113965999761e-01 9.994802008958649786e-01 9.995296216198199524e-01 9.995635849769397563e-01
+1.051330177026238996e-03 9.992913279825954564e-01 9.994489384912311758e-01 9.995079831973734397e-01 9.994750072631591875e-01 9.995249248458205615e-01 9.995592292715751448e-01
+1.061908156252537897e-03 9.992842704709531398e-01 9.994434649466065190e-01 9.995031079088149140e-01 9.994697618044685594e-01 9.995201812598095703e-01 9.995548301905884392e-01
+1.072592566024593115e-03 9.992771434224627658e-01 9.994379377651533281e-01 9.994981850872616258e-01 9.994644640007989134e-01 9.995153903941135232e-01 9.995503873013957818e-01
+1.083384477195433078e-03 9.992699461672571726e-01 9.994323564362327383e-01 9.994932142851968848e-01 9.994591133331648392e-01 9.995105517810887186e-01 9.995459001714451786e-01
+1.094284971392492541e-03 9.992626780293314415e-01 9.994267204446549702e-01 9.994881950512225499e-01 9.994537092825983571e-01 9.995056649530872361e-01 9.995413683681871886e-01
+1.105295141126022389e-03 9.992553383264936029e-01 9.994210292706453558e-01 9.994831269300330501e-01 9.994482513301606863e-01 9.995007294424996802e-01 9.995367914590863601e-01
+1.116416089898587122e-03 9.992479263703143433e-01 9.994152823898110327e-01 9.994780094623889610e-01 9.994427389569303655e-01 9.994957447817178764e-01 9.995321690116212299e-01
+1.127648932315662798e-03 9.992404414660777112e-01 9.994094792731057497e-01 9.994728421850900268e-01 9.994371716439979236e-01 9.994907105031501926e-01 9.995275005932897638e-01
+1.138994794197353442e-03 9.992328829127300471e-01 9.994036193867970042e-01 9.994676246309490697e-01 9.994315488724924146e-01 9.994856261392257579e-01 9.995227857715990316e-01
+1.150454812691221367e-03 9.992252500028295792e-01 9.993977021924305149e-01 9.994623563287655665e-01 9.994258701235437803e-01 9.994804912223941296e-01 9.995180241140797506e-01
+1.162030136386262187e-03 9.992175420224961302e-01 9.993917271467965824e-01 9.994570368032985597e-01 9.994201348783157135e-01 9.994753052851094166e-01 9.995132151882666349e-01
+1.173721925428022374e-03 9.992097582513593812e-01 9.993856937018955611e-01 9.994516655752412326e-01 9.994143426179845635e-01 9.994700678598597010e-01 9.995083585617092758e-01
+1.185531351634874298e-03 9.992018979625078012e-01 9.993796013049026650e-01 9.994462421611933767e-01 9.994084928237589871e-01 9.994647784791411693e-01 9.995034538019815784e-01
+1.197459598615467635e-03 9.991939604224377991e-01 9.993734493981344391e-01 9.994407660736354115e-01 9.994025849768644054e-01 9.994594366754742110e-01 9.994985004766693271e-01
+1.209507861887349758e-03 9.991859448910004327e-01 9.993672374190131213e-01 9.994352368209025173e-01 9.993966185573874839e-01 9.994540419803581432e-01 9.994934981524167261e-01
+1.221677348996793059e-03 9.991778506213511157e-01 9.993609648000325585e-01 9.994296539071569896e-01 9.993905929938590171e-01 9.994485938791334290e-01 9.994884463534080554e-01
+1.233969279639820105e-03 9.991696768598966605e-01 9.993546309687229012e-01 9.994240168323633711e-01 9.993845076438869768e-01 9.994430917936768521e-01 9.994833445454256449e-01
+1.246384885784448081e-03 9.991614228462426528e-01 9.993482353476162983e-01 9.994183250922612505e-01 9.993783618599064722e-01 9.994375351412523312e-01 9.994781921899930088e-01
+1.258925411794167924e-03 9.991530878131410498e-01 9.993417773542114801e-01 9.994125781783395057e-01 9.993721549944090121e-01 9.994319233391342205e-01 9.994729887486543118e-01
+1.271592114552654463e-03 9.991446709864374442e-01 9.993352564009394534e-01 9.994067755778098805e-01 9.993658863998906572e-01 9.994262558046214107e-01 9.994677336829960179e-01
+1.284386263589743990e-03 9.991361715850182179e-01 9.993286718951275294e-01 9.994009167735811161e-01 9.993595554288874361e-01 9.994205319550490962e-01 9.994624264545913794e-01
+1.297309141208670804e-03 9.991275888207565847e-01 9.993220232389656843e-01 9.993950012442329722e-01 9.993531614339602465e-01 9.994147512077540263e-01 9.994570665250529506e-01
+1.310362042614591788e-03 9.991189218984598552e-01 9.993153098294703662e-01 9.993890284639902477e-01 9.993467037676868614e-01 9.994089129801104754e-01 9.994516533560063865e-01
+1.323546276044392520e-03 9.991101700158155907e-01 9.993085310584501890e-01 9.993829979026971344e-01 9.993401817827011202e-01 9.994030166895216949e-01 9.994461864091022107e-01
+1.336863162897811109e-03 9.991013323633375354e-01 9.993016863124705162e-01 9.993769090257912380e-01 9.993335948316345307e-01 9.993970617533910472e-01 9.994406651460030488e-01
+1.350314037869874365e-03 9.990924081243119925e-01 9.992947749728187112e-01 9.993707612942784868e-01 9.993269422671762214e-01 9.993910475891824019e-01 9.994350890284043887e-01
+1.363900249084669045e-03 9.990833964747434237e-01 9.992877964154688319e-01 9.993645541647072639e-01 9.993202234420237584e-01 9.993849736143404217e-01 9.994294575180152629e-01
+1.377623158230462065e-03 9.990742965833002698e-01 9.992807500110469920e-01 9.993582870891430936e-01 9.993134377089257780e-01 9.993788392463680559e-01 9.994237700765635779e-01
+1.391484140696169899e-03 9.990651076112598838e-01 9.992736351247958337e-01 9.993519595151438839e-01 9.993065844206362458e-01 9.993726439027867947e-01 9.994180261658009989e-01
+1.405484585709212498e-03 9.990558287124549075e-01 9.992664511165399999e-01 9.993455708857345021e-01 9.992996629299637501e-01 9.993663870011266770e-01 9.994122252475075019e-01
+1.419625896474748482e-03 9.990464590332176487e-01 9.992591973406511618e-01 9.993391206393817949e-01 9.992926725897330886e-01 9.993600679589680347e-01 9.994063667834723885e-01
+1.433909490316315899e-03 9.990369977123252365e-01 9.992518731460129366e-01 9.993326082099706076e-01 9.992856127528220167e-01 9.993536861939023019e-01 9.994004502355233743e-01
+1.448336798817877235e-03 9.990274438809447766e-01 9.992444778759861368e-01 9.993260330267782487e-01 9.992784827721080676e-01 9.993472411235501118e-01 9.993944750655003872e-01
+1.462909267967307282e-03 9.990177966625776174e-01 9.992370108683742425e-01 9.993193945144511758e-01 9.992712820005315022e-01 9.993407321655616293e-01 9.993884407352631172e-01
+1.477628358301315845e-03 9.990080551730047276e-01 9.992294714553882073e-01 9.993126920929799040e-01 9.992640097910561181e-01 9.993341587376101121e-01 9.993823467067054489e-01
+1.492495545051829775e-03 9.989982185202306297e-01 9.992218589636121528e-01 9.993059251776758023e-01 9.992566654966807960e-01 9.993275202573996818e-01 9.993761924417379205e-01
+1.507512318293855597e-03 9.989882858044281111e-01 9.992141727139692842e-01 9.992990931791470022e-01 9.992492484704312838e-01 9.993208161426678782e-01 9.993699774022982707e-01
+1.522680183094814264e-03 9.989782561178823794e-01 9.992064120216863632e-01 9.992921955032756376e-01 9.992417580639224584e-01 9.993140458098760393e-01 9.993637010491650541e-01
+1.538000659665394012e-03 9.989681285449353298e-01 9.991985761962604018e-01 9.992852315511931982e-01 9.992341935644953876e-01 9.993072086180750935e-01 9.993573627903591383e-01
+1.553475283511912422e-03 9.989579021619298116e-01 9.991906645414240229e-01 9.992782007192592131e-01 9.992265541709750565e-01 9.993003038472545452e-01 9.993509619613042405e-01
+1.569105605590212418e-03 9.989475760371533397e-01 9.991826763551112656e-01 9.992711023990373809e-01 9.992188390757794636e-01 9.992933307717151159e-01 9.993444978921803834e-01
+1.584893192461114299e-03 9.989371492307825839e-01 9.991746109294241673e-01 9.992639359772739205e-01 9.992110474713896684e-01 9.992862886657608579e-01 9.993379699131769156e-01
+1.600839626447416245e-03 9.989266207948271914e-01 9.991664675505982363e-01 9.992567008358747005e-01 9.992031785503013852e-01 9.992791768037380118e-01 9.993313773545229317e-01
+1.616946505792490104e-03 9.989159897730729432e-01 9.991582454989698103e-01 9.992493963518843669e-01 9.991952315050850464e-01 9.992719944600441107e-01 9.993247195464782795e-01
+1.633215444820464678e-03 9.989052552010269093e-01 9.991499440489414186e-01 9.992420218974642498e-01 9.991872055283241849e-01 9.992647409090890109e-01 9.993179958193217916e-01
+1.649648074098020991e-03 9.988944161058602722e-01 9.991415624689500286e-01 9.992345768398712691e-01 9.991790998126597323e-01 9.992574154253315299e-01 9.993112055033855912e-01
+1.666246040597823197e-03 9.988834715063524827e-01 9.991331000214321856e-01 9.992270605414376172e-01 9.991709135507912398e-01 9.992500172832703420e-01 9.993043479290107944e-01
+1.683011007863579461e-03 9.988724204128349715e-01 9.991245559627930373e-01 9.992194723595494432e-01 9.991626459354492340e-01 9.992425457574312109e-01 9.992974224265844807e-01
+1.699944656176776217e-03 9.988612618271349719e-01 9.991159295433722498e-01 9.992118116466279787e-01 9.991542961594168659e-01 9.992350001223917477e-01 9.992904283265174881e-01
+1.717048682725084248e-03 9.988499947425197867e-01 9.991072200074125886e-01 9.992040777501092208e-01 9.991458634155080398e-01 9.992273796527483265e-01 9.992833649592544054e-01
+1.734324801772465455e-03 9.988386181436399447e-01 9.990984265930270558e-01 9.991962700124246144e-01 9.991373468966056048e-01 9.992196836231486134e-01 9.992762316552897817e-01
+1.751774744830978357e-03 9.988271310064732456e-01 9.990895485321681369e-01 9.991883877709828443e-01 9.991287457956397056e-01 9.992119113082852389e-01 9.992690277451218295e-01
+1.769400260834324808e-03 9.988155322982693596e-01 9.990805850505947161e-01 9.991804303581510727e-01 9.991200593055697965e-01 9.992040619828802539e-01 9.992617525593054939e-01
+1.787203116313138170e-03 9.988038209774929843e-01 9.990715353678421007e-01 9.991723971012370642e-01 9.991112866194266084e-01 9.991961349216937904e-01 9.992544054284289157e-01
+1.805185095572032225e-03 9.987919959937687775e-01 9.990623986971906012e-01 9.991642873224721999e-01 9.991024269302861693e-01 9.991881293995346081e-01 9.992469856831017738e-01
+1.823348000868442063e-03 9.987800562878247357e-01 9.990531742456346675e-01 9.991561003389942686e-01 9.990934794312668066e-01 9.991800446912639799e-01 9.992394926539898137e-01
+1.841693652593246085e-03 9.987680007914369051e-01 9.990438612138531349e-01 9.991478354628312575e-01 9.990844433155479098e-01 9.991718800717569460e-01 9.992319256717684395e-01
+1.860223889453223138e-03 9.987558284273738707e-01 9.990344587961789147e-01 9.991394920008855873e-01 9.990753177763562753e-01 9.991636348159524950e-01 9.992242840671772264e-01
+1.878940568655334794e-03 9.987435381093414666e-01 9.990249661805694625e-01 9.991310692549184580e-01 9.990661020069806497e-01 9.991553081988348017e-01 9.992165671709773989e-01
+1.897845566092871581e-03 9.987311287419271544e-01 9.990153825485779127e-01 9.991225665215361929e-01 9.990567952007503028e-01 9.991468994954145755e-01 9.992087743139705935e-01
+1.916940776533456901e-03 9.987185992205447338e-01 9.990057070753239898e-01 9.991139830921749176e-01 9.990473965492687736e-01 9.991384079791723050e-01 9.992009048255229287e-01
+1.936228113808956958e-03 9.987059484313802749e-01 9.989959389294661429e-01 9.991053182530880150e-01 9.990379051646862685e-01 9.991298328527553618e-01 9.991929579701287478e-01
+1.955709511007294558e-03 9.986931752513363847e-01 9.989860772731733451e-01 9.990965712853329128e-01 9.990283200497478422e-01 9.991211732213202135e-01 9.991849329228910115e-01
+1.975386920666193872e-03 9.986802785479784728e-01 9.989761212620977826e-01 9.990877414647595378e-01 9.990186401993140786e-01 9.991124281829953935e-01 9.991768288524689456e-01
+1.995262314968880221e-03 9.986672571794802389e-01 9.989660700453482090e-01 9.990788280619978812e-01 9.990088646083106205e-01 9.991035968359281982e-01 9.991686449275687387e-01
+2.015337685941734260e-03 9.986541099945693833e-01 9.989559227654633000e-01 9.990698303424481175e-01 9.989989922717217308e-01 9.990946782783624025e-01 9.991603803169433196e-01
+2.035615045653950406e-03 9.986408358324744272e-01 9.989456785583860077e-01 9.990607475662705017e-01 9.989890221846092766e-01 9.990856716085594336e-01 9.991520341893834756e-01
+2.056096426419195405e-03 9.986274335228706445e-01 9.989353365534383578e-01 9.990515789883758213e-01 9.989789533420940781e-01 9.990765759248522171e-01 9.991436057137381699e-01
+2.076783880999305641e-03 9.986139018858278815e-01 9.989248958732963590e-01 9.990423238584171806e-01 9.989687847393636799e-01 9.990673903256519495e-01 9.991350940588979990e-01
+2.097679482810015355e-03 9.986002397317564894e-01 9.989143556339661334e-01 9.990329814207823400e-01 9.989585153716923349e-01 9.990581139093773766e-01 9.991264983938075162e-01
+2.118785326128773058e-03 9.985864458613561423e-01 9.989037149447609343e-01 9.990235509145872772e-01 9.989481442344151363e-01 9.990487457745531596e-01 9.991178178874575710e-01
+2.140103526304641766e-03 9.985725190655629913e-01 9.988929729082771658e-01 9.990140315736693033e-01 9.989376703229381205e-01 9.990392850197366004e-01 9.991090517088914158e-01
+2.161636219970310829e-03 9.985584581254984826e-01 9.988821286203735106e-01 9.990044226265833993e-01 9.989270926327520339e-01 9.990297307435442864e-01 9.991001990271995981e-01
+2.183385565256238444e-03 9.985442618124176217e-01 9.988711811701483922e-01 9.989947232965971091e-01 9.989164101594152356e-01 9.990200820446791807e-01 9.990912590115248459e-01
+2.205353742006961257e-03 9.985299288876587909e-01 9.988601296399199914e-01 9.989849328016875418e-01 9.989056218985544744e-01 9.990103380218712248e-01 9.990822308310817190e-01
+2.227542951999558936e-03 9.985154581025932341e-01 9.988489731052058174e-01 9.989750503545395954e-01 9.988947268458849837e-01 9.990004977739330716e-01 9.990731136550969893e-01
+2.249955419164336150e-03 9.985008481985746531e-01 9.988377106347036127e-01 9.989650751625444025e-01 9.988837239971899429e-01 9.989905603997398797e-01 9.990639066528896883e-01
+2.272593389807713721e-03 9.984860979068910236e-01 9.988263412902731453e-01 9.989550064277996633e-01 9.988726123483505637e-01 9.989805249982260937e-01 9.990546089938167063e-01
+2.295459132837374475e-03 9.984712059487149682e-01 9.988148641269178896e-01 9.989448433471100897e-01 9.988613908953094533e-01 9.989703906683907730e-01 9.990452198472979939e-01
+2.318554939989656005e-03 9.984561710350557950e-01 9.988032781927693726e-01 9.989345851119897368e-01 9.988500586340857135e-01 9.989601565093082503e-01 9.990357383827974669e-01
+2.341883126059246274e-03 9.984409918667123129e-01 9.987915825290704097e-01 9.989242309086652227e-01 9.988386145608126876e-01 9.989498216200997094e-01 9.990261637698500952e-01
+2.365446029131185960e-03 9.984256671342250922e-01 9.987797761701607824e-01 9.989137799180801691e-01 9.988270576716644644e-01 9.989393850999754854e-01 9.990164951780415858e-01
+2.389246010815202718e-03 9.984101955178310561e-01 9.987678581434626945e-01 9.989032313159007526e-01 9.988153869629359249e-01 9.989288460481985377e-01 9.990067317770129351e-01
+2.413285456482412890e-03 9.983945756874171851e-01 9.987558274694685601e-01 9.988925842725219217e-01 9.988036014287569042e-01 9.989182035621402278e-01 9.989968727346543176e-01
+2.437566775504384619e-03 9.983788063024759962e-01 9.987436831617279021e-01 9.988818379530768343e-01 9.987916999643191573e-01 9.989074566511120246e-01 9.989869171383404245e-01
+2.462092401494627835e-03 9.983628860120612458e-01 9.987314242268376940e-01 9.988709915174452947e-01 9.987796813286289321e-01 9.988966042033005088e-01 9.989768639645612014e-01
+2.486864792552499846e-03 9.983468134547446304e-01 9.987190496644317017e-01 9.988600441202644120e-01 9.987675442708530138e-01 9.988856450981051793e-01 9.989667121818284201e-01
+2.511886431509580738e-03 9.983305872585733765e-01 9.987065584671714902e-01 9.988489949109414789e-01 9.987552875402690988e-01 9.988745782150351138e-01 9.989564607587163581e-01
+2.537159826178501682e-03 9.983142060410279406e-01 9.986939496207400957e-01 9.988378430336674052e-01 9.987429098862543597e-01 9.988634024336834338e-01 9.989461086638711240e-01
+2.562687509604301590e-03 9.982976684089819308e-01 9.986812221038340320e-01 9.988265876274312616e-01 9.987304100582886646e-01 9.988521166337080981e-01 9.989356548660049961e-01
+2.588472040318303465e-03 9.982809729586616942e-01 9.986683748881595157e-01 9.988152278260375994e-01 9.987177868059815555e-01 9.988407196948784206e-01 9.989250983339201806e-01
+2.614516002594539489e-03 9.982641182756075704e-01 9.986554069384274701e-01 9.988037627581243250e-01 9.987050388790121858e-01 9.988292104970311058e-01 9.989144380364819442e-01
+2.640822006708773862e-03 9.982471029346355884e-01 9.986423172123517489e-01 9.987921915471825729e-01 9.986921650272126971e-01 9.988175879201147689e-01 9.989036729426317152e-01
+2.667392689200104305e-03 9.982299254998011628e-01 9.986291046606472488e-01 9.987805133115776890e-01 9.986791640004988313e-01 9.988058508441440830e-01 9.988928020213897474e-01
+2.694230713135220296e-03 9.982125845243624562e-01 9.986157682270306868e-01 9.987687271645731002e-01 9.986660345489071222e-01 9.987939981492418573e-01 9.988818242418624482e-01
+2.721338768375307620e-03 9.981950785507457402e-01 9.986023068482214882e-01 9.987568322143548505e-01 9.986527754225946740e-01 9.987820287156201626e-01 9.988707385732280564e-01
+2.748719571845650422e-03 9.981774061105124218e-01 9.985887194539453393e-01 9.987448275640580242e-01 9.986393853718300573e-01 9.987699414235930995e-01 9.988595439847407498e-01
+2.776375867807921206e-03 9.981595657243254038e-01 9.985750049669385175e-01 9.987327123117955008e-01 9.986258631469964175e-01 9.987577351535544823e-01 9.988482394457536273e-01
+2.804310428135239463e-03 9.981415559019188866e-01 9.985611623029536643e-01 9.987204855506885970e-01 9.986122074986211183e-01 9.987454087860023755e-01 9.988368239256889547e-01
+2.832526052589979821e-03 9.981233751420681699e-01 9.985471903707683339e-01 9.987081463688987082e-01 9.985984171773057971e-01 9.987329612015459768e-01 9.988252963940471574e-01
+2.861025569104380488e-03 9.981050219325602324e-01 9.985330880721937641e-01 9.986956938496623915e-01 9.985844909338333908e-01 9.987203912808727546e-01 9.988136558204342430e-01
+2.889811834063973645e-03 9.980864947501674189e-01 9.985188543020858676e-01 9.986831270713275588e-01 9.985704275190599999e-01 9.987076979047826431e-01 9.988019011745241649e-01
+2.918887732593878140e-03 9.980677920606212394e-01 9.985044879483584435e-01 9.986704451073914468e-01 9.985562256840010420e-01 9.986948799541793820e-01 9.987900314260838019e-01
+2.948256178847947530e-03 9.980489123185877220e-01 9.984899878919973881e-01 9.986576470265418060e-01 9.985418841797960576e-01 9.986819363100709612e-01 9.987780455449813966e-01
+2.977920116300852849e-03 9.980298539676443204e-01 9.984753530070775707e-01 9.986447318926997552e-01 9.985274017576982741e-01 9.986688658535692875e-01 9.987659425011486958e-01
+3.007882518043100088e-03 9.980106154402595964e-01 9.984605821607809295e-01 9.986316987650646348e-01 9.985127771691191256e-01 9.986556674658895183e-01 9.987537212646344642e-01
+3.038146387078995841e-03 9.979911951577721263e-01 9.984456742134173446e-01 9.986185466981617465e-01 9.984980091627797538e-01 9.986423400258622740e-01 9.987413808032862272e-01
+3.068714756627637444e-03 9.979715915303732920e-01 9.984306280184461757e-01 9.986052747418920905e-01 9.984830963636583956e-01 9.986288823016644667e-01 9.987289199835849285e-01
+3.099590690426914149e-03 9.979518029570905169e-01 9.984154424225013535e-01 9.985918819415847691e-01 9.984680372262791925e-01 9.986152929090891250e-01 9.987163375325054382e-01
+3.130777283040574871e-03 9.979318278257729435e-01 9.984001162654179140e-01 9.985783673380517200e-01 9.984528301929326277e-01 9.986015704530172288e-01 9.987036321669565675e-01
+3.162277660168379828e-03 9.979116645130785557e-01 9.983846483802603089e-01 9.985647299676455591e-01 9.984374737060529581e-01 9.985877135383938175e-01 9.986908026039497122e-01
+3.194094978959387265e-03 9.978913113844630756e-01 9.983690375933540473e-01 9.985509688623190883e-01 9.984219662082653990e-01 9.985737207703386797e-01 9.986778475606256089e-01
+3.226232428328363981e-03 9.978707667941713044e-01 9.983532827243186691e-01 9.985370830496889116e-01 9.984063061423160690e-01 9.985595907540867344e-01 9.986647657542160328e-01
+3.258693229275408127e-03 9.978500290852300170e-01 9.983373825861038275e-01 9.985230715531002721e-01 9.983904919511608078e-01 9.985453220950162301e-01 9.986515559020963106e-01
+3.291480635208770406e-03 9.978290965894430764e-01 9.983213359850269253e-01 9.985089333916962184e-01 9.983745220779014495e-01 9.985309133986385310e-01 9.986382167217358052e-01
+3.324597932270941750e-03 9.978079676273893250e-01 9.983051417208141931e-01 9.984946675804885485e-01 9.983583949658205725e-01 9.985163632706087755e-01 9.986247469307207858e-01
+3.358048439667991880e-03 9.977866405084211410e-01 9.982887985866439884e-01 9.984802731304328605e-01 9.983421090583756152e-01 9.985016703167176599e-01 9.986111452467937299e-01
+3.391835510002249796e-03 9.977651135306666585e-01 9.982723053691927584e-01 9.984657490485056019e-01 9.983256627992000976e-01 9.984868331429023192e-01 9.985974103877707231e-01
+3.425962529608318850e-03 9.977433849810338762e-01 9.982556608486832239e-01 9.984510943377851167e-01 9.983090546321047309e-01 9.984718503552402202e-01 9.985835410716186189e-01
+3.460432918892471926e-03 9.977214531352172067e-01 9.982388637989364488e-01 9.984363079975355770e-01 9.982922830010890758e-01 9.984567205599726991e-01 9.985695360164318357e-01
+3.495250132675475300e-03 9.976993162577060259e-01 9.982219129874257968e-01 9.984213890232942479e-01 9.982753463503326596e-01 9.984414423634703217e-01 9.985553939404242518e-01
+3.530417660538833369e-03 9.976769726017968853e-01 9.982048071753343299e-01 9.984063364069624136e-01 9.982582431241946441e-01 9.984260143722658576e-01 9.985411135619334244e-01
+3.565939027174546642e-03 9.976544204096071677e-01 9.981875451176148717e-01 9.983911491368997471e-01 9.982409717672451333e-01 9.984104351930405130e-01 9.985266935994390192e-01
+3.601817792738370386e-03 9.976316579120918515e-01 9.981701255630539560e-01 9.983758261980216764e-01 9.982235307242295352e-01 9.983947034326432490e-01 9.985121327715492656e-01
+3.638057553206645520e-03 9.976086833290638278e-01 9.981525472543376631e-01 9.983603665719011921e-01 9.982059184400877694e-01 9.983788176980545881e-01 9.984974297970028445e-01
+3.674661940736690443e-03 9.975854948692154389e-01 9.981348089281224523e-01 9.983447692368748738e-01 9.981881333599780248e-01 9.983627765964483425e-01 9.984825833946807672e-01
+3.711634624030850111e-03 9.975620907301451235e-01 9.981169093151069927e-01 9.983290331681508034e-01 9.981701739292356823e-01 9.983465787351325504e-01 9.984675922835979378e-01
+3.748979308704188454e-03 9.975384690983848390e-01 9.980988471401103235e-01 9.983131573379225854e-01 9.981520385934086192e-01 9.983302227216089841e-01 9.984524551829038197e-01
+3.786699737655889204e-03 9.975146281494322587e-01 9.980806211221511237e-01 9.982971407154868082e-01 9.981337257982467737e-01 9.983137071634984316e-01 9.984371708119091915e-01
+3.824799691444385943e-03 9.974905660477854097e-01 9.980622299745316450e-01 9.982809822673632816e-01 9.981152339862294776e-01 9.982970306655329917e-01 9.984217378871953485e-01
+3.863282988666285559e-03 9.974662809469810876e-01 9.980436724049254194e-01 9.982646809574220459e-01 9.980965614444168299e-01 9.982801916939809672e-01 9.984061549989233786e-01
+3.902153486339069496e-03 9.974417709896358231e-01 9.980249471154689633e-01 9.982482357470124912e-01 9.980777062459794680e-01 9.982631885246051606e-01 9.983904205631903839e-01
+3.941415080287676009e-03 9.974170343074916234e-01 9.980060528028562583e-01 9.982316455950982492e-01 9.980586664487504089e-01 9.982460194194744396e-01 9.983745329835785887e-01
+3.981071705534973415e-03 9.973920690214638229e-01 9.979869881584384483e-01 9.982149094583960824e-01 9.980394401107934854e-01 9.982286826408431901e-01 9.983584906638524048e-01
+4.021127336696128651e-03 9.973668732416938187e-01 9.979677518683273130e-01 9.981980262915199908e-01 9.980200252904358749e-01 9.982111764511969465e-01 9.983422920079322305e-01
+4.061585988376981322e-03 9.973414450676054699e-01 9.979483426135027369e-01 9.981809950471296489e-01 9.980004200462604391e-01 9.981934991132065393e-01 9.983259354199267577e-01
+4.102451715576407171e-03 9.973157825879638283e-01 9.979287590699248423e-01 9.981638146760836161e-01 9.979806224371111645e-01 9.981756488897756130e-01 9.983094193041321951e-01
+4.143728614092731695e-03 9.972898838809405309e-01 9.979089999086498963e-01 9.981464841275985433e-01 9.979606305221137008e-01 9.981576240439891112e-01 9.982927420650121730e-01
+4.185420820934231644e-03 9.972637470141810789e-01 9.978890637959517695e-01 9.981290023494123753e-01 9.979404423606322849e-01 9.981394228391945456e-01 9.982759021072152850e-01
+4.227532514733786835e-03 9.972373700448771139e-01 9.978689493934473909e-01 9.981113682879536597e-01 9.979200560123400177e-01 9.981210435389199498e-01 9.982588978355856346e-01
+4.270067916167661487e-03 9.972107510198433555e-01 9.978486553582265328e-01 9.980935808885159632e-01 9.978994695371510293e-01 9.981024844069364965e-01 9.982417276551561747e-01
+4.313031288378539087e-03 9.971838879755984264e-01 9.978281803429882579e-01 9.980756390954380608e-01 9.978786809952825410e-01 9.980837437072341833e-01 9.982243899711572555e-01
+4.356426937402796927e-03 9.971567789384504499e-01 9.978075229961794745e-01 9.980575418522893427e-01 9.978576884472324382e-01 9.980648197040407066e-01 9.982068831889896465e-01
+4.400259212602089694e-03 9.971294219245875334e-01 9.977866819621422634e-01 9.980392881020611062e-01 9.978364899537842669e-01 9.980457106618101371e-01 9.981892057142820462e-01
+4.444532507099250782e-03 9.971018149401729147e-01 9.977656558812632026e-01 9.980208767873649522e-01 9.978150835760140058e-01 9.980264148452263617e-01 9.981713559528480051e-01
+4.489251258218608480e-03 9.970739559814446595e-01 9.977444433901295762e-01 9.980023068506355122e-01 9.977934673753013906e-01 9.980069305192311724e-01 9.981533323107094624e-01
+4.534419947930714428e-03 9.970458430348212442e-01 9.977230431216916884e-01 9.979835772343403910e-01 9.977716394133142597e-01 9.979872559489970651e-01 9.981351331940985228e-01
+4.580043103301556333e-03 9.970174740770116895e-01 9.977014537054295085e-01 9.979646868811966609e-01 9.977495977520435266e-01 9.979673893999296830e-01 9.981167570094396924e-01
+4.626125296946291370e-03 9.969888470751312459e-01 9.976796737675258653e-01 9.979456347343933498e-01 9.977273404537616575e-01 9.979473291377088939e-01 9.980982021633902912e-01
+4.672671147487526301e-03 9.969599599868224082e-01 9.976577019310459704e-01 9.979264197378212575e-01 9.977048655810761835e-01 9.979270734282592592e-01 9.980794670627981535e-01
+4.719685320018232773e-03 9.969308107603821467e-01 9.976355368161214932e-01 9.979070408363083233e-01 9.976821711969133810e-01 9.979066205377408183e-01 9.980605501147549186e-01
+4.767172526569300392e-03 9.969013973348940238e-01 9.976131770401430732e-01 9.978874969758643187e-01 9.976592553645110550e-01 9.978859687326027128e-01 9.980414497265562845e-01
+4.815137526581827337e-03 9.968717176403667501e-01 9.975906212179573851e-01 9.978677871039302039e-01 9.976361161429555535e-01 9.978651162754674786e-01 9.980221643019595579e-01
+4.863585127384104263e-03 9.968417695978787352e-01 9.975678679620713085e-01 9.978479101696362541e-01 9.976127513929043955e-01 9.978440612478822747e-01 9.980026920774586197e-01
+4.912520184673458030e-03 9.968115511197289669e-01 9.975449158828640916e-01 9.978278651240678476e-01 9.975891587018022033e-01 9.978228014821683978e-01 9.979830310593119647e-01
+4.961947603002906694e-03 9.967810601095938861e-01 9.975217635888034007e-01 9.978076509205376921e-01 9.975653356375459024e-01 9.978013347927657817e-01 9.979631792372423149e-01
+5.011872336272727227e-03 9.967502944626915884e-01 9.974984096866716943e-01 9.977872665148675990e-01 9.975412797684434230e-01 9.977796589944434302e-01 9.979431346012486159e-01
+5.062299388226955930e-03 9.967192520659513555e-01 9.974748527817979271e-01 9.977667108656768091e-01 9.975169886631813920e-01 9.977577719022819869e-01 9.979228951416159177e-01
+5.113233812954910869e-03 9.966879307981921787e-01 9.974510914782964699e-01 9.977459829346796427e-01 9.974924598908718743e-01 9.977356713316999359e-01 9.979024588488851766e-01
+5.164680715397715512e-03 9.966563285303055020e-01 9.974271243793152442e-01 9.977250816869905892e-01 9.974676910210183989e-01 9.977133550984347288e-01 9.978818237138855629e-01
+5.216645251859960628e-03 9.966244431254481784e-01 9.974029500872892973e-01 9.977040060914392772e-01 9.974426796235538184e-01 9.976908210185732040e-01 9.978609877277458962e-01
+5.269132630526508765e-03 9.965922724392408671e-01 9.973785672042041472e-01 9.976827551208928835e-01 9.974174232688237662e-01 9.976680669085289388e-01 9.978399488818684437e-01
+5.322148111984463872e-03 9.965598143199745351e-01 9.973539743318667883e-01 9.976613277525888668e-01 9.973919195275993133e-01 9.976450905850710038e-01 9.978187051679485720e-01
+5.375697009750433561e-03 9.965270666088250628e-01 9.973291700721836905e-01 9.976397229684759171e-01 9.973661659710930660e-01 9.976218898653199663e-01 9.977972545779949520e-01
+5.429784690803079669e-03 9.964940271400755112e-01 9.973041530274495692e-01 9.976179397555645645e-01 9.973401601709472875e-01 9.975984625667289052e-01 9.977755951042953653e-01
+5.484416576121023054e-03 9.964606937413464927e-01 9.972789218006430367e-01 9.975959771062884451e-01 9.973138996992593208e-01 9.975748065071385895e-01 9.977537247394605568e-01
+5.539598141226163321e-03 9.964270642338354245e-01 9.972534749957314704e-01 9.975738340188738951e-01 9.972873821285717089e-01 9.975509195047356226e-01 9.977316414763995889e-01
+5.595334916732486348e-03 9.963931364325636642e-01 9.972278112179858711e-01 9.975515094977207564e-01 9.972606050318796322e-01 9.975267993780972953e-01 9.977093433083582541e-01
+5.651632488900344004e-03 9.963589081466333042e-01 9.972019290743038278e-01 9.975290025537929539e-01 9.972335659826704335e-01 9.975024439461461778e-01 9.976868282288677836e-01
+5.708496500196356092e-03 9.963243771794920711e-01 9.971758271735430279e-01 9.975063122050206177e-01 9.972062625548592241e-01 9.974778510282183985e-01 9.976640942318035776e-01
+5.765932649858946692e-03 9.962895413292079949e-01 9.971495041268638726e-01 9.974834374767109768e-01 9.971786923228660449e-01 9.974530184440072444e-01 9.976411393113666648e-01
+5.823946694469523538e-03 9.962543983887538479e-01 9.971229585480824165e-01 9.974603774019729086e-01 9.971508528615928846e-01 9.974279440136161190e-01 9.976179614620986902e-01
+5.882544448529457466e-03 9.962189461462999107e-01 9.970961890540330774e-01 9.974371310221509246e-01 9.971227417464308962e-01 9.974026255575333400e-01 9.975945586788371733e-01
+5.941731785042838471e-03 9.961831823855189505e-01 9.970691942649427819e-01 9.974136973872717027e-01 9.970943565532518482e-01 9.973770608966401330e-01 9.975709289568238658e-01
+6.001514636105102080e-03 9.961471048858990818e-01 9.970419728048143249e-01 9.973900755565016096e-01 9.970656948584536439e-01 9.973512478522558178e-01 9.975470702915895105e-01
+6.061898993497573732e-03 9.961107114230685067e-01 9.970145233018224973e-01 9.973662645986168807e-01 9.970367542335356603e-01 9.973251842411897661e-01 9.975229806745727901e-01
+6.122890909288020503e-03 9.960739997691301362e-01 9.969868443887193177e-01 9.973422635924867885e-01 9.970075320110145523e-01 9.972988676636436178e-01 9.974986578987774521e-01
+6.184496496437191099e-03 9.960369676930077576e-01 9.969589347032524751e-01 9.973180716275679147e-01 9.969780251943011207e-01 9.972722954215014202e-01 9.974740994840127772e-01
+6.246721929411514981e-03 9.959996129608031934e-01 9.969307928885947634e-01 9.972936878044129649e-01 9.969482307634006668e-01 9.972454647953966633e-01 9.974493029305870895e-01
+6.309573444801932010e-03 9.959619333361640070e-01 9.969024175937860610e-01 9.972691112351916853e-01 9.969181456989617551e-01 9.972183730664655466e-01 9.974242657392307088e-01
+6.373057341948980964e-03 9.959239265806649755e-01 9.968738074741856359e-01 9.972443410442255463e-01 9.968877669822031606e-01 9.971910175163355428e-01 9.973989854110707487e-01
+6.437179983574120058e-03 9.958855904541994430e-01 9.968449611919402154e-01 9.972193763685369694e-01 9.968570915950328848e-01 9.971633954271474920e-01 9.973734594477179360e-01
+6.501947796417462469e-03 9.958469227153842196e-01 9.968158774164618263e-01 9.971942163584120999e-01 9.968261165199381324e-01 9.971355040815461646e-01 9.973476853511803464e-01
+6.567367271881893905e-03 9.958079211219768023e-01 9.967865548249209562e-01 9.971688601779774563e-01 9.967948387400977772e-01 9.971073407627257801e-01 9.973216606239113657e-01
+6.633444966683673706e-03 9.957685834313053652e-01 9.967569921027518154e-01 9.971433070057929005e-01 9.967632552393179690e-01 9.970789027543686123e-01 9.972953827688449957e-01
+6.700187503509589734e-03 9.957289074007119600e-01 9.967271879441715887e-01 9.971175560354581524e-01 9.967313630020793180e-01 9.970501873407517923e-01 9.972688492893440060e-01
+6.767601571680738164e-03 9.956888907880093731e-01 9.966971410527147857e-01 9.970916064762357367e-01 9.966991590135422241e-01 9.970211918066427259e-01 9.972420576892447874e-01
+6.835693927822931656e-03 9.956485313519518598e-01 9.966668501417803583e-01 9.970654575536894715e-01 9.966666402595566465e-01 9.969919134373977920e-01 9.972150054728352586e-01
+6.904471396543909387e-03 9.956078268527196462e-01 9.966363139351940292e-01 9.970391085103390560e-01 9.966338037266433414e-01 9.969623495189119389e-01 9.971876901449150399e-01
+6.973940871117350650e-03 9.955667750524183068e-01 9.966055311677871620e-01 9.970125586063308676e-01 9.966006464020508160e-01 9.969324973376754162e-01 9.971601092107471587e-01
+7.044109314173727619e-03 9.955253737155929095e-01 9.965745005859882877e-01 9.969858071201266325e-01 9.965671652737246866e-01 9.969023541807301436e-01 9.971322601760728155e-01
+7.114983758398159448e-03 9.954836206097571472e-01 9.965432209484328396e-01 9.969588533492077520e-01 9.965333573303386538e-01 9.968719173357137864e-01 9.971041405471494645e-01
+7.186571307235265112e-03 9.954415135059383468e-01 9.965116910265872097e-01 9.969316966107990563e-01 9.964992195612969450e-01 9.968411840908484312e-01 9.970757478307170629e-01
+7.258879135601113870e-03 9.953990501792379098e-01 9.964799096053905680e-01 9.969043362426089905e-01 9.964647489567520777e-01 9.968101517349666763e-01 9.970470795340452552e-01
+7.331914490602323663e-03 9.953562284094084056e-01 9.964478754839122265e-01 9.968767716035892290e-01 9.964299425076077465e-01 9.967788175575046372e-01 9.970181331649073941e-01
+7.405684692262439264e-03 9.953130459814472086e-01 9.964155874760276532e-01 9.968490020747130531e-01 9.963947972055258173e-01 9.967471788485240403e-01 9.969889062316074080e-01
+7.480197134255547713e-03 9.952695006862067872e-01 9.963830444111102524e-01 9.968210270597722689e-01 9.963593100429370963e-01 9.967152328986961241e-01 9.969593962429713629e-01
+7.555459284647330492e-03 9.952255903210234234e-01 9.963502451347431288e-01 9.967928459861942203e-01 9.963234780130677537e-01 9.966829769993291732e-01 9.969296007083745526e-01
+7.631478686643580235e-03 9.951813126903628071e-01 9.963171885094476155e-01 9.967644583058797858e-01 9.962872981047323773e-01 9.966504084375679140e-01 9.968995171332817318e-01
+7.708262959346182802e-03 9.951366656064833949e-01 9.962838734154310094e-01 9.967358634960598041e-01 9.962507670762680290e-01 9.966175242871365691e-01 9.968691428267059118e-01
+7.785819798516773783e-03 9.950916468901205292e-01 9.962502987513539576e-01 9.967070610601748148e-01 9.962138813685611494e-01 9.965843213278517965e-01 9.968384748270456841e-01
+7.864156977348045127e-03 9.950462543711876551e-01 9.962164634351178272e-01 9.966780505287745617e-01 9.961766374002580804e-01 9.965507963188063867e-01 9.968075101535878169e-01
+7.943282347242820729e-03 9.950004858894974102e-01 9.961823664046699500e-01 9.966488314604405874e-01 9.961390315909004478e-01 9.965169460198445295e-01 9.967762458262610092e-01
+8.023203838600967766e-03 9.949543392955036980e-01 9.961480066188326266e-01 9.966194034427301451e-01 9.961010603610016556e-01 9.964827671915938989e-01 9.967446788656418866e-01
+8.103929461614218371e-03 9.949078124510630783e-01 9.961133830581501147e-01 9.965897660931440916e-01 9.960627201319913748e-01 9.964482565954256854e-01 9.967128062929500043e-01
+8.185467307069031750e-03 9.948609032302176969e-01 9.960784947257592670e-01 9.965599190601174273e-01 9.960240073262986993e-01 9.964134109935097738e-01 9.966806251300747155e-01
+8.267825547157442098e-03 9.948136095199994200e-01 9.960433406482809282e-01 9.965298620240338190e-01 9.959849183672975226e-01 9.963782271488058617e-01 9.966481323995940445e-01
+8.351012436296182881e-03 9.947659292212556181e-01 9.960079198767335384e-01 9.964995946982652120e-01 9.959454496793810341e-01 9.963427018250730072e-01 9.966153251247324985e-01
+8.435036311953943503e-03 9.947178602494978206e-01 9.959722314874710491e-01 9.964691168302354241e-01 9.959055976879405137e-01 9.963068317868972734e-01 9.965822003294469988e-01
+8.519905595487025501e-03 9.946694005357731294e-01 9.959362745831424890e-01 9.964384282025103845e-01 9.958653588193688844e-01 9.962706137996770739e-01 9.965487550383730353e-01
+8.605628792983372258e-03 9.946205480275581712e-01 9.959000482936767318e-01 9.964075286339129089e-01 9.958247295011127820e-01 9.962340446296616969e-01 9.965149862768548639e-01
+8.692214496115097111e-03 9.945713006896784725e-01 9.958635517772911339e-01 9.963764179806661181e-01 9.957837061616633401e-01 9.961971210439467539e-01 9.964808910709737066e-01
+8.779671382999591420e-03 9.945216565052512614e-01 9.958267842215251520e-01 9.963450961375619475e-01 9.957422852305725103e-01 9.961598398104772878e-01 9.964464664475141120e-01
+8.868008219069287157e-03 9.944716134766533600e-01 9.957897448443003841e-01 9.963135630391593001e-01 9.957004631384465121e-01 9.961221976980886295e-01 9.964117094340441128e-01
+8.957233857950212819e-03 9.944211696265149447e-01 9.957524328950051462e-01 9.962818186610095106e-01 9.956582363170083383e-01 9.960841914764901883e-01 9.963766170588332916e-01
+9.047357242349294074e-03 9.943703229987401748e-01 9.957148476556069161e-01 9.962498630209111194e-01 9.956156011990853205e-01 9.960458179162873238e-01 9.963411863509437083e-01
+9.138387404950711404e-03 9.943190716595525780e-01 9.956769884417920879e-01 9.962176961801942898e-01 9.955725542185994703e-01 9.960070737889934467e-01 9.963054143402004792e-01
+9.230333469321151674e-03 9.942674136985698574e-01 9.956388546041329279e-01 9.961853182450356448e-01 9.955290918106329823e-01 9.959679558670585520e-01 9.962692980572024348e-01
+9.323204650824251996e-03 9.942153472299060102e-01 9.956004455292836175e-01 9.961527293678041906e-01 9.954852104114103595e-01 9.959284609238316932e-01 9.962328345333382185e-01
+9.417010257544213350e-03 9.941628703933015343e-01 9.955617606412046072e-01 9.961199297484383264e-01 9.954409064582985245e-01 9.958885857336366998e-01 9.961960208008113771e-01
+9.511759691218712315e-03 9.941099813552833897e-01 9.955227994024182792e-01 9.960869196358558275e-01 9.953961763898737658e-01 9.958483270717360947e-01 9.961588538926268166e-01
+9.607462448181187248e-03 9.940566783103551574e-01 9.954835613152932527e-01 9.960536993293963581e-01 9.953510166452522734e-01 9.958076817140868453e-01 9.961213308427254720e-01
+9.704128120312618608e-03 9.940029594822165082e-01 9.954440459233604432e-01 9.960202691802979569e-01 9.953054236359528684e-01 9.957666464245603644e-01 9.960834486907965690e-01
+9.801766396002909235e-03 9.939488231250163119e-01 9.954042528126615386e-01 9.959866295932078284e-01 9.952593937351068565e-01 9.957252179500792888e-01 9.960452044841743291e-01
+9.900387061121861121e-03 9.938942675246345004e-01 9.953641816131290065e-01 9.959527810277285509e-01 9.952129233142363862e-01 9.956833930372717134e-01 9.960065952715260185e-01
+9.999999999999998473e-03 9.938392910000000136e-01 9.953238319999999639e-01 9.959187240000000330e-01 9.951660087461005055e-01 9.956411684338113410e-01 9.959676181023862096e-01
+1.010061519641925615e-02 9.937838919044391650e-01 9.952832036952627970e-01 9.958844590843181077e-01 9.951186464047695468e-01 9.955985408883677446e-01 9.959282700271573363e-01
+1.020224273461356294e-02 9.937280686270602015e-01 9.952422964691396423e-01 9.958499869147910966e-01 9.950708326656124703e-01 9.955555071507040665e-01 9.958885480971425563e-01
+1.030489280027957304e-02 9.936718195941720566e-01 9.952011101416041727e-01 9.958153081870344536e-01 9.950225639053095206e-01 9.955120639716302788e-01 9.958484493645183289e-01
+1.040857568159752645e-02 9.936151432707384101e-01 9.951596445839342442e-01 9.957804236599037129e-01 9.949738365018784281e-01 9.954682081030239438e-01 9.958079708823860399e-01
+1.051330177026239127e-02 9.935580381618690504e-01 9.951178997203029564e-01 9.957453341572697347e-01 9.949246468347124894e-01 9.954239362978856143e-01 9.957671097047681164e-01
+1.061908156252537941e-02 9.935005028143477634e-01 9.950758755294065727e-01 9.957100405698315893e-01 9.948749912845394894e-01 9.953792453102909832e-01 9.957258628865971462e-01
+1.072592566024593158e-02 9.934425358181984134e-01 9.950335720461312983e-01 9.956745438569744033e-01 9.948248662335079651e-01 9.953341318954594952e-01 9.956842274837635065e-01
+1.083384477195433251e-02 9.933841358082912132e-01 9.949909893632592484e-01 9.956388450486670649e-01 9.947742680651477931e-01 9.952885928097250368e-01 9.956422005531175845e-01
+1.094284971392491673e-02 9.933253014659867430e-01 9.949481276332148294e-01 9.956029452474058905e-01 9.947231931644184844e-01 9.952426248105870066e-01 9.955997791524494600e-01
+1.105295141126021521e-02 9.932660315208222679e-01 9.949049870698523090e-01 9.955668456302001479e-01 9.946716379177217293e-01 9.951962246566827819e-01 9.955569603405470813e-01
+1.116416089898586254e-02 9.932063247522391336e-01 9.948615679502853526e-01 9.955305474506058738e-01 9.946195987129140548e-01 9.951493891078508902e-01 9.955137411771814993e-01
+1.127648932315662884e-02 9.931461799913525734e-01 9.948178706167587482e-01 9.954940520408037674e-01 9.945670719393233661e-01 9.951021149251010334e-01 9.954701187231097537e-01
+1.138994794197353659e-02 9.930855961227649242e-01 9.947738954785650956e-01 9.954573608137252672e-01 9.945140539877697083e-01 9.950543988706628262e-01 9.954260900401307177e-01
+1.150454812691221497e-02 9.930245720864236958e-01 9.947296430140060153e-01 9.954204752652279220e-01 9.944605412505973518e-01 9.950062377079709197e-01 9.953816521910353599e-01
+1.162030136386262361e-02 9.929631068795244930e-01 9.946851137723980996e-01 9.953833969763181688e-01 9.944065301216559183e-01 9.949576282016977524e-01 9.953368022396745785e-01
+1.173721925428021506e-02 9.929011995584603456e-01 9.946403083761268249e-01 9.953461276154265125e-01 9.943520169963543376e-01 9.949085671177635426e-01 9.952915372509297809e-01
+1.185531351634874428e-02 9.928388492408193322e-01 9.945952275227475381e-01 9.953086689407336651e-01 9.942969982716730604e-01 9.948590512233599359e-01 9.952458542907692829e-01
+1.197459598615466594e-02 9.927760551074290563e-01 9.945498719871357363e-01 9.952710228025484218e-01 9.942414703461668335e-01 9.948090772869458975e-01 9.951997504261927974e-01
+1.209507861887348761e-02 9.927128164044519698e-01 9.945042426236863076e-01 9.952331911457409364e-01 9.941854296403693780e-01 9.947586420985796707e-01 9.951532227455984758e-01
+1.221677348996792062e-02 9.926491324455306575e-01 9.944583403685642864e-01 9.951951760122293988e-01 9.941288734818898298e-01 9.947077433517038658e-01 9.951062692391428044e-01
+1.233969279639819151e-02 9.925850026139847460e-01 9.944121662420079000e-01 9.951569795435237786e-01 9.940718004459522250e-01 9.946563799824197361e-01 9.950588891374929634e-01
+1.246384885784448254e-02 9.925204263650613257e-01 9.943657213506840176e-01 9.951186039833264108e-01 9.940142091996131413e-01 9.946045510180797633e-01 9.950110817622915826e-01
+1.258925411794168010e-02 9.924554032282379978e-01 9.943190068900977785e-01 9.950800516801916462e-01 9.939560984110795694e-01 9.945522554869226095e-01 9.949628464358303281e-01
+1.271592114552654550e-02 9.923899328095828754e-01 9.942720241470583975e-01 9.950413250902440110e-01 9.938974667497210147e-01 9.944994924180261542e-01 9.949141824811196244e-01
+1.284386263589742949e-02 9.923240147941690958e-01 9.942247745022010363e-01 9.950024267799587596e-01 9.938383128860381888e-01 9.944462608414040838e-01 9.948650892218833253e-01
+1.297309141208670934e-02 9.922576489485477325e-01 9.941772594325661849e-01 9.949633594290040461e-01 9.937786354917006459e-01 9.943925597878984224e-01 9.948155659825143049e-01
+1.310362042614591875e-02 9.921908351232801015e-01 9.941294805142388835e-01 9.949241258331465998e-01 9.937184332395389008e-01 9.943383882892838921e-01 9.947656120881237518e-01
+1.323546276044391436e-02 9.921235732555293563e-01 9.940814394250477859e-01 9.948847289072227928e-01 9.936577048035749593e-01 9.942837453782021884e-01 9.947152268645392814e-01
+1.336863162897809938e-02 9.920558633717131425e-01 9.940331379473252849e-01 9.948451716881757667e-01 9.935964488589905663e-01 9.942286300882069439e-01 9.946644096382806222e-01
+1.350314037869873411e-02 9.919877055902202034e-01 9.939845779707318085e-01 9.948054573381605037e-01 9.935346640821599573e-01 9.941730414537484073e-01 9.946131597365968080e-01
+1.363900249084669218e-02 9.919191001241903782e-01 9.939357614951431774e-01 9.947655891477178436e-01 9.934723491506797233e-01 9.941169785102051959e-01 9.945614764874408653e-01
+1.377623158230462282e-02 9.918500472843596594e-01 9.938866906336042417e-01 9.947255705390194436e-01 9.934095027433208491e-01 9.940604402938353346e-01 9.945093592194921284e-01
+1.391484140696169942e-02 9.917805474819728628e-01 9.938373676153491321e-01 9.946854050691844584e-01 9.933461235400867784e-01 9.940034258418418700e-01 9.944568072621525756e-01
+1.405484585709212801e-02 9.917106012317646879e-01 9.937877947888905661e-01 9.946450964336706058e-01 9.932822102221724458e-01 9.939459341923423397e-01 9.944038199455496052e-01
+1.419625896474748655e-02 9.916402091550098330e-01 9.937379746251780999e-01 9.946046484697397272e-01 9.932177614720271164e-01 9.938879643843849809e-01 9.943503966005290406e-01
+1.433909490316315899e-02 9.915693719826449426e-01 9.936879097208289879e-01 9.945640651600003990e-01 9.931527759733208560e-01 9.938295154579441792e-01 9.942965365586826643e-01
+1.448336798817876150e-02 9.914980905584637183e-01 9.936376028014306527e-01 9.945233506360292575e-01 9.930872524109483068e-01 9.937705864539385647e-01 9.942422391523394465e-01
+1.462909267967306241e-02 9.914263658423859704e-01 9.935870567249189822e-01 9.944825091820721497e-01 9.930211894710876397e-01 9.937111764142202430e-01 9.941875037145481153e-01
+1.477628358301314587e-02 9.913541989138028310e-01 9.935362744850315675e-01 9.944415452388271071e-01 9.929545858411458203e-01 9.936512843815976659e-01 9.941323295791104631e-01
+1.492495545051829992e-02 9.912815909749999044e-01 9.934852592148386563e-01 9.944004634073106974e-01 9.928874402098013530e-01 9.935909093998380737e-01 9.940767160805701330e-01
+1.507512318293855770e-02 9.912085433546589108e-01 9.934340141903544863e-01 9.943592684528100856e-01 9.928197512670116076e-01 9.935300505136478444e-01 9.940206625542271635e-01
+1.522680183094814524e-02 9.911350575114422634e-01 9.933825428342286656e-01 9.943179653089212477e-01 9.927515177869860041e-01 9.934687068508428753e-01 9.939641684171288682e-01
+1.538000659665394142e-02 9.910611350376580253e-01 9.933308487195203762e-01 9.942765590816775578e-01 9.926827422329216333e-01 9.934068811897247553e-01 9.939072366864545316e-01
+1.553475283511911165e-02 9.909867776630115754e-01 9.932789355735572867e-01 9.942350550537676357e-01 9.926134321433910390e-01 9.933445813313468431e-01 9.938498753330126112e-01
+1.569105605590212504e-02 9.909119872584422062e-01 9.932268072818802862e-01 9.941934586888464542e-01 9.925435954252723736e-01 9.932818154411212630e-01 9.937920926869610039e-01
+1.584893192461113084e-02 9.908367658400486500e-01 9.931744678922775904e-01 9.941517756359414815e-01 9.924732399840271446e-01 9.932185916830917893e-01 9.937338970770723812e-01
+1.600839626447414857e-02 9.907611155731047559e-01 9.931219216189065557e-01 9.941100117339547459e-01 9.924023737237758214e-01 9.931549182198969872e-01 9.936752968307059897e-01
+1.616946505792488803e-02 9.906850387761674259e-01 9.930691728465097512e-01 9.940681730162637120e-01 9.923310045471849250e-01 9.930908032127023777e-01 9.936163002737844474e-01
+1.633215444820463463e-02 9.906085379252774770e-01 9.930162261347232899e-01 9.940262657154238513e-01 9.922591403554692491e-01 9.930262548211922224e-01 9.935569157307430066e-01
+1.649648074098021208e-02 9.905316156582582021e-01 9.929630862224808618e-01 9.939842962679718008e-01 9.921867890483239139e-01 9.929612812035397695e-01 9.934971515245101248e-01
+1.666246040597823413e-02 9.904542747791106327e-01 9.929097580325173533e-01 9.939422713193358794e-01 9.921139585238973879e-01 9.928958905163374205e-01 9.934370159764702723e-01
+1.683011007863579461e-02 9.903765182625102748e-01 9.928562466759696115e-01 9.939001977288527412e-01 9.920406566787517422e-01 9.928300909145975073e-01 9.933765174064214110e-01
+1.699944656176774829e-02 9.902983492584045422e-01 9.928025574570822354e-01 9.938580825748927206e-01 9.919668914078287880e-01 9.927638905516994461e-01 9.933156641325664449e-01
+1.717048682725084291e-02 9.902197710967169941e-01 9.927486958780140647e-01 9.938159331600987523e-01 9.918926706044074448e-01 9.926972975793565412e-01 9.932544644714782489e-01
+1.734324801772465716e-02 9.901407872921557107e-01 9.926946676437548023e-01 9.937737570167372025e-01 9.918180021600783158e-01 9.926303201476047722e-01 9.931929267380374959e-01
+1.751774744830976796e-02 9.900614015491331354e-01 9.926404786671466640e-01 9.937315619121671606e-01 9.917428939646839581e-01 9.925629664047304068e-01 9.931310592454579700e-01
+1.769400260834323377e-02 9.899816177667956074e-01 9.925861350740192712e-01 9.936893558544271920e-01 9.916673539063098897e-01 9.924952444972912069e-01 9.930688703052230615e-01
+1.787203116313136608e-02 9.899014400441676909e-01 9.925316432084371199e-01 9.936471470979437726e-01 9.915913898712435115e-01 9.924271625700403776e-01 9.930063682270752201e-01
+1.805185095572032355e-02 9.898208726854115236e-01 9.924770096380618467e-01 9.936049441493641776e-01 9.915150097439313637e-01 9.923587287659136891e-01 9.929435613189486753e-01
+1.823348000868442106e-02 9.897399202052062916e-01 9.924222411596336224e-01 9.935627557735156046e-01 9.914382214069366039e-01 9.922899512260057175e-01 9.928804578870212838e-01
+1.841693652593245217e-02 9.896585873342474970e-01 9.923673448045722267e-01 9.935205909994929696e-01 9.913610327409603240e-01 9.922208380895434221e-01 9.928170662356234910e-01
+1.860223889453222271e-02 9.895768790248705704e-01 9.923123278447016915e-01 9.934784591268789322e-01 9.912834516247188699e-01 9.921513974938461766e-01 9.927533946672296716e-01
+1.878940568655334750e-02 9.894948004568013822e-01 9.922571977981001767e-01 9.934363697320990338e-01 9.912054859350043490e-01 9.920816375742990134e-01 9.926894514824367022e-01
+1.897845566092871972e-02 9.894123570430339853e-01 9.922019624350782996e-01 9.933943326749135050e-01 9.911271435466049162e-01 9.920115664643376352e-01 9.926252449799741751e-01
+1.916940776533456250e-02 9.893295544358428062e-01 9.921466297842883586e-01 9.933523581050491824e-01 9.910484325365310765e-01 9.919411924959069538e-01 9.925607836528106409e-01
+1.936228113808956264e-02 9.892463985329267295e-01 9.920912081389673398e-01 9.933104564689759775e-01 9.909693700540368466e-01 9.918705329052830422e-01 9.924960847078490023e-01
+1.955709511007292997e-02 9.891628954836921839e-01 9.920357060633161472e-01 9.932686385168273402e-01 9.908899857318118620e-01 9.917996171815655071e-01 9.924311773430706252e-01
+1.975386920666194132e-02 9.890790516956770029e-01 9.919801323990188324e-01 9.932269153094724912e-01 9.908103101024763326e-01 9.917284756979327653e-01 9.923660916221387351e-01
+1.995262314968880568e-02 9.889948738411151741e-01 9.919244962719029335e-01 9.931852982257393103e-01 9.907303736891159840e-01 9.916571388190089653e-01 9.923008576009807458e-01
+2.015337685941733306e-02 9.889103688636512457e-01 9.918688070987464744e-01 9.931437989697928792e-01 9.906502070052169984e-01 9.915856369008364535e-01 9.922355053276596948e-01
+2.035615045653949712e-02 9.888255439852015050e-01 9.918130745942326243e-01 9.931024295786734513e-01 9.905698405546146112e-01 9.915140002908084949e-01 9.921700648424315316e-01
+2.056096426419195752e-02 9.887404067129685892e-01 9.917573087780553465e-01 9.930612024299964036e-01 9.904893048313373471e-01 9.914422593276074336e-01 9.921045661776245472e-01
+2.076783880999305901e-02 9.886549648466128604e-01 9.917015199821803684e-01 9.930201302498169458e-01 9.904086303196685259e-01 9.913704443411985867e-01 9.920390393576661303e-01
+2.097679482810014401e-02 9.885692264855815425e-01 9.916457188582639137e-01 9.929792261206649151e-01 9.903278474940049314e-01 9.912985856527755102e-01 9.919735143990633386e-01
+2.118785326128772364e-02 9.884832000366005067e-01 9.915899163852318621e-01 9.929385034897503237e-01 9.902469868188690238e-01 9.912267135747607760e-01 9.919080213103995680e-01
+2.140103526304640985e-02 9.883968942213333664e-01 9.915341238770244425e-01 9.928979761773467638e-01 9.901660787488577586e-01 9.911548584108095250e-01 9.918425900923282246e-01
+2.161636219970309095e-02 9.883103180842082169e-01 9.914783529905075721e-01 9.928576583853532256e-01 9.900851537286428083e-01 9.910830504557479603e-01 9.917772507375801627e-01
+2.183385565256238531e-02 9.882234810004177916e-01 9.914226157335576106e-01 9.928175647060395459e-01 9.900042421929361458e-01 9.910113199956556151e-01 9.917120332310225272e-01
+2.205353742006960563e-02 9.881363926840975864e-01 9.913669244733185337e-01 9.927777101309797070e-01 9.899233745665152462e-01 9.909396973078612447e-01 9.916469675496675240e-01
+2.227542951999558415e-02 9.880490631966821757e-01 9.913112919446404048e-01 9.927381100601748720e-01 9.898425812642026589e-01 9.908682126609337226e-01 9.915820836626825230e-01
+2.249955419164334156e-02 9.879615029554474903e-01 9.912557312586982583e-01 9.926987803113733744e-01 9.897618926909191872e-01 9.907968963147891772e-01 9.915174115315246173e-01
+2.272593389807713721e-02 9.878737227422396128e-01 9.912002559117985001e-01 9.926597371295881045e-01 9.896813392416781152e-01 9.907257785206765588e-01 9.914529811099006551e-01
+2.295459132837374822e-02 9.877857337123973069e-01 9.911448797943750444e-01 9.926209971968180668e-01 9.896009513016438275e-01 9.906548895212496930e-01 9.913888223439157876e-01
+2.318554939989655311e-02 9.876975474038688363e-01 9.910896172001788518e-01 9.925825776419771040e-01 9.895207592461680024e-01 9.905842595506622050e-01 9.913249651721023348e-01
+2.341883126059245146e-02 9.876091757465296217e-01 9.910344828356667524e-01 9.925444960510345638e-01 9.894407934408617766e-01 9.905139188345963852e-01 9.912614395255340272e-01
+2.365446029131184139e-02 9.875206310717049574e-01 9.909794918295916633e-01 9.925067704773724575e-01 9.893610842416183937e-01 9.904438975903939735e-01 9.911982753278909541e-01
+2.389246010815202978e-02 9.874319261218995614e-01 9.909246597428000847e-01 9.924694194523621116e-01 9.892816619947397694e-01 9.903742260270973485e-01 9.911355024956136628e-01
+2.413285456482412022e-02 9.873430740607422873e-01 9.908700025782390952e-01 9.924324619961676364e-01 9.892025573574192432e-01 9.903049346501023864e-01 9.910731512299950641e-01
+2.437566775504383665e-02 9.872540884831464414e-01 9.908155367911798406e-01 9.923959176287777684e-01 9.891238151654988542e-01 9.902360674396012419e-01 9.910112646565083505e-01
+2.462092401494625840e-02 9.871649834256938094e-01 9.907612792996601803e-01 9.923598063812739678e-01 9.890454997404003468e-01 9.901676868945229470e-01 9.909499036628242052e-01
+2.486864792552500106e-02 9.870757733772431708e-01 9.907072474951512664e-01 9.923241488073362149e-01 9.889676768002048091e-01 9.900998568433111435e-01 9.908891304133741196e-01
+2.511886431509581172e-02 9.869864732897735138e-01 9.906534592534530503e-01 9.922889659949949426e-01 9.888904120429454769e-01 9.900326410977581260e-01 9.908290070583110065e-01
+2.537159826178500555e-02 9.868970985894598424e-01 9.905999329458246017e-01 9.922542795786318814e-01 9.888137711469581204e-01 9.899661034533574488e-01 9.907695957338624737e-01
+2.562687509604300723e-02 9.868076651879932326e-01 9.905466874503504604e-01 9.922201117512349233e-01 9.887378197712952677e-01 9.899003076897415765e-01 9.907109585627864590e-01
+2.588472040318301123e-02 9.867181894941455811e-01 9.904937421635532369e-01 9.921864852769147758e-01 9.886626235561301046e-01 9.898353175711063212e-01 9.906531576548116558e-01
+2.614516002594539576e-02 9.866286884255864864e-01 9.904411170122531249e-01 9.921534235036845173e-01 9.885882481232546315e-01 9.897711968467479693e-01 9.905962551071683109e-01
+2.640822006708772735e-02 9.865391794209564802e-01 9.903888324656811015e-01 9.921209503765123783e-01 9.885147590766064640e-01 9.897080092515753158e-01 9.905403130051027016e-01
+2.667392689200103265e-02 9.864496804522024931e-01 9.903369095478513628e-01 9.920890904506499686e-01 9.884422220028156181e-01 9.896458185066921986e-01 9.904853934224996381e-01
+2.694230713135219515e-02 9.863602100371811066e-01 9.902853698501991042e-01 9.920578689052417243e-01 9.883707024718552114e-01 9.895846883200497546e-01 9.904315584224695490e-01
+2.721338768375308054e-02 9.862707872525346975e-01 9.902342355444860855e-01 9.920273115572244560e-01 9.883002660376468684e-01 9.895246823870748054e-01 9.903788700580236082e-01
+2.748719571845650508e-02 9.861814317468464708e-01 9.901835293959834194e-01 9.919974448755192187e-01 9.882309782387791453e-01 9.894658643913861740e-01 9.903273903727712879e-01
+2.776375867807920339e-02 9.860921637540805973e-01 9.901332747769342468e-01 9.919682959955238299e-01 9.881629045992842419e-01 9.894082980055250998e-01 9.902771814016656515e-01
+2.804310428135238509e-02 9.860030041073122309e-01 9.900834956803044040e-01 9.919398927339114769e-01 9.913282968548425833e-01 9.926663192960687443e-01 9.935787400324407326e-01
+2.832526052589977306e-02 9.859139742527552874e-01 9.900342167338255228e-01 9.919122636037422946e-01 9.912851374404330063e-01 9.926454325827795966e-01 9.935735924705983990e-01
+2.861025569104378233e-02 9.858250962640920934e-01 9.899854632143365585e-01 9.918854378298932462e-01 9.912327970178508307e-01 9.926149983015003508e-01 9.935586858010836409e-01
+2.889811834063973905e-02 9.857363928571130085e-01 9.899372610624322943e-01 9.918594453648145182e-01 9.911716524931933892e-01 9.925753882657220029e-01 9.935343870564746771e-01
+2.918887732593877099e-02 9.856478874046713523e-01 9.898896368974208215e-01 9.918343169046170971e-01 9.911020806682655504e-01 9.925269742617573998e-01 9.935010632948091391e-01
+2.948256178847946662e-02 9.855596039519609608e-01 9.898426180326013180e-01 9.918100839055010720e-01 9.910244581809022346e-01 9.924701279880930871e-01 9.934590815386763474e-01
+2.977920116300853196e-02 9.854715672321217035e-01 9.897962324908651244e-01 9.917867786005286623e-01 9.909391614456414255e-01 9.924052209949690839e-01 9.934088087145858115e-01
+3.007882518043100348e-02 9.853838026821829521e-01 9.897505090206281109e-01 9.917644340167508510e-01 9.908465665947222556e-01 9.923326246242605286e-01 9.933506115925566649e-01
+3.038146387078994801e-02 9.852963364593473328e-01 9.897054771121019945e-01 9.917430839926961728e-01 9.907470494193131305e-01 9.922527099495407343e-01 9.932848567258346639e-01
+3.068714756627636403e-02 9.852091954576258637e-01 9.896611670139101591e-01 9.917227631962249879e-01 9.906409853109774399e-01 9.921658477162909051e-01 9.932119103907733892e-01
+3.099590690426912848e-02 9.851224073248309177e-01 9.896176097500555269e-01 9.917035071427618975e-01 9.905287492033086894e-01 9.920724082822649503e-01 9.931321385267619650e-01
+3.130777283040572095e-02 9.850360004799321167e-01 9.895748371372488084e-01 9.916853522139095212e-01 9.904107155136907537e-01 9.919727615578693980e-01 9.930459066761953002e-01
+3.162277660168380522e-02 9.849500041307859277e-01 9.895328818026029039e-01 9.916683356764552926e-01 9.902872580850818895e-01 9.918672769466062578e-01 9.929535799244064709e-01
+3.194094978959386572e-02 9.848644482922450649e-01 9.894917772017024493e-01 9.916524957017761599e-01 9.901587501278634740e-01 9.917563232854262889e-01 9.928555228395234966e-01
+3.226232428328362767e-02 9.847793638046552500e-01 9.894515576370556120e-01 9.916378713856518479e-01 9.900255641616017011e-01 9.916402687849958930e-01 9.927520994121963316e-01
+3.258693229275405612e-02 9.846947823527482102e-01 9.894122582769363516e-01 9.916245027684933433e-01 9.898880719567011433e-01 9.915194809697885914e-01 9.926436729950728344e-01
+3.291480635208770406e-02 9.846107364849393528e-01 9.893739151746239191e-01 9.916124308559970402e-01 9.897466444758978854e-01 9.913943266179632285e-01 9.925306062420717890e-01
+3.324597932270942358e-02 9.845272596330374437e-01 9.893365652880504735e-01 9.916016976402307614e-01 9.896016518154675534e-01 9.912651717009054453e-01 9.924132610472808924e-01
+3.358048439667990492e-02 9.844443861323755041e-01 9.893002464998621459e-01 9.915923461211629819e-01 9.894534631461257002e-01 9.911323813224075518e-01 9.922919984834162044e-01
+3.391835510002248755e-02 9.843621512423723630e-01 9.892649976379050969e-01 9.915844203286433567e-01 9.893024466535486061e-01 9.909963196574052002e-01 9.921671787398563813e-01
+3.425962529608315987e-02 9.842805911675321928e-01 9.892308584961421181e-01 9.915779653448427711e-01 9.891489694783724973e-01 9.908573498901721566e-01 9.920391610600555188e-01
+3.460432918892472620e-02 9.841997430788920198e-01 9.891978698560122130e-01 9.915730273271649020e-01 9.889933976556322115e-01 9.907158341518467193e-01 9.919083036783208351e-01
+3.495250132675473825e-02 9.841196451359275343e-01 9.891660735082384859e-01 9.915696535316368410e-01 9.888360960535731436e-01 9.905721334573407422e-01 9.917749637558417319e-01
+3.530417660538832242e-02 9.840403365089243071e-01 9.891355122750975504e-01 9.915678923367889919e-01 9.886774283116726014e-01 9.904266076413347220e-01 9.916394973158807469e-01
+3.565939027174545861e-02 9.839618574018265118e-01 9.891062300331566748e-01 9.915677932680351248e-01 9.885177567778105079e-01 9.902796152934482121e-01 9.915022591780361383e-01
+3.601817792738370300e-02 9.838842490755708159e-01 9.890782717364901000e-01 9.915694070225623546e-01 9.883574424445051854e-01 9.901315136923410920e-01 9.913636028914251108e-01
+3.638057553206645867e-02 9.838075538719178725e-01 9.890516834403838553e-01 9.915727854947414821e-01 9.881968448840576791e-01 9.899826587387446919e-01 9.912238806667742486e-01
+3.674661940736689142e-02 9.837318152377895197e-01 9.890265123255392865e-01 9.915779818020683534e-01 9.880363221825106956e-01 9.898334048871945123e-01 9.910834433071751270e-01
+3.711634624030848983e-02 9.836570777501235652e-01 9.890028067227853992e-01 9.915850503116467873e-01 9.878762308723274543e-01 9.896841050764614289e-01 9.909426401375095450e-01
+3.748979308704185331e-02 9.835833871412564822e-01 9.889806161383110084e-01 9.915940466672267251e-01 9.877169258636160354e-01 9.895351106584505674e-01 9.908018189323224423e-01
+3.786699737655885994e-02 9.835107903248444527e-01 9.889599912794262426e-01 9.916050278168037080e-01 9.875587603737847608e-01 9.893867713254994589e-01 9.906613258420529089e-01
+3.824799691444386723e-02 9.834393354223348593e-01 9.889409840808665031e-01 9.916180520407975596e-01 9.874020858554984903e-01 9.892394350359100530e-01 9.905215053174869499e-01
+3.863282988666284085e-02 9.833690717899985501e-01 9.889236477316466489e-01 9.916331789808169317e-01 9.872472519227913912e-01 9.890934479375795840e-01 9.903827000322561469e-01
+3.902153486339068195e-02 9.833000500465362004e-01 9.889080367024803975e-01 9.916504696690249254e-01 9.870946062751475569e-01 9.889491542895283427e-01 9.902452508032566492e-01
+3.941415080287676009e-02 9.832323221012677639e-01 9.888942067737743757e-01 9.916699865581171114e-01 9.869444946194273482e-01 9.888068963812576273e-01 9.901094965088013122e-01
+3.981071705534973415e-02 9.831659411829197781e-01 9.888822150642091469e-01 9.916917935519238281e-01 9.867972605894412830e-01 9.886670144496564339e-01 9.899757740043683141e-01
+4.021127336696127264e-02 9.831009618690222940e-01 9.888721200599185357e-01 9.917159560366510807e-01 9.866532456630093817e-01 9.885298465933378687e-01 9.898444180357158784e-01
+4.061585988376979761e-02 9.830374401159265307e-01 9.888639816442824637e-01 9.917425409127712532e-01 9.865127890763166763e-01 9.883957286842257606e-01 9.897157611492218843e-01
+4.102451715576405783e-02 9.829754332894583557e-01 9.888578611283413977e-01 9.917716166275792888e-01 9.863762277353422814e-01 9.882649942761692063e-01 9.895901335992370873e-01
+4.143728614092728052e-02 9.829150001962180250e-01 9.888538212818491768e-01 9.918032532084257724e-01 9.862438961242017132e-01 9.881379745103444634e-01 9.894678632522209139e-01
+4.185420820934232511e-02 9.828562011155432820e-01 9.888519263649753199e-01 9.918375222966415716e-01 9.861161262101392211e-01 9.880149980173293933e-01 9.893492754874830819e-01
+4.227532514733785274e-02 9.827990978321444748e-01 9.888522421606702473e-01 9.918744971821699119e-01 9.859932473449661838e-01 9.878963908154857476e-01 9.892346930942620409e-01
+4.270067916167659405e-02 9.827437536694314524e-01 9.888548360077081822e-01 9.919142528389169877e-01 9.858755861627215289e-01 9.877824762055373853e-01 9.891244361649383920e-01
+4.313031288378536138e-02 9.826902335235409014e-01 9.888597768344207228e-01 9.919568659608388739e-01 9.857634664732376484e-01 9.876735746609739408e-01 9.890188219840837514e-01
+4.356426937402797100e-02 9.826386038980822191e-01 9.888671351931346276e-01 9.920024149987781703e-01 9.856572091514445022e-01 9.875700037141178500e-01 9.889181649131268959e-01
+4.400259212602090214e-02 9.825889329396160221e-01 9.888769832953302474e-01 9.920509801980669229e-01 9.855571320220444242e-01 9.874720778375036812e-01 9.888227762703518664e-01
+4.444532507099249741e-02 9.825412904738792808e-01 9.888893950475338146e-01 9.921026436369102530e-01 9.854635497393247068e-01 9.873801083203131990e-01 9.887329642058719781e-01
+4.489251258218606572e-02 9.824957480427738421e-01 9.889044460879590215e-01 9.921574892655669053e-01 9.853767736617740081e-01 9.872944031395433084e-01 9.886490335713876698e-01
+4.534419947930710959e-02 9.824523789421327757e-01 9.889222138239135429e-01 9.922156029463451432e-01 9.852971117212081520e-01 9.872152668255820274e-01 9.885712857843017565e-01
+4.580043103301556506e-02 9.824112582602820831e-01 9.889427774699862672e-01 9.922770724944269816e-01 9.852248682860060836e-01 9.871430003218765181e-01 9.885000186858879934e-01
+4.626125296946290155e-02 9.823724629174130918e-01 9.889662180870305574e-01 9.923419877195410743e-01 9.851603440181977422e-01 9.870779008382957187e-01 9.884355263931967617e-01
+4.672671147487524740e-02 9.823360717057819658e-01 9.889926186219609727e-01 9.924104404684997993e-01 9.851038357239498833e-01 9.870202616978509536e-01 9.883780991442554509e-01
+4.719685320018231212e-02 9.823021653307553169e-01 9.890220639483791043e-01 9.924825246686189706e-01 9.850556361970987940e-01 9.869703721763634086e-01 9.883280231362224777e-01
+4.767172526569301433e-02 9.822708264527159061e-01 9.890546409080462897e-01 9.925583363720374974e-01 9.850160340552858163e-01 9.869285173346724616e-01 9.882855803560680608e-01
+4.815137526581827337e-02 9.822421397298504164e-01 9.890904383532204136e-01 9.926379738009571962e-01 9.849853135683259708e-01 9.868949778429220165e-01 9.882510484033109055e-01
+4.863585127384102702e-02 9.822161918618336207e-01 9.891295471898736702e-01 9.927215373938186316e-01 9.849637544782895437e-01 9.868700297965139479e-01 9.882247003044418721e-01
+4.912520184673455775e-02 9.821930716344295931e-01 9.891720604218114943e-01 9.928091298524349684e-01 9.849516318108509916e-01 9.868539445232308305e-01 9.882068043184545347e-01
+4.961947603002903051e-02 9.821728699650290606e-01 9.892180731957079809e-01 9.929008561901024876e-01 9.849492156774122265e-01 9.868469883809911636e-01 9.881976237330445390e-01
+5.011872336272723411e-02 9.821556799491397705e-01 9.892676828470802208e-01 9.929968237807067499e-01 9.849567710674508314e-01 9.868494225457448144e-01 9.881974166509415181e-01
+5.062299388226956104e-02 9.821415969078524100e-01 9.893209889472172058e-01 9.930971424088463895e-01 9.849745576305591888e-01 9.868615027889801050e-01 9.882064357657972531e-01
+5.113233812954908614e-02 9.821307184363003984e-01 9.893780933510862852e-01 9.932019243209940784e-01 9.850028294475826618e-01 9.868834792441345538e-01 9.882249281270334418e-01
+5.164680715397713950e-02 9.821231444531344223e-01 9.894391002462339380e-01 9.933112842777168661e-01 9.850418347902542004e-01 9.869155961614738404e-01 9.882531348931058446e-01
+5.216645251859960974e-02 9.821189772510330318e-01 9.895041162027041759e-01 9.934253396069760988e-01 9.850918158686732262e-01 9.869580916506041079e-01 9.882912910724351851e-01
+5.269132630526509459e-02 9.821183215482689466e-01 9.895732502239928952e-01 9.935442102585322344e-01 9.851530085659637725e-01 9.870111974101158925e-01 9.883396252514244917e-01
+5.322148111984462138e-02 9.821212845413559434e-01 9.896466137990627132e-01 9.936680188594715357e-01 9.852256421593873492e-01 9.870751384434738318e-01 9.883983593087785069e-01
+5.375697009750431826e-02 9.821279759587946412e-01 9.897243209554345000e-01 9.937968907708840671e-01 9.853099390271872204e-01 9.871501327605528564e-01 9.884677081154158440e-01
+5.429784690803077934e-02 9.821385081159433872e-01 9.898064883133849134e-01 9.939309541457118646e-01 9.854061143403580747e-01 9.872363910639185836e-01 9.885478792191494390e-01
+5.484416576121019238e-02 9.821529959710342261e-01 9.898932351412657038e-01 9.940703399877928170e-01 9.855143757385238512e-01 9.873341164190799768e-01 9.886390725133734625e-01
+5.539598141226164535e-02 9.821715571823603774e-01 9.899846834119727657e-01 9.942151822121253479e-01 9.856349229890633001e-01 9.874435039078206522e-01 9.887414798887732559e-01
+5.595334916732486868e-02 9.821943121666572019e-01 9.900809578605858086e-01 9.943656177063766588e-01 9.857679476285662323e-01 9.875647402637083294e-01 9.888552848672681472e-01
+5.651632488900339146e-02 9.822213841587010830e-01 9.901821860432026279e-01 9.945217863936639535e-01 9.859136325856555638e-01 9.876980034887782312e-01 9.889806622171427586e-01
+5.708496500196356266e-02 9.822528992721538676e-01 9.902884983969951760e-01 9.946838312966288509e-01 9.860721517841807282e-01 9.878434624504244255e-01 9.891177775483447343e-01
+5.765932649858947212e-02 9.822889865616747374e-01 9.904000283015080841e-01 9.948518986028379585e-01 9.862436697257206397e-01 9.880012764573977702e-01 9.892667868869725600e-01
+5.823946694469524232e-02 9.823297780863289308e-01 9.905169121412291666e-01 9.950261377315307021e-01 9.864283410502628913e-01 9.881715948138047878e-01 9.894278362277263428e-01
+5.882544448529458680e-02 9.823754089743164108e-01 9.906392893694548896e-01 9.952067014017469404e-01 9.866263100739347536e-01 9.883545563499073205e-01 9.896010610632176574e-01
+5.941731785042834307e-02 9.824260174890523389e-01 9.907673025734801131e-01 9.953937457018579016e-01 9.868377103024990049e-01 9.885502889285234795e-01 9.897865858888797996e-01
+6.001514636105097916e-02 9.824817450966211174e-01 9.909010975411359778e-01 9.955874301605340815e-01 9.870626639193553764e-01 9.887589089256916264e-01 9.899845236821684935e-01
+6.061898993497574772e-02 9.825427365346383057e-01 9.910408233287061330e-01 9.957879178191744174e-01 9.873012812467087951e-01 9.889805206842230412e-01 9.901949753546952504e-01
+6.122890909288020850e-02 9.826091398825445022e-01 9.911866323302492843e-01 9.959953753058307102e-01 9.875536601783955204e-01 9.892152159387582744e-01 9.904180291758781784e-01
+6.184496496437185548e-02 9.826811066333623890e-01 9.913386803483540399e-01 9.962099729106549395e-01 9.878198855829940506e-01 9.894630732107313476e-01 9.906537601665579285e-01
+6.246721929411510471e-02 9.827587917669485806e-01 9.914971266663602512e-01 9.964318846629030002e-01 9.881000286754982875e-01 9.897241571717423358e-01 9.909022294610296822e-01
+6.309573444801933051e-02 9.828423538247678115e-01 9.916621341220710484e-01 9.966612884095233937e-01 9.883941463560055318e-01 9.899985179735866225e-01 9.911634836358231837e-01
+6.373057341948981658e-02 9.829319549862225447e-01 9.918338691829914344e-01 9.968983658953680660e-01 9.887022805136639336e-01 9.902861905432522871e-01 9.914375540034559009e-01
+6.437179983574120579e-02 9.830277611465696452e-01 9.920125020231214119e-01 9.971433028450524816e-01 9.890244572939518308e-01 9.905871938410102384e-01 9.917244558693403267e-01
+6.501947796417457959e-02 9.831299419964572017e-01 9.921982066013353974e-01 9.973962890465036812e-01 9.893606863275515861e-01 9.909015300796519821e-01 9.920241877499490490e-01
+6.567367271881888180e-02 9.832386711031126936e-01 9.923911607413827829e-01 9.976575184362287407e-01 9.897109599186006967e-01 9.912291839028809504e-01 9.923367305501195057e-01
+6.633444966683668675e-02 9.833541259932188083e-01 9.925915462135395106e-01 9.979271891863383814e-01 9.900752521903596337e-01 9.915701215207083363e-01 9.926620466974909185e-01
+6.700187503509590081e-02 9.834764882375102157e-01 9.927995488179481853e-01 9.982055037933612596e-01 9.904535181859920323e-01 9.919242897995841357e-01 9.930000792317468239e-01
+6.767601571680738337e-02 9.836059435371260484e-01 9.930153584696763680e-01 9.984926691688880140e-01 9.908456929221801657e-01 9.922916153049751165e-01 9.933507508463641500e-01
+6.835693927822926452e-02 9.837426818117555039e-01 9.932391692855337961e-01 9.987888967320787126e-01 9.912516903930472800e-01 9.926720032938830540e-01 9.937139628804257940e-01
+6.904471396543909734e-02 9.838868972896122056e-01 9.934711796726795052e-01 9.990944025040751075e-01 9.916714025219540707e-01 9.930653366547255168e-01 9.940895942578907851e-01
+6.973940871117351170e-02 9.840387885992752937e-01 9.937115924190585980e-01 9.994094072043534505e-01 9.921046980583508867e-01 9.934714747918924616e-01 9.944775003716360695e-01
+7.044109314173728487e-02 9.841985588634344362e-01 9.939606147857040774e-01 9.997341363490603872e-01 9.925514214169676164e-01 9.938902524521212589e-01 9.948775119094461772e-01
+7.114983758398153724e-02 9.843664157945799520e-01 9.942184586009434888e-01 1.000068820351370125e+00 9.930113914563101218e-01 9.943214784897194125e-01 9.952894336190002411e-01
+7.186571307235259387e-02 9.845425717926755693e-01 9.944853403565484529e-01 1.000413694623905725e+00 9.934844001934890478e-01 9.947649345675374510e-01 9.957130430087355322e-01
+7.258879135601108146e-02 9.847272440448548991e-01 9.947614813058658356e-01 1.000768999683264271e+00 9.939702114519916032e-01 9.952203737904304903e-01 9.961480889813133510e-01
+7.331914490602324530e-02 9.849206546271850327e-01 9.950471075639731877e-01 1.001134981256692313e+00 9.944685594391771133e-01 9.956875192677682174e-01 9.965942903964016830e-01
+7.405684692262440305e-02 9.851230306085361210e-01 9.953424502098972004e-01 1.001511890390952342e+00 9.949791472498539235e-01 9.961660626014764430e-01 9.970513345590709120e-01
+7.480197134255540947e-02 9.853346041566035662e-01 9.956477453909404751e-01 1.001899983563425689e+00 9.955016452922631487e-01 9.966556622958681055e-01 9.975188756302417747e-01
+7.555459284647331186e-02 9.855556126461239019e-01 9.959632344291554640e-01 1.002299522795499165e+00 9.960356896326817422e-01 9.971559420853737254e-01 9.979965329551975239e-01
+7.631478686643580756e-02 9.857862987693311041e-01 9.962891639300139879e-01 1.002710775768279605e+00 9.965808802544928735e-01 9.976664891761085618e-01 9.984838893062061294e-01
+7.708262959346183496e-02 9.860269106486991841e-01 9.966257858933134095e-01 1.003134015940684964e+00 9.971367792276742970e-01 9.981868523970296447e-01 9.989804890349766042e-01
+7.785819798516774304e-02 9.862777019520154731e-01 9.969733578263672014e-01 1.003569522669960357e+00 9.977029087841924326e-01 9.987165402563651373e-01 9.994858361306090400e-01
+7.864156977348039923e-02 9.865389320098365555e-01 9.973321428595257609e-01 1.004017581334667675e+00 9.982787492948764774e-01 9.992550188985558357e-01 9.999993921784327000e-01
+7.943282347242815178e-02 9.868108659353704848e-01 9.977024098640749905e-01 1.004478483460202076e+00 9.988637371429252010e-01 9.998017099571281374e-01 1.000520574215019387e+00
+8.023203838600961868e-02 9.870937747468390144e-01 9.980844335725621574e-01 1.004952526846880856e+00 9.994572624901019164e-01 1.000355988298377907e+00 1.001048752474402281e+00
+8.103929461614219065e-02 9.873879354923686957e-01 9.984784947015959977e-01 1.005440015700663992e+00 1.000058918652838802e+00 1.000917385858364872e+00 1.001583422180225780e+00
+8.185467307069024812e-02 9.876936313774623555e-01 9.988848800771750192e-01 1.005941260766555434e+00 1.000669100245861420e+00 1.001486226328873519e+00 1.002124855599529463e+00
+8.267825547157442445e-02 9.880111518951051330e-01 9.993038827625931875e-01 1.006456579464741319e+00 1.001288381749615652e+00 1.002063053560119155e+00 1.002673574059809614e+00
+8.351012436296183228e-02 9.883407929585562579e-01 9.997358021889752866e-01 1.006986296029520833e+00 1.001917367269311798e+00 1.002648438779853324e+00 1.003230124638562204e+00
+8.435036311953944543e-02 9.886828570368845215e-01 1.000180944288498130e+00 1.007530741651085471e+00 1.002556692747010203e+00 1.003242982646763481e+00 1.003795082072176825e+00
+8.519905595487026195e-02 9.890376532933021769e-01 1.000639621630348586e+00 1.008090254620206627e+00 1.003207028294516689e+00 1.003847317420128782e+00 1.004369050802967900e+00
+8.605628792983364972e-02 9.894054977263531114e-01 1.001112153559478468e+00 1.008665180475890377e+00 1.003869080665952040e+00 1.004462109259891101e+00 1.004952667149476175e+00
+8.692214496115090172e-02 9.897867133140163531e-01 1.001598866338210492e+00 1.009255872156056499e+00 1.004543595875110107e+00 1.005088060661950777e+00 1.005546601604795143e+00
+8.779671382999584828e-02 9.901816301607813120e-01 1.002100093290752225e+00 1.009862690151309028e+00 1.005231361962810599e+00 1.005725913033488794e+00 1.006151561267374817e+00
+8.868008219069288545e-02 9.905905856477590365e-01 1.002616174950682337e+00 1.010486002661857174e+00 1.005933211918858206e+00 1.006376449412717644e+00 1.006768292408525278e+00
+8.957233857950214206e-02 9.910139245858876622e-01 1.003147459211464199e+00 1.011126185757650120e+00 1.006650026763039385e+00 1.007040497337148066e+00 1.007397583180488221e+00
+9.047357242349295114e-02 9.914519993722985536e-01 1.003694301480051898e+00 1.011783623541797184e+00 1.007382738788864529e+00 1.007718931863861078e+00 1.008040266468424484e+00
+9.138387404950712445e-02 9.919051701499053131e-01 1.004257064833650848e+00 1.012458708317329537e+00 1.008132334973173450e+00 1.008412678744785795e+00 1.008697222889152201e+00
+9.230333469321151674e-02 9.923738049702830466e-01 1.004836120179696035e+00 1.013151840757385180e+00 1.008899860554010042e+00 1.009122717759090238e+00 1.009369383938695020e+00
+9.323204650824251649e-02 9.928582799599037223e-01 1.005431846419115649e+00 1.013863430078872474e+00 1.009686422777989590e+00 1.009850086204011621e+00 1.010057735289890957e+00
+9.417010257544206064e-02 9.933589794897972336e-01 1.006044630612945801e+00 1.014593894219695036e+00 1.010493194817451146e+00 1.010595882544309987e+00 1.010763320240272600e+00
+9.511759691218704682e-02 9.938762963487078883e-01 1.006674868152364066e+00 1.015343660019604188e+00 1.011321419856170856e+00 1.011361270219220287e+00 1.011487243309230788e+00
+9.607462448181179615e-02 9.944106319198168231e-01 1.007322962932213128e+00 1.016113163404751329e+00 1.012172415340916176e+00 1.012147481604414478e+00 1.012230673982096762e+00
+9.704128120312620343e-02 9.949623963611036181e-01 1.007989327528082901e+00 1.016902849576022616e+00 1.013047577394235788e+00 1.012955822124657068e+00 1.012994850597142671e+00
+9.801766396002910275e-02 9.955320087894223846e-01 1.008674383377027972e+00 1.017713173201225230e+00 1.013948385381815198e+00 1.013787674510925108e+00 1.013781084369631325e+00
+9.900387061121852794e-02 9.961198974683665996e-01 1.009378560961989191e+00 1.018544598611209384e+00 1.014876406625339067e+00 1.014644503193566027e+00 1.014590763544998442e+00
+9.999999999999999167e-02 9.967264999999999597e-01 1.010102300000000008e+00 1.019397600000000015e+00 1.015833301249022380e+00 1.015527858820389984e+00 1.015425357670715067e+00
+1.010061519641925754e-01 9.973522635205338549e-01 1.010846049634248622e+00 1.020272661629027633e+00 1.016820827145025641e+00 1.016439382885916176e+00 1.016286421973908727e+00
+1.020224273461356468e-01 9.979976449000302896e-01 1.011610268630081633e+00 1.021170278035534507e+00 1.017840845039408304e+00 1.017380812454642847e+00 1.017175601828470999e+00
+1.030489280027957338e-01 9.986631109462122957e-01 1.012395425575023156e+00 1.022090954245245209e+00 1.018895323636660466e+00 1.018353984957780956e+00 1.018094637292379590e+00
+1.040857568159751778e-01 9.993491386124676579e-01 1.013201999082894433e+00 1.023035205989386132e+00 1.019986344816470547e+00 1.019360843038824793e+00 1.019045367691978843e+00
+1.051330177026238294e-01 1.000056215210128441e+00 1.014030478002117430e+00 1.024003559926145446e+00 1.021116108851898741e+00 1.020403439419171665e+00 1.020029736226033323e+00
+1.061908156252537178e-01 1.000784838625116357e+00 1.014881361628285683e+00 1.024996553866657667e+00 1.022286939613068935e+00 1.021483941750220614e+00 1.021049794557856494e+00
+1.072592566024593297e-01 1.001535517539040576e+00 1.015755159921090556e+00 1.026014737005614741e+00 1.023501289715063267e+00 1.022604637413267126e+00 1.022107707359031670e+00
+1.083384477195432349e-01 1.002308771654840891e+00 1.016652393725692383e+00 1.027058670156585585e+00 1.024760096239949236e+00 1.023766258963634268e+00 1.023204081616525540e+00
+1.094284971392491812e-01 1.003105131927066518e+00 1.017573594998625763e+00 1.028128925992150888e+00 1.026061351199455185e+00 1.024966719903491086e+00 1.024336803390497819e+00
+1.105295141126021591e-01 1.003925140796888771e+00 1.018519307038330046e+00 1.029226089288943768e+00 1.027404979152729991e+00 1.026205939427163205e+00 1.025505787777429401e+00
+1.116416089898586289e-01 1.004769352431938767e+00 1.019490084720402256e+00 1.030350757177699306e+00 1.028790955863780887e+00 1.027483889253625327e+00 1.026711003247969378e+00
+1.127648932315662988e-01 1.005638332971073412e+00 1.020486494737666616e+00 1.031503539398413993e+00 1.030219212434519971e+00 1.028800501737053397e+00 1.027952382510908036e+00
+1.138994794197352722e-01 1.006532660774168253e+00 1.021509115845158355e+00 1.032685058560718350e+00 1.031689633109602378e+00 1.030155667926244689e+00 1.029229820743354118e+00
+1.150454812691220630e-01 1.007452926677037341e+00 1.022558539110123288e+00 1.033895950409571718e+00 1.033202052930227932e+00 1.031549235482722038e+00 1.030543173686115033e+00
+1.162030136386261459e-01 1.008399734251590019e+00 1.023635368167132853e+00 1.035136864096380283e+00 1.034756255213278298e+00 1.032981006435806037e+00 1.031892255583950480e+00
+1.173721925428021506e-01 1.009373700071324764e+00 1.024740219478421865e+00 1.036408462455659096e+00 1.036351968828804537e+00 1.034450734750053558e+00 1.033276836947637722e+00
+1.185531351634874636e-01 1.010375453982274907e+00 1.025873722599552673e+00 1.037711422287339591e+00 1.037988865245333958e+00 1.035958123677064968e+00 1.034696642111747611e+00
+1.197459598615466664e-01 1.011405639379511889e+00 1.027036520450514301e+00 1.039046434644846695e+00 1.039666555308301321e+00 1.037502822860091989e+00 1.036151346558680908e+00
+1.209507861887348934e-01 1.012464913489324880e+00 1.028229269592369599e+00 1.040414205129057690e+00 1.041384585712300748e+00 1.039084425155644142e+00 1.037640573975638025e+00
+1.221677348996792201e-01 1.013553947657185761e+00 1.029452640509558980e+00 1.041815454188260714e+00 1.043142435122714318e+00 1.040702463131659927e+00 1.039163893006854966e+00
+1.233969279639819255e-01 1.014673427641624937e+00 1.030707317897979536e+00 1.043250917424241919e+00 1.044939509896281482e+00 1.042356405196393832e+00 1.040720813658489119e+00
+1.246384885784447283e-01 1.015824053914129887e+00 1.031994000958956326e+00 1.044721345904618737e+00 1.046775139343464556e+00 1.044045651306150235e+00 1.042310783307981659e+00
+1.258925411794167004e-01 1.017006541965197908e+00 1.033313403699223310e+00 1.046227506481549607e+00 1.048648570467783037e+00 1.045769528192970199e+00 1.043933182263130144e+00
+1.271592114552653474e-01 1.018221622616660937e+00 1.034666255237038701e+00 1.047770182116948057e+00 1.050558962108404826e+00 1.047527284045413509e+00 1.045587318808825605e+00
+1.284386263589743227e-01 1.019470042340413940e+00 1.036053300114558873e+00 1.049350172214336352e+00 1.052505378402132763e+00 1.049318082566343513e+00 1.047272423670790875e+00
+1.297309141208670968e-01 1.020752563583678052e+00 1.037475298616596042e+00 1.050968292957469297e+00 1.054486781469174295e+00 1.051140996320911514e+00 1.048987643815719517e+00
+1.310362042614590938e-01 1.022069965100926625e+00 1.038933027095894523e+00 1.052625377655868721e+00 1.056502023213280017e+00 1.052994999275580712e+00 1.050732035495820060e+00
+1.323546276044391679e-01 1.023423042292618046e+00 1.040427278305050995e+00 1.054322277097408778e+00 1.058549836111155384e+00 1.054878958414552814e+00 1.052504556432211302e+00
+1.336863162897810042e-01 1.024812607550863675e+00 1.041958861735220232e+00 1.056059859908093257e+00 1.060628822847138553e+00 1.056791624303037525e+00 1.054304057016032248e+00
+1.350314037869873585e-01 1.026239490612181449e+00 1.043528603961740853e+00 1.057839012919174149e+00 1.062737532587559430e+00 1.058731686322134991e+00 1.056129317887203545e+00
+1.363900249084669392e-01 1.027704538917473265e+00 1.045137348996822091e+00 1.059660641541757098e+00 1.064879931279757885e+00 1.060702674664351752e+00 1.057983499782622294e+00
+1.377623158230460998e-01 1.029208617979375351e+00 1.046785958649435910e+00 1.061525670149049416e+00 1.067059986124118121e+00 1.062708234048536537e+00 1.059870044782343479e+00
+1.391484140696168936e-01 1.030752611757133508e+00 1.048475312892561684e+00 1.063435042466402747e+00 1.069278731876355915e+00 1.064749300548544886e+00 1.061789828276451741e+00
+1.405484585709211587e-01 1.032337423039151103e+00 1.050206310237929319e+00 1.065389721969309145e+00 1.071537272790848982e+00 1.066826873369033590e+00 1.063743784814588533e+00
+1.419625896474748794e-01 1.033963973833371464e+00 1.051979868118417816e+00 1.067390692289515552e+00 1.073836789887995247e+00 1.068942021678579657e+00 1.065732914742473003e+00
+1.433909490316314927e-01 1.035633205765651210e+00 1.053796923278261799e+00 1.069438957629416764e+00 1.076178548594940221e+00 1.071095891836314928e+00 1.067758291179855101e+00
+1.448336798817876359e-01 1.037346080486288402e+00 1.055658432171225902e+00 1.071535543184897188e+00 1.078563906864628663e+00 1.073289715086533702e+00 1.069821067459602038e+00
+1.462909267967306415e-01 1.039103580084869138e+00 1.057565371366907314e+00 1.073681495576793488e+00 1.080994323764991716e+00 1.075524815716434768e+00 1.071922485024803695e+00
+1.477628358301314726e-01 1.040906707513604701e+00 1.059518737965334800e+00 1.075877883291152859e+00 1.083471368519750566e+00 1.077802619662496575e+00 1.074063881771958995e+00
+1.492495545051830130e-01 1.042756487019330436e+00 1.061519550020029845e+00 1.078125797128463237e+00 1.085996729969900931e+00 1.080124663539664631e+00 1.076246700817216517e+00
+1.507512318293854625e-01 1.044653964584342898e+00 1.063568846969702886e+00 1.080426350662042623e+00 1.088572226410049471e+00 1.082492604053515883e+00 1.078472499649560046e+00
+1.522680183094813344e-01 1.046600208376254004e+00 1.065667690078759833e+00 1.082780680705767606e+00 1.091199815736441314e+00 1.084908227739496578e+00 1.080742959619213739e+00
+1.538000659665393066e-01 1.048596309207047605e+00 1.067817162886799176e+00 1.085189947791334708e+00 1.093881605823215031e+00 1.087373460954261795e+00 1.083059895691429020e+00
+1.553475283511911165e-01 1.050643381001524101e+00 1.070018371667279311e+00 1.087655336655246385e+00 1.096619865020501017e+00 1.089890380022463967e+00 1.085425266374856701e+00
+1.569105605590212504e-01 1.052742561275324729e+00 1.072272445895545934e+00 1.090178056735720435e+00 1.099417032641654579e+00 1.092461221417715622e+00 1.087841183710005266e+00
+1.584893192461113154e-01 1.054895011622728918e+00 1.074580538726408019e+00 1.092759342679721746e+00 1.102275729278222594e+00 1.095088391828868746e+00 1.090309923176627560e+00
+1.600839626447415065e-01 1.057101918214426117e+00 1.076943827481454674e+00 1.095400454860325112e+00 1.105198766749255990e+00 1.097774477932651926e+00 1.092833933349746989e+00
+1.616946505792488942e-01 1.059364492305462813e+00 1.079363514146313818e+00 1.098102679904616297e+00 1.108189157457640128e+00 1.100522255660966842e+00 1.095415845102165164e+00
+1.633215444820463602e-01 1.061683970753571016e+00 1.081840825878053192e+00 1.100867331232345148e+00 1.111250122890182102e+00 1.103334698716747830e+00 1.098058480117804825e+00
+1.649648074098019890e-01 1.064061616548091838e+00 1.084377015522926868e+00 1.103695749605551946e+00 1.114380165939869993e+00 1.106210068790922874e+00 1.100759959034007140e+00
+1.666246040597822164e-01 1.066498719349708191e+00 1.086973362144685096e+00 1.106589303689386794e+00 1.117573930996926368e+00 1.109143008521760843e+00 1.103514949964687020e+00
+1.683011007863578212e-01 1.068996596041204672e+00 1.089631171563652412e+00 1.109549390624348542e+00 1.120833022018270064e+00 1.112135084902495796e+00 1.106324978134170856e+00
+1.699944656176775037e-01 1.071556591289481997e+00 1.092351776906799188e+00 1.112577436610179271e+00 1.124159194499095404e+00 1.115188014074356415e+00 1.109191713045414973e+00
+1.717048682725084430e-01 1.074180078119052473e+00 1.095136539169027756e+00 1.115674897501646168e+00 1.127554227051109192e+00 1.118303540028002363e+00 1.112116853698170038e+00
+1.734324801772464397e-01 1.076868458497250547e+00 1.097986847785900499e+00 1.118843259416453462e+00 1.131019919337167723e+00 1.121483432236714872e+00 1.115102126002696092e+00
+1.751774744830977004e-01 1.079623163931397345e+00 1.100904121218044818e+00 1.122084039355534468e+00 1.134558090277470566e+00 1.124729483535574559e+00 1.118149280414180824e+00
+1.769400260834323724e-01 1.082445656078159013e+00 1.103889807547466351e+00 1.125398785835966864e+00 1.138170576574384807e+00 1.128043508300062614e+00 1.121260089843061136e+00
+1.787203116313136886e-01 1.085337427365351992e+00 1.106945385086018252e+00 1.128789079536774986e+00 1.141859231602219804e+00 1.131427340977154472e+00 1.124436347896146771e+00
+1.805185095572030829e-01 1.088300001626442359e+00 1.110072362996270545e+00 1.132256533957876954e+00 1.145625924707720289e+00 1.134882835021895131e+00 1.127679867503182054e+00
+1.823348000868440788e-01 1.091334934748003249e+00 1.113272281925032248e+00 1.135802796092445499e+00 1.149472540967245049e+00 1.138411862292827204e+00 1.130992479983932375e+00
+1.841693652593244801e-01 1.094443815330386371e+00 1.116546714649779837e+00 1.139429547112948082e+00 1.153400981447366691e+00 1.142016312960814961e+00 1.134376034611498163e+00
+1.860223889453221646e-01 1.097628265361882738e+00 1.119897266738259844e+00 1.143138503071155387e+00 1.157413164017713214e+00 1.145698095988128218e+00 1.137832398729889061e+00
+1.878940568655335097e-01 1.100889940906644826e+00 1.123325577221528482e+00 1.146931415612391536e+00 1.161511024768335787e+00 1.149459140238462851e+00 1.141363458487029359e+00
+1.897845566092870306e-01 1.104230532806645515e+00 1.126833319280701184e+00 1.150810072704317566e+00 1.165696520089317234e+00 1.153301396284394320e+00 1.144971120249743235e+00
+1.916940776533455626e-01 1.107651767397966669e+00 1.130422200947695410e+00 1.154699370654579837e+00 1.169971877429648144e+00 1.157227033978061481e+00 1.148657473910777993e+00
+1.936228113808955431e-01 1.111155407241700255e+00 1.134093965820241579e+00 1.157994724871756365e+00 1.174351755265576003e+00 1.161249582184119555e+00 1.152435217140245882e+00
+1.955709511007293344e-01 1.114242477048929647e+00 1.137420955268162670e+00 1.161320283115035989e+00 1.178844335045668767e+00 1.165376688845067399e+00 1.156311629748164371e+00
+1.975386920666194479e-01 1.117223139035157908e+00 1.140555306888604958e+00 1.164675254059652110e+00 1.183448864519362820e+00 1.169607485927851132e+00 1.160285794874483134e+00
+1.995262314968878903e-01 1.120233569649354388e+00 1.143718941090337005e+00 1.168058799387009072e+00 1.188164474926797665e+00 1.173940995563132139e+00 1.164356692574509466e+00
+2.015337685941732682e-01 1.123273020677756584e+00 1.146911052342208581e+00 1.171470032607961453e+00 1.192990160176401471e+00 1.178376111046652186e+00 1.168523182338593980e+00
+2.035615045653948740e-01 1.126340698527961592e+00 1.150130787569495494e+00 1.174908017887143163e+00 1.197924755269784924e+00 1.182911577242262702e+00 1.172783985115480876e+00
+2.056096426419195822e-01 1.129435763117750291e+00 1.153377244965259285e+00 1.178371768870453806e+00 1.202966914241285545e+00 1.187545970685754959e+00 1.177137665164783131e+00
+2.076783880999304166e-01 1.132557326768158124e+00 1.156649472803027212e+00 1.181860247517960483e+00 1.208115087829243484e+00 1.192277679607962604e+00 1.181582611954219431e+00
+2.097679482810013707e-01 1.135704453103060452e+00 1.159946468252937235e+00 1.185372362944644431e+00 1.213367501171307650e+00 1.197104884165768102e+00 1.186117022383063713e+00
+2.118785326128771462e-01 1.138876155957690983e+00 1.163267176203650388e+00 1.188906970271602415e+00 1.218722131901649020e+00 1.202025537249063802e+00 1.190738883687306071e+00
+2.140103526304640291e-01 1.142071398298715623e+00 1.166610488092528097e+00 1.192462869490499289e+00 1.224176689124621520e+00 1.207037346320747773e+00 1.195445957464458697e+00
+2.161636219970309303e-01 1.145289091158642858e+00 1.169975240746716993e+00 1.196038804344263351e+00 1.229728593845942797e+00 1.212137756843939762e+00 1.200235765345449623e+00
+2.183385565256237004e-01 1.148528092587569827e+00 1.173360215238010928e+00 1.199633461227244347e+00 1.235374961557278439e+00 1.217323937954510882e+00 1.205105576935965539e+00
+2.205353742006959938e-01 1.151787206625465521e+00 1.176764135754545304e+00 1.203245468108240512e+00 1.241112587790592414e+00 1.222592771144702661e+00 1.210052400747137824e+00
+2.227542951999557652e-01 1.155065182298406379e+00 1.180185668492591100e+00 1.206873393480077494e+00 1.246937344053321572e+00 1.227940295562419015e+00 1.215072457389811955e+00
+2.249955419164334502e-01 1.158360712642423795e+00 1.183623420571952023e+00 1.210515745339629357e+00 1.252841338559588902e+00 1.233358967200886225e+00 1.220158449302621184e+00
+2.272593389807713860e-01 1.161672433758857315e+00 1.187075938978701339e+00 1.214170970202465005e+00 1.258827428861879705e+00 1.238851506374521350e+00 1.225312965105823437e+00
+2.295459132837373017e-01 1.164998923905364636e+00 1.190541709539241655e+00 1.217837452156543154e+00 1.264901485420563798e+00 1.244423555518358482e+00 1.230541443740340579e+00
+2.318554939989654340e-01 1.168338702627025105e+00 1.194019155929943787e+00 1.221513511959701814e+00 1.271069780459525678e+00 1.250081133856366877e+00 1.235849679508858490e+00
+2.341883126059244313e-01 1.171690229932236926e+00 1.197506638726891781e+00 1.225197406185960514e+00 1.277338996586540487e+00 1.255830643852287709e+00 1.241243826960164442e+00
+2.365446029131184069e-01 1.175051905518428752e+00 1.201002454500563976e+00 1.228887326425998516e+00 1.283716238419433608e+00 1.261678880495662236e+00 1.246730408462467743e+00
+2.389246010815200827e-01 1.178422068052918714e+00 1.204504834960577142e+00 1.232581398547488938e+00 1.290209048080467991e+00 1.267633044245111362e+00 1.252316325250632634e+00
+2.413285456482411051e-01 1.181798994514573931e+00 1.208011946155960192e+00 1.236277682021336366e+00 1.296825425527629916e+00 1.273700758547670064e+00 1.258008872821709145e+00
+2.437566775504382832e-01 1.185180899602298332e+00 1.211521887736750847e+00 1.239974169320228414e+00 1.303573854818629751e+00 1.279890092969457216e+00 1.263815761660847414e+00
+2.462092401494626048e-01 1.188565935216729930e+00 1.215032692283090077e+00 1.243668785396312648e+00 1.310463337559466090e+00 1.286209593115948513e+00 1.269745144412026017e+00
+2.486864792552500592e-01 1.191952190021913216e+00 1.218542324708346003e+00 1.247359387245211781e+00 1.317503434983355204e+00 1.292668318698533492e+00 1.275805650774014532e+00
+2.511886431509579021e-01 1.195337689094143840e+00 1.222048681743216125e+00 1.251043763564038569e+00 1.324706021042958426e+00 1.299277426244298761e+00 1.282007880271825107e+00
+2.537159826178499444e-01 1.198720393665591022e+00 1.225549591508166003e+00 1.254719634511504811e+00 1.332102879476365187e+00 1.306066530804204762e+00 1.288380022899480393e+00
+2.562687509604300029e-01 1.202098200970753039e+00 1.229042813182012361e+00 1.258384651578727143e+00 1.339699712842730817e+00 1.313040709157440977e+00 1.294926751155390798e+00
+2.588472040318301470e-01 1.205468944204308501e+00 1.232526036774914235e+00 1.262036397579804348e+00 1.347490618145608776e+00 1.320194138375021309e+00 1.301642342358341642e+00
+2.614516002594540200e-01 1.208830392599380188e+00 1.235996883014532921e+00 1.265672386771802715e+00 1.355468935370769623e+00 1.327520294373889520e+00 1.308520414431222578e+00
+2.640822006708771763e-01 1.212180251635788020e+00 1.239452903354627322e+00 1.269290065114304422e+00 1.363627153713475870e+00 1.335011865949371268e+00 1.315553845584868098e+00
+2.667392689200102085e-01 1.215516163388405735e+00 1.242891580115896621e+00 1.272886810679303871e+00 1.371956816933065149e+00 1.342660668362411380e+00 1.322734693845310838e+00
+2.694230713135218336e-01 1.218835707026309834e+00 1.246310326769437316e+00 1.276459934222798243e+00 1.380448429350263462e+00 1.350457557921715512e+00 1.330054117808183278e+00
+2.721338768375308192e-01 1.222136399474030632e+00 1.249706488373800717e+00 1.280006679930105973e+00 1.389091364435226517e+00 1.358392349401659649e+00 1.337502300381814502e+00
+2.748719571845648080e-01 1.225415696246844988e+00 1.253077342177228326e+00 1.283524226347606989e+00 1.397873778416613311e+00 1.366453738581606681e+00 1.345068377698602768e+00
+2.776375867807919229e-01 1.228670992472718160e+00 1.256420098397327934e+00 1.287009687514294454e+00 1.406782531866995090e+00 1.374629232674463353e+00 1.352740375826057218e+00
+2.804310428135237676e-01 1.231899624114220160e+00 1.259731901191130099e+00 1.290460114307298678e+00 1.415803009545988145e+00 1.382905006845723372e+00 1.360505085460288255e+00
+2.832526052589977583e-01 1.235098869404461563e+00 1.263009829829183861e+00 1.293872496016308604e+00 1.424922990310564019e+00 1.391269982644567138e+00 1.368352224778386583e+00
+2.861025569104378441e-01 1.238265950511889368e+00 1.266250900088120801e+00 1.297243762162645586e+00 1.434150065172384414e+00 1.399731477287034176e+00 1.376288918211139523e+00
+2.889811834063971685e-01 1.241398035449580606e+00 1.269452065876907731e+00 1.300570784579593520e+00 1.443497211751214149e+00 1.408301666447308254e+00 1.384326763640925106e+00
+2.918887732593876128e-01 1.244492240245536951e+00 1.272610221112840723e+00 1.303850379771511969e+00 1.452978524691040274e+00 1.416993747675752147e+00 1.392478313293337377e+00
+2.948256178847945552e-01 1.247545631391366872e+00 1.275722201864216476e+00 1.307079311570188418e+00 1.462609259871747724e+00 1.425821978426262238e+00 1.400757107528074474e+00
+2.977920116300853404e-01 1.250555228587699741e+00 1.278784788777543646e+00 1.310254294107887851e+00 1.472405888502353211e+00 1.434801723192225209e+00 1.409177717194501911e+00
+3.007882518043100695e-01 1.253518007805642709e+00 1.281794709808098620e+00 1.313371995127600389e+00 1.482386163694085157e+00 1.443949512147346903e+00 1.417755796805311386e+00
+3.038146387078993760e-01 1.256430904684640248e+00 1.284748643273679658e+00 1.316429039652086130e+00 1.492569202495061642e+00 1.453283114034258139e+00 1.426508151102336530e+00
+3.068714756627635154e-01 1.259290818288161251e+00 1.287643221252434245e+00 1.319422014034439261e+00 1.502975586833356525e+00 1.462821626464360536e+00 1.435452817978447593e+00
+3.099590690426911599e-01 1.262094615239798268e+00 1.290475033346786038e+00 1.322347470414130921e+00 1.513629503582811120e+00 1.472587479437087454e+00 1.444610948219188451e+00
+3.130777283040572789e-01 1.264839134263537002e+00 1.293240630836627547e+00 1.325201931603715799e+00 1.524565642600988369e+00 1.482613541667935797e+00 1.454014039561557503e+00
+3.162277660168377746e-01 1.267521191153203386e+00 1.295936531246183243e+00 1.327981896432724129e+00 1.535783359235282086e+00 1.492899230411912193e+00 1.463661585528842624e+00
+3.194094978959385323e-01 1.270137584197414293e+00 1.298559223350228109e+00 1.330683845576652979e+00 1.547272378609616306e+00 1.503434673279145706e+00 1.473544015127755458e+00
+3.226232428328361657e-01 1.272685100087719512e+00 1.301105172646688679e+00 1.333304247900384931e+00 1.559020998069284403e+00 1.514208687249346319e+00 1.483650528306867278e+00
+3.258693229275405612e-01 1.275160520339063019e+00 1.303570827324061376e+00 1.335839567346927437e+00 1.571015935520969853e+00 1.525208640530250070e+00 1.493968967148545435e+00
+3.291480635208771099e-01 1.277560628253193720e+00 1.305952624753569546e+00 1.338286270403917566e+00 1.583242176915355737e+00 1.536420314034497414e+00 1.504485686993638494e+00
+3.324597932270939582e-01 1.279882216457241206e+00 1.308246998537518690e+00 1.340640834182029284e+00 1.595682825503919711e+00 1.547827764927969918e+00 1.515185429827019759e+00
+3.358048439667989382e-01 1.282122095051307475e+00 1.310450386146925217e+00 1.342899755141145901e+00 1.608318956165823765e+00 1.559413195311469824e+00 1.526051202822771513e+00
+3.391835510002247367e-01 1.284277100400679661e+00 1.312559237183208660e+00 1.345059558502009089e+00 1.621129478831124349e+00 1.571156829764962515e+00 1.537064165571778274e+00
+3.425962529608316820e-01 1.286344104610054995e+00 1.314570022300507457e+00 1.347116808382954334e+00 1.634094901932551913e+00 1.583041266880669706e+00 1.548208305953341579e+00
+3.460432918892472620e-01 1.288320025719082995e+00 1.316479242827028218e+00 1.349068118703349972e+00 1.647221245582128901e+00 1.595072870516605068e+00 1.559490261425816815e+00
+3.495250132675473131e-01 1.290201838660522515e+00 1.318283441125813971e+00 1.350910164897471288e+00 1.660526182162932241e+00 1.607267575938456483e+00 1.570924890152717968e+00
+3.530417660538830993e-01 1.291986587024366084e+00 1.319979211737340785e+00 1.352639696484708498e+00 1.674029004346733407e+00 1.619642739009571120e+00 1.582528344504634976e+00
+3.565939027174544473e-01 1.293671395673487989e+00 1.321563213348497356e+00 1.354253550544349372e+00 1.687750697705086234e+00 1.632217201366497061e+00 1.594318133982587149e+00
+3.601817792738370994e-01 1.295253484258652721e+00 1.323032181634740123e+00 1.355748666145541570e+00 1.701714039537868706e+00 1.645011374983137431e+00 1.606313201080180164e+00
+3.638057553206642813e-01 1.296730181683076299e+00 1.324382943024573045e+00 1.357122099785602831e+00 1.715943715209565346e+00 1.658047342119066903e+00 1.618534011246585136e+00
+3.674661940736688170e-01 1.298098941569276521e+00 1.325612429437915685e+00 1.358371041892444619e+00 1.730467684937134765e+00 1.671350469903877922e+00 1.631004231870073484e+00
+3.711634624030847318e-01 1.299357358783522542e+00 1.326717694052554686e+00 1.359492834449676613e+00 1.745325379528277487e+00 1.684959522363998596e+00 1.643761594010014759e+00
+3.748979308704186164e-01 1.300503187075964906e+00 1.327695928155506078e+00 1.360484989805814893e+00 1.760521534945588495e+00 1.698879415704094065e+00 1.656810981114409165e+00
+3.786699737655886411e-01 1.301534357897356164e+00 1.328544479138950685e+00 1.361345210732064270e+00 1.776047998524042271e+00 1.713102337137926590e+00 1.670144766812427628e+00
+3.824799691444383254e-01 1.302449000456308514e+00 1.329260869703356773e+00 1.362071411796296649e+00 1.791895212806144944e+00 1.727619188211191315e+00 1.683754114722555650e+00
+3.863282988666282836e-01 1.303245463084124811e+00 1.329842818333468957e+00 1.362661742124146702e+00 1.808052080921169313e+00 1.742419462675754982e+00 1.697628864381100611e+00
+3.902153486339066668e-01 1.303922335977566904e+00 1.330288261116085557e+00 1.363114609621653539e+00 1.824505828489261683e+00 1.757491121424340719e+00 1.711757414585818760e+00
+3.941415080287676842e-01 1.304478475393311188e+00 1.330595374971879519e+00 1.363428706737429108e+00 1.841241863464540662e+00 1.772820465798903067e+00 1.726126605404338710e+00
+3.981071705534973693e-01 1.304913029371472133e+00 1.330762602377112191e+00 1.363603037846192745e+00 1.858243635702570451e+00 1.788392010924559239e+00 1.740721600414865122e+00
+4.021127336696125321e-01 1.305225465069292934e+00 1.330788677654695995e+00 1.363636948339419064e+00 1.875492187236038832e+00 1.804188440942120941e+00 1.755526009679457378e+00
+4.061585988376978373e-01 1.305415597790051896e+00 1.330672654918002129e+00 1.363530155513029030e+00 1.892978886786161219e+00 1.820203604925623608e+00 1.770535083296269852e+00
+4.102451715576404534e-01 1.305483621796338367e+00 1.330413937754788556e+00 1.363282781346364603e+00 1.910720538608176478e+00 1.836452881942788773e+00 1.785763539489861884e+00
+4.143728614092728746e-01 1.305430143001132359e+00 1.330012310742868742e+00 1.362895387271229719e+00 1.928737929754672065e+00 1.852954908465274109e+00 1.801228918356243769e+00
+4.185420820934229180e-01 1.305256213634629514e+00 1.329467972893571659e+00 1.362369011034523458e+00 1.947053654095333819e+00 1.869729901907657199e+00 1.816950226797100942e+00
+4.227532514733783886e-01 1.304963368989441763e+00 1.328781573123626769e+00 1.361705205762927973e+00 1.965692228929737162e+00 1.886799760996364483e+00 1.832948030702661102e+00
+4.270067916167658018e-01 1.304553666351710994e+00 1.327954247860960724e+00 1.360906081343319807e+00 1.984680225159480615e+00 1.904188177950452587e+00 1.849244558106260206e+00
+4.313031288378536554e-01 1.304029726230816477e+00 1.326987660894942023e+00 1.359974348237965591e+00 2.004046413464948273e+00 1.921920764609627907e+00 1.865863815296082029e+00
+4.356426937402797517e-01 1.303394776005706523e+00 1.325884045586862792e+00 1.358913363859252321e+00 2.023821929325534619e+00 1.940025194986677803e+00 1.882831718185664194e+00
+4.400259212602086745e-01 1.302652696111531228e+00 1.324646249562007050e+00 1.357727181634583502e+00 2.044040460186174357e+00 1.958531367124105360e+00 1.900176241617310025e+00
+4.444532507099248075e-01 1.301808068896048054e+00 1.323277782010372272e+00 1.356420602898294359e+00 2.064738458623759598e+00 1.977471587612874115e+00 1.917927589715055170e+00
+4.489251258218605045e-01 1.300866230281511493e+00 1.321782863729183521e+00 1.354999231753898359e+00 2.085955386024457514e+00 1.996880782701870638e+00 1.936118390932107358e+00
+4.534419947930711792e-01 1.299833324374034094e+00 1.320166480046633950e+00 1.353469533056713026e+00 2.107147490570814963e+00 2.016275571793401333e+00 1.954294275639715250e+00
+4.580043103301557061e-01 1.298716361169219624e+00 1.318434436772830454e+00 1.351838893673998898e+00 2.128432962340032208e+00 2.035757948171725396e+00 1.972550816227008452e+00
+4.626125296946288490e-01 1.297523277509796236e+00 1.316593419330895021e+00 1.350115687187137592e+00 2.150013675718366102e+00 2.055509244613304976e+00 1.991058734081897708e+00
+4.672671147487523213e-01 1.296263001458321851e+00 1.314651055228269971e+00 1.348309342208040995e+00 2.171971981153413278e+00 2.075605820369756938e+00 2.009890227428447140e+00
+4.719685320018229269e-01 1.294945520255653904e+00 1.312615980035872321e+00 1.346430414490096927e+00 2.194393534201271034e+00 2.096126976415939591e+00 2.029120190582619720e+00
+4.767172526569301572e-01 1.293581952043902472e+00 1.310497907050560906e+00 1.344490663022361421e+00 2.217353270631138074e+00 2.117141960360058750e+00 2.048813936270349689e+00
+4.815137526581823590e-01 1.292184621540880096e+00 1.308307700824598463e+00 1.342503130304477210e+00 2.240836566585648004e+00 2.138637001654482894e+00 2.068958318096663973e+00
+4.863585127384100759e-01 1.290767139861819901e+00 1.306057454754380398e+00 1.340482227009032412e+00 2.264790751206561481e+00 2.160563159225419749e+00 2.089507018173308417e+00
+4.912520184673454526e-01 1.289344488693218160e+00 1.303760572929657746e+00 1.338443821247673471e+00 2.289160609733302820e+00 2.182869236953172809e+00 2.110411658941124813e+00
+4.961947603002903606e-01 1.287933109033192913e+00 1.301431856453847402e+00 1.336405332667278012e+00 2.313891833490770544e+00 2.205504975686817026e+00 2.131624815584392874e+00
+5.011872336272723549e-01 1.286550994722667429e+00 1.299087594455814898e+00 1.334385831613027262e+00 2.338971139732105353e+00 2.228458097658960746e+00 2.153134924557607466e+00
+5.062299388226951802e-01 1.285217791002110976e+00 1.296745660023730817e+00 1.332406143606160276e+00 2.364414268857720547e+00 2.251743146274829410e+00 2.174955713165539262e+00
+5.113233812954907087e-01 1.283954898339363160e+00 1.294425611302271406e+00 1.330488959395550452e+00 2.390238070509735913e+00 2.275375675355632676e+00 2.197101851622746072e+00
+5.164680715397712563e-01 1.282785581785454321e+00 1.292148798005625876e+00 1.328658950854341381e+00 2.416459988266284054e+00 2.299371772524135604e+00 2.219588503398799872e+00
+5.216645251859961530e-01 1.281735086127142820e+00 1.289938473610365843e+00 1.326942893005195190e+00 2.443099018575666914e+00 2.323748967799638798e+00 2.242432199468501253e+00
+5.269132630526509598e-01 1.280830757117223717e+00 1.287819913504442804e+00 1.325369792470824981e+00 2.470176691197494279e+00 2.348527160307721129e+00 2.265651728390616348e+00
+5.322148111984460472e-01 1.280102169076647201e+00 1.285820539381292038e+00 1.323971022660101582e+00 2.497715531092344676e+00 2.373727155450149340e+00 2.289266724962844446e+00
+5.375697009750429745e-01 1.279581259175881502e+00 1.283970050181257205e+00 1.322780466014163991e+00 2.525738880614661230e+00 2.399370494570350232e+00 2.313297505037570367e+00
+5.429784690803075575e-01 1.279302468717106400e+00 1.282300559896457637e+00 1.321834663651882957e+00 2.554269740817688650e+00 2.425478382237868935e+00 2.337764052445671759e+00
+5.484416576121019515e-01 1.279302891753475002e+00 1.280846742569682339e+00 1.321172972769456777e+00 2.583312539501305238e+00 2.452054828485340732e+00 2.362670112769171382e+00
+5.539598141226159678e-01 1.279622431397041016e+00 1.279645984832955552e+00 1.320837732165131007e+00 2.612855821961364455e+00 2.479089171611009057e+00 2.388005597949425241e+00
+5.595334916732482844e-01 1.280303964183048482e+00 1.278738546347346405e+00 1.320874436276944008e+00 2.642886913112466818e+00 2.506569655401218899e+00 2.413759411189158932e+00
+5.651632488900339979e-01 1.281393512874879681e+00 1.278167728521896640e+00 1.321331918138998640e+00 2.673392318825695835e+00 2.534483802118301821e+00 2.439919800189063182e+00
+5.708496500196357237e-01 1.282940428111581044e+00 1.277980051906907999e+00 1.322262541680202075e+00 2.704358627962772488e+00 2.562819246523842853e+00 2.466475143846314388e+00
+5.765932649858948045e-01 1.284997579318037486e+00 1.278225442674697510e+00 1.323722403808631487e+00 2.735788113449441283e+00 2.591578129210558856e+00 2.493427507511732255e+00
+5.823946694469519514e-01 1.287621555316960320e+00 1.278957428619761583e+00 1.325771546744792140e+00 2.767697130036624209e+00 2.620775590411264400e+00 2.520791205097446586e+00
+5.882544448529454240e-01 1.290872875101690243e+00 1.280233345129796696e+00 1.328474181087903716e+00 2.800103033572282296e+00 2.650427686139315231e+00 2.548581407893529160e+00
+5.941731785042834169e-01 1.294816209249656902e+00 1.282114551599571106e+00 1.331898920121325158e+00 2.833023765357970625e+00 2.680551004105966584e+00 2.576813782443495349e+00
+6.001514636105098610e-01 1.299520612477914616e+00 1.284666658780921011e+00 1.336119025886016054e+00 2.866477871415290757e+00 2.711162681189867030e+00 2.605504506808447918e+00
+6.061898993497569776e-01 1.305059767864897857e+00 1.287959767584404336e+00 1.341212667574721795e+00 2.900481060043550219e+00 2.742277205960732989e+00 2.634667249487097074e+00
+6.122890909288015715e-01 1.311512243286042434e+00 1.292068719871535931e+00 1.347263192824561751e+00 2.935038054204144764e+00 2.773898860395818566e+00 2.664306034656811040e+00
+6.184496496437186241e-01 1.318961760635640967e+00 1.297073361800621161e+00 1.354359412511515259e+00 2.970151157809167941e+00 2.806029689234682767e+00 2.694422780851124521e+00
+6.246721929411510610e-01 1.327497478433030675e+00 1.303058820314713318e+00 1.362595899677567113e+00 3.005822505721925442e+00 2.838671591691169560e+00 2.725019278616307439e+00
+6.309573444801933606e-01 1.337214288437993837e+00 1.310115793386592786e+00 1.372073303249408571e+00 3.042054053243729239e+00 2.871826312204795340e+00 2.756097182166763027e+00
+6.373057341948976662e-01 1.348213126928371253e+00 1.318340854663289097e+00 1.382898677237214713e+00 3.078847565378637352e+00 2.905495430999375017e+00 2.787658000867164088e+00
+6.437179983574115028e-01 1.360601301322013512e+00 1.327836773181463537e+00 1.395185826132801399e+00 3.116205460251583403e+00 2.939681159832768120e+00 2.819703852819768652e+00
+6.501947796417458791e-01 1.374492832855841229e+00 1.338712848855077242e+00 1.409055667258535705e+00 3.154134679046280532e+00 2.974389987969540350e+00 2.852240914210811606e+00
+6.567367271881888735e-01 1.390008816066568009e+00 1.351085264468177671e+00 1.424636610852094698e+00 3.192643815875386260e+00 3.009629971348224853e+00 2.885276849840445745e+00
+6.633444966683669231e-01 1.407277795850843560e+00 1.365077454938268042e+00 1.442064958706953615e+00 3.231741591780210143e+00 3.045409293408342766e+00 2.918819450458431053e+00
+6.700187503509584808e-01 1.426436162917386063e+00 1.380820494650036867e+00 1.461485322225271277e+00 3.271436855013796219e+00 3.081736265748240111e+00 2.952876633609591739e+00
+6.767601571680732508e-01 1.447628568479716327e+00 1.398453503694871536e+00 1.483051060777724972e+00 3.311738582535403985e+00 3.118619329938256524e+00 2.987456445580361830e+00
+6.835693927822926730e-01 1.471008359075953065e+00 1.418124073888666903e+00 1.506924741304739301e+00 3.352655881512565106e+00 3.156067059354471738e+00 3.022567063372469054e+00
+6.904471396543910844e-01 1.496738032441554678e+00 1.439988715479458392e+00 1.533278620135118286e+00 3.394197851578421687e+00 3.194088019596927897e+00 3.058216659462704268e+00
+6.973940871117345619e-01 1.524989715401951607e+00 1.464213325496809492e+00 1.562295148041217496e+00 3.436372414436518419e+00 3.232689580707030164e+00 3.094412249915410307e+00
+7.044109314173722103e-01 1.555945664794919692e+00 1.490973678737189667e+00 1.594167499595136928e+00 3.479186839841017953e+00 3.271878453598933145e+00 3.131160216436618349e+00
+7.114983758398154556e-01 1.589798792477331579e+00 1.520455942423676321e+00 1.629100127937398224e+00 3.522648416091890944e+00 3.311661372015044957e+00 3.168466968735828448e+00
+7.186571307235259942e-01 1.626753215517615647e+00 1.552857215624407372e+00 1.667309346118959867e+00 3.566764454158763975e+00 3.352045097195793133e+00 3.206338949360136859e+00
+7.258879135601108423e-01 1.667024832723945638e+00 1.588386094562140860e+00 1.709023936228438512e+00 3.611542284936838598e+00 3.393036415587105115e+00 3.244782631779251414e+00
+7.331914490602318146e-01 1.710841928708982884e+00 1.627263264997372394e+00 1.754485787570186250e+00 3.656989256397451538e+00 3.434642136456479644e+00 3.283804518390478488e+00
+7.405684692262434199e-01 1.758445806745089657e+00 1.669722122919844232e+00 1.803950565214491597e+00 3.703112730631039629e+00 3.476869089415722591e+00 3.323411138441761725e+00
+7.480197134255541780e-01 1.810091451719170852e+00 1.716009424837624087e+00 1.857688410299615622e+00 3.749920080780196674e+00 3.519724121848487819e+00 3.363609045870870062e+00
+7.555459284647332296e-01 1.866048224554014423e+00 1.766385969009882650e+00 1.915984673525908732e+00 3.797418640305476600e+00 3.563214058028573827e+00 3.404404775400473593e+00
+7.631478686643581311e-01 1.926600589523185914e+00 1.821127309028963470e+00 1.979140683345779639e+00 3.845615546793725414e+00 3.607345573588697896e+00 3.445804706445060095e+00
+7.708262959346178222e-01 1.992048875949358422e+00 1.880524501218907352e+00 2.047474550419384087e+00 3.894517874882340802e+00 3.652125302369919613e+00 3.487815180441730778e+00
+7.785819798516768753e-01 2.062710075841356794e+00 1.944884887382527738e+00 2.121322009974714096e+00 3.944132681194382872e+00 3.697559872421827709e+00 3.530442540850565525e+00
+7.864156977348040201e-01 2.138918679093442243e+00 2.014532914496057092e+00 2.201037303782777510e+00 3.994467000130200063e+00 3.743655902482199593e+00 3.573693130071556645e+00
+7.943282347242816011e-01 2.221027547941962776e+00 2.089810993021070207e+00 2.286994103533617206e+00 4.045527839525810521e+00 3.790419998340830432e+00 3.617573286257079523e+00
+8.023203838600955207e-01 2.309408832448257343e+00 2.171080395576302280e+00 2.379586477477043882e+00 4.097322176176441566e+00 3.837858749085743426e+00 3.662089340017803618e+00
+8.103929461614213237e-01 2.404454928854650841e+00 2.258722197788460839e+00 2.479229902273585306e+00 4.149856951223178214e+00 3.885978723230064436e+00 3.707247611020666689e+00
+8.185467307069026477e-01 2.506579482740913800e+00 2.353138263220952542e+00 2.586362322086175336e+00 4.203139065401005681e+00 3.934786464717652255e+00 3.753054404476698913e+00
+8.267825547157442445e-01 2.616218438993105799e+00 2.454752274362467013e+00 2.701445257032109026e+00 4.257175374146663138e+00 3.984288488805980855e+00 3.799516007517475646e+00
+8.351012436296183505e-01 2.733831140684432004e+00 2.564010811743971718e+00 2.824964963206908930e+00 4.311972682564422676e+00 4.034491277824383104e+00 3.846638685458200868e+00
+8.435036311953937327e-01 2.859901479059451912e+00 2.681384483343251635e+00 2.957433646588704779e+00 4.367537784809796264e+00 4.085401315738641514e+00 3.894428714026032967e+00
+8.519905595487019534e-01 2.994939096908809439e+00 2.807369106530273051e+00 3.099390733232090245e+00 4.423878044814409272e+00 4.137025595493229346e+00 3.942892849606913774e+00
+8.605628792983366360e-01 3.139480647720973572e+00 2.942486944904941559e+00 3.251404198265440471e+00 4.481001261669271152e+00 4.189371500906280410e+00 3.992038219557952683e+00
+8.692214496115090450e-01 3.294091113101859314e+00 3.087288002481540339e+00 3.414071956315204215e+00 4.538915233573093566e+00 4.242446425610269856e+00 4.041871969107239337e+00
+8.779671382999585383e-01 3.459365181061389460e+00 3.242351377780881894e+00 3.588023316094776760e+00 4.597627743811830037e+00 4.296257760924979685e+00 4.092401250301410442e+00
+8.868008219069282161e-01 3.635928687879186771e+00 3.408286680502736310e+00 3.773920502014558753e+00 4.657146556951908600e+00 4.350812892655340214e+00 4.143633219227523590e+00
+8.957233857950206435e-01 3.824440126379517579e+00 3.585735513567469557e+00 3.972460245793878020e+00 4.717479414918519964e+00 4.406119197786945385e+00 4.195575033142015187e+00
+9.047357242349296502e-01 4.025592223568327022e+00 3.775373023436923159e+00 4.184375451184832784e+00 4.778634032957397970e+00 4.462184041078335994e+00 4.248233847505512806e+00
+9.138387404950713000e-01 4.240113590713916025e+00 3.977909521751070709e+00 4.410436935053249741e+00 4.840618095478963490e+00 4.519014771548212295e+00 4.301616812921777111e+00
+9.230333469321144735e-01 4.468770449085769592e+00 4.194092181448741741e+00 4.651455248202272408e+00 4.903439251783009212e+00 4.576618718856346746e+00 4.355731071979541014e+00
+9.323204650824244988e-01 4.712368434706181830e+00 4.424706810678431523e+00 4.908282579471153539e+00 4.967105111662947436e+00 4.635003189576651472e+00 4.410583755995637567e+00
+9.417010257544207175e-01 4.971754485613643304e+00 4.670579707947751125e+00 5.181814746794278115e+00 5.031623240888147386e+00 4.694175463361185408e+00 4.466181981658203348e+00
+9.511759691218705237e-01 5.247818815289583050e+00 4.932579602110621408e+00 5.472993279065455852e+00 5.097001156563150559e+00 4.754142788993617863e+00 4.522532847568271563e+00
+9.607462448181181003e-01 5.541496976057226576e+00 5.211619680946149913e+00 5.782807592818415721e+00 5.163246322362624596e+00 4.814912380331013431e+00 4.579643430678851601e+00
+9.704128120312611738e-01 5.853772016426089131e+00 5.508659712245891349e+00 6.112297267907523590e+00 5.230366143641028032e+00 4.876491412132637038e+00 4.637520782629795946e+00
+9.801766396002902226e-01 6.185676736527810249e+00 5.824708261495857187e+00 6.462554426554266485e+00 5.298367962415656329e+00 4.938887015774622746e+00 4.696171925977387751e+00
+9.900387061121853627e-01 6.538296045967203263e+00 6.160825010415381442e+00 6.834726220312080436e+00 5.367259048914427844e+00 5.002106264308595840e+00 4.755603831550780036e+00
+1.000000000000000000e+00 6.912769428599998101e+00 6.518123180800004413e+00 7.230017429699995724e+00 5.437046581689984670e+00 5.066156121400974932e+00 4.815823331625092685e+00
diff --git a/montepython/likelihood_class.py b/montepython/likelihood_class.py
index fb341fe..be828b0 100644
--- a/montepython/likelihood_class.py
+++ b/montepython/likelihood_class.py
@@ -2887,7 +2887,10 @@ class Likelihood_sn(Likelihood):
             immediatly, though.
 
         """
-        from pandas import read_table
+        # (JR) fixed python 2/3 issues, read_table deprecated,
+        #  use read_csv instead
+        from pandas import read_csv
+
         path = os.path.join(self.data_directory, path)
         # The first line should contain the length.
         with open(path, 'r') as text:
@@ -2896,7 +2899,7 @@ class Likelihood_sn(Likelihood):
         # Note that this function does not require to skiprows, as it
         # understands the convention of writing the length in the first
         # line
-        matrix = read_table(path).to_numpy().reshape((length, length))
+        matrix = read_csv(path).values.reshape((length, length))
 
         return matrix
 
@@ -2910,7 +2913,9 @@ class Likelihood_sn(Likelihood):
             the covariance matrices stored in C00, etc...
 
         """
-        from pandas import read_table
+        # (JR) fixed python 2/3 issues when readin in matrix
+        from pandas import read_csv
+
         path = os.path.join(self.data_directory, self.data_file)
 
         # Recover the names of the columns. The names '3rdvar' and 'd3rdvar'
@@ -2920,8 +2925,9 @@ class Likelihood_sn(Likelihood):
             names = [e.strip().replace('3rd', 'third')
                      for e in clean_first_line.split()]
 
-        lc_parameters = read_table(
+        lc_parameters = read_csv(
             path, sep=' ', names=names, header=0, index_col=False)
+
         return lc_parameters
 
 
diff --git a/montepython/likelihoods/BK14/__init__.py b/montepython/likelihoods/BK14/__init__.py
index 4f8052e..1ae2bb2 100644
--- a/montepython/likelihoods/BK14/__init__.py
+++ b/montepython/likelihoods/BK14/__init__.py
@@ -79,7 +79,9 @@ class BK14(Likelihood_sn):
         indices, mask = self.GetIndicesAndMask(self.bin_window_in_order.split())
         for k in range(nbins):
             windowfile = os.path.join(self.data_directory, self.bin_window_files.replace('%u',str(k+1)))
-            tmp = pd.read_table(windowfile,comment='#',sep=' ',header=None, index_col=0).to_numpy()
+            #tmp = pd.read_table(windowfile,comment='#',sep=' ',header=None, index_col=0).as_matrix()
+            # (JR) changed for python3 compatibility
+            tmp = pd.read_csv(windowfile,comment='#',sep=' ',header=None, index_col=0).values
             # Apply mask
             tmp = tmp[:,mask]
             # Permute columns and store this bin
@@ -97,7 +99,7 @@ class BK14(Likelihood_sn):
             supermask += list(mask)
         supermask = np.array(supermask)
 
-        tmp = pd.read_table(os.path.join(self.data_directory, self.covmat_fiducial),comment='#',sep=' ',header=None,skipinitialspace=True).to_numpy()
+        tmp = pd.read_csv(os.path.join(self.data_directory, self.covmat_fiducial),comment='#',sep=' ',header=None,skipinitialspace=True).values
         # Apply mask:
         tmp = tmp[:,supermask][supermask,:]
         print('Covmat read with shape',tmp.shape)
@@ -142,7 +144,8 @@ class BK14(Likelihood_sn):
         # Get mask and indices
         indices, mask = self.GetIndicesAndMask(crossmaps.split())
         # Read matrix in packed format
-        A = pd.read_table(os.path.join(self.data_directory, filename),comment='#',sep=' ',header=None, index_col=0).to_numpy()
+        A = pd.read_csv(os.path.join(self.data_directory, filename),comment='#',sep=' ',header=None, index_col=0).values
+
         # Apply mask
         A = A[:,mask]
 
diff --git a/montepython/likelihoods/BK15/__init__.py b/montepython/likelihoods/BK15/__init__.py
index 6a49de6..0ddb15f 100644
--- a/montepython/likelihoods/BK15/__init__.py
+++ b/montepython/likelihoods/BK15/__init__.py
@@ -79,7 +79,8 @@ class BK15(Likelihood_sn):
         indices, mask = self.GetIndicesAndMask(self.bin_window_in_order.split())
         for k in range(nbins):
             windowfile = os.path.join(self.data_directory, self.bin_window_files.replace('%u',str(k+1)))
-            tmp = pd.read_table(windowfile,comment='#',sep=' ',header=None, index_col=0).to_numpy()
+            #tmp = pd.read_table(windowfile,comment='#',sep=' ',header=None, index_col=0).to_numpy()
+            tmp = pd.read_csv(windowfile,comment='#',sep=' ',header=None, index_col=0).values
             # Apply mask
             tmp = tmp[:,mask]
             # Permute columns and store this bin
@@ -97,7 +98,7 @@ class BK15(Likelihood_sn):
             supermask += list(mask)
         supermask = np.array(supermask)
 
-        tmp = pd.read_table(os.path.join(self.data_directory, self.covmat_fiducial),comment='#',sep=' ',header=None,skipinitialspace=True).to_numpy()
+        tmp = pd.read_csv(os.path.join(self.data_directory, self.covmat_fiducial),comment='#',sep=' ',header=None,skipinitialspace=True).values
         # Apply mask:
         tmp = tmp[:,supermask][supermask,:]
         print('Covmat read with shape {}'.format(tmp.shape))
@@ -142,7 +143,7 @@ class BK15(Likelihood_sn):
         # Get mask and indices
         indices, mask = self.GetIndicesAndMask(crossmaps.split())
         # Read matrix in packed format
-        A = pd.read_table(os.path.join(self.data_directory, filename),comment='#',sep=' ',header=None, index_col=0).to_numpy()
+        A = pd.read_csv(os.path.join(self.data_directory, filename),comment='#',sep=' ',header=None, index_col=0).values
         # Apply mask
         A = A[:,mask]
 
diff --git a/montepython/likelihoods/fake_desi/__init__.py b/montepython/likelihoods/fake_desi/__init__.py
index 4ddf557..2d04f6d 100644
--- a/montepython/likelihoods/fake_desi/__init__.py
+++ b/montepython/likelihoods/fake_desi/__init__.py
@@ -63,8 +63,9 @@ class fake_desi(Likelihood):
         # Write fiducial model spectra if needed (return an imaginary number in
         # that case)
         if self.fid_values_exist is False:
-
-            # open file where fiducial model will be written and write header
+            # (JR) throw error as creation of fiducial file does not work with GAMBIT
+            self.raise_fiducial_model_err()
+            '''# open file where fiducial model will be written and write header
             fid_file = open(os.path.join(
                 self.data_directory, self.fiducial_file), 'w')
             fid_file.write('# Fiducial parameters')
@@ -86,7 +87,7 @@ class fake_desi(Likelihood):
                     self.type = np.append(self.type, self.error_type)
                     self.relative_error = np.append(self.relative_error, 0.01 * sensitivity[i,self.error_column])
             else:
-                raise io_mp.LikelihoodError("Could not find file ",self.sensitivity)
+                raise io_mp.LikelihoodError("Could not find file ",self.sensitivity)'''
 
         chi2 = 0.
 
diff --git a/montepython/likelihoods/fake_desi_euclid_bao/__init__.py b/montepython/likelihoods/fake_desi_euclid_bao/__init__.py
index a357ca5..e2433b8 100644
--- a/montepython/likelihoods/fake_desi_euclid_bao/__init__.py
+++ b/montepython/likelihoods/fake_desi_euclid_bao/__init__.py
@@ -88,8 +88,9 @@ class fake_desi_euclid_bao(Likelihood):
 
         # If writing fiducial model is needed: read sensitivity (relative errors)
         if self.fid_values_exist is False:
-
-            # open file where fiducial model will be written and write header
+            # (JR) throw error as creation of fiducial file does not work with GAMBIT
+            self.raise_fiducial_model_err()
+            '''# open file where fiducial model will be written and write header
             fid_file = open(os.path.join(
                 self.data_directory, self.fiducial_file), 'w')
             fid_file.write('# Fiducial parameters')
@@ -119,7 +120,7 @@ class fake_desi_euclid_bao(Likelihood):
                         relative_invcov22 = np.append(relative_invcov22, sensitivity[i,2])
                         relative_invcov12 = np.append(relative_invcov12, sensitivity[i,3])
             else:
-                raise io_mp.LikelihoodError("Could not find file ",self.sensitivity)
+                raise io_mp.LikelihoodError("Could not find file ",self.sensitivity)'''
 
         # in all cases: initialise chi2 and compute observables:
         # angular distance da, radial distance dr,
diff --git a/montepython/likelihoods/fake_desi_vol/__init__.py b/montepython/likelihoods/fake_desi_vol/__init__.py
index 9df3412..0b0b140 100644
--- a/montepython/likelihoods/fake_desi_vol/__init__.py
+++ b/montepython/likelihoods/fake_desi_vol/__init__.py
@@ -64,8 +64,9 @@ class fake_desi_vol(Likelihood):
         # Write fiducial model spectra if needed (return an imaginary number in
         # that case)
         if self.fid_values_exist is False:
-
-            # open file where fiducial model will be written and write header
+            # (JR) throw error as creation of fiducial file does not work with GAMBIT
+            self.raise_fiducial_model_err()
+            '''# open file where fiducial model will be written and write header
             fid_file = open(os.path.join(
                 self.data_directory, self.fiducial_file), 'w')
             fid_file.write('# Fiducial parameters')
@@ -87,7 +88,7 @@ class fake_desi_vol(Likelihood):
                     self.type = np.append(self.type, self.error_type)
                     self.relative_error = np.append(self.relative_error, 0.01 * sensitivity[i,self.error_column])
             else:
-                raise io_mp.LikelihoodError("Could not find file ",self.sensitivity)
+                raise io_mp.LikelihoodError("Could not find file ",self.sensitivity)'''
 
         chi2 = 0.
 
diff --git a/montepython/likelihoods/firas/firas.data b/montepython/likelihoods/firas/firas.data
index fca6817..132ae3c 100644
--- a/montepython/likelihoods/firas/firas.data
+++ b/montepython/likelihoods/firas/firas.data
@@ -9,7 +9,7 @@ firas.fiducial_file = 'firas_fiducial.dat'
 
 # Do we import noise from file?
 firas.noise_from_file = True
-firas.noise_file_directory = os.path.join(data.path['cosmo'], 'external/distortions/')
+firas.noise_file_directory = data.path['data']
 firas.noise_file_name = 'FIRAS_nu_delta_I.dat'
 
 # Detector name, for CLASS to calculate/read PCA
diff --git a/montepython/likelihoods/ska1_IM_band1/__init__.py b/montepython/likelihoods/ska1_IM_band1/__init__.py
index af3c2b6..26b3c5d 100644
--- a/montepython/likelihoods/ska1_IM_band1/__init__.py
+++ b/montepython/likelihoods/ska1_IM_band1/__init__.py
@@ -170,7 +170,9 @@ class ska1_IM_band1(Likelihood):
         # If the fiducial model does not exists, recover the power spectrum and
         # store it, then exit.
         if self.fid_values_exist is False:
-            pk = np.zeros((self.k_size, 2*self.nbin+1), 'float64')
+            # (JR) throw error as creation of fiducial file does not work with GAMBIT
+            self.raise_fiducial_model_err()
+            '''pk = np.zeros((self.k_size, 2*self.nbin+1), 'float64')
             if self.use_linear_rsd:
                 pk_lin = np.zeros((self.k_size, 2*self.nbin+1), 'float64')
             fid_file_path = os.path.join(
@@ -204,7 +206,7 @@ class ska1_IM_band1(Likelihood):
             warnings.warn(
                 "Writing fiducial model in %s, for %s likelihood\n" % (
                     self.data_directory+'/'+self.fiducial_file, self.name))
-            return 1j
+            return 1j'''
 
         # NOTE: Many following loops will be hidden in a very specific numpy
         # expression, for (a more than significant) speed-up. All the following
diff --git a/montepython/likelihoods/ska1_lensing/__init__.py b/montepython/likelihoods/ska1_lensing/__init__.py
index ef1cf92..4d83fb7 100644
--- a/montepython/likelihoods/ska1_lensing/__init__.py
+++ b/montepython/likelihoods/ska1_lensing/__init__.py
@@ -420,7 +420,9 @@ class ska1_lensing(Likelihood):
 
         # Write fiducial model spectra if needed (exit in that case)
         if self.fid_values_exist is False:
-            # Store the values now, and exit.
+            # (JR) throw error as creation of fiducial file does not work with GAMBIT
+            self.raise_fiducial_model_err()
+            '''# Store the values now, and exit.
             fid_file_path = os.path.join(
                 self.data_directory, self.fiducial_file)
             with open(fid_file_path, 'w') as fid_file:
@@ -437,7 +439,7 @@ class ska1_lensing(Likelihood):
             warnings.warn(
                 "Writing fiducial model in %s, for %s likelihood\n" % (
                     self.data_directory+'/'+self.fiducial_file, self.name))
-            return 1j
+            return 1j'''
 
         # Now that the fiducial model is stored, we add the El to both Cl and
         # Cl_fid (we create a new array, otherwise we would modify the
diff --git a/montepython/likelihoods/ska1_pk/__init__.py b/montepython/likelihoods/ska1_pk/__init__.py
index c7d5082..3da17ca 100644
--- a/montepython/likelihoods/ska1_pk/__init__.py
+++ b/montepython/likelihoods/ska1_pk/__init__.py
@@ -177,7 +177,9 @@ class ska1_pk(Likelihood):
         # If the fiducial model does not exist, recover the power spectrum and
         # store it, then exit.
         if self.fid_values_exist is False:
-            pk = np.zeros((self.k_size, 2*self.nbin+1), 'float64')
+            # (JR) throw error as creation of fiducial file does not work with GAMBIT
+            self.raise_fiducial_model_err()
+            '''pk = np.zeros((self.k_size, 2*self.nbin+1), 'float64')
             if self.use_linear_rsd:
                 pk_lin = np.zeros((self.k_size, 2*self.nbin+1), 'float64')
             fid_file_path = os.path.join(
diff --git a/montepython/likelihoods/ska2_lensing/__init__.py b/montepython/likelihoods/ska2_lensing/__init__.py
index 6e8be63..5a19979 100644
--- a/montepython/likelihoods/ska2_lensing/__init__.py
+++ b/montepython/likelihoods/ska2_lensing/__init__.py
@@ -419,7 +419,9 @@ class ska2_lensing(Likelihood):
 
         # Write fiducial model spectra if needed (exit in that case)
         if self.fid_values_exist is False:
-            # Store the values now, and exit.
+            # (JR) throw error as creation of fiducial file does not work with GAMBIT
+            self.raise_fiducial_model_err()
+            '''# Store the values now, and exit.
             fid_file_path = os.path.join(
                 self.data_directory, self.fiducial_file)
             with open(fid_file_path, 'w') as fid_file:
@@ -436,7 +438,7 @@ class ska2_lensing(Likelihood):
             warnings.warn(
                 "Writing fiducial model in %s, for %s likelihood\n" % (
                     self.data_directory+'/'+self.fiducial_file, self.name))
-            return 1j
+            return 1j'''
 
         # Now that the fiducial model is stored, we add the El to both Cl and
         # Cl_fid (we create a new array, otherwise we would modify the
diff --git a/montepython/likelihoods/ska2_pk/__init__.py b/montepython/likelihoods/ska2_pk/__init__.py
index 9075438..a674d5a 100644
--- a/montepython/likelihoods/ska2_pk/__init__.py
+++ b/montepython/likelihoods/ska2_pk/__init__.py
@@ -176,7 +176,9 @@ class ska2_pk(Likelihood):
         # If the fiducial model does not exist, recover the power spectrum and
         # store it, then exit.
         if self.fid_values_exist is False:
-            pk = np.zeros((self.k_size, 2*self.nbin+1), 'float64')
+            # (JR) throw error as creation of fiducial file does not work with GAMBIT
+            self.raise_fiducial_model_err()
+            '''pk = np.zeros((self.k_size, 2*self.nbin+1), 'float64')
             if self.use_linear_rsd:
                 pk_lin = np.zeros((self.k_size, 2*self.nbin+1), 'float64')
             fid_file_path = os.path.join(
@@ -208,7 +210,7 @@ class ska2_pk(Likelihood):
             warnings.warn(
                 "Writing fiducial model in %s, for %s likelihood\n" % (
                     self.data_directory+'/'+self.fiducial_file, self.name))
-            return 1j
+            return 1j'''
 
         # NOTE: Many following loops will be hidden in a very specific numpy
         # expression, for (a more than significant) speed-up. All the following
diff --git a/montepython/parser_mp.py b/montepython/parser_mp.py
index 79dc380..251225c 100644
--- a/montepython/parser_mp.py
+++ b/montepython/parser_mp.py
@@ -21,6 +21,12 @@ import argparse as ap  # Python module to handle command line arguments
 import warnings
 import io_mp
 
+# (JR) removed some routines related to parsing command line arguments which
+# are not python3 compatible. We don't need to parse any command line arguments
+# in GAMBIT so I just deleted them to avoid errors in likelihoods that
+# import parser_mp. (kids and kv)
+# If these python3 issues are fixed in a later version of MP, this patch can be
+# removed.
 
 # -- custom Argument Parser that throws an io_mp.ConfigurationError
 # -- for unified look within montepython
@@ -120,7 +126,7 @@ def existing_file(fname):
         raise ap.ArgumentTypeError(msg)
 
 
-def parse_docstring(docstring, key_symbol="<**>", description_symbol="<++>"):
+'''def parse_docstring(docstring, key_symbol="<**>", description_symbol="<++>"):
     """
     Extract from the docstring the keys and description, return it as a dict
 
@@ -162,7 +168,7 @@ def parse_docstring(docstring, key_symbol="<**>", description_symbol="<++>"):
         raise ValueError(msg.format(key_symbol, description_symbol))
 
     helpdict = dict(zip(keys, descriptions))
-    return helpdict
+    return helpdict'''
 
 
 def custom_help(split_string="<++>"):
@@ -248,51 +254,6 @@ def add_subparser(sp, name, **kwargs):
     return sparser
 
 
-def get_dict_from_docstring(key_symbol="<**>", description_symbol="<++>"):
-    """
-    Create the decorator
-
-    Parameters
-    ----------
-    key_symbol : str
-        identifies the key of a argument/option
-    description_symbol: str
-        identify the description of a argument/option
-
-    Returns
-    ------
-    wrapper: function
-    """
-    def wrapper(func):
-        """
-        Decorator that wraps the function that implement the parser, parses the
-        `__doc__` and construct a dictionary with the help strings.  The
-        dictionary is added as an attribute of `func` and can be accessed in
-        the function
-
-        Parameters
-        ----------
-        func: function
-            function with the docs to be parsed
-
-        Returns
-        ------
-        func: function
-            function with the dictionary added. *key_symbol* and
-            *description_symbol* strings are removed
-        """
-        docstring = func.__doc__
-        helpdict = parse_docstring(
-            docstring, key_symbol=key_symbol,
-            description_symbol=description_symbol)
-        func.helpdict = helpdict
-        # remove markers
-        docstring = docstring.replace(key_symbol, '')
-        func.__doc__ = docstring.replace(description_symbol, '')
-        return func
-    return wrapper
-
-
 def initialise_parser(**kwargs):
     """
     Create the argument parser and returns it
@@ -320,714 +281,6 @@ def initialise_parser(**kwargs):
     return p
 
 
-@get_dict_from_docstring()
-def create_parser():
-    """
-    Definition of the parser command line options
-
-    The main parser has so far two subparsers, corresponding to the two main
-    modes of operating the code, namely `run` and `info`. If you simply call
-    :code:`python montepython/MontePython.py -h`, you will find only this piece
-    of information. To go further, and find the command line options specific
-    to these two submodes, one should then do: :code:`python
-    montepython/MontePython.py run -h`, or :code:`info -h`.
-
-    All command line arguments are defined below, for each of the two
-    subparsers. This function create the automatic help command.
-
-    Each flag outputs the following argument to a destination variable,
-    specified by the `dest` keyword argument in the source code. Please check
-    there to understand the variable names associated with each option.
-
-    Options
-    -------
-
-    **run**
-
-        <**>-N<**> : int
-            <++>number of steps in the chain<++> (**OBL**). Note that when
-            running on a cluster, your run might be stopped before reaching
-            this number.<++>
-        <**>-o<**> : str
-            <++>output folder<++> (**OBL**). For instance :code:`-o
-            chains/myexperiments/mymodel`. Note that in this example, the
-            folder :code:`chains/myexperiments` must already exist.<++>
-        <**>-p<**> : str
-            <++>input parameter file<++> (**OBL**). For example :code:`-p
-            input/exoticmodel.param`.<++>
-        <**>-c<**> : str
-            <++>input covariance matrix<++> (*OPT*). A covariance matrix is
-            created when analyzing previous runs.
-
-            Note that the list of parameters in the input covariance matrix and
-            in the run do not necessarily coincide.<++>
-        <**>-j<**> : str
-            <++>jumping method<++> (`global`, `sequential` or `fast` (default))
-            (*OPT*).
-
-            With the `global` method the code generates a new random direction
-            at each step, with the `sequential` one it cycles over the
-            eigenvectors of the proposal density (= input covariance matrix).
-
-            The `global` method the acceptance rate is usually lower but the
-            points in the chains are less correlated. We recommend using the
-            sequential method to get started in difficult cases, when the
-            proposal density is very bad, in order to accumulate points and
-            generate a covariance matrix to be used later with the `default`
-            jumping method.
-
-            The `fast` method (default) implements the Cholesky decomposition
-            presented in http://arxiv.org/abs/1304.4473 by Antony Lewis.<++>
-        <**>-m<**> : str
-            <++>sampling method<++>, by default 'MH' for Metropolis-Hastings,
-            can be set to 'NS' for MultiNest (using Multinest wrapper
-            PyMultiNest), 'PC' for PolyChord (using PolyChord wrapper
-            PyPolyChord), 'CH' for Cosmo Hammer (using the Cosmo Hammer wrapper
-            to emcee algorithm), and finally 'IS' for importance sampling.
-
-            Note that when running with Importance sampling, you need to
-            specify a folder to start from.<++>
-        <**>--update<**> : int
-            <++>Enabled by default. Method for periodic update of the covariance
-            matrix. Input: covmat update frequency for Metropolis Hastings.<++>
-            If greater than zero, number of steps after which the proposal
-            covariance matrix is updated automatically (recommended: 50). This
-            number is then multiplied by the cycle length (N_slow + f_fast * N_fast),
-            where N_slow is the number of slow parameters, f_fast is the over sampling
-            for each fast block and N_fast is the number of parameters for each fast
-            block. Leaving this option enabled should help speed up convergence.
-            Can set to zero to disable, i.e. if starting from a good covmat.
-
-            The Markovian properties of the MCMC are maintained by the MontePython
-            analyze module, which will only analyze steps after the last covariance
-            matrix update.
-
-            Criteria for updating covariance matrix: max(R-1) between 0.4 and 3.
-
-            Note: the covmat saved to the folder is the last updated one.
-            Use this covmat for restarting chains.<++>
-        <**>--superupdate<**> : int
-            <++>Disabled by default. Method for updating jumping factor and covariance
-            matrix for Metropolis Hastings. Input: Number of steps to wait after updating
-            the covmat before adapting the jumping factor. Enable to speed up convergence.<++>
-            For optimizing the acceptance rate. If enabled, should be set to at
-            least 20 (recommended: 20). This number is then multiplied by the cycle length
-            (N_slow + f_fast * N_fast), where N_slow is the number of slow parameters, f_fast
-            is the over sampling for each fast block and N_fast is the number of
-            parameters for each fast block.
-
-            The Markovian properties of the MCMC are maintained by the MontePython
-            analyze module, which will only analyze steps after the last covariance
-            matrix update and last step where the jumping factor was changed.
-
-            Criteria for updating covariance matrix: max(R-1) between 0.4 and 3.
-            Adapting jumping factor stops when above criteria is not fulfilled, plus
-            the acceptance rate of (26 +/- 1) percent is achieved, and the jumping factor
-            changed by less than 1 percent compared to the mean of the last superupdate
-            times cycle length (N_slow + f_fast * N_fast) steps.
-
-            The target acceptance rate and tolerance for that criterium can be
-            customized with --superupdate-ar and --superupdate-ar-tol.
-
-            Note: the covmat saved to the folder is the last updated one.
-            Use this covmat for restarting chains (*OPT*).<++>
-        <**>--superupdate-ar<**> : float
-            <++>For use with --superupdate. Target acceptance rate.<++>
-            For customizing superupdate (Default: 0.26) (*OPT*).<++>
-        <**>--superupdate-ar-tol<**> : float
-            <++>For use with --superupdate. Tolerance for target acceptance rate.<++>
-            For customizing superupdate (Default: 0.01) (*OPT*).<++>
-        <**>--adaptive<**> : int
-            <++>Disabled by default. Method for continuous adaptation of covariance matrix
-            and jumping factor. Input: Starting step for adaptive Metropolis Hastings.<++>
-            If greater than zero, number of steps after which the proposal covariance
-            matrix is updated automatically (recommended: 10*dimension) (*OPT*).
-
-            The Markovian properties of the MCMC is not guaranteed, but as the change
-            of the covariance matrix and jumping factor is gradual and decreases over
-            time, the ergodic properties of the chain remains.
-
-            Not compatible with multiple chains. TODO: Implement adaptive for MPI.(*OPT*)<++>
-        <**>--adaptive-ts<**> : int
-            <++>For use with --adaptive. Starting step for adapting the jumping factor.<++>
-            For optimizing the acceptance rate (recommended: 100*dimension) (*OPT*).<++>
-        <**>-f<**> : float
-            <++>jumping factor<++> (>= 0, default to 2.4) (*OPT*).
-
-            The proposal density is given by the input covariance matrix (or a
-            diagonal matrix with elements given by the square of the input
-            sigma's) multiplied by the square of this factor. In other words, a
-            typical jump will have an amplitude given by sigma times this
-            factor.
-
-            The default is the famous factor 2.4, advertised by Dunkley
-            et al. to be an optimal trade-off between high acceptance rate and
-            high correlation of chain elements, at least for multivariate
-            gaussian posterior probabilities. It can be a good idea to reduce
-            this factor for very non-gaussian posteriors.
-
-            Using :code:`-f 0 -N 1` is a convenient way to get the likelihood
-            exactly at the starting point passed in input.<++>
-        <**>-T<**> : float
-            <++>Sample from the probability distribution P^(1/T) instead of P.<++>
-            (*OPT*)<++>
-        <**>--conf<**> : str
-            <++>configuration file<++> (default to `default.conf`) (*OPT*).
-            This file contains the path to your cosmological module
-            directory.<++>
-        <**>--chain-number<**> : str
-            <++>user-assigned number for the output chain<++>, to overcome the
-            automatic one (*OPT*).
-
-            By default, the chains are named :code:`yyyy-mm-dd_N__i.txt` with
-            year, month and day being extracted, :code:`N` being the number of
-            steps, and :code:`i` an automatically updated index.
-
-            This means that running several times the code with the same
-            command will create different chains automatically.
-
-            This option is a way to enforce a particular number :code:`i`.
-            This can be useful when running on a cluster: for instance you may
-            ask your script to use the job number as :code:`i`.<++>
-        <**>-r<**> : str
-            <++>restart from last point in chain<++>, to avoid the burn-in
-            stage or increase sample size (*OPT*). You must pass the lowest
-            index chains file, e.g. -r chains/test_run/1969-10-05_10000__1.txt .
-            MontePython will then create copies of all chains index 1 through
-            M (number of MPI processes) with new names including -N more steps
-            1969-10-05_20000__1.txt etc. Once the chains have been copied
-            the old chains can be moved to a backup folder or deleted. Note
-            they will be automatically deleted at the completion of the run
-            (if the desired number of steps passed with -N is reached). The
-            old chains should not be included as a part of the analysis.<++>
-        <**>-b<**> : str
-            <++>start a new chain from the bestfit file<++> computed with
-            analyze.  (*OPT*)<++>
-        <**>--minimize<**> : None
-            <++>Minimize the log likelihood before starting the engine or the fisher<++>.
-            Instead of starting the chains or centering the Fisher calculation on the model
-            passed through the input parameter file or through the .bestfit file, find the
-            minimum of the log likelihood up to some tolerance<++>
-        <**>--minimize-tol<**> : float
-            <++>Tolerance for minimize algorithm<++>.
-            Used by option --minimize (Default: 0.00001)<++>
-        <**>--fisher<**> : None
-            <++>Calculates the Fisher matrix, its inverse, and then stop<++>.
-            The inverse Fisher matrix can be used as a proposal distribution covmat,
-            or to make plots with Fisher ellipses.<++>
-        <**>--fisher-asymmetric<**> : bool
-            <++>Use asymmetric steps for Fisher matrix computation<++>,
-            used by option --fisher (Default: False). Slows down computation.
-            May help in cases where the parameter space boundary is reached.<++>
-        <**>--fisher-step-it<**> : int
-            <++>Have the Fisher matrix calculation iterate the step-size<++>.
-            Used by option --fisher (Default: 10). The step-size will be
-            interated until reaching the desired delta log-likelihood specified
-            by --fisher-delta, within the tolerance given by --fisher-tol.<++>
-        <**>--fisher-delta<**> : float
-            <++>Target -deltaloglkl for fisher step iteration<++>.
-            Used by option --fisher (Default: 0.1)<++>
-        <**>--fisher-tol<**> : float
-            <++>Tolerance for -deltaloglkl for fisher step iteration<++>.
-            Used by option --fisher (Default: 0.05)<++>
-        <**>--fisher-sym-lkl<**> : float
-            <++>Threshold for when to assume a symmetric likelihood<++>.
-            Used by option --fisher (Default: 0.1). Sets the threshold
-            (in units of sigma) for when to switch to the symmetric
-            likelihood assumption, i.e. do likelihood evaluations in
-            one direction of parameter space (e.g. positive) and mirror
-            the value for the other direction. Useful for parameters
-            where the best fit of the likelihood is close to a boundary.
-
-            WARNING: causes problems if multiple parameters use the
-            symmetric likelihood assumption. In this case we need to
-            switch to a one-sided derivative computation (instead of
-            two-sided with mirroring), which has not been implemented.<++>
-        <**>--silent<**> : None
-            <++>silence the standard output<++> (useful when running on
-            clusters)<++>
-        <**>--Der-target-folder<**> : str
-            <++>Add additional derived params to this folder<++>. It has to be
-            used in conjunction with `Der-param-list`, and the method set to
-            Der: :code:`-m Der`. (*OPT*)<++>
-        <**>--Der-param-list<**> : str
-            <++>Specify a number of derived parameters to be added<++>. A
-            complete example would be to add Omega_Lambda as a derived
-            parameter:
-            :code:`python montepython/MontePython.py run -o existing_folder
-            -m Der --Der-target-folder non_existing_folder --Der-param-list
-            Omega_Lambda`<++>
-        <**>--IS-starting-folder<**> : str
-            <++>Perform Importance Sampling from this folder or set of
-            chains<++> (*OPT*)<++>
-        <**>--stop-after-update<**> : bool
-            <++>When using update mode, stop run after updating the covariant matrix.<++>
-            Useful if you want to change settings after the first guess (*OPT*) (flag)<++>
-        <**>--display-each-chi2<**> : bool
-            <++>Shows the effective chi2 from each likelihood and the total.<++>
-            Useful e.g. if you run at the bestfit point with -f 0 (flag)<++>
-        <**>--parallel-chains<**> : bool
-            <++>Option for when running parallel without MPI<++>.
-            Informs the code you are running parallel chains. This
-            information is useful if superupdate is enabled. Will
-            use only one process to adapt the jumping factor.
-            If relaunching in the same folder or restarting a run
-            and the file jumping_factor.txt already exists it will
-            cause all chains to be assigned as slaves. In this case
-            instead note the value in jumping_factor.txt, delete the
-            file, and pass the value with flag -f <value>. A warning
-            may still appear, but you can safely disregard it.
-            <++>
-
-        For MultiNest, PolyChord and Cosmo Hammer arguments, see
-        :mod:`MultiNest`, :mod:`PolyChord` and :mod:`cosmo_hammer`.
-
-    **info**
-
-              Replaces the old **-info** command, which is deprecated but still
-              available.
-
-        <**>files<**> : string/list of strings
-            <++>you can specify either single files, or a complete folder<++>,
-            for example :code:`info chains/my-run/2012-10-26*`, or :code:`info
-            chains/my-run`.
-
-            If you specify several folders (or set of files), a comparison
-            will be performed.<++>
-        <**>--minimal<**> : None
-            <++>use this flag to avoid computing the posterior
-            distribution.<++> This will decrease the time needed for the
-            analysis, especially when analyzing big folders.<++>
-        <**>--bins<**> : int
-            <++>number of bins in the histograms<++> used to derive posterior
-            probabilities and credible intervals (default to 20). Decrease this
-            number for smoother plots at the expense of masking details.<++>
-        <**>-T<**> : float
-            <++>Raise posteriors to the power T.<++>
-            Interpret the chains as samples from the probability distribution
-            P^(1/T) instead of P. (*OPT*)<++>
-        <**>--no-mean<**> : None
-            <++>Deprecated: remove the mean likelihood from the plot<++>. By
-            default, when plotting marginalised 1D posteriors, the code does
-            not show the mean likelihood per bin with dashed lines; this flag
-            used to switches off the dashed lines.<++>
-        <**>--plot-mean<**> : None
-            <++>plot the mean likelihood from the plot<++>. By default, when
-            plotting marginalised 1D posteriors, the code does not show the mean
-            likelihood per bin with dashed lines; this flag switches on the
-            dashed lines.<++>
-        <**>--short-title-1d<**> : None
-            <++>short 1D plot titles<++>. Remove mean and confidence limits above each 1D plots.<++>
-        <**>--extra<**> : str
-            <++>extra file to customize the output plots<++>. You can actually
-            set all the possible options in this file, including line-width,
-            ticknumber, ticksize, etc... You can specify four fields,
-            `info.redefine` (dict with keys set to the previous variable, and
-            the value set to a numerical computation that should replace this
-            variable), `info.to_change` (dict with keys set to the old variable
-            name, and value set to the new variable name), `info.to_plot` (list
-            of variables with new names to plot), and `info.new_scales` (dict
-            with keys set to the new variable names, and values set to the
-            number by which it should be multiplied in the graph). For
-            instance,
-
-            .. code::
-
-                info.to_change={'oldname1':'newname1','oldname2':'newname2',...}
-                info.to_plot=['name1','name2','newname3',...]
-                info.new_scales={'name1':number1,'name2':number2,...}
-            <++>
-        <**>--noplot<**> : bool
-            <++>do not produce any plot, simply compute the posterior<++>
-            (*OPT*) (flag)<++>
-        <**>--noplot-2d<**> : bool
-            <++>produce only the 1d posterior plot<++> (*OPT*) (flag)<++>
-        <**>--noplot-2d-diag<**> : bool
-            <++>produce 2d contours without 1d posterior plot<++> (*OPT*) (flag)<++>
-        <**>--contours-only<**> : bool
-            <++>do not fill the contours on the 2d plots<++> (*OPT*) (flag)<++>
-        <**>--all<**> : None
-            <++>output every subplot and data in separate files<++> (*OPT*)
-            (flag)<++>
-        <**>--ext<**> : str
-            <++>change the extension for the output file. Any extension handled
-            by :code:`matplotlib` can be used<++>. (`pdf` (default), `png`
-            (faster))<++>
-        <**>--num-columns-1d<**> : int
-            <++>for 1d plot, number of plots per horizontal raw; if 'None' this is set automatically<++> (trying to approach a square plot).<++>
-        <**>--fontsize<**> : int
-            <++>desired fontsize<++> (default to 16)<++>
-        <**>--ticksize<**> : int
-            <++>desired ticksize<++> (default to 14)<++>
-        <**>--line-width<**> : int
-            <++>set line width<++> (default to 4)<++>
-        <**>--decimal<**> : int
-            <++>number of decimal places on ticks<++> (default to 3)<++>
-        <**>--ticknumber<**> : int
-            <++>number of ticks on each axis<++> (default to 3)<++>
-        <**>--legend-style<**> : str
-            <++>specify the style of the legend<++>, to choose from `sides` or
-            `top`.<++>
-        <**>--keep-non-markovian<**> : bool
-            <++>Use this flag to keep the non-markovian part of the chains produced
-            at the beginning of runs with --update and --superupdate mode (default: False)<++>
-            This option is only relevant when the chains were produced with --update or --superupdate (*OPT*) (flag)<++>
-        <**>--keep-only-markovian<**> : bool
-            <++>Use this flag to keep only the truly markovian part of the chains produced
-             with --superupdate mode, where the jumping factor has stopped adapting (default: False)<++>
-            This option is only relevant when the chains were produced with --superupdate (*OPT*) (flag)<++>
-        <**>--keep-fraction<**> : float
-            <++>after burn-in removal, analyze only last fraction of each chain. (default: 1)<++>
-            (between 0 and 1). Normally one would not use this for runs with --update mode,
-            unless --keep-non-markovian is switched on (*OPT*)<++>
-        <**>--want-covmat<**> : bool
-            <++>calculate the covariant matrix when analyzing the chains. (default: False)<++>
-            Warning: this will interfere with ongoing runs utilizing update mode (*OPT*) (flag)<++>
-        <**>--gaussian-smoothing<**> : float
-            <++>width of gaussian smoothing for plotting posteriors (default: 0.5)<++>,
-            in units of bin size, increase for smoother data<++>
-        <**>--interpolation-smoothing<**> : int
-            <++>interpolation factor for plotting posteriors (default: 4)<++>,
-            1 means no interpolation, increase for smoother curves<++>
-        <**>--posterior-smoothing<**> : int
-            <++>smoothing scheme for 1d posteriors (default: 5)<++>,
-            0 means no smoothing, 1 means cubic interpolation, higher means fitting ln(L) with polynomial of order n<++>
-        <**>--plot-fisher<**> : None
-            <++>Tries to add Fisher ellipses to contour plots<++>,
-            if a previous run has produced a Fisher matrix and stored it.<++>
-        <**>--center-fisher<**> : None
-            <++>Centers Fisher ellipse on bestfit of last set of chains,<++>,
-            instead of the center values of the log.param<++>
-
-    Returns
-    -------
-    args : NameSpace
-        parsed input arguments
-
-    """
-    helpdict = create_parser.helpdict
-    # Customized usage, for more verbosity concerning these subparsers options.
-    usage = """%(prog)s [-h] [--version] {run,info} ... """
-    usage += tw.dedent("""\n
-        From more help on each of the subcommands, type:
-        %(prog)s run -h
-        %(prog)s info -h\n\n""")
-
-    # parser = ap.ArgumentParser(
-    #parser = MpArgumentParser(
-        #formatter_class=ap.ArgumentDefaultsHelpFormatter,
-        #description='Monte Python, a Monte Carlo code in Python',
-        #usage=usage)
-    parser = initialise_parser(
-        description='Monte Python, a Monte Carlo code in Python', usage=usage)
-
-    # -- add the subparsers
-    subparser = parser.add_subparsers(dest='subparser_name')
-
-    ###############
-    # run the MCMC
-    runparser = add_subparser(subparser, 'run', help="run the MCMC chains")
-
-    # -- number of steps (OPTIONAL)
-    runparser.add_argument('-N', help=helpdict['N'], type=positive_int,
-                           dest='N')
-    # -- output folder (OBLIGATORY)
-    runparser.add_argument('-o', '--output', help=helpdict['o'], type=str,
-                           dest='folder')
-    # -- parameter file (OBLIGATORY)
-    runparser.add_argument('-p', '--param', help=helpdict['p'],
-                           type=existing_file, dest='param')
-    # -- covariance matrix (OPTIONAL)
-    runparser.add_argument('-c', '--covmat', help=helpdict['c'],
-                           type=existing_file, dest='cov')
-    # -- jumping method (OPTIONAL)
-    runparser.add_argument('-j', '--jumping', help=helpdict['j'],
-                           dest='jumping', default='fast',
-                           choices=['global', 'sequential', 'fast'])
-    # -- sampling method (OPTIONAL)
-    runparser.add_argument('-m', '--method', help=helpdict['m'],
-                           dest='method', default='MH',
-                           choices=['MH', 'NS', 'PC', 'CH', 'IS', 'Der', 'Fisher'])
-    # -- update Metropolis Hastings (OPTIONAL)
-    runparser.add_argument('--update', help=helpdict['update'], type=int,
-                           dest='update', default=50)
-    # -- update Metropolis Hastings with an adaptive jumping factor (OPTIONAL)
-    runparser.add_argument('--superupdate', help=helpdict['superupdate'], type=int,
-                           dest='superupdate', default=0)
-    # -- superupdate acceptance rate argument (OPTIONAL)
-    runparser.add_argument('--superupdate-ar', help=helpdict['superupdate-ar'], type=float,
-                           dest='superupdate_ar', default=0.26)
-    # -- superupdate acceptance rate tolerance argument (OPTIONAL)
-    runparser.add_argument('--superupdate-ar-tol', help=helpdict['superupdate-ar-tol'], type=float,
-                           dest='superupdate_ar_tol', default=0.01)
-    # -- adaptive jumping factor Metropolis Hastings (OPTIONAL)
-    runparser.add_argument('--adaptive', help=helpdict['adaptive'], type=int,
-                           dest='adaptive', default=0)
-    # -- adaptive ts argument (OPTIONAL)
-    runparser.add_argument('--adaptive-ts', help=helpdict['adaptive-ts'], type=int,
-                           dest='adaptive_ts', default=1000)
-
-    # -- jumping factor (OPTIONAL)
-    runparser.add_argument('-f', help=helpdict['f'], type=float,
-                           dest='jumping_factor', default=2.4)
-    # -- temperature (OPTIONAL)
-    runparser.add_argument('-T', help=helpdict['T'], type=float,
-                           dest='temperature', default=1.0)
-    # -- minimize (OPTIONAL)
-    runparser.add_argument('--minimize', help=helpdict['minimize'],
-                           action='store_true')
-    # -- minimize argument, minimization tolerance (OPTIONAL)
-    runparser.add_argument('--minimize-tol', help=helpdict['minimize-tol'], type=float,
-                           dest='minimize_tol', default=0.00001)
-    # -- fisher (OPTIONAL)
-    runparser.add_argument('--fisher', help=helpdict['fisher'],
-                           action='store_true')
-    # -- fisher argument (OPTIONAL)
-    runparser.add_argument('--fisher-asymmetric', help=helpdict['fisher-asymmetric'],
-                           dest='fisher_asymmetric',action='store_true')
-    # -- fisher step iteration (OPTIONAL)
-    runparser.add_argument('--fisher-step-it', help=helpdict['fisher-step-it'],
-                           dest='fisher_step_it', default=10)
-    # -- fisher step iteration argument, -deltaloglkl target (OPTIONAL)
-    runparser.add_argument('--fisher-delta', help=helpdict['fisher-delta'], type=float,
-                           dest='fisher_delta', default=0.1)
-    # -- fisher step iteration argument, -deltaloglkl tolerance (OPTIONAL)
-    runparser.add_argument('--fisher-tol', help=helpdict['fisher-tol'], type=float,
-                           dest='fisher_tol', default=0.05)
-    # -- fisher symmetric likelihood assumption threshold (OPTIONAL)
-    runparser.add_argument('--fisher-sym-lkl', help=helpdict['fisher-sym-lkl'], type=float,
-                           dest='fisher_sym_lkl', default=0.1)
-    # -- configuration file (OPTIONAL)
-    runparser.add_argument('--conf', help=helpdict['conf'],
-                           type=str, dest='config_file',
-                           default='default.conf')
-    # -- arbitrary numbering of an output chain (OPTIONAL)
-    runparser.add_argument('--chain-number', help=helpdict['chain-number'])
-    # -- stop run after first successful update using --update (EXPERIMENTAL)
-    runparser.add_argument('--stop-after-update', help=helpdict['stop-after-update'],
-                           dest='stop_after_update', action='store_true')
-    # display option
-    runparser.add_argument('--display-each-chi2', help=helpdict['display-each-chi2'],
-                           dest='display_each_chi2', action='store_true')
-    # -- parallel chains without MPI (OPTIONAL)
-    runparser.add_argument('--parallel-chains', help=helpdict['parallel-chains'],
-                           action='store_true')
-
-    ###############
-    # MCMC restart from chain or best fit file
-    runparser.add_argument('-r', '--restart', help=helpdict['r'],
-                           type=existing_file, dest='restart')
-    runparser.add_argument('-b', '--bestfit', dest='bf', help=helpdict['b'],
-                           type=existing_file)
-
-    ###############
-    # Silence the output (no print on the console)
-    runparser.add_argument('--silent', help=helpdict['silent'],
-                           action='store_true')
-    ###############
-    # Adding new derived parameters to a run
-    runparser.add_argument(
-        '--Der-target-folder', dest="Der_target_folder",
-        help=helpdict['Der-target-folder'], type=str, default='')
-    runparser.add_argument(
-        '--Der-param-list', dest='derived_parameters',
-        help=helpdict['Der-param-list'], type=str, default='', nargs='+')
-
-    ###############
-    # Importance Sampling Arguments
-    runparser.add_argument(
-        '--IS-starting-folder', dest='IS_starting_folder',
-        help=helpdict['IS-starting-folder'], type=str, default='', nargs='+')
-
-    ###############
-    # We need the following so the run does not crash if one of the external
-    # samplers is not correctly installed despite not being used
-    from contextlib import contextmanager
-    import sys, os
-
-    @contextmanager
-    def suppress_stdout():
-        with open(os.devnull, "w") as devnull:
-            old_stdout = sys.stdout
-            sys.stdout = devnull
-            try:
-                yield
-            finally:
-                sys.stdout = old_stdout
-
-    ###############
-    # MultiNest arguments (all OPTIONAL and ignored if not "-m=NS")
-    # The default values of -1 mean to take the PyMultiNest default values
-    try:
-        with suppress_stdout():
-            from MultiNest import NS_prefix, NS_user_arguments
-        NSparser = runparser.add_argument_group(
-            title="MultiNest",
-            description="Run the MCMC chains using MultiNest"
-            )
-        for arg in NS_user_arguments:
-            NSparser.add_argument('--'+NS_prefix+arg,
-                                  default=-1,
-                                  **NS_user_arguments[arg])
-    except ImportError:
-        # Not defined if not installed
-        pass
-    except:
-        warnings.warn('PyMultiNest detected but MultiNest likely not installed correctly. '
-                      'You can safely ignore this if not running with option -m NS')
-
-    ###############
-    # PolyChord arguments (all OPTIONAL and ignored if not "-m=PC")
-    # The default values of -1 mean to take the PyPolyChord default values
-    try:
-        with suppress_stdout():
-             from PolyChord import PC_prefix, PC_user_arguments
-        PCparser = runparser.add_argument_group(
-            title="PolyChord",
-            description="Run the MCMC chains using PolyChord"
-            )
-        for arg in PC_user_arguments:
-            PCparser.add_argument('--'+PC_prefix+arg,
-                                  default=-1,
-                                  **PC_user_arguments[arg])
-    except ImportError:
-        # Not defined if not installed
-        pass
-    except:
-        warnings.warn('PyPolyChord detected but PolyChord likely not installed correctly. '
-                      'You can safely ignore this if not running with option -m PC')
-
-    ###############
-    # CosmoHammer arguments (all OPTIONAL and ignored if not "-m=CH")
-    # The default values of -1 mean to take the CosmoHammer default values
-    try:
-        with suppress_stdout():
-            from cosmo_hammer import CH_prefix, CH_user_arguments
-        CHparser = runparser.add_argument_group(
-            title="CosmoHammer",
-            description="Run the MCMC chains using the CosmoHammer framework")
-        for arg in CH_user_arguments:
-            CHparser.add_argument('--'+CH_prefix+arg,
-                                  default=-1,
-                                  **CH_user_arguments[arg])
-    except ImportError:
-        # Not defined if not installed
-        pass
-    except:
-        warnings.warn('CosmoHammer detected but emcee likely not installed correctly. '
-                      'You can safely ignore this if not running with option -m CH')
-
-    ###############
-    # Information
-    infoparser = add_subparser(subparser, 'info',
-                               help="analyze the MCMC chains")
-
-    # -- folder to analyze
-    infoparser.add_argument('files', help=helpdict['files'],
-                            nargs='+')
-    # Silence the output (no print on the console)
-    infoparser.add_argument('--silent', help=helpdict['silent'],
-                            action='store_true')
-    # -- to only write the covmat and bestfit, without computing the posterior
-    infoparser.add_argument('--minimal', help=helpdict['minimal'],
-                            action='store_true')
-    # -- number of bins (defaulting to 20)
-    infoparser.add_argument('--bins', help=helpdict['bins'],
-                            type=int, default=20)
-    # -- temperature (OPTIONAL)
-    infoparser.add_argument('-T', help=helpdict['T'], type=float,
-                           dest='temperature', default=1.0)
-    # -- deprecated: remove the mean-likelihood line
-    infoparser.add_argument('--no-mean', help=helpdict['no-mean'],
-                            dest='mean_likelihood_old', action='store_false')
-    # -- plot the mean-likelihood line
-    infoparser.add_argument('--plot-mean', help=helpdict['plot-mean'],
-                            dest='mean_likelihood', action='store_true')
-    # -- to remove the mean and 68% limits on top of each 1D plot
-    infoparser.add_argument('--short-title-1d', help=helpdict['short-title-1d'],
-                            dest='short_title_1d', action='store_true')
-    # -- possible plot file describing custom commands
-    infoparser.add_argument('--extra', help=helpdict['extra'],
-                            dest='optional_plot_file', default='')
-    # -- if you just want the covariance matrix, use this option
-    infoparser.add_argument('--noplot', help=helpdict['noplot'],
-                            dest='plot', action='store_false')
-    # -- if you just want to output 1d posterior distributions (faster)
-    infoparser.add_argument('--noplot-2d', help=helpdict['noplot-2d'],
-                            dest='plot_2d', action='store_false')
-    # -- if you just want to output triangle with 2d contours
-    infoparser.add_argument('--noplot-2d-diag', help=helpdict['noplot-2d-diag'],
-                            dest='plot_diag', action='store_false')
-    # -- when plotting 2d posterior distribution, use contours and not contours
-    # filled (might be useful when comparing several folders)
-    infoparser.add_argument('--contours-only', help=helpdict['contours-only'],
-                            dest='contours_only', action='store_true')
-    # -- if you want to output every single subplots
-    infoparser.add_argument('--all', help=helpdict['all'], dest='subplot',
-                            action='store_true')
-    # -- to change the extension used to output files (pdf is the default one,
-    # but takes long, valid options are png and eps)
-    infoparser.add_argument('--ext', help=helpdict['ext'],
-                            type=str, dest='extension', default='pdf')
-    # -- to set manually the number of plots per hoorizontal raw in 1d plot
-    infoparser.add_argument('--num-columns-1d', help=helpdict['num-columns-1d'],
-                            type=int, dest='num_columns_1d')
-    # -- also analyze the non-markovian part of the chains
-    infoparser.add_argument('--keep-non-markovian', help=helpdict['keep-non-markovian'],
-                            dest='markovian', action='store_false')
-    # -- force only analyzing the markovian part of the chains
-    infoparser.add_argument('--keep-only-markovian', help=helpdict['keep-only-markovian'],
-                            dest='only_markovian', action='store_true')
-    # -- fraction of chains to be analyzed after burn-in removal (defaulting to 1.0)
-    infoparser.add_argument('--keep-fraction', help=helpdict['keep-fraction'],
-                            type=float, dest='keep_fraction', default=1.0)
-    # -- calculate the covariant matrix when analyzing the chains
-    infoparser.add_argument('--want-covmat', help=helpdict['want-covmat'],
-                            dest='want_covmat', action='store_true')
-    # -------------------------------------
-    # Further customization
-    # -- fontsize of plots (defaulting to 16)
-    infoparser.add_argument('--fontsize', help=helpdict['fontsize'],
-                            type=int, default=16)
-    # -- ticksize of plots (defaulting to 14)
-    infoparser.add_argument('--ticksize', help=helpdict['ticksize'],
-                            type=int, default=14)
-    # -- linewidth of 1d plots (defaulting to 4, 2 being a bare minimum for
-    # legible graphs
-    infoparser.add_argument('--line-width', help=helpdict['line-width'],
-                            type=int, default=4)
-    # -- number of decimal places that appear on the tick legend. If you want
-    # to increase the number of ticks, you should reduce this number
-    infoparser.add_argument('--decimal', help=helpdict['decimal'], type=int,
-                            default=3)
-    # -- number of ticks that appear on the graph.
-    infoparser.add_argument('--ticknumber', help=helpdict['ticknumber'],
-                            type=int, default=3)
-    # -- legend type, to choose between top (previous style) to sides (new
-    # style). It modifies the place where the name of the variable appear.
-    infoparser.add_argument('--legend-style', help=helpdict['legend-style'],
-                            type=str, choices=['sides', 'top'],
-                            default='sides')
-    # -- width of gaussian smoothing for plotting posteriors,
-    # in units of bin size, increase for smoother data.
-    infoparser.add_argument('--gaussian-smoothing', help=helpdict['gaussian-smoothing'],
-                            type=float, default=0.5)
-    # interpolation factor for plotting posteriors, 1 means no interpolation,
-    # increase for smoother curves (it means that extra bins are created
-    # and interpolated between computed bins)
-    infoparser.add_argument('--interpolation-smoothing', help=helpdict['interpolation-smoothing'],
-                            type=int, default=4)
-    # -- plot Fisher ellipses
-    infoparser.add_argument('--plot-fisher', help=helpdict['plot-fisher'],
-                           dest='plot_fisher',action='store_true')
-    infoparser.add_argument('--center-fisher', help=helpdict['center-fisher'],
-                           dest='center_fisher',action='store_true')
-
-    infoparser.add_argument('--posterior-smoothing', help=helpdict['posterior-smoothing'],
-                            type=int, default=5)
-
-    return parser
-
 
 def parse(custom_command=''):
     """
