#############################################################################
# GAMBIT central scanner plugin description database                        #
#                                                                           #
# GAMBIT will parse this file and try to match the entries                  #
# to the models it has registered. If there are any                         #
# conflicts it will report them, and if any models                          #
# are lacking descriptions those will be reported too.                      #
# This is then merged with internally known information                     #
# to create a centralised database of model information.                    #
# This is found in the file "<insert name here>"                            #
#                                                                           #
# Note: Yaml syntax for multi-line strings is this:                         #
#                                                                           #
#body: |                                                                    #
#  This is a multi-line string.                                             #
#  "special" metacharacters may                                             #
#  appear here. The extent of this string is                                #
#  indicated by indentation.                                                #
#                                                                           #
# You may tell gambit to ignore any new lines with                          #
# #remove_newlines                                                          #
# text                                                                      #
# #dont_remove_newlines                                                     #
#                                                                           #
# Or you can end the ignore scope the a blank line                          #
# #remove_newlines                                                          #
# text                                                                      #
#                                                                           #
# unaffected_text                                                           #
#############################################################################

priors: |
  #remove_newlines
  In GAMBIT, priors are implemented as transformations.  Formally, the
  transformation required can be determined by computing the inverse of the
  CDF of the desired prior distribution. See the ScannerBit paper (or
  Numerical Recipes, or any decent stats textbook) for details.

  Priors to be used in a GAMBIT run should be specified either
  in the Parameters section of the YAML file, as e.g.

  parameter:
    prior_type: flat
    range: [0, 1]

  #remove_newlines
  or the Prior section of the YAML file, as e.g.

  my_prior:
    prior_type: flat
    parameters: [model::parameter, ...]
    range: [0, 1]

  #remove_newlines
  The various priors that GAMBIT recognises are listed above, separated into three groups: one-dimensional priors (flat, log, double_log_flat_join, sin, cos, tan, cot), multi-dimensional priors (gaussian, cauchy, lognormal, dummy), and others (same_as, fixed_value, plugin, none).

"1d_priors": [flat, log, double_log_flat_join, sin, cos, tan, cot]
"nd_priors": [gaussian, cauchy, lognormal, dummy]
"other_priors": [same_as, fixed_value, plugin, none]
"internal_priors": [composite]

1d_priors: |
  #remove_newlines
  Specifies a one-dimensional prior.  Different prior types that fall into this
  category are flat (uniform distribution), log (1/x distribution), and trig
  functions (sin, cos, tan, cot).  If same_as, fixed_value and prior_type are not
  specified, a flat prior is assumed.

  Inifile entries for all but double_log_flat_join:
      range:       specifies the range in the form [low, high]
      shift (0):   adds the shift value to the parameter
      scale (1):   multiplies the value of the parameter.  If set to "degrees", will convert degrees to radians.
      output_scaled_values (true):  Outputs the scaled parameters to the printer if true.

  Inifile entries for the piecewise prior double_log_flat_join, in order of precedence:
      ranges:      specifies the piecewise ranges in the form [lower, flat_start, flat_end, upper]
      range:       specifies the overall range in the form [low, high]
      flat_start:  the value at which the prior switches from negative log to flat
      flat_end:    the value at which the prior switches from flat to log
      lower:       the lower edge of the overall prior box
      upper:       the upper edge of the overall prior box

nd_priors: |
  #remove_newlines
  Specifies a multivariate prior.

  For gaussian, the entries are:
      cov_matrix: the covariance matrix or 
      sigma: the sqrt of the diagonal components of the covariance matrix and
      mu: the mean(s)

  For cauchy, the entries are:
      scale_matrix: the scale matrix or 
      gamma: the sqrt of the diagonal components of the scale matrix and
      location: the location parameter(s)

  For lognormal, the entries are:
      cov_matrix: the covariance matrix of log x or
      sigma: the sqrt of the diagonal components of the covariance matrix of log x and
      mu: the mean(s) of log x
      base: the base of the logarithm. A float or the character e for natural logarithm

  Note that there are two ways to specify the covariance/scale matrix: through
  cov_matrix/scale_matrix or, if the covariance/scale matrix is diagonal, through the square roots
  of its diagonal elements (sigma/gamma). The two ways are mutually exclusive.

  The entries gamma and location, and sigma and mu should be sequences in the n > 1
  dimension case, but may be scalars if n = 1.

other_priors: |
  #remove_newlines

  same_as:
    Specifies that this parameter always has the same value as another parameter. This prior
    does not need the prior_type tag.

    Inifile entries:
        same_as:     parameter that is the same as the current parameter
        shift (0):   adds the shift value to the parameter
        scale (1):   multiplies the scale value to the parameter

  fixed_value:
    Sets the parameter to a fixed value.  If a vector is given instead of a
    single value, the parameter's value will be sequentially set to the elements
     of the vector.  This prior does not need the prior_type tag.

    Inifile entries:
        fixed_value: the value(s) to which the parameter should be fixed
        shift (0):   adds the shift value to the parameter
        scale (1):   multiplies the scale value to the parameter

  dummy:
    Does a transformation that does absolutely nothing.

  none:
  #remove_newlines
    Does absolutely nothing, not even a transformation.  Used for parameters that are being postprocessed

internal_priors: |
  #remove_newlines
  The maze is not meant for you.

  composite:
    This prior is only meant for internal use within ScannerBit, for combining all the different priors on
    different parameters into one big prior transformation that acts on the whole parameter space.  It is
    deliberately undocumented.  Don't use it.

