# GAMBIT central capabilities description database
#
# GAMBIT will parse this file and try to match the entries
# to the capabilities it has registered. If there are any
# conflicts it will report them, and if any capabilities
# are lacking descriptions those will be reported too.
# This is then merged with internally known information
# to create a centralised database of capability
# information. The merged file is "central_capabilities.dat",
# which can be found in the scratch directory of each
# GAMBIT run.
#
# Note: Yaml syntax for multi-line strings is this:
#
#body: |
#  This is a multi-line string.
#  "special" metacharacters may
#  appear here. The extent of this string is
#  indicated by indentation.
#
# We can break this into categories however we want; yaml will just ignore comments


#-------------------------------------
#  Test capabilities
#-------------------------------------

test_vector: |
   An example vector.

charge: |
   The charge of some make-believe particle.

xsection: |
   A cross-section for some make-believe process.

nevents: |
   Number of events for some make-believe process.

nevents_postcuts: |
   Number of events post cuts for some make-believe process.

Example_lnL_A: |
   An example likelihood that ExampleBitA can calculate.

eventLoopManagement: |
   An example of a manager for loops over other module functions.

event: |
   An event of some make-believe process.

eventAccumulation: |
   An example of a collector of events.

particle_id: |
   Name of some make-believe particle.

damu: |
   Mock muon (g-2) anomalous contribution;
   an example of how to interact with models.

normaldist_loglike: |
   A test likelihood: normal distribution.

function_pointer: |
   Example of how to retrieve a pointer to some backend function.

test_Farrays: |
   Test interaction with arrays in Fortran backends.

test_marg_lnlike: |
   Tester for marginalised Poisson likelihood.

test_Pythia: |
   Tester for Pythia backend.

test_BE_Array: |
   Tester for C/C++ backend array interfaces.

test_flat_likelihood: |
   Tester for C/C++ backend array interfaces.

LibFarrayTest_1_0_init: |
   Initialize function for the LibFarrayTest backend.

libFarrayTestCommonBlock: |
   Tester for Fortran common blocks in the backend LibFarrayTest.

libFarrayTestCommonBlock2: |
   Tester for Fortran common blocks in the backend LibFarrayTest.

libFarrayTestCommonBlock3: |
   Tester for Fortran common blocks in the backend LibFarrayTest.

libFarrayTest_doubleFuncArray: |
   Tester for Fortran functions using arrays in the backend LibFarrayTest.

libFarrayTest_doubleFuncArray2: |
   Tester for Fortran functions using arrays in the backend LibFarrayTest.

libFarrayTest_doubleFuncArray3: |
   Tester for Fortran functions using arrays in the backend LibFarrayTest.

libFarrayTest_fillArrays: |
   Tester for filling Fortran arrays in the backend LibFarrayTest.

libFarrayTest_fptrRoutine: |
   Tester for pointers to Fortran routines in the backend LibFarrayTest.

libFarrayTest_printStuff: |
   Test printer for the backend LibFarrayTest.

libFarrayTest_testcomplex: |
   Fortran subroutine that test complex numbers.

LibFirst_1_0_init: |
   Initialize the C++ testing LibFirst backend, version 1.0.

LibFirst_1_1_init: |
   Initialize the C++ testing LibFirst backend, version 1.1.

LibSecond_1_0_init: |
   Initialize the Python testing LibSecond backend, version 1.0.

LibSecond_1_1_init: |
   Initialize the Python testing LibSecond backend, version 1.1.

LibSecond_1_2_init: |
   Initialize the Python testing LibSecond backend, version 1.2.

LibThird_1_0_init: |
   Initialize the Python package testing LibThird backend, version 1.0.

LibThird_1_1_init: |
   Initialize the Python package testing LibThird backend, version 1.1.

LibThird_1_2_init: |
   Initialize the Python package testing LibThird backend, version 1.2.

initialize_capability: |
   Tester function for the initialization of backends.

returnResult_capability: |
   Tester function for the return of results from backends.

LibFortran_1_0_init: |
   Initialize the Fortran testing LibFortran backend.

average: |
   Test Fortran function that supposedly calculates an average.

externalFunction: |
   Simple example external function that output a double in inputs an integer.

externalComplicatedFunction: |
   Simple example external function that output a double in inputs an integer and a double.

example_be_array_1D: |
   Example 1D backend array.

example_be_array_2D: |
   Example 2D backend array.

example_be_array_3D: |
   Example 3D backend array.

funcGauss: |
   Test Fortran function that supposedly calculates a Gaussian function.

awesomeness: |
   Awesome example function by Anders that returns an awesome double and inputs
   an awesome integer.  It runs an awesome example initalize function and some other
   awesome function, and returns some awesome result.  It also send an awesome message from
   "awesomenessByAnders" to the logger.

SomeArray: |
   Example double array in libfirst and friends.

SomeDouble: |
   Example double in libfirst and friends.

SomeInt: |
   Example integer in libfirst and friends.

SomeOtherInt: |
   Another example integer; in libthird.

funcBE: |
   Example Fortran backend function that simulates a backend function
   in a Fortran library.

runMe: |
   Example fortran subroutine that simulated a main functionality.

refex: |
   Example function in libfirst that inputs a variable by refernce.

refex2: |
   Example function in libfirst that inputs a variable by refernce
   and another variable to value.

someFunction: |
   Example void function that does nothing.

someOtherFunction: |
   An example function that just multiplies two numbers.

varex: |
   Return value of a nasty example variadic function in libfirst.

varex2: |
   Return value of a nasty variadic convenience function in libfirst.

run_MSSMspectrum_test: |
   Function to thest the Spectrum object for the MSSM.

run_light_quark_test: |
   Tests the Standrad Model Spectrum wrapper (QedQcdWrapper).

ptr_arr_tests: |
   Function that tests array and -> operators on deps and BE vars.

libMathematicaTest_1_0_init: |
   Initialises the backend for Mathematica tests.

MathematicaTest: |
   Performs serveral tests of Mathematica backends.

MathTest: |
   Runs a series of test in libMathematicaTest.

MathTest_CalculateSquare: |
   Test function for Mathematica backends that calculates the square of a number.

MathTest_CalculateSum: |
   Test function for Mathematica backends that calculates the sum of two numbers.

MathTest_ExtractElement: |
   Test function for Mathematica backends that extracts an element from a list.

MathTest_PrintVar: |
   Test function for Mathematica backends that prints a variable.

MathTest_PrintVarorVar2: |
   Test function for Mathematica backends that prints a variable depeding on a boolean argument.

MathTest_SquareList: |
   Test function for Mathematica backends that calculates the square of a list.

MathTest_StringTest: |
   Test function for Mathematica backends to test strings.

MathTest_Var: |
   Test integer variable for Mathematica backends.

MathTest_Var2: |
   Test real variable for Mathematica backends.

MathTest_VarEqualVar2: |
   Test function for Mathematica backends checks the equality of two variables.

MathTest_VoidTest: |
   Test function for Mathematica backends for testing void functions.

MathTest_Gammafunc: |
   Test function for Mathematica backends for testing non-alphanumerical characters in function names.

MathTest_deltabar: |
   Test function for Mathematica backends for testing non-alphanumerical characters in variable names.

a_cap: |
   Example function demonstrating the usage of capabilities within a model namespace.

demo_CAP_parameters: |
   Model parameters to demonstre the usage of module functions within a model namespace.

large_print: |
  Scale test for various aspects of the printer buffer system.

#-------------------------------------
#  SpecBit
#-------------------------------------

#####  DMEFT  #####

DMEFT_spectrum: |
    The spectrum for the DMEFT model.


#####  Scalar singlet Higgs-portal models  #####

ScalarSingletDM_Z2_spectrum: |
    Create spectrum object for scalar singlet dark matter model, available functions
    are a simple container spectrum and one produced by a spectrum generator.

ScalarSingletDM_Z3_spectrum: |
    Create spectrum object for scalar singlet dark matter model with a Z3 symmetry.

high_scale_vacuum_info: |
    Run the quartic Higgs coupling to high scales, in order to determine
    the expected lifetime of the electroweak vacuum, the instability scale, and
    the perturbativity of the couplings up to the necessary scale.

check_perturbativity_to_lambda_min: |
    Check that dimensionless couplings are sufficiently small up to the smaller
    of the Planck scale and the scale at which the quartic Higgs coupling is
    minimised and non-positive.

lnL_high_scale_vacuum: |
    Compute likelihood of no decays of the electroweak vacuum to high-scale minima in the past light cone.

lnL_EW_vacuum: |
    Check that the scalar potential is bounded from below at the electroweak scale and
    compute the likelihood of the EW vacuum decaying to other low-scale minima.

expected_vacuum_lifetime: |
    Return the expected lifetime of the electroweak vacuum.

lambdaB: |
    The scale at which the Higgs quartic coupling is minimised (in GeV).

scale_of_nonperturbativity: |
    The lowest scale at which one or more couplings become non-perturbative.


#####   Other Higgs-portal models  #####

VectorSingletDM_Z2_spectrum: |
    Create spectrum object for the vector dark matter model, available functions
    are a simple container spectrum and one produced by a spectrum generator.

MajoranaSingletDM_Z2_spectrum: |
    Create spectrum object for the Majorana fermion dark matter model, available functions
    are a simple container spectrum and one produced by a spectrum generator.

DiracSingletDM_Z2_spectrum: |
    Create spectrum object for the Dirac fermion dark matter model, available functions
    are a simple container spectrum and one produced by a spectrum generator.


#####   Minimal Dark Matter  #####

MDM_spectrum: |
    Create a spectrum object for the mimimal electroweak fermionic quintuplet dark matter model.


#####   Standard model  #####

SMINPUTS: |
    Provide Standard Model parameters in SLHA2 input conventions.

qedqcd_subspectrum: |
    Create QedQcdWrapper version of Spectrum* from SMInputs structs.

SM_spectrum: |
    Create Spectrum object from SMInputs structs and SM Higgs parameters.

#####   MSSM  #####

unimproved_MSSM_spectrum: |
    Returns unimproved MSSM spectrum object calculated with boundary conditions
    depedent on the choice of function used.

SM_subspectrum: |
    Return the standard model subspectrum object from the MSSM_spectrum

MSSMMasses: |
    SUSY masses and mixings (e.g. as computed by FeynHiggs).

HiggsMasses: |
    Higgs masses and mixings with theoretical uncertainties (as e.g. computed by FeynHiggs).

Higgs_Couplings: |
    Higgs couplings (as e.g. computed by FeynHiggs).

SPheno_3_3_8_init: |
    Initalises SPheno 3.3.8 and sets the internal model type according to the one being scanned.

SPheno_4_0_3_init: |
    Initalises SPheno 3.3.8 and sets the internal model type according to the one being scanned.

SPheno_MSSMspectrum: |
    Calculates and returns a MSSM spectrum object using SPheno.

SPheno_internal: |
    Exclusively used for internal variables and function for the SPheno backend.


#-------------------------------------
#  ColliderBit capabilities
#-------------------------------------

DummyColliderObservable: |
   Dummy observable that creates a dependency on TestModel1D, which is used
   to satisfy the normal GAMBIT model requrements in a minimal way. Used
   for testing.

RunMC: |
   Controls the parallelization and execution of the entire
   event loop of the collider simulation.

TotalCrossSection: |
   Total collider cross-section used to scale the Pythia event numbers.

TotalCrossSectionAsMap: |
   Info on TotalCrossSection as a str-double map, for easy printing.

TotalEvGenCrossSection: |
   Total collider cross-section as calculated by Pythia.

EventWeighterFunction: |
   A function that can be used for collider event weighting, e.g.
   for weighting events according to process-level cross-sections
   provided via a ProcessCrossSectionsMap.

ProcessCrossSectionsMap: |
   A map between Pythia process codes and cross-sections.

PIDPairCrossSectionsMap: |
   A map between pairs of particle ID codes (PID pairs) and cross-sections.

PIDPairCrossSectionsInfo: |
   The PID pair cross-sections from PIDPairCrossSectionsMap as a str-dbl map,
   for easy printing.

ActiveProcessCodes: |
   A list of Pythia process codes for all production processes activated in Pythia.

ActivePIDPairs: |
   A list of all the PID pairs related to the active Pythia process codes (ActiveProcessCodes).

ActiveProcessCodeToPIDPairsMap: |
   A map connecting Pythia process codes (for the active Pythia processes) to PID pairs

CrossSectionConsistencyCheck: |
   A consistency check that ensures that if each Pythia event is weighted by a
   process-level cross-section from an external calculator, then the total cross-section
   (TotalCrossSection) is taken from Pythia.

SpectrumAndDecaysForPythia: |
   What it says on the box: mass spectrum and decays for Pythia.

SLHA1Spectrum: |
   A SLHA1 spectrum.

SLHA2Spectrum: |
   A SLHA2 spectrum.

SLHAFileElements: |
   A map of selected SLHA file elements.

SLHAFileNameAndContent: |
   Name and content of a SLHA file.

susy_spectrum_scan_guide: |
   Invalid point check with advances mass cuts, to aid scans of SUSY models.

LHC_LogLike_scan_guide: |
   A dummy log-likelihood to force the scanner to explore a given range of
   LHC_Combined_LogLike values. This is done by defining a Gaussian
   (meta-)likelihood based on the original LHC_Combined_LogLike value.
   Use the two YAML file options 'target_LHC_loglike' and 'width_LHC_loglike'
   to control this Gaussian likelihood.

LHCEventLoopInfo: |
   Info about the event loop.

LHC_signals: |
   Signal predictions and uncertainties in all LHC analyses.

LHC_LogLikes: |
   Computes analysis-specific log-likelihood values,
   from AllAnalysisNumbers.

LHC_Combined_LogLike: |
   A final, single delta-log-likelihood value for LHC searches.

LHC_LogLike_per_SR: |
   Delta-log-likelihood values for every signal region in the LHC analyses.

LHC_LogLike_per_analysis: |
   One delta-log-likelihood value per LHC analysis.

LHC_LogLike_SR_indices: |
   The indices of the signal regions whose delta-log-likelihood values contribute to
   LHC_Combined_LogLike and LHC_LogLike_per_analysis.

LHC_LogLike_SR_labels: |
   The indices of the signal regions whose delta-log-likelihood values contribute to
   LHC_Combined_LogLike and LHC_LogLike_per_analysis.

HardScatteringSim: |
   Provides a Monte Carlo generator instance ready to simulate collision events.

HardScatteringEvent: |
   Uses a HardScatteringSim to generate the next event of the collider simulation chain.

CrossSection: |
   Provides a total cross-section to be applied to collider analyses.

ATLASDetectorSim: |
   Provides a detector simulation of ATLAS.

CMSDetectorSim: |
   Provides a detector simulation of CMS.

IdentityDetectorSim: |
   Provides a fake detector sim, which simply returns truth-level events.

ATLASSmearedEvent: |
   Uses an ATLASDetectorSim to smear a HardScatteringEvent.

CMSSmearedEvent: |
   Uses a CMSDetectorSim to smear a HardScatteringEvent.

CopiedEvent: |
   Uses an IdentityDetectorSim to do absolutely nothing to a HardScatteringEvent.

ATLASAnalysisContainer: |
   Provides a container of ATLAS analyses to be applied to an ATLASSmearedEvent.

CMSAnalysisContainer: |
   Provides a container of CMS analyses to be applied to an ATLASSmearedEvent.

IdentityAnalysisContainer: |
   Provides a container of 'truth-level analyses' to be applied to a CopiedEvent.

ATLASAnalysisNumbers: |
   Uses an ATLASAnalysisContainer to perform all its
   analyses upon a given ATLASSmearedEvent.

CMSAnalysisNumbers: |
   Uses a CMSAnalysisContainer to perform all its
   analyses upon a given CMSSmearedEvent.

IdentityAnalysisNumbers: |
   Uses an IdentityAnalysisContainer to perform all its
   analyses upon a given CopiedEvent.

AllAnalysisNumbers: |
   Combined analysis numbers from all LHC analyses used in a scan.

AllAnalysisNumbersUnmodified: |
   A version of the AllAnalysisNumbers capability for use with ColliderBit analyses
   based on interpolated yields. AllAnalysisNumbersUnmodified is the collection
   of all analysis numbers before any subsequent modificiation, e.g. due to
   EFT validity constraints.

DMEFT_profiled_LHC_nuisance_params: |
   Information on the result of profiling out the nuisance parameter 'a' in collider
   signal predictions for the DMEFT model. This parameter is used to smoothly suppress
   signal predictions for MET bins with MET > Lambda.

ALEPH_Selectron_LLike: |
   Compares the cross section times branching ratio
   for selectron pair production to the model-independent limit according
   to the ALEPH collaboration. Returns a log likelihood value.

ALEPH_Smuon_LLike: |
   Compares the cross section times branching ratio for smuon pair
   production to the model-independent limit according to the ALEPH
   collaboration. Returns a log likelihood value.

ALEPH_Stau_LLike: |
   Compares the cross section times branching ratio for stau pair
   production to the model-independent limit according to the ALEPH
   collaboration. Returns a log likelihood value.

L3_Selectron_LLike: |
   Compares the cross section times branching ratio for selectron pair
   production to the model-independent limit according to the L3
   collaboration. Returns a log likelihood value.

L3_Smuon_LLike: |
    Compares the cross section times branching ratio for smuon pair
    production to the model-independent limit according to the L3
    collaboration. Returns a log likelihood value.

L3_Stau_LLike: |
    Compares the cross section times branching ratio for stau pair
    production to the model-independent limit according to the L3
    collaboration. Returns a log likelihood value.

L3_Neutralino_All_Channels_LLike: |
   Compares the cross section times branching ratio for neutralino
   pair production to the model-independent limit according to the
   L3 collaboration. Returns a log likelihood value.

L3_Neutralino_Leptonic_LLike: |
   Compares the cross section times branching ratio for neutralino
   pair production (with leptonically decaying Z bosons) to the
   model-independent limit according to the L3 collaboration.
   Returns a log likelihood value.

L3_Chargino_All_Channels_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production to the model-independent limit according to the
   L3 collaboration. Returns a log likelihood value.

L3_Chargino_Leptonic_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production (with leptonically decaying W bosons) to the
   model-independent limit according to the L3 collaboration.
   Returns a log likelihood value.

L3_Gravitino_LLike: |
   Compares the cross section times branching ratio for neutralino
   production and decay to gravitinos to the model-independent limit
   according to the L3 collaboration. Returns a log likelihood value.

OPAL_Neutralino_Hadronic_LLike: |
    Compares the cross section times branching ratio for neutralino
    pair production (with hadronically decaying Z bosons) to the
    model-independent limit according to the OPAL collaboration.
    Returns a log likelihood value.

OPAL_Chargino_All_Channels_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production to the model-independent limit according to
   the OPAL collaboration. Returns a log likelihood value.

OPAL_Chargino_Hadronic_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production (with hadronically decaying W bosons) to the
   model-independent limit according to the OPAL collaboration.
   Returns a log likelihood value.

OPAL_Chargino_Leptonic_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production (with leptonically decaying W bosons) to the
   model-independent limit according to the OPAL collaboration.
   Returns a log likelihood value.

OPAL_Chargino_SemiLeptonic_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production (with one leptonic and one hadronic decaying W boson)
   to the model-independent limit according to the OPAL collaboration.
   Returns a log likelihood value.

OPAL_Degenerate_Chargino_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production to the limit on degenerate charginos and neutralinos
   according to the OPAL collaboration.
   Returns a likelihood value

LEP_Higgs_LogLike: |
    Provides log-likelihood for combined model-independent LEP
    neutral Higgs searches.

LHC_Higgs_LogLike: |
   Provides log-likelihood for LHC Higgs mass and signal
   strength measurements.

HB_ModelParameters: |
   Provides SM and MSSM input parameters for LEP and LHC Higgs
   likelihood calculations.

# LEP cross-section capabilities


LEP188_xsec_chi00_11: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi01' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_12: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi02' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_13: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi03' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_14: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi04' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_22: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi02' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_23: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi03' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_24: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi04' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_33: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi03' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_34: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi04' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_44: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi04' and 'chi04' at centre of mass energy 188 GeV.

LEP205_xsec_chi00_11: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi01' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_12: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi02' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_13: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi03' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_14: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi04' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_22: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi02' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_23: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi03' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_24: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi04' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_33: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi03' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_34: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi04' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_44: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi04' and 'chi04' at centre of mass energy 205 GeV.

LEP207_xsec_chi00_11: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi01' at centre of mass energy 207 GeV.

LEP208_xsec_chi00_11: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi01' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_12: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi02' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_13: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi03' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_14: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi04' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_22: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi02' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_23: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi03' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_24: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi04' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_33: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi03' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_34: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi04' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_44: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi04' and 'chi04' at centre of mass energy 208 GeV.


LEP188_xsec_chipm_11: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm1' at centre of mass energy 188 GeV.

LEP188_xsec_chipm_12: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm2' at centre of mass energy 188 GeV.

LEP188_xsec_chipm_21: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm1' at centre of mass energy 188 GeV.

LEP188_xsec_chipm_22: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm2' at centre of mass energy 188 GeV.

LEP205_xsec_chipm_11: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm1' at centre of mass energy 205 GeV.

LEP205_xsec_chipm_12: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm2' at centre of mass energy 205 GeV.

LEP205_xsec_chipm_21: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm1' at centre of mass energy 205 GeV.

LEP205_xsec_chipm_22: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm2' at centre of mass energy 205 GeV.

LEP208_xsec_chipm_11: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm1' at centre of mass energy 208 GeV.

LEP208_xsec_chipm_12: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm2' at centre of mass energy 208 GeV.

LEP208_xsec_chipm_21: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm1' at centre of mass energy 208 GeV.

LEP208_xsec_chipm_22: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm2' at centre of mass energy 208 GeV.


LEP188_xsec_se1se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se1bar' at centre of mass energy 188 GeV.

LEP188_xsec_se1se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se2bar' at centre of mass energy 188 GeV.

LEP188_xsec_se2se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se1bar' at centre of mass energy 188 GeV.

LEP188_xsec_se2se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se2bar' at centre of mass energy 188 GeV.

LEP188_xsec_smu1smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu1bar' at centre of mass energy 188 GeV.

LEP188_xsec_smu1smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu2bar' at centre of mass energy 188 GeV.

LEP188_xsec_smu2smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu1bar' at centre of mass energy 188 GeV.

LEP188_xsec_smu2smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu2bar' at centre of mass energy 188 GeV.

LEP188_xsec_stau1stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau1bar' at centre of mass energy 188 GeV.

LEP188_xsec_stau1stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau2bar' at centre of mass energy 188 GeV.

LEP188_xsec_stau2stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau1bar' at centre of mass energy 188 GeV.

LEP188_xsec_stau2stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau2bar' at centre of mass energy 188 GeV.

LEP205_xsec_se1se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se1bar' at centre of mass energy 205 GeV.

LEP205_xsec_se1se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se2bar' at centre of mass energy 205 GeV.

LEP205_xsec_se2se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se1bar' at centre of mass energy 205 GeV.

LEP205_xsec_se2se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se2bar' at centre of mass energy 205 GeV.

LEP205_xsec_smu1smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu1bar' at centre of mass energy 205 GeV.

LEP205_xsec_smu1smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu2bar' at centre of mass energy 205 GeV.

LEP205_xsec_smu2smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu1bar' at centre of mass energy 205 GeV.

LEP205_xsec_smu2smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu2bar' at centre of mass energy 205 GeV.

LEP205_xsec_stau1stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau1bar' at centre of mass energy 205 GeV.

LEP205_xsec_stau1stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau2bar' at centre of mass energy 205 GeV.

LEP205_xsec_stau2stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau1bar' at centre of mass energy 205 GeV.

LEP205_xsec_stau2stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau2bar' at centre of mass energy 205 GeV.

LEP208_xsec_se1se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se1bar' at centre of mass energy 208 GeV.

LEP208_xsec_se1se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se2bar' at centre of mass energy 208 GeV.

LEP208_xsec_se2se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se1bar' at centre of mass energy 208 GeV.

LEP208_xsec_se2se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se2bar' at centre of mass energy 208 GeV.

LEP208_xsec_smu1smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu1bar' at centre of mass energy 208 GeV.

LEP208_xsec_smu1smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu2bar' at centre of mass energy 208 GeV.

LEP208_xsec_smu2smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu1bar' at centre of mass energy 208 GeV.

LEP208_xsec_smu2smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu2bar' at centre of mass energy 208 GeV.

LEP208_xsec_stau1stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau1bar' at centre of mass energy 208 GeV.

LEP208_xsec_stau1stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau2bar' at centre of mass energy 208 GeV.

LEP208_xsec_stau2stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau1bar' at centre of mass energy 208 GeV.

LEP208_xsec_stau2stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau2bar' at centre of mass energy 208 GeV.



LEP188_xsec_selselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'selbar' at centre of mass energy 188 GeV.

LEP188_xsec_selserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'serbar' at centre of mass energy 188 GeV.

LEP188_xsec_serselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'selbar' at centre of mass energy 188 GeV.

LEP188_xsec_serserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'serbar' at centre of mass energy 188 GeV.

LEP188_xsec_smulsmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smulbar' at centre of mass energy 188 GeV.

LEP188_xsec_smulsmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smurbar' at centre of mass energy 188 GeV.

LEP188_xsec_smursmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smulbar' at centre of mass energy 188 GeV.

LEP188_xsec_smursmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smurbar' at centre of mass energy 188 GeV.

LEP188_xsec_staulstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staulbar' at centre of mass energy 188 GeV.

LEP188_xsec_staulstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staurbar' at centre of mass energy 188 GeV.

LEP188_xsec_staurstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staulbar' at centre of mass energy 188 GeV.

LEP188_xsec_staurstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staurbar' at centre of mass energy 188 GeV.

LEP205_xsec_selselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'selbar' at centre of mass energy 205 GeV.

LEP205_xsec_selserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'serbar' at centre of mass energy 205 GeV.

LEP205_xsec_serselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'selbar' at centre of mass energy 205 GeV.

LEP205_xsec_serserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'serbar' at centre of mass energy 205 GeV.

LEP205_xsec_smulsmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smulbar' at centre of mass energy 205 GeV.

LEP205_xsec_smulsmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smurbar' at centre of mass energy 205 GeV.

LEP205_xsec_smursmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smulbar' at centre of mass energy 205 GeV.

LEP205_xsec_smursmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smurbar' at centre of mass energy 205 GeV.

LEP205_xsec_staulstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staulbar' at centre of mass energy 205 GeV.

LEP205_xsec_staulstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staurbar' at centre of mass energy 205 GeV.

LEP205_xsec_staurstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staulbar' at centre of mass energy 205 GeV.

LEP205_xsec_staurstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staurbar' at centre of mass energy 205 GeV.

LEP208_xsec_selselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'selbar' at centre of mass energy 208 GeV.

LEP208_xsec_selserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'serbar' at centre of mass energy 208 GeV.

LEP208_xsec_serselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'selbar' at centre of mass energy 208 GeV.

LEP208_xsec_serserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'serbar' at centre of mass energy 208 GeV.

LEP208_xsec_smulsmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smulbar' at centre of mass energy 208 GeV.

LEP208_xsec_smulsmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smurbar' at centre of mass energy 208 GeV.

LEP208_xsec_smursmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smulbar' at centre of mass energy 208 GeV.

LEP208_xsec_smursmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smurbar' at centre of mass energy 208 GeV.

LEP208_xsec_staulstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staulbar' at centre of mass energy 208 GeV.

LEP208_xsec_staulstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staurbar' at centre of mass energy 208 GeV.

LEP208_xsec_staurstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staulbar' at centre of mass energy 208 GeV.

LEP208_xsec_staurstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staurbar' at centre of mass energy 208 GeV.

Pythia_8_212_init: |
   Initializes the Pythia 8.212 MSSM backend.

Prospino_2_1_init: |
   Initializes the Prospino 2.1 backend.

prospino_gb: |
   Main function in the GAMBIT-patched version of Prospino.

prospino_gb_init: |
   Initialization function in the GAMBIT-patched version of Prospino.

prospino_errorhandler_cptr: |
   C function pointer in the GAMBIT-patched version of Prospino, connected
   to GAMBIT for safe error handling.

prospino_read_slha1_input: |
   Prospino backend convenience function: reads SLHA1 input.

prospino_run: |
   Prospino backend convenience function: runs Prospino after reading
   options from the YAML file.

prospino_run_alloptions: |
   Prospino backend convenience function: runs Prospino, with all options
   provided directly as function arguments.

salami_0_1_0_init: |
   Initializes the salami 0.1.0 backend.

salami_get_xsection: |
   Salami backend function: return the cross-section for a given process,
   identified by a PID pair.

salami_import_slha_string: |
   Salami backend function: import SLHA content as string.

salami_set_parameters: |
   Salami backend function: set parameters in salami.

xsecBE_1_0_2_init: |
   Initializes the xsec 1.0.2 backend.

xsecBE_get_xsection: |
   Xsec backend function: return the cross-section for a given process,
   identified by a PID pair.

xsecBE_import_slha_string: |
   Xsec backend function: import SLHA content as string.

xsecBE_set_parameters: |
   Xsec backend function: set parameters in xsec.


#-------------------------------------
#  DarkBit capabilities
#-------------------------------------

TH_ProcessCatalog: |
   One of the central structures in DarkBit, carrying all relevant
   information about the decay and annihilation of particles.
   See Section 6.3.1 of DarkBit paper.

DD_couplings: |
   Provides WIMP mass and couplings to nucleons.

get_DD_couplings: |
   Provides WIMP mass and couplings to nucleons from DarkSUSY 6.

DD_couplings_fermionic_HP: |
   Provides WIMP mass and couplings to nucleons for Higgs-Portal models with fermionic DM.

WIMP_properties: |
   Container for WIMP properties: mass, spin and self-conjugate

mwimp: |
   DM mass in GeV.

spinwimpx2: |
   Spin of DM x2

wimp_sc: |
   Is the DM candidate self conjugate

sigmav: |
   Thermally averaged annihilation cross section <sigma v>, for v=0, in cm^3 s^-1.

sigma_SI_p: |
   Spin-independent WIMP-proton cross section, in cm^2.

sigma_SD_p: |
   Spin-dependent WIMP-proton cross section, in cm^2.

sigma_SI_n: |
   Spin-independent WIMP-neutron cross section, in cm^2.

sigma_SD_n: |
   Spin-dependent WIMP-neutron cross section, in cm^2.

DarkMatter_ID: |
   Contains string ID to identify dark matter particle.

DarkMatterConj_ID: |
   Contains string ID to identify the conjugate to the dark matter particle.

RD_spectrum: |
   Contains degrees of freedom and masses of all (co)-annihilating
   particles, as well as location of thresholds and resonances.

RD_spectrum_ordered: |
   Same as RD_spectrum, but with all resonances and thresholds
   ordered with increasing p_eff, and coannihilation thresholds
   included

RD_eff_annrate_DS5prep: |
   Ensures that DarkSUSY (up to version 5) is correctly initialized
   for relic density calculations.

RD_eff_annrate_DSprep_MSSM: |
   Ensures that DarkSUSY (from version 6) is correctly initialized
   for relic density calculations.

dsancoann: |
   DarkSUSY6 common block containing model-independent (kinematic)
   information about coannihilating particles.

RD_eff_annrate: |
   The effective invariant rate W_eff that enters in the calculation
   of the thermally averaged cross section <sv>.

RD_oh2: |
   The dark matter relic density.

Xf: |
   X_f = m_DM / T_f, where T_f is the freezeout temperature of the
   thermal relic DM.

RD_oh2_Xf: |
   The dark matter relic density and the X_f = m_DM / T_f, where T_f
   is the freezeout temperature of the thermal relic DM.

RD_fraction: |
   Contains the fraction of the observed dark matter density that is
   used to calculate direct and indirect detection observables.

lnL_oh2: |
   Contains the log likelihood function constraining the relic density.

relic_density_contributions: |
   The contributions of different final states to the relic density of
   dark matter.

semi_annihilation_fraction: |
   The contribution of semi-annihilation to the relic density of dark
   matter.

LocalHalo: |
   Provides the parameters of the Maxwell-Boltzmann velocity distribution,
   in terms of the strucutre LocalMaxwellianHalo containing the parameters
   rho0, v0, vrot, vesc.

GalacticHalo: |
   Provides the properties of the dark matter density distribution in the Galaxy,
   in terms of the structure GalacticHaloProperties containing the function rho(r)
   and the Sun-GC distance r_sun.

lnL_rho0: |
   Log-likelihood for the local DM density.

lnL_vrot: |
   Log-likelihood for the local disk rotational speed.

lnL_v0: |
   Log-likelihood for the most-probable DM speed.

lnL_vesc: |
   Log-likelihood for the escape velocity.

XENON100_2012_Calculate: |
   Perform rate and likelihood calculations for the XENON100 2012 direct detection analysis.

XENON100_2012_Events: |
   The number of observed events for the XENON100 2012 direct detection analysis.

XENON100_2012_Background: |
   The number of background events for the XENON100 2012 direct detection analysis.

XENON100_2012_Signal: |
   The number of signal events for the XENON100 2012 direct detection analysis.

XENON100_2012_SignalSI: |
   The number of spin-independent signal events for the XENON100 2012 direct detection analysis.

XENON100_2012_SignalSD: |
   The number of spin-dependent signal events for the XENON100 2012 direct detection analysis.

XENON100_2012_LogLikelihood: |
   Calculate the log-likelihood for the XENON100 2012 direct detection analysis.

XENON100_2012_BinBackground: |
   The number of expected background events in each bin for the XENON100 2012 direct detection analysis.

XENON100_2012_BinEvents: |
   The number of expected events in each bin for the XENON100 2012 direct detection analysis.

XENON100_2012_BinSignal: |
   The number of expected signal events in each bin for the XENON100 2012 direct detection analysis.

XENON100_2012_Bins: |
   The number of bins used in the XENON100 2012 direct detection analysis.

XENON1T_2017_Calculate: |
   Perform rate and likelihood calculations for the XENON1T 2017 direct detection analysis.

XENON1T_2017_Events: |
   The number of observed events for the XENON1T 2017 direct detection analysis.

XENON1T_2017_Background: |
   The number of background events for the XENON1T 2017 direct detection analysis.

XENON1T_2017_BinBackground: |
   The number of expected background events in each bin for the XENON1T 2017 direct detection analysis.

XENON1T_2017_BinEvents: |
   The number of expected events in each bin for the XENON1T 2017 direct detection analysis.

XENON1T_2017_BinSignal: |
   The number of expected signal events in each bin for the XENON1T 20178 direct detection analysis.

XENON1T_2017_Bins: |
   The number of bins used in the XENON1T 2017 direct detection analysis.

XENON1T_2017_Signal: |
   The number of signal events for the XENON1T 2017 direct detection analysis.

XENON1T_2017_SignalSI: |
   The number of spin-independent signal events for the XENON1T 2017 direct detection analysis.

XENON1T_2017_SignalSD: |
   The number of spin-dependent signal events for the XENON1T 2017 direct detection analysis.

XENON1T_2017_LogLikelihood: |
   Calculate the log-likelihood for the XENON1T 2017 direct detection analysis.

XENON1T_2018_Background: |
   The number of background events for the XENON1T 2018 direct detection analysis.

XENON1T_2018_BinBackground: |
   The number of expected background events in each bin for the XENON1T 2018 direct detection analysis.

XENON1T_2018_BinEvents: |
   The number of expected events in each bin for the XENON1T 2018 direct detection analysis.

XENON1T_2018_BinSignal: |
   The number of expected signal events in each bin for the XENON1T 2018 direct detection analysis.

XENON1T_2018_Bins: |
   The number of bins used in the XENON1T 2018 direct detection analysis.

XENON1T_2018_Calculate: |
   Perform rate and likelihood calculations for the XENON1T 2018 direct detection analysis.

XENON1T_2018_Events: |
   The number of observed events for the XENON1T 2018 direct detection analysis.

XENON1T_2018_LogLikelihood: |
   Calculate the log-likelihood for the XENON1T 2018 direct detection analysis.

XENON1T_2018_Signal: |
   The number of signal events for the XENON1T 2018 direct detection analysis.

XENON1T_2018_SignalSI: |
   The number of spin-idependent signal events for the XENON1T 2018 direct detection analysis.

XENON1T_2018_SignalSD: |
   The number of spin-dependent signal events for the XENON1T 2018 direct detection analysis.

LUX_2013_Calculate: |
   Perform rate and likelihood calculations for the LUX 2013 direct detection analysis.

LUX_2013_Events: |
   The number of observed events for the LUX 2013 direct detection analysis.

LUX_2013_Background: |
   The number of background events for the LUX 2013 direct detection analysis.

LUX_2013_Signal: |
   The number of signal events for the LUX 2013 direct detection analysis.

LUX_2013_SignalSI: |
   The number of spin-independent signal events for the LUX 2013 direct detection analysis.

LUX_2013_SignalSD: |
   The number of spin-dependent signal events for the LUX 2013 direct detection analysis.

LUX_2013_LogLikelihood: |
   Calculate the log-likelihood for the LUX 2013 direct detection analysis.

LUX_2013_BinBackground: |
   The number of expected background events in each bin for the LUX 2013 direct detection analysis.

LUX_2013_BinEvents: |
   The number of expected events in each bin for the LUX 2013 direct detection analysis.

LUX_2013_BinSignal: |
   The number of expected signal events in each bin for the LUX 2013 direct detection analysis.

LUX_2013_Bins: |
   The number of bins used in the LUX 2013 direct detection analysis.

LUX_2015_Calculate: |
   Perform rate and likelihood calculations for the LUX 2015 direct detection analysis.

LUX_2015_Events: |
   The number of observed events for the LUX 2015 direct detection analysis.

LUX_2015_Background: |
   The number of background events for the LUX 2015 direct detection analysis.

LUX_2015_Signal: |
   The number of signal events for the LUX 2015 direct detection analysis.

LUX_2015_SignalSI: |
   The number of spin-independent signal events for the LUX 2015 direct detection analysis.

LUX_2015_SignalSD: |
   The number of spin-dependent signal events for the LUX 2015 direct detection analysis.

LUX_2015_LogLikelihood: |
   Calculate the log-likelihood for the LUX 2015 direct detection analysis.

LUX_2015_BinBackground: |
   The number of expected background events in each bin for the LUX 2015 direct detection analysis.

LUX_2015_BinEvents: |
   The number of expected events in each bin for the LUX 2015 direct detection analysis.

LUX_2015_BinSignal: |
   The number of expected signal events in each bin for the LUX 2015 direct detection analysis.

LUX_2015_Bins: |
   The number of bins used in the LUX 2015 direct detection analysis.

LUX_2016_Calculate: |
   Perform rate and likelihood calculations for the LUX 2016 direct detection analysis.

LUX_2016_Events: |
   The number of observed events for the LUX 2016 direct detection analysis.

LUX_2016_Background: |
   The number of background events for the LUX 2016 direct detection analysis.

LUX_2016_Signal: |
   The number of signal events for the LUX 2016 direct detection analysis.

LUX_2016_SignalSI: |
   The number of spin-independent signal events for the LUX 2016 direct detection analysis.

LUX_2016_SignalSD: |
   The number of spin-dependent signal events for the LUX 2016 direct detection analysis.

LUX_2016_LogLikelihood: |
   Calculate the log-likelihood for the LUX 2016 direct detection analysis.

LUX_2016_BinBackground: |
   The number of expected background events in each bin for the LUX 2016 direct detection analysis.

LUX_2016_BinEvents: |
   The number of expected events in each bin for the LUX 2016 direct detection analysis.

LUX_2016_BinSignal: |
   The number of expected signal events in each bin for the LUX 2016 direct detection analysis.

LUX_2016_Bins: |
   The number of bins used in the LUX 2016 direct detection analysis.

LZ_Calculate: |
   Perform rate and likelihood calculations for the LZ direct detection analysis.

LZ_Events: |
   The number of observed events for the LZ direct detection analysis.

LZ_Background: |
   The number of background events for the LZ direct detection analysis.

LZ_Signal: |
   The number of signal events for the LZ direct detection analysis.

LZ_SignalSI: |
   The number of spin-independent signal events for the LZ direct detection analysis.

LZ_SignalSD: |
   The number of spin-dependent signal events for the LZ direct detection analysis.

LZ_LogLikelihood: |
   Calculate the log-likelihood for the LZ direct detection analysis.

LZ_BinBackground: |
   The number of expected background events in each bin for the LZ direct detection analysis.

LZ_BinEvents: |
   The number of expected events in each bin for the LZ direct detection analysis.

LZ_BinSignal: |
   The number of expected signal events in each bin for the LZ direct detection analysis.

LZ_Bins: |
   The number of bins used in the LZ direct detection analysis.

PandaX_2016_Calculate: |
   Perform rate and likelihood calculations for the PandaX 2016 direct detection analysis.

PandaX_2016_Events: |
   The number of observed events for the PandaX 2016 direct detection analysis.

PandaX_2016_Background: |
   The number of background events for the PandaX 2016 direct detection analysis.

PandaX_2016_Signal: |
   The number of signal events for the PandaX 2016 direct detection analysis.

PandaX_2016_SignalSI: |
   The number of spin-independent signal events for the PandaX 2016 direct detection analysis.

PandaX_2016_SignalSD: |
   The number of spin-dependent signal events for the PandaX 2016 direct detection analysis.

PandaX_2016_LogLikelihood: |
   Calculate the log-likelihood for the PandaX 2016 direct detection analysis.

PandaX_2016_BinBackground: |
   The number of expected background events in each bin for the PandaX 2016 direct detection analysis.

PandaX_2016_BinEvents: |
   The number of expected events in each bin for the PandaX 2016 direct detection analysis.

PandaX_2016_BinSignal: |
   The number of expected signal events in each bin for the PandaX 2016 direct detection analysis.

PandaX_2016_Bins: |
   The number of bins used in the PandaX 2016 direct detection analysis.

PandaX_2017_Calculate: |
   Perform rate and likelihood calculations for the PandaX 2017 direct detection analysis.

PandaX_2017_Events: |
   The number of observed events for the PandaX 2017 direct detection analysis.

PandaX_2017_Background: |
   The number of background events for the PandaX 2017 direct detection analysis.

PandaX_2017_Signal: |
   The number of signal events for the PandaX 2017 direct detection analysis.

PandaX_2017_SignalSI: |
   The number of spin-independent signal events for the PandaX 2017 direct detection analysis.

PandaX_2017_SignalSD: |
   The number of spin-dependent signal events for the PandaX 2017 direct detection analysis.

PandaX_2017_LogLikelihood: |
   Calculate the log-likelihood for the PandaX 2017 direct detection analysis.

PandaX_2017_BinBackground: |
   The number of expected background events in each bin for the PandaX 2017 direct detection analysis.

PandaX_2017_BinEvents: |
   The number of expected events in each bin for the PandaX 2017 direct detection analysis.

PandaX_2017_BinSignal: |
   The number of expected signal events in each bin for the PandaX 2017 direct detection analysis.

PandaX_2017_Bins: |
   The number of bins used in the PandaX 2017 direct detection analysis.

SuperCDMS_2014_Calculate: |
   Perform rate and likelihood calculations for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_Events: |
   The number of observed events for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_Background: |
   The number of background events for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_Signal: |
   The number of signal events for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_SignalSI: |
   The number of spin-independent signal events for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_SignalSD: |
   The number of spin-dependent signal events for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_LogLikelihood: |
   Calculate the log-likelihood for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_BinBackground: |
   The number of expected background events in each bin for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_BinEvents: |
   The number of expected events in each bin for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_BinSignal: |
   The number of expected signal events in each bin for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_Bins: |
   The number of bins used in the SuperCDMS 2014 direct detection analysis.

SIMPLE_2014_Calculate: |
   Perform rate and likelihood calculations for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_Events: |
   The number of observed events for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_Background: |
   The number of background events for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_Signal: |
   The number of signal events for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_SignalSI: |
   The number of spin-independent signal events for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_SignalSD: |
   The number of spin-dependent signal events for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_LogLikelihood: |
   Calculate the log-likelihood for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_BinBackground: |
   The number of expected background events in each bin for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_BinEvents: |
   The number of expected events in each bin for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_BinSignal: |
   The number of expected signal events in each bin for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_Bins: |
   The number of bins used in the SIMPLE 2014 direct detection analysis.

PICO_2L_Calculate: |
   Perform rate and likelihood calculations for the PICO-2L direct detection analysis.

PICO_2L_Events: |
   The number of observed events for the PICO-2L direct detection analysis.

PICO_2L_Background: |
   The number of background events for the PICO-2L direct detection analysis.

PICO_2L_Signal: |
   The number of signal events for the PICO-2L direct detection analysis.

PICO_2L_SignalSI: |
   The number of spin-independent signal events for the PICO-2L direct detection analysis.

PICO_2L_SignalSD: |
   The number of spin-dependent signal events for the PICO-2L direct detection analysis.

PICO_2L_LogLikelihood: |
   Calculate the log-likelihood for the PICO-2L direct detection analysis.

PICO_2L_BinBackground: |
   The number of expected background events in each bin for the PICO-2L direct detection analysis.

PICO_2L_BinEvents: |
   The number of expected events in each bin for the PICO-2L direct detection analysis.

PICO_2L_BinSignal: |
   The number of expected signal events in each bin for the PICO-2L direct detection analysis.

PICO_2L_Bins: |
   The number of bins used in the PICO-2L direct detection analysis.

PICO_60_F_Calculate: |
   Perform rate and likelihood calculations for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_Events: |
   The number of observed events for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_Background: |
   The number of background events for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_Signal: |
   The number of signal events for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_SignalSI: |
   The number of spin-independent signal events for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_SignalSD: |
   The number of spin-dependent signal events for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_LogLikelihood: |
   Calculate the log-likelihood for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_BinBackground: |
   The number of expected background events in each bin for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_BinEvents: |
   The number of expected events in each bin for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_BinSignal: |
   The number of expected signal events in each bin for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_Bins: |
   The number of bins used in the PICO-60 direct detection analysis (flourine only).

PICO_60_I_Calculate: |
   Perform rate and likelihood calculations for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_Events: |
   The number of observed events for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_Background: |
   The number of background events for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_Signal: |
   The number of signal events for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_SignalSI: |
   The number of spin-independent signal events for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_SignalSD: |
   The number of spin-dependent signal events for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_LogLikelihood: |
   Calculate the log-likelihood for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_BinBackground: |
   The number of expected background events in each bin for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_BinEvents: |
   The number of expected events in each bin for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_BinSignal: |
   The number of expected signal events in each bin for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_Bins: |
   The number of bins used in the PICO-60 direct detection analysis (iodine only).

PICO_60_2017_Calculate: |
   Perform rate and likelihood calculations for the PICO-60 2017 direct detection analysis.

PICO_60_2017_Events: |
   The number of observed events for the PICO-60 2017 direct detection analysis.

PICO_60_2017_Background: |
   The number of background events for the PICO-60 2017 direct detection analysis.

PICO_60_2017_Signal: |
   The number of signal events for the PICO-60 2017 direct detection analysis.

PICO_60_2017_SignalSI: |
   The number of spin-independent signal events for the PICO-60 2017 direct detection analysis.

PICO_60_2017_SignalSD: |
   The number of spin-dependent signal events for the PICO-60 2017 direct detection analysis.

PICO_60_2017_LogLikelihood: |
   Calculate the log-likelihood for the PICO-60 2017 direct detection analysis.

PICO_60_2017_BinBackground: |
   The number of expected background events in each bin for the PICO-60 2017 direct detection analysis.

PICO_60_2017_BinEvents: |
   The number of expected events in each bin for the PICO-60 2017 direct detection analysis.

PICO_60_2017_BinSignal: |
   The number of expected signal events in each bin for the PICO-60 2017 direct detection analysis.

PICO_60_2017_Bins: |
   The number of bins used in the PICO-60 2017 direct detection analysis.

PICO_60_2019_Calculate: |
   Perform rate and likelihood calculations for the PICO-60 2019 direct detection analysis.

PICO_60_2019_Events: |
   The number of observed events for the PICO-60 2019 direct detection analysis.

PICO_60_2019_Background: |
   The number of background events for the PICO-60 2019 direct detection analysis.

PICO_60_2019_Signal: |
   The number of signal events for the PICO-60 2019 direct detection analysis.

PICO_60_2019_SignalSI: |
   The number of spin-independent signal events for the PICO-60 2019 direct detection analysis.

PICO_60_2019_SignalSD: |
   The number of spin-dependent signal events for the PICO-60 2019 direct detection analysis.

PICO_60_2019_LogLikelihood: |
   Calculate the log-likelihood for the PICO-60 2019 direct detection analysis.

PICO_60_2019_BinBackground: |
   The number of expected background events in each bin for the PICO-60 2019 direct detection analysis.

PICO_60_2019_BinEvents: |
   The number of expected events in each bin for the PICO-60 2019 direct detection analysis.

PICO_60_2019_BinSignal: |
   The number of expected signal events in each bin for the PICO-60 2019 direct detection analysis.

PICO_60_2019_Bins: |
   The number of bins used in the PICO-60 2019 direct detection analysis.

PICO_60_Calculate: |
   Perform rate and likelihood calculations for the PICO-60 direct detection analysis.

PICO_60_Events: |
   The number of observed events for the PICO-60 direct detection analysis.

PICO_60_Background: |
   The number of background events for the PICO-60 direct detection analysis.

PICO_60_Signal: |
   The number of signal events for the PICO-60 direct detection analysis.

PICO_60_SignalSI: |
   The number of spin-independent signal events for the PICO-60 direct detection analysis.

PICO_60_SignalSD: |
   The number of spin-dependent signal events for the PICO-60 direct detection analysis.

PICO_60_LogLikelihood: |
   Calculate the log-likelihood for the PICO-60 direct detection analysis.

PICO_60_BinBackground: |
   The number of expected background events in each bin for the PICO-60 direct detection analysis.

PICO_60_BinEvents: |
   The number of expected events in each bin for the PICO-60 direct detection analysis.

PICO_60_BinSignal: |
   The number of expected signal events in each bin for the PICO-60 direct detection analysis.

PICO_60_Bins: |
   The number of bins used in the PICO-60 direct detection analysis.

PICO_500_Calculate: |
   Perform rate and likelihood calculations for the PICO-500 direct detection analysis.

PICO_500_Events: |
   The number of observed events for the PICO-500 direct detection analysis.

PICO_500_Background: |
   The number of background events for the PICO-500 direct detection analysis.

PICO_500_Signal: |
   The number of signal events for the PICO-500 direct detection analysis.

PICO_500_SignalSI: |
   The number of spin-independent signal events for the PICO-500 direct detection analysis.

PICO_500_SignalSD: |
   The number of spin-dependent signal events for the PICO-500 direct detection analysis.

PICO_500_LogLikelihood: |
   Calculate the log-likelihood for the PICO-500 direct detection analysis.

PICO_500_BinBackground: |
   The number of expected background events in each bin for the PICO-500 direct detection analysis.

PICO_500_BinEvents: |
   The number of expected events in each bin for the PICO-500 direct detection analysis.

PICO_500_BinSignal: |
   The number of expected signal events in each bin for the PICO-500 direct detection analysis.

PICO_500_Bins: |
   The number of bins used in the PICO-500 direct detection analysis.

DARWIN_Calculate: |
   Perform rate and likelihood calculations for the DARWIN 2015/16 direct detection projections.

DARWIN_Events: |
   The number of observed events for the DARWIN 2015/16 direct detection projections.

DARWIN_Background: |
   The number of background events for the DARWIN 2015/16 direct detection projections.

DARWIN_Signal: |
   The number of signal events for the DARWIN 2015/16 direct detection projections.

DARWIN_SignalSI: |
   The number of spin-independent signal events for the DARWIN 2015/16 direct detection projections.

DARWIN_SignalSD: |
   The number of spin-dependent signal events for the DARWIN 2015/16 direct detection projections.

DARWIN_LogLikelihood: |
   Calculate the log-likelihood for the DARWIN 2015/16 direct detection projections.

DARWIN_BinBackground: |
   The number of expected background events in each bin for the DARWIN 2015/16 direct detection projections.

DARWIN_BinEvents: |
   The number of expected events in each bin for the DARWIN 2015/16 direct detection projections.

DARWIN_BinSignal: |
   The number of expected signal events in each bin for the DARWIN 2015/16 direct detection projections.

DARWIN_Bins: |
   The number of bins used in the DARWIN 2015/16 direct detection projections.

CDMSlite_Background: |
   The number of background events for the CDMSlite direct detection analysis.

CDMSlite_BinBackground: |
   The number of expected background events in each bin for the CDMSlite direct detection analysis.

CDMSlite_BinEvents: |
   The number of expected events in each bin for the CDMSlite direct detection analysis.

CDMSlite_BinSignal: |
   The number of expected signal events in each bin for the CDMSlite direct detection analysis.

CDMSlite_Bins: |
   The number of bins used in the CDMSlite direct detection analysis.

CDMSlite_Calculate: |
   Perform rate and likelihood calculations for the CDMSlite direct detection analysis.

CDMSlite_Events: |
   The number of observed events for the CDMSlite direct detection analysis.

CDMSlite_LogLikelihood: |
   Calculate the log-likelihood for the CDMSlite direct detection analysis.

CDMSlite_Signal: |
   The number of signal events for the CDMSlite direct detection analysis.

CDMSlite_SignalSI: |
   The number of spin-idependent signal events for the CDMSlite direct detection analysis.

CDMSlite_SignalSD: |
   The number of spin-dependent signal events for the CDMSlite direct detection analysis.

CRESST_II_Background: |
   The number of background events for the CRESST-II direct detection analysis.

CRESST_II_BinBackground: |
   The number of expected background events in each bin for the CRESST-II direct detection analysis.

CRESST_II_BinEvents: |
   The number of expected events in each bin for the CRESST-II direct detection analysis.

CRESST_II_BinSignal: |
   The number of expected signal events in each bin for the CRESST-II direct detection analysis.

CRESST_II_Bins: |
   The number of bins used in the CRESST-II direct detection analysis.

CRESST_II_Calculate: |
   Perform rate and likelihood calculations for the CRESST-II direct detection analysis.

CRESST_II_Events: |
   The number of observed events for the CRESST-II direct detection analysis.

CRESST_II_LogLikelihood: |
   Calculate the log-likelihood for the CRESST-II direct detection analysis.

CRESST_II_Signal: |
   The number of signal events for the CRESST-II direct detection analysis.

CRESST_II_SignalSI: |
   The number of spin-idependent signal events for the CRESST-II direct detection analysis.

CRESST_II_SignalSD: |
   The number of spin-dependent signal events for the CRESST-II direct detection analysis.

CRESST_III_Background: |
   The number of background events for the CRESST-III direct detection analysis.

CRESST_III_BinBackground: |
   The number of expected background events in each bin for the CRESST-III direct detection analysis.

CRESST_III_BinEvents: |
   The number of expected events in each bin for the CRESST-III direct detection analysis.

CRESST_III_BinSignal: |
   The number of expected signal events in each bin for the CRESST-III direct detection analysis.

CRESST_III_Bins: |
   The number of bins used in the CRESST-III direct detection analysis.

CRESST_III_Calculate: |
   Perform rate and likelihood calculations for the CRESST-III direct detection analysis.

CRESST_III_Events: |
   The number of observed events for the CRESST-III direct detection analysis.

CRESST_III_LogLikelihood: |
   Calculate the log-likelihood for the CRESST-III direct detection analysis.

CRESST_III_Signal: |
   The number of signal events for the CRESST-III direct detection analysis.

CRESST_III_SignalSI: |
   The number of spin-idependent signal events for the CRESST-III direct detection analysis.

CRESST_III_SignalSD: |
   The number of spin-dependent signal events for the CRESST-III direct detection analysis.

DarkSide_50_Background: |
   The number of background events for the DarkSide 50 direct detection analysis.

DarkSide_50_BinBackground: |
   The number of expected background events in each bin for the DarkSide 50 direct detection analysis.

DarkSide_50_BinEvents: |
   The number of expected events in each bin for the DarkSide 50 direct detection analysis.

DarkSide_50_BinSignal: |
   The number of expected signal events in each bin for the DarkSide 50 direct detection analysis.

DarkSide_50_Bins: |
   The number of bins used in the DarkSide 50 direct detection analysis.

DarkSide_50_Calculate: |
   Perform rate and likelihood calculations for the DarkSide 50 direct detection analysis.

DarkSide_50_Events: |
   The number of observed events for the DarkSide 50 direct detection analysis.

DarkSide_50_LogLikelihood: |
   Calculate the log-likelihood for the DarkSide 50 direct detection analysis.

DarkSide_50_Signal: |
   The number of signal events for the DarkSide 50 direct detection analysis.

DarkSide_50_SignalSI: |
   The number of spin-idependent signal events for the DarkSide 50 direct detection analysis.

DarkSide_50_SignalSD: |
   The number of spin-dependent signal events for the DarkSide 50 direct detection analysis.

DarkSide_50_S2_Background: |
   The number of background events for the DarkSide 50 (S2-only) direct detection analysis.

DarkSide_50_S2_BinBackground: |
   The number of expected background events in each bin for the DarkSide 50 (S2-only) direct detection analysis.

DarkSide_50_S2_BinEvents: |
   The number of expected events in each bin for the DarkSide 50 (S2-only) direct detection analysis.

DarkSide_50_S2_BinSignal: |
   The number of expected signal events in each bin for the DarkSide 50 (S2-only) direct detection analysis.

DarkSide_50_S2_Bins: |
   The number of bins used in the DarkSide 50 (S2-only) direct detection analysis.

DarkSide_50_S2_Calculate: |
   Perform rate and likelihood calculations for the DarkSide 50 (S2-only) direct detection analysis.

DarkSide_50_S2_Events: |
   The number of observed events for the DarkSide 50 (S2-only) direct detection analysis.

DarkSide_50_S2_LogLikelihood: |
   Calculate the log-likelihood for the DarkSide 50 (S2-only) direct detection analysis.

DarkSide_50_S2_Signal: |
   The number of signal events for the DarkSide 50 (S2-only) direct detection analysis.

DarkSide_50_S2_SignalSI: |
   The number of spin-idependent signal events for the DarkSide 50 (S2-only) direct detection analysis.

DarkSide_50_S2_SignalSD: |
   The number of spin-dependent signal events for the DarkSide 50 (S2-only) direct detection analysis.

lnL_SI_nuclear_parameters: |
   The log-likehood for the spin-independent nuclear parameters.

lnL_SD_nuclear_parameters: |
   The log-likehood for the spin-dependent nuclear parameters.

lnL_nuclear_parameters_ChPT: |
   Log Likelihood for the nuisance parameters ChPT in DirectDM 2.2.0

FullSimYieldTable: |
   Table of all simulated particle yields.

GA_SimYieldTable: |
   Table of simulated gamma-ray yields.

electron_SimYieldTable: |
   Table of simulated electron yields.

positron_SimYieldTable: |
   Table of simulated positron yields.

antiproton_SimYieldTable: |
   Table of simulated antiproton yields.

antideuteron_SimYieldTable: |
   Table of simulated antideuteron yields.

GA_Yield: |
   Calculate the gamma-ray yield from the process catalogue.

electron_Yield: |
   Calculate the electron yield from the process catalogue.

positron_Yield: |
   Calculate the positron yield from the process catalogue.

antiproton_Yield: |
   Calculate the antiproton yield from the process catalogue.

antideuteron_Yield: |
   Calculate the antideuteron yield from the process catalogue.

DM_process: |
   Returns a string based on the nature of the DM process used for indirect detection (either annihilation or decay).

dsanyield_sim: |
   Provides tabulated yields from DarkSUSY 6.

cascadeMC_FinalStates: |
   List of final states for cascade decays.

cascadeMC_DecayTable: |
   Decay table for the decay chain.

cascadeMC_gammaSpectra: |
   Gamma-ray spectrum from cascade decays.

cascadeMC_electronSpectra: |
   Electron spectrum from cascade decays.

cascadeMC_positronSpectra: |
   Positron spectrum from cascade decays.

cascadeMC_antiprotonSpectra: |
   Anti-proton spectrum from cascade decays.

cascadeMC_antideuteronSpectra: |
   Anti-deuteron spectrum from cascade decays.

cascadeMC_LoopManagement: |
   Controls the loop for the cascade decay Monte Carlo simulation.

cascadeMC_InitialStates: |
   The set of initial states for the cascade decay chain, consisting of
   those hard process final states for which one or more spectra (gammas,
   positrons, pbars, etc) are not available already in tabulated form.

cascadeMC_EventCount: |
   Event counter for cascade decays.

cascadeMC_ChainEvent: |
   Generates decay chains.

cascadeMC_Histograms: |
   Creates histograms and evaluates the end conditions for the event loop in the cascade decay simulation.

lnL_FermiLATdwarfs: |
   Log-likelihood for the Fermi-LAT dwarf galaxy search.

lnL_FermiGC: |
   Log-likelihood for the Fermi-LAT GeV excess at the Galactic centre.

lnL_HESSGC: |
   Log-likelihood for the HESS Galactic halo searches.

lnL_CTAGC: |
   Log-likelihood for projected dark matter searches with CTA.

set_gamLike_GC_halo: |
   Intialises the Galactic DM distribution in GamLike.

capture_rate_Sun: |
   Capture rate of regular dark matter in the Sun (no v-dependent or q-dependent cross-sections; s^−1).

equilibration_time_Sun: |
   Timescale on which capture and annihilation of dark matter in the Sun equilibrate (s).

annihilation_rate_Sun: |
   Annihilation rate of dark matter in the Sun (s^-1).

nuyield_ptr: |
   A pointer to a function that returns the neutrino yield from dark matter in the Sun.

IC22_data: |
   Do signal, likelihood and related calculations for neutrino indirect detection analysis IC22.

IC22_signal: |
   Number of signal events for neutrino indirect detection analysis IC22.

IC22_bg: |
   Number of background events for neutrino indirect detection analysis IC22.

IC22_loglike: |
   Log-likelihood for neutrino indirect detection analysis IC22.

IC22_bgloglike: |
   Background-only log-likelihood for neutrino indirect detection analysis IC22.

IC22_pvalue: |
   p-value for neutrino indirect detection analysis IC22.

IC22_nobs: |
   Number of observed events for neutrino indirect detection analysis IC22.

IC79SL_data: |
   Do signal, likelihood and related calculations for neutrino indirect detection analysis IC79SL.

IC79SL_signal: |
   Number of signal events for neutrino indirect detection analysis IC79SL.

IC79SL_bg: |
   Number of background events for neutrino indirect detection analysis IC79SL.

IC79SL_loglike: |
   Log-likelihood for neutrino indirect detection analysis IC79SL.

IC79SL_bgloglike: |
   Background-only log-likelihood for neutrino indirect detection analysis IC79SL.

IC79SL_pvalue: |
   p-value for neutrino indirect detection analysis IC79SL.

IC79SL_nobs: |
   Number of observed events for neutrino indirect detection analysis IC79SL.

IC79WL_data: |
   Do signal, likelihood and related calculations for neutrino indirect detection analysis IC79WL.

IC79WL_signal: |
   Number of signal events for neutrino indirect detection analysis IC79WL.

IC79WL_bg: |
   Number of background events for neutrino indirect detection analysis IC79WL.

IC79WL_loglike: |
   Log-likelihood for neutrino indirect detection analysis IC79WL.

IC79WL_bgloglike: |
   Background-only log-likelihood for neutrino indirect detection analysis IC79WL.

IC79WL_pvalue: |
   p-value for neutrino indirect detection analysis IC79WL.

IC79WL_nobs: |
   Number of observed events for neutrino indirect detection analysis IC79WL.

IC79WH_data: |
   Do signal, likelihood and related calculations for neutrino indirect detection analysis IC79WH.

IC79WH_signal: |
   Number of signal events for neutrino indirect detection analysis IC79WH.

IC79WH_bg: |
   Number of background events for neutrino indirect detection analysis IC79WH.

IC79WH_loglike: |
   Log-likelihood for neutrino indirect detection analysis IC79WH.

IC79WH_bgloglike: |
   Background-only log-likelihood for neutrino indirect detection analysis IC79WH.

IC79WH_pvalue: |
   p-value for neutrino indirect detection analysis IC79WH.

IC79WH_nobs: |
   Number of observed events for neutrino indirect detection analysis IC79WH.

IC79_loglike: |
   The full 79-string IceCube log-likelihood.

IceCube_likelihood: |
   The complete IceCube log-likelihood, including 22-string and 79-string data.

DarkSUSY_PointInit: |
   Initialises DarkSUSY (up to version 5) for a specific model point.

DarkSUSY_MSSM_6_1_1_init: |
   Initialises DarkSUSY 6.1.1 for the MSSM.

DarkSUSY_MSSM_6_2_2_init: |
   Initialises DarkSUSY 6.2.2 for the MSSM.

DarkSUSY_MSSM_6_2_5_init: |
   Initialises DarkSUSY 6.2.5 for the MSSM.

DarkSUSY_generic_wimp_6_1_1_init: |
   Initialises DarkSUSY 6.1.1 for a generic WIMP.

DarkSUSY_generic_wimp_6_2_2_init: |
   Initialises DarkSUSY 6.2.2 for a generic WIMP.

DarkSUSY_generic_wimp_6_2_5_init: |
   Initialises DarkSUSY 6.2.5 for a generic WIMP.

DarkSUSY5_PointInit_LocalHalo: |
   Initialises Milky Way halo model parameters in DarkSUSY5

DarkSUSY_PointInit_LocalHalo: |
   Initialises Milky Way halo model parameters in DarkSUSY6+

dump_gammaSpectrum: |
   Dumps gamma-ray yield into ASCII table

dump_electronSpectrum: |
   Dumps electron yield into ASCII table

dump_positronSpectrum: |
   Dumps positron yield into ASCII table

dump_antiprotonSpectrum: |
   Dumps antiproton yield into ASCII table

dump_antideuteronSpectrum: |
   Dumps antideuteron yield into ASCII table

UnitTest_DarkBit: |
   Prints various DarkBit results into YAML file.

#-------------------------------
# Direct Detection capabilities
#-------------------------------

DD_SetDetectorEmin: |
   Sets the minimum recoil energy relevant for a given direct detection experiment.

DDCalc_1_0_0_init: |
   Initialises DDCalc 1.0.0.

DDCalc_1_1_0_init: |
   Initialises DDCalc 1.1.0.

DDCalc_1_2_0_init: |
   Initialises DDCalc 1.2.0.

DDCalc_2_0_0_init: |
   Initialises DDCalc 2.0.0.

DDCalc_2_1_0_init: |
   Initialises DDCalc 2.1.0.

DDCalc_2_2_0_init: |
   Initialises DDCalc 2.2.0.

DDCalc_Couplings: |
   Initialise DDCalc couplings from a given DM interaction basis.

DD_nonrel_WCs: |
   Non-relativistic Wilson coefficients

DD_rel_WCs_flavscheme: |
   Relativistic Wilson coefficients defined in the 5(or 4 or 3) flavscheme

DD_Experiment: |
   The name of the DDcalc experiment corresponding to a specific experiment index.

DD_Background: |
   The number of background events for a given direct detection experiment.

DD_CalcRates: |
   Perform rate and likelihood calculations for a given direct detection experiment.

DD_Events: |
   The number of observed events for a given direct detection experiment.

DD_LogLikelihood: |
   Calculate the log-likelihood for a given direct detection experiment.

DD_LogPValue: |
   Calculate the log p-value for a given direct detection experiment.

DD_Signal: |
   The number of signal events for a given direct detection experiment.

DD_SignalSD: |
   The number of spin-dependent signal events for a given direct detection experiment.

DD_SignalSI: |
   The number of spin-independent signal events for a given direct detection experiment.

DD_BinBackground: |
   The number of background events in a specific bin for a given direct detection experiment.

DD_BinEvents: |
   The number of events in a specific bin for a given direct detection experiment.

DD_BinSignal: |
   The number of signal events in a specific bin for a given direct detection experiment.

DD_Bins: |
   The number of bins for a given direct detection experiment.

LUX_2013_Init: |
   Initialises a direct detection experiment with the properties of the 2013 analysis of LUX.

LUX_2015_Init: |
   Initialises a direct detection experiment with the properties of the 2015 reanalysis of LUX.

LUX_2016_Init: |
   Initialises a direct detection experiment with the properties of the 2016 analysis of LUX.

SIMPLE_2014_Init: |
   Initialises a direct detection experiment with the properties of the 2014 analysis of SIMPLE.

PICO_2L_Init: |
   Initialises a direct detection experiment with the properties of the analysis of PICO-2L.

PICO_60_F_Init: |
   Initialises a direct detection experiment with the properties of the analysis of PICO-60, including only fluorine.

PICO_60_I_Init: |
   Initialises a direct detection experiment with the properties of the analysis of PICO-60, including only iodine.

PICO_60_2017_Init: |
   Initialises a direct detection experiment with the properties of the 2017 analysis of PICO-60.

PICO_60_2019_Init: |
   Initialises a direct detection experiment with the properties of the 2019 analysis of PICO-60.

PICO_60_Init: |
   Initialises a direct detection experiment with the properties of the analysis of PICO-60.

PICO_500_Init: |
   Initialises a direct detection experiment with the properties of the analysis of PICO-500.

PandaX_2016_Init: |
   Initialises a direct detection experiment with the properties of the 2016 analysis of PandaX.

PandaX_2017_Init: |
   Initialises a direct detection experiment with the properties of the 2017 analysis of PandaX.

XENON100_2012_Init: |
   Initialises a direct detection experiment with the properties of the 2012 analysis of Xenon100.

XENON1T_2017_Init: |
   Initialises a direct detection experiment with the properties of the 2017 analysis of Xenon1T.

XENON1T_2018_Init: |
   Initialises a direct detection experiment with the properties of the 2018 analysis of Xenon1T.

SuperCDMS_2014_Init: |
   Initialises a direct detection experiment with the properties of the 2014 analysis of SuperCDMS.

CDMSlite_Init: |
   Initialises a direct detection experiment with the properties of the analysis of CDMSlite.

CRESST_II_Init: |
   Initialises a direct detection experiment with the properties of the analysis of CRESST-II.

CRESST_III_Init: |
   Initialises a direct detection experiment with the properties of the analysis of CRESST-III.

DarkSide_50_Init: |
   Initialises a direct detection experiment with the properties of the analysis of DarkSide-50.

DarkSide_50_S2_Init: |
   Initialises a direct detection experiment with the properties of the S2-only analysis of DarkSide-50.

DARWIN_Init: |
   Initialises a direct detection experiment with the properties of the analysis of DARWIN.

LZ_Init: |
   Initialises a direct detection experiment with the properties of the analysis of LZ.

FreeDetectorss: |
   Deletes the detector object held internally by DDCalc (relevant for the C/C++ interface of DDCalc).

FreeHalos: |
   Deletes the halo object held internally by DDCalc (relevant for the C/C++ interface of DDCalc).

FreeWIMPs: |
   Deletes the WIMP object held internally by DDCalc (relevant for the C/C++ interface of DDCalc).

FreeAll: |
   Deletes the detector, halo and WIMP objects held internally by DDCalc (relevant for the C/C++ interface of DDCalc).

GetWIMP_mG: |
   Gets the WIMP parameters m, GpSI, GnSI, GpSD, GnSD (used in DDCalc)

GetWIMP_mfa: |
   Gets the WIMP parameters m, fp, fn, ap, an (used in DDCalc)

GetWIMP_msigma: |
   Gets the WIMP parameters m, sigmapSI, sigmanSI, sigmapSD, sigmanSD (used in DDCalc)

GetWIMP_higgsportal: |
   Gets the WIMP parameters m, fsp, fsn, app, apn (used in DDCalc_2_0_0)

SetWIMP_mG: |
   Sets the WIMP parameters m, GpSI, GnSI, GpSD, GnSD (used in DDCalc)

SetWIMP_mfa: |
   Sets the WIMP parameters m, fp, fn, ap, an (used in DDCalc)

SetWIMP_msigma: |
   Sets the WIMP parameters m, sigmapSI, sigmanSI, sigmapSD, sigmanSD (used in DDCalc)

SetWIMP_higgsportal: |
   Sets the WIMP parameters m, fsp, fsn, app, apn (used in DDCalc_2_0_0)

SetWIMP_NREffectiveTheory: |
   Sets the WIMP parameters m, spin for a non-relativistic effective field theory.

SetWIMP_NREFT_CPT: |
   Sets the WIMP parameters m, spin for a non-relativistic effective field theory with corrections from CPT

GetNRCoefficient: |
   Get the value of a given non-relativistic operator

SetNRCoefficient: |
   Set the value of a given non-relativistic operator

InitDetector: |
  Default detector setup used in DDCalc

InitWIMP: |
  Default WIMP structure used in DDCalc

InitHalo: |
  Default Halo structure used in DDCalc

SetSHM: |
  Sets the dark matter halo to the Standard Halo Model (SHM), used in DDCalc

nulike_init: |
  Initializes nulike.

nulike_1_0_4_init: |
  Initializes nulike_1_0_4.

nulike_1_0_5_init: |
  Initializes nulike_1_0_5.

nulike_1_0_6_init: |
  Initializes nulike_1_0_6.

nulike_1_0_7_init: |
  Initializes nulike_1_0_7.

nulike_1_0_8_init: |
  Initializes nulike_1_0_8.

nulike_1_0_9_init: |
  Initializes nulike_1_0_9.

nubounds:
  Counts, likelihoods and p-values from neutrino telescope searches for dark matter annihilation in the Sun.

lnL_Xray_Integral_SPI_sterile_nu: |
  Bound on decaying dark matter subcomponent into \gamma\gamma based on Integral SPI data.
  Recasted from bound on sterile neutrinos (c.f. https://arxiv.org/abs/0706.4084)

lnL_Xray_M31_sterile_nu: |
  Bound on decaying dark matter subcomponent into \gamma\gamma based on M31 data.
  Recasted from bound on sterile neutrinos (c.f. https://arxiv.org/abs/1311.0282)

lnL_Xray_NuSTAR_sterile_nu: |
  Bound on decaying dark matter subcomponent into \gamma\gamma based on NuSTAR data.
  Recasted from bound on sterile neutrinos (c.f. https://arxiv.org/abs/1609.00667)

lnL_Xray_WISPy: |
  Bound on decaying dark matter as presented in fig. 3 of https://arxiv.org/abs/1201.5902

Example_lnL_B: |
  Example log likelihood in ExampleBit B.

lnlike_marg_poisson_gaussian_error: |
  log of the convolution of a Poisson and Gausian distributions.

lnlike_marg_poisson_lognormal_error: |
  log of the convolution of a poisson and log-normal distributions.

DM_initial_density: |
  Energy density of a given DM candidate in the infinite past [eV/cm^3].

DM_decay_rate_2_photons: |
  Decay rate of a given DM candidate into two photons [s].

lnL_INTEGRAL: |
  Computes the log-likelihood for the INTEGRAL X-ray experiment. Returns the value of the log-likelihood at the most constraining energy bin (i.e. the energy bin minimizing the log-likelihood). This choice is made because we don't have the correlations between different energy bins.

lnL_HEAO: |
  Computes the log-likelihood for the HEAO-1 A2 X-ray experiment. Returns the value of the log-likelihood at the most constraining energy bin (i.e. the energy bin minimizing the log-likelihood). This choice is made because we don't have the correlations between different energy bins.

solar_DM_luminosity: |
  Computes the luminosity in eV/s of DM particles produced inside the Sun (for a given DM model).

lnL_solar_luminosity: |
  Log-likelihood from the photon solar luminosity. L_DM < L_ph where L_DM is the DM luminosity produced by the Sun and L_ph is the photon luminosity (conservative bound).

solar_neutrino_flux_Be7: |
  Computes the predicted solar Be7 neutrino flux in the presence of DM production.

solar_neutrino_flux_B8: |
  Computes the predicted solar B8 neutrino flux in the presence of DM production.

lnL_solar_neutrino_Be7: |
  Log-likelihood from the measurement of the Be7 neutrino flux from the Sun.

lnL_solar_neutrino_B8: |
  Log-likelihood from the measurement of the B8 neutrino flux from the Sun.

ISL_Yukawa: |
  Returns the two parameters describing a modification of the gravitational Inverse-Square Law (ISL) by the addition of an extra Yukawa potential. V(r) = -G*m/r^2*alpha*exp(-r/lambda), where lambda is the range of the new interaction and alpha its amplitude.

lnL_ShortRangeForces_Sushkov2011: |
  Log-likelihood from the short range forces experiment from Sushkov et al. 2011 arXiv::1108.2547.

Higgs_Nucleon_coupling_fN: |
  fN parameter from the Higgs-Nucleon coupling. The complete coupling constant is given by fN*mN/vev. Returns a Higgs_Nucleon_coupling_fN object, which is a simple structure containing the value of fN for protons and neutrons.

#-------------------------------------
#  HiggsBounds capabilities
#-------------------------------------

Higgs_Production_Xsecs: |
   Higss Production cross section

HiggsBounds_4_2_1_init:
   Initialises HiggsBounds backend, version 4.2.1.

HiggsBounds_4_3_1_init:
   Initialises HiggsBounds backend, version 4.3.1.

finish_HiggsBounds: |
   Finishes HiggsBound.

initialize_HiggsBounds_int: |
   Initialises HiggsBounds for library linking.

HiggsBounds_charged_input: |
   Required charged input values to initialise HiggsBounds.

HiggsBounds_neutral_input_part: |
   Required neutral input values to initialise HiggsBounds.

HiggsBounds_input_SLHA: |
   HiggsBounds SLHA file reader

HiggsBounds_set_mass_uncertainties: |
   Assign mass uncertainties for HiggsBounds backend.

run_HiggsBounds_classic: |
   Runs HiggsBounds after initialization.

finish_HiggsBounds_chisqtables: |
   Generates chi squared tables from HiggsBounds.

initialize_HiggsBounds_chisqtables: |
   Initializes HiggsBounds to produce chi squared tables.

HB_calc_stats: |
   To quote from HiggsBounds: "this is in the middle of development! DO NOT USE!"


#-------------------------------------
#  HiggsSignals capabilities
#-------------------------------------

HiggsSignals_1_4_init: |
   Initialise HiggsSignals backend.

HiggsSignals_neutral_input_MassUncertainty: |
   Assign mass uncertainties for HiggsSignals backend.

HiggsBounds_charged_input_HS: |
   Required charged input values to initialise HiggsSignals.

HiggsBounds_neutral_input_part_HS: |
   Required neutral input values to initialise HiggsSignals.

HiggsBounds_input_SLHA_HS: |
   HiggsSignals SLHA file reader

initialize_HiggsBounds_int_HS: |
   Initialises HiggsBounds for library linking from HiggsSignals.

finish_HiggsBounds_HS: |
   Finishes HiggsBounds from HiggsSignals.

finish_HiggsSignals: |
   Finishes HiggsSignal Backend.

initialize_HiggsSignals: |
   Initializes HiggsSignals.

initialize_HiggsSignals_latestresults: |
   Initializes HiggsSignals.

run_HiggsSignals: |
   Runs HiggsSignals after Initialization.

setup_pdf: |
   Set pdf shape in HiggsSignals.

setup_rate_uncertainties: |
   Set the rate uncertainties in HiggsSignals.

#-------------------------------------
#  DarkSUSY capabilities
#-------------------------------------

DarkSUSY_5_1_3_init: |
   Initialise DarkSUSY backend.

dsIBffdxdy: |
   Differential internal bremsstrahlung photon yield for fermion final states.

dsIBfsrdxdy: |
   Differential final state radiation photon yield for fermion final states.

dsIBhhdxdy: |
   Differential internal bremsstrahlung photon yield for the H+ H- final state.

dsIBwhdxdy: |
   Differential internal bremsstrahlung photon yield for W+- H-+ final states.

dsIBwwdxdy: |
   Differential internal bremsstrahlung photon yield for the W+ W- final state.

dsSLHAread: |
   DarkSUSY SLHA file reader.

dsanwx: |
   Neutralino self-annihilation invariant rate.

dsddgpgn: |
   Neutralino nucleon four-fermion couplings.

dsgf2s2thw: |
   Determines sin^2(theta_W) based on Fermi constant.

dsgive_model_isasugra: |
   Sets CMSSM model parameters in ISASUGRA included with DarkSUSY.

dsgive_model_SLHA: |
   Reads in SLHA file from disk, and sets DarkSUSY model parameters.

dsmodelsetup: |
   Initializes a particle model point with DarkSUSY (after model papermeters
   have been set with dsgive_xxxx).

dshainit: |
   Intialises and loads common block values needed by DarkSUSY halo yield routines.

dshayield: |
   Integrated or differential yield of a range of SM species from various final states.

dshigwid: |
   Choose which Higgs width calculation to use in DarkSUSY.

dshmcom: |
   Halo model density, distance, and velocity parameters.

dshmframevelcom: |
   Velocity of observer in frame of galaxy.

dshmisodf: |
   Velocity dispersion and escape velocity.

dshmnoclue: |
   Mysterious DarkSUSY halo model common block (contains observer velocity).

dsibyieldone: |
   Inverse bremsstrahlung yield from one channel.

dsinit: |
   Initialise DarkSUSY.

dsmqpole4loop: |
   Calculate quark pole mass.

dsmssmzero: |
   Zeros all electroweak parameters in DarkSUSY.

dsorder_flavour: |
   Orders sfermions based on flavour content as expected by DarkSUSY routines.

dsprep: |
   Calculates cross sections and brnaching ratios and sets common block variables in DarkSUSY

dsrdeqn: |
   Solves the relic density evolution equation.

dsrdinit: |
   Initialise the DarkSUSY relic density routines (read in the degree of freedom table).

dsrdomega: |
   Calculates Omega h^2 for the MSSM neutralino.

dsrdset: |
   Set parameters for DarkSUSY relic density routines (which DOF table is used).

dsrdtab: |
   Tabulate the invariant annihilation rate in DarkSUSY.

dsrdthlim: |
   Determine which limits in p_eff for DarkSUSY to use when integrating for the thermal average.

dsrdwintp: |
   Interpolation of tabulated invariant rate.

dsrdcom: |
   DarkSUSY 6 common block use by the Boltzmann solver.

dsrdens: |
   DarkSUSY Boltzmann solver (for relic density).

dsrdstart: |
   Prepare DarkSUSY Boltzmann solver.

dssigmav: |
   Neutralino self-annihilation cross section <sigma v> in zero velocity limit
   (provided by DarkSUSY up to version 5).

dssigmav0: |
   Partial neutralino self-annihilation cross section <sigma v> in zero velocity limit
   (provided by DarkSUSY from version 6).

dssigmav0tot: |
   Total neutralino self-annihilation cross section <sigma v> in zero velocity limit
   (provided by DarkSUSY from version 6).

dsspectrum: |
   Sets up particle mass spectrum and mixing matrices in DarkSUSY.

dsspwid: |
   Sets widths of particles in DarkSUSY.

dssuconst: |
   Sets many useful constants in DarkSUSY.

dssuconst_ckm: |
   Sets CKM mixing parameters in DarkSUSY.

dssuconst_yukawa_running: |
   Calculates Yukawa couplings in DarkSUSY with running masses.

dssusy: |
   Sets up supersymmetric model routines in DarkSUSY.

dssusy_isasugra: |
   Sets up supersymmetric model routines in DarkSUSY using ISASUGRA.

dsvertx: |
   Sets up SUSY vertices in DarkSUSY.

dswspectrum: |
   Writes out mass spectrum.

dswwidth: |
   Writes out widths.

cap_Sun_v0q0_isoscalar: |
   Capture rate of standard velocity and momentum-independent dark matter in the sun.

raw_muonyield: |
   Gives either the differential or total yield of muons in a neutrino telescope from dark matter annihilation in the sun.

pacodes: |
   Common block containing particle codes used in DarkSUSY.

pacodes_mssm: |
   Common block containing MSSM sparticle codes used in DarkSUSY 6.

pmasses: |
   Common block containing particle masses used in DarkSUSY.

pwidths: |
   Common block containing particle widths used in DarkSUSY.

mssmiuseful: |
   Common block containing DarkSUSY particle codes for lightest supersymmmetric particle and neutralino.

mspctm: |
   DarkSUSY mass spectrum.

widths: |
   DarkSUSY particle widths. (Capability is defined twice.)

intdof: |
   Number of spin and color states for each particle for DarkSUSY.

vrtxs: |
   DarkSUSY interaction vertices.

smruseful: |
   Various standard model parameters.

smcuseful: |
   Contains option to determine how DarkSUSY runs particle masses.

couplingconstants: |
   Coupling constants.

sckm: |
   CKM matrix parameters.

mixing: |
   The CKM matrix.

mssmtype: |
   DarkSUSY parameter that specifies parameterisation of MSSM.

mssmpar: |
   MSSM parameters for DarkSUSY.

mssmswitch: |
   Switches that tell DarkSUSY how to calculate various quantities.

sfermionmass: |
   Sfermion masses for DarkSUSY.

mssmwidths: |
   Widths of Higgs sector particle for DarkSUSY.

mssmmixing: |
   MSSM mixing matrices.

smcoupling: |
   SM couplings for DarkSUSY.

smquarkmasses: |
   SM (running) quark masses for DarkSUSY.

dsfindmtmt: |
   quark mass at the scale mt (used in DarkSUSY).

dssuconst_higgs: |
   Higgs couplings in MSSM used as fallback in DarkSUSY.

dssuconst_yukawa: |
   Yukawa couplings in MSSM used as fallback in DarkSUSY.

rdmgev: |
   Information about (co)annihilating particles for the DarkSUSY relic density routines.

rdpth: |
   Momentum thresholds relevant for DarkSUSY relic density calculation.

rddof: |
   Common block for effective degrees of freedom in DarkSUSY.

rderrors: |
   Common block containing information about errors and warnings from DarkSUSY relic density routines.

rdpars: |
   Parameters that effect the DarkSUSY relic density calculation.

rdswitch: |
   Options for the DarkSUSY relic density calculation.

rdlun: |
   Logical units for DarkSUSY relic density calculation.

rdpadd: |
   Parameters that effect the tabulation of the invariant annihilation rate in DarkSUSY.

rdtime: |
   Timing parameters for DarkSUSY relic density calculations.

IBintvars: |
   Common block for DarkSUSY internal Bremsstrahlung routines.

ddcom: |
   Common block containing DM nucleon couplings and options for their calculation in DarkSUSY 5.

ddcomlegacy: |
   Common block containing options for DM-nucleon couplings in DarkSUSY 6.

ddmssmcom: |
   DarkSUSY 6 common block containing DM nucleon couplings in the MSSM.

nu_common_block: |
   Annihilation branching rates and scalar decay rates used by DarkSUSY routines for DM annihilation in sun.

nuyield: |
   Neutrino yields at the top of the atmosphere.

raw_nuyield_sim: |
   Neutrino yields from simulated channels provided by DarkSUSY 6.

raw_nuyield_casc: |
   Neutrino yields from MSSM cascade decays provided by DarkSUSY 6.

DS_nuyield_setup: |
   Sets DarkSUSY common blocks with all necessary information to calculate neutrino yields.

DS5particle_code: |
   Translates GAMBIT string particle identifiers to corresponding DarkSUSY 5 integer codes.

DSparticle_code: |
   Translates GAMBIT string particle identifiers to corresponding DarkSUSY 6 integer codes.

initFromSLHAeaAndDecayTable: |
   Initialises an MSSM model in DarkSUSY from an SLHAea object and a DecayTable.

get_DS_neutral_h_decay_channels: |
   Vector containing neutral Higgs decay channels in DarkSUSY.

get_DS_charged_h_decay_channels: |
   Vector containing charged Higgs decay channels in DarkSUSY.

#-------------------------------------
#  MicrOmegas capabilities
#-------------------------------------

MicrOmegas_MSSM_3_6_9_2_init: |
   Initialise MicrOmegas MSSM backend.

MicrOmegas_ScalarSingletDM_Z2_3_6_9_2_init: |
   Initialise MicrOmegas ScalarSingletDM_Z2 backend.

MicrOmegas_ScalarSingletDM_Z3_3_6_9_2_init: |
   Initialise MicrOmegas ScalarSingletDM_Z3 backend.

MicrOmegas_VectorSingletDM_Z2_3_6_9_2_init: |
   Initialise MicrOmegas VectorSingletDM_Z2 backend.

MicrOmegas_MajoranaSingletDM_Z2_3_6_9_2_init: |
   Initialise MicrOmegas MajoranaSingletDM_Z2 backend.

MicrOmegas_DiracSingletDM_Z2_3_6_9_2_init: |
   Initialise MicrOmegas DiracSingletDM_Z2 backend.

get_oneChannel: |
   Get the contribution to the relic density from one channel

momegas_print_channels: |
   Print the contributions to the relic density from all channels

assignVal: |
   Assigns a value to a model parameter in MicrOmegas and CalcHEP.

vSigma: |
   The velocity averaged cross section calculated at a specified temperature.

vSigma_freezeout: |
   The velocity averaged cross section calculated at the temperature of thermal freezeout.

oh2: |
   The dark matter relic density (Omega h^2).

suspectSUGRA: |
   Calculates MSSM mass spectrum using SuSpect and use that to intialise MicrOmegas.

lesHinput: |
   Initialises MicrOmegas using an SLHA file.

mass_spectrum: |
   Calculates all masses/couplings in MicrOmegas and sorts odd particles by mass.

cleanDecayTable: |
   Removes all information from MicrOmegas decay table.

nucleonAmplitudes: |
   Calculates WIMP-nucleon scattering amplitudes.

FeScLoop: |
   Calculates loop contributions to WIMP-nucleon scattering.

calcScalarQuarkFF: |
   Calculates nuclear matrix elements for scalar DM-quark interactions.

mInterp: |
   MicrOmegas routine to interpolate between different center of mass energies to determine cosmic ray yields.

zInterp: |
   MicrOmegas routine for interpolating cosmic ray spectra.

readSpectra: |
   MicrOmegas routine to initialise cosmic-ray yield tables.

MOcommon: |
   MicrOmegas global variables.

ForceUG: |
   Flag to force CalcHEP in MicrOmegas to do calculation in unitary gauge.

VZdecay: |
   MicrOmegas flag that turns on 3 body decays via a virtual Z.

VWdecay: |
   MicrOmegas flag that turns on 3 body decays via a virtual W.

dNdE: |
   Differential cosmic-ray yield.

calcSpectrum: |
   MicrOmegas routine for calculating the dark matter annihilation spectrum at rest
   along with the zero velocity annihilation cross section (sigmav)_0 in cm^3 s^-1.

vSigmaCh: |
   MicrOmegas array containing the relative contribution and particle names for each
   annihilation channel. It is filled by the calcSpectrum function in micrOmegas.

#-------------------------------------
#  DecayBit capabilities
#-------------------------------------

decay_rates: |
   Collect all the decay rates into a table.

all_BFs: |
  Returns branching fractions for the specified particles (as a map<str,double>)

Z_decay_rates : |
   All decays of the Z gauge boson.

Higgs_decay_rates : |
   All decays of the most SM-like Higgs boson.

Reference_SM_Higgs_decay_rates : |
   All decays of the Higgs boson in the SM.

eta_decay_rates : |
   All decays of the η meson.

omega_decay_rates : |
   All decays of the ω meson.

lnL_Higgs_invWidth : |
   The log-likelihood of the (SM-like) Higgs invisible width.

h0_2_decay_rates : |
   Decays of the heaviest CP-even MSSM Higgs boson.

A0_decay_rates : |
   Decays of the CP-odd MSSM Higgs boson.

gluino_decay_rates : |
   Decays of the gluino.

t_decay_rates : |
   All decays of the t quark.

snu_electronl_decay_rates : |
   Decays of the ν_eL sneutrinos.

snu_muonl_decay_rates : |
   Decays of the ν_μL sneutrinos.

snu_taul_decay_rates : |
   Decays of the ν_τL sneutrinos.

stop_1_decay_rates : |
   Decays of the t_1 squarks.

sbottom_1_decay_rates : |
   Decays of the b_1 squarks.

stau_1_decay_rates : |
   Decays of the τ_1 sleptons.

stau_1_decay_rates_SH : |
   Decays of the τ_1 sleptons calculated with SUSY-HIT.

stau_1_decay_rates_smallsplit : |
   Decays of the τ_1 sleptons for small stau--neutralino mass splittings.

stop_2_decay_rates : |
   Decays of the t_2 squarks.

sbottom_2_decay_rates : |
   Decays of the b_2 squarks.

stau_2_decay_rates : |
   Decays of the τ_2 sleptons.

tbar_decay_rates : |
   All decays of the anti-t quark.

snubar_electronl_decay_rates : |
   Decays of the anti-ν_eL sneutrinos.

snubar_muonl_decay_rates : |
   Decays of the anti-ν_μL sneutrinos.

snubar_taul_decay_rates : |
   Decays of the anti-ν_τL sneutrinos.

stopbar_1_decay_rates : |
   Decays of the anti-t_1 squarks.

sbottombar_1_decay_rates : |
   Decays of the anti-b_1 squarks.

staubar_1_decay_rates : |
   Decays of the anti-τ_1 sleptons.

stopbar_2_decay_rates : |
   Decays of the anti-t_2 squarks.

sbottombar_2_decay_rates : |
   Decays of the anti-b_2 squarks.

staubar_2_decay_rates : |
   Decays of the anti-τ_2 sleptons.

mu_plus_decay_rates : |
  All decays of the μ+ lepton.

tau_plus_decay_rates : |
  All decays of the τ+ lepton.

W_plus_decay_rates : |
  All decays of the W+ gauge boson.

H_plus_decay_rates : |
   Decays of the MSSM H+.

chargino_plus_1_decay_rates : |
   Decays of the chargino+ 1.

chargino_plus_1_decay_rates_SH : |
   Decays of the chargino+ 1 calculated using SUSY-HIT.

chargino_plus_1_decay_rates_smallsplit : |
   Decays of the chargino+ 1 at small chargino--neutralino mass splittings.

chargino_plus_2_decay_rates : |
   Decays of the chargino+ 2.

mu_minus_decay_rates : |
  All decays of the μ- lepton.

tau_minus_decay_rates : |
  All decays of the τ- lepton.

W_minus_decay_rates : |
  All decays of the W- gauge boson.

chargino_minus_1_decay_rates : |
   Decays of the chargino- 1.

chargino_minus_2_decay_rates : |
   Decays of the chargino- 2.

rho1450_decay_rates : |
  Decays of the ρ(1450) meson.

neutralino_1_decay_rates : |
   Decays of the neutralino 1.

neutralino_2_decay_rates : |
   Decays of the neutralino 2.

neutralino_3_decay_rates : |
   Decays of the neutralino 3.

neutralino_4_decay_rates : |
   Decays of the neutralino 4.

SLHA1_violation: |
   Checks if the first or second generation left-right mixing exceeds the specified tolerance (which means that SLHA1 is an invalid format for this model point).

SLHA_pseudonyms: |
   Get MSSM mass eigenstate pseudonyms for the gauge eigenstates

Reference_SM_A0_decay_rates: |
   Computation of decays of SM Higgs with mass equal to the mass of the CP-odd Higgs boson.

Reference_SM_other_Higgs_decay_rates: |
   Computation of decays of SM Higgs with mass equal to the mass of the least SM-like CP-even Higgs.

Z_gamma_nu: |
   Decay width of the Z boson to neutrinos in MeV.

Z_gamma_chi_0: |
   Decay width of the Z boson to neutralinos in MeV.

W_to_l_decays: |
   Precision calculation of W decays to leptons

lnL_W_decays: |
   Log-likelihood of the W decays to leptons

lnL_Z_inv: |
   Log Likelihood for the inivislbe decay width of the Z boson.

inv_Higgs_BF: |
   Invisible decay branching fraction of the SM-like Higgs boson.

#-------------------------------------
#  PrecisionBit capabilities
#-------------------------------------


MSSM_spectrum: |
    Provide an updated MSSM spectrum from the unimproved version with
    precision W and Higgs masses.

lnL_alpha_em : |
   Log-likelihood of α_EM (m_Z), the MSBar value of the fine structure constant at μ = m_Z.

lnL_alpha_s : |
   Log-likelihood of α_s (m_Z), the MSBar value of the strong coupling constant at μ = m_Z.

lnL_GF : |
   Log-likelihood of the Fermi coupling constant G_F.

lnL_light_quark_masses : |
   Joint log-likelihood of the MSbar masses of the u, d and s quarks at μ = 2 GeV.

lnL_mcmc : |
   Log-likelihood of the MSbar mass of the c quark at scale m_c.

lnL_mbmb : |
   Log-likelihood of the MSbar mass of the b quark at scale m_b.

lnL_t_mass : |
   Log-likelihood of the top quark pole mass.

lnL_mtrun : |
   Log-likelihood of the MSbar running top mass.

lnL_Z_mass : |
   Log-likelihood of the Z boson pole mass.

lnL_h_mass : |
   Simple log-likelihood of the SM-like Higgs boson pole mass.

lnL_W_mass : |
   Log-likelihood of the W boson pole mass.

lnL_neutron_lifetime_beam : |
   Log-likelihood on the neutron lifetime based on measurements of 'beam' experiments

lnL_neutron_lifetime_bottle : |
   Log-likelihood on the neutron lifetime based on measurements of 'bottle' experiments

mw : |
   The W boson pole mass.

mh : |
   The SM-like Higgs boson pole mass.

Precision : |
   Precision observable tableau (e.g. as calculated with FeynHiggs).

SP_PrecisionObs : |
   Precision observable tableau, as calculated with SUSY-POPE.

deltarho : |
   Deviation from one (∆ρ) of the ratio of the Fermi effective coupling (G_F) in W and Z-mediated processes.

prec_mw : |
   Precision value of the W mass.

prec_mh : |
   Precision value of the mass of the most SM-like Higgs boson.

prec_HeavyHiggsMasses : |
   Precision values of the masses of the A^0, H+ and the least SM-like neutral Higgs boson.

prec_sinW2_eff : |
   Precision value of the effective leptonic weak mixing angle sin^2 θ_W,eff.

edm_e : |
   The electric dipole moment of the electron.

edm_n : |
   The electric dipole moment of the neutron.

edm_hg : |
   The electric dipole moment of mercury.

muon_gm2: |
   The BSM contribution to g−2 of the muon.

muon_gm2_SM: |
   The SM contribution to g−2 of the muon.

lnL_sinW2_eff : |
   Log-likelihood of the effective leptonic weak mixing angle sin^2 θ_W,eff.

lnL_gm2 : |
   Log-likelihood of the muon g−2.

lnL_deltarho : |
   Log-likelihood of ∆ρ, the departure from one of the ratio of the Fermi effective coupling (G_F) in W and Z-mediated processes.



#-------------------------------------
#  FlavBit, SuperIso and HepLike capabilities
#-------------------------------------

AI_BKstarmumu : |
   The isospin asymmetry in B-> K* μ+ μ-.

AI_BKstarmumu_zero : |
   The zero-crossing of the isospin asymmetry in B-> K* μ+ μ-.

A_BXsll_highq2 : |
   The integrated forward-backward asymmetry of B->Xs l+ l- in the high-q2 bin.

A_BXsll_lowq2 : |
   The integrated forward-backward asymmetry of B->Xs l+ l- in the low-q2 bin.

A_BXsll_zero : |
   The zero crossing of the forward-backward asymmetry of B->Xs l+ l-.

A_BXsmumu_highq2 : |
   The integrated forward-backward asymmetry of B->Xs μ+ μ- in the high-q2 bin.

A_BXsmumu_lowq2 : |
   The integrated forward-backward asymmetry of B->Xs μ+ μ- in the low-q2 bin.

A_BXsmumu_zero: |
   The Wilson coefficients and the zero crossing of the forward-backward asymmetry of B->Xs μ+ μ-.

A_BXstautau_highq2 : |
   The Wilson coefficients and the integrated forward-backward asymmetry of B->Xs tau+ tau- in the high-q2 bin.

BDmunu : |
   The branching ratio of B-> D mu nu.

BDtaunu : |
   The branching ratio of B-> D tau nu.

BRBDlnu : |
   The branching ratio of B-> D l nu.

BDtaunu_BDenu : |
   The ratio of BR(B-> D tau nu)/BR(B-> D e nu).

BDstarmunu : |
   The branching ratio of B-> D* mu nu.

BDstartaunu : |
   The branching ratio of B-> D* tau nu.

BRBDstarlnu : |
   The branching ratio of B-> D* l nu.

BDstartaunu_BDstarenu : |
   The ratio of BR(B-> D* tau nu)/BR(B-> D* e nu).

BKstarmumu_11_25 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 1.1 and 2.5 GeV^2.

BKstarmumu_25_40 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 2.5 and 4 GeV^2.

BKstarmumu_40_60 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 4 and 6 GeV^2.

BKstarmumu_60_80 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 6 and 8 GeV^2.

BKstarmumu_15_17 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 15 and 17 GeV^2.

BKstarmumu_17_19 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 17 and 19 GeV^2.

BRBKll : |
   The differential cross-section and angular observables of B-> K l+ l-.

BRBKstarll : |
   The differential cross-section and angular observables of B-> K* l+ l-.

BRBXsll_highq2 : |
   The branching ratio B-> Xs l+ l- in the high-q2 bin.

BRBXsll_lowq2 : |
   The branching ratio B-> Xs l+ l- in the low-q2 bin.

prediction_BRBXsmumu_highq2 : |
   The branching ratio B-> Xs μ+ μ- in the high-q2 bin.

prediction_BRBXsmumu_lowq2 : |
   The branching ratio B-> Xs μ+ μ- in the low-q2 bin.

BRBXstautau_highq2 : |
   The Wilson coefficients and the branching ratio B-> Xs tau+ tau- in the low-q2 bin.

BRBsphill : |
   The differential cross-section and angular observables of Bs-> phi l+ l-.

Bll : |
   The branching ratio of Bd-> l+ l-.

Blnu : |
   The branching ratio of B-> l nu.

Bmumu : |
   The branching ratio of Bd-> μ+ μ-.

Bsee_untag : |
   The untagged branching ratio of Bs-> e+ e-.

Bsll_untag : |
   The untagged branching ratio of Bs-> l+ l-.

Bsmumu : |
   The branching ratio of Bs-> μ+ μ-.

Bsmumu_untag : |
   The untagged branching ratio of Bs-> μ+ μ-.

Btaunu : |
   The branching ratio of B-> tau nu.

CQ_calculator : |
   The scalar and pseudoscalar Wilson coefficients.

CW_calculator : |
   The Wilson coefficients at the W mass scale.

C_calculator_base1 : |
   The Wilson coefficients at the b mass scale in the operator basis 1.

C_calculator_base2 : |
   The Wilson coefficients at the b mass scale in the operator basis 2.

Cprime_calculator : |
   The primed Wilson coefficients.

prediction_DeltaMs : |
   The Bs meson mass difference.

Dmunu : |
   The branching ratio of D-> mu nu.

Dsmunu : |
   The branching ratio of Ds-> mu nu.

Dstaunu : |
   The branching ratio of Ds-> tau nu.

Kmunu_pimunu : |
   The ratio of BR(K-> mu nu)/BR(pi-> mu nu).

RD : |
   The ratio of BR(B-> D tau nu)/BR(B-> D e nu).

RDstar : |
   The ratio of BR(B-> D* tau nu)/BR(B-> D* e nu).

Rmu : |
   The ratio of BR(K-> mu nu)/BR(pi-> mu nu).

Rmu23 : |
   The Rmu23 observable related to K-> mu nu and pi-> mu nu.

modified_AI_BKstarmumu : |
   The Wilson coefficients and the isospin asymmetry in B-> K* μ+ μ-.

modified_AI_BKstarmumu_zero : |
   The Wilson coefficients and the zero crossing of isospin asymmetry in B-> K* μ+ μ-.

SL_LL : |
  Log-likelihood for the tree-level leptonic and semileptonic B and D decays.

SL_M : |
  Measurements related to the tree-level leptonic and semileptonic B and D decays.

SuperIso_4_1_init : |
   Initalise SuperIso v4.1.

SuperIso_modelinfo : |
   SuperIso internal model information.

bsgamma : |
   The inclusive branching ratio of B-> Xs gamma with a photon energy cut of 1.6 GeV.

bsgamma_Ecut : |
   The inclusive branching ratio of B-> Xs gamma with a photon energy cut Ecut.

delta0 : |
   The isospin asymmetry of B-> K* gamma.

modified_delta0 : |
   Wilson coefficients and the isospin asymmetry of B-> K* gamma.

deltaMB_LL : |
   Log-likelihood for the Bs meson mass difference.

mb_1S : |
   The 1S bottom quark mass.

Init_param : |
   Initialiases the SuperIso parameter structure.

alphas_running : |
   Computes the alphas running coupling at a given energy.

slha_adjust : |
   Adjusts the SLHA parameters to the SuperIso standard.

LUV_LL :  |
   Calculate the likelihood function of the b->sll LUV observables (RK, RK*)

LUV_M :  |
   Measurements related to LUV in b->sll

RK :  |
   Calculation R_K in 1-6GeVGeV

RKstar_0045_11:  |
   Calculation R_K* in 0.045-1.1GeVGeV

RKstar_11_60:  |
   Calculation R_K* in 1.1 -  6.0 GeVGeV

muegamma: |
   Calculates the BF for the mu- -> e- gamma process

tauegamma: |
   Calculates the BF for the tau- -> e- gamma process

taumugamma: |
   Calculates the BF for the tau- -> mu gamma process

mueee: |
   Calculats the BF for the mu- -> e- e- e+ process

taueee: |
   Calculates the BF for the tau- -> e- e- e+ process

taueemu: |
   Calculates the BF for the tau- -> e- e- mu+ process

tauemumu: |
   Calculates the BF for the tau- -> e- mu- mu+ process

taumuee: |
   Calculates the BF for the tau- -> mu- e- e+ process

taumumue: |
   Calculates the BF for the tau- -> mu- mu- e+ process

taumumumu: |
   Calculates the BF for the tau- -> mu- mu- mu+ process

mueTi: |
   Calculates the ratio for mu-e conversion in Titanium wrt capture

mueAu: |
   Calculates the ratio for mu-e conversion in gold wrt capture

muePb: |
   Calculates the ratio for mu-e conversion in lead wrt capture

l2lgamma_lnL: |
   Log-likelihood for l -> l gamma processes

l2lll_lnL: |
   Log-likelihood for l -> l l l processes

mu2e_lnL: |
   Log-likelihood for mu - e conversion in nucleii

B2KmumuBr_LogLikelihood_LHCb: |
   Log-likelihood for B->K mu mu with LHCb

B2KstareeAng_Lowq2_LogLikelihood_LHCb_2020:
   Log-likelihood for B->K* e e from 2020 LHCb analysis

B2KstarellellAng_LogLikelihood_Belle: |
   Log-likelihood for B->K* l l from Belle

B2Kstargamma_LogLikelihood: |
   Log-likelihood for B->K* gamma

B2KstarmumuAng_LogLikelihood_Atlas: |
   Log-likelihood for B->K* mu mu angular analysis by ATLAS

B2KstarmumuAng_LogLikelihood_Belle: |
   Log-likelihood for B->K* mu mu angular analysis by Belle

B2KstarmumuAng_LogLikelihood_CMS: |
   Log-likelihood for B->K* mu mu angular analysis by CMS

B2KstarmumuAng_LogLikelihood_LHCb: |
   Log-likelihood for B->K* mu mu angular analysis by LHCb

B2KstarmumuAng_LogLikelihood_LHCb_2020: |
   Log-likelihood for B->K* mu mu angular analysis by LHCb in 2020

B2KstarmumuBr_LogLikelihood_LHCb: |
   Log-likelihood for branching fraction for B->K* mu mu by LHCb

Bu2KstarmumuAng_LogLikelihood_LHCb_2020: |
   Log-likelihood for B_u->K* mu mu angular analysis by LHCb in 2020

B2mumu_LogLikelihood_Atlas: |
   Log-likelihood for B-> mu mu by ATLAS

B2mumu_LogLikelihood_CMS: |
   Log-likelihood for B-> mu mu by CMS

B2mumu_LogLikelihood_LHCb: |
   Log-likelihood for B-> mu mu by LHCb

B2taunu_LogLikelihood: |
   Log-likelihood for B-> tau nu

Bs2phimumuBr_LogLikelihood: |
   Log-likelihood for branching fraction of B_s-> phi mu mu

HepLike_1_2_init: |
   Initialise HepLike

RDRDstar_LogLikelihood: |
   Incomplete likelihood for RD and RD*

RK_LogLikelihood: |
   Incomplete likelihood for RK

RKstar_LogLikelihood_LHCb: |
   Incomplete likelihood for RK*

SuperIso_nuisance: |
   SuperIso nuiscance parameter data

b2sgamma_LogLikelihood: |
   Log-likelihood for b->s gamma

set_nuisance: |
   SuperIso function related to theory correlations

set_nuisance_value_from_param: |
   SuperIso function related to theory correlations

convert_correlation: |
   SuperIso function related to theory correlations

get_predictions_nuisance: |
   SuperIso function related to theory correlations

get_th_covariance_nuisance: |
   SuperIso function related to theory correlations

make_obslist: |
   SuperIso function related to theory correlations

mcmc_from_pole: |
   Charm mass mc at scale mc in MSbar scheme, computed from the pole mass

observables: |
   SuperIso function that computes any observable known to the backend.

sm_prediction: |
   Flavio function for getting the Standard Model prediction for an observable

modified_sm_prediction: |
   Convenience function version of Flavio function for getting the Standard Model prediction for an observable

prediction_B2Kstargamma: |
   Theoretical prediction for B->K* gamma

prediction_b2sgamma: |
   Theoretical prediction for b->s gamma

prediction_AFBBXsmumu_highq2: |
   Theoretical prediction for forward-backwards asymmetry of branching ratio for B->X_s mu mu, in high q^2 bins

prediction_AFBBXsmumu_lowq2: |
   Theoretical prediction for forward-backwards asymmetry of branching ratio for B->X_s mu mu, in low q^2 bins

prediction_B2KmumuBr_0p05_2: |
   Theoretical prediction for branching ratio of B->K mu mu, for q2 between 0.5 and 2 GeV^2

prediction_B2KmumuBr_2_4p3: |
   Theoretical prediction for branching ratio of B->K mu mu, for q2 between 2 and 4.3 GeV^2

prediction_B2KmumuBr_4p3_8p68: |
   Theoretical prediction for branching ratio of B->K mu mu, for q2 between 4.3 and 8.68 GeV^2

prediction_B2KmumuBr_14p18_16: |
   Theoretical prediction for branching ratio of B->K mu mu, for q2 between 14.18 and 16 GeV^2

prediction_B2KmumuBr_16_18: |
   Theoretical prediction for branching ratio of B->K mu mu, for q2 between 16 and 18 GeV^2

prediction_B2KmumuBr_18_22: |
   Theoretical prediction for branching ratio of B->K mu mu, for q2 between 18 and 22 GeV^2

prediction_B2KstareeAng_0p0008_0p257_LHCb: |
   Theoretical prediction for B->K* e e, for q2 between 0.0008 and 0.257 GeV^2 (relevant for LHCb analysis)

prediction_B2KstarmumuAng_0p1_0p98_LHCb: |
   Theoretical prediction for B->K* mu mu, for q2 between 0.1 and 0.98 GeV^2 (relevant for LHCb analysis)

prediction_B2KstarmumuAng_1p1_2p5_LHCb: |
   Theoretical prediction for B->K* mu mu, for q2 between 1.1 and 2.5 GeV^2 (relevant for LHCb analysis)

prediction_B2KstarmumuAng_2p5_4_LHCb: |
   Theoretical prediction for B->K* mu mu, for q2 between 2.5 and 4 GeV^2 (relevant for LHCb analysis)

prediction_B2KstarmumuAng_4_6_LHCb: |
   Theoretical prediction for B->K* mu mu, for q2 between 4 and 6 GeV^2 (relevant for LHCb analysis)

prediction_B2KstarmumuAng_6_8_LHCb: |
   Theoretical prediction for B->K* mu mu, for q2 between 6 and 8 GeV^2 (relevant for LHCb analysis)

prediction_B2KstarmumuAng_15_19_LHCb: |
   Theoretical prediction for B->K* mu mu, for q2 between 15 and 19 GeV^2 (relevant for LHCb analysis)

prediction_B2KstarmumuAng_0p1_2_Atlas: |
   Theoretical prediction for B->K* mu mu, for q2 between 0.1 and 2 GeV^2 (relevant for ATLAS analysis)

prediction_B2KstarmumuAng_2_4_Atlas: |
   Theoretical prediction for B->K* mu mu, for q2 between 2 and 4 GeV^2 (relevant for ATLAS analysis)

prediction_B2KstarmumuAng_4_8_Atlas: |
   Theoretical prediction for B->K* mu mu, for q2 between 4 and 8 GeV^2 (relevant for ATLAS analysis)

prediction_B2KstarmumuAng_0p1_4_Belle: |
   Theoretical prediction for B->K* mu mu, for q2 between 0.1 and 4 GeV^2 (relevant for Belle analysis)

prediction_B2KstarmumuAng_4_8_Belle: |
   Theoretical prediction for B->K* mu mu, for q2 between 4 and 8 GeV^2 (relevant for Belle analysis)

prediction_B2KstarmumuAng_10p9_12p9_Belle: |
   Theoretical prediction for B->K* mu mu, for q2 between 10.9 and 12.9 GeV^2 (relevant for Belle analysis)

prediction_B2KstarmumuAng_14p18_19_Belle: |
   Theoretical prediction for B->K* mu mu, for q2 between 14.18 and 19 GeV^2 (relevant for Belle analysis)

prediction_B2KstarmumuAng_1_2_CMS: |
   Theoretical prediction for B->K* mu mu, for q2 between 1 and 2 GeV^2 (relevant for CMS analysis)

prediction_B2KstarmumuAng_2_4p3_CMS: |
   Theoretical prediction for B->K* mu mu, for q2 between 2 and 4.3 GeV^2 (relevant for CMS analysis)

prediction_B2KstarmumuAng_4p3_6_CMS: |
   Theoretical prediction for B->K* mu mu, for q2 between 4.3 and 6 GeV^2 (relevant for CMS analysis)

prediction_B2KstarmumuAng_6_8p68_CMS: |
   Theoretical prediction for B->K* mu mu, for q2 between 6 and 8.68 GeV^2 (relevant for CMS analysis)

prediction_B2KstarmumuAng_10p09_12p86_CMS: |
   Theoretical prediction for B->K* mu mu, for q2 between 10.09 and 12.86 GeV^2 (relevant for CMS analysis)

prediction_B2KstarmumuAng_14p18_16_CMS: |
   Theoretical prediction for B->K* mu mu, for q2 between 14.18 and 16 GeV^2 (relevant for CMS analysis)

prediction_B2KstarmumuAng_16_19_CMS: |
   Theoretical prediction for B->K* mu mu, for q2 between 16 and 19 GeV^2 (relevant for CMS analysis)

prediction_B2KstarmumuBr_0p1_0p98: |
   Theoretical prediction of the branching fraction of B->K* mu mu, for q2 between 0.1 and 0.98 GeV^2

prediction_B2KstarmumuBr_1p1_2p5: |
   Theoretical prediction of the branching fraction of B->K* mu mu, for q2 between 1.1 and 2.5 GeV^2

prediction_B2KstarmumuBr_2p5_4: |
   Theoretical prediction of the branching fraction of B->K* mu mu, for q2 between 2.5 and 4 GeV^2

prediction_B2KstarmumuBr_4_6: |
   Theoretical prediction of the branching fraction of B->K* mu mu, for q2 between 4 and 6 GeV^2

prediction_B2KstarmumuBr_6_8: |
   Theoretical prediction of the branching fraction of B->K* mu mu, for q2 between 6 and 8 GeV^2

prediction_B2KstarmumuBr_15_19: |
   Theoretical prediction of the branching fraction of B->K* mu mu, for q2 between 15 and 19 GeV^2

prediction_B2mumu: |
   Theoretical prediction for B-> mu mu

prediction_B2taunu: |
   Theoretical prediction for B-> tau nu

prediction_Bs2phimumuBr_1_6: |
   Theoretical prediction of the branching fraction of B_s->phi mu mu, for q2 between 1 and 6 GeV^2

prediction_Bs2phimumuBr_15_19: |
   Theoretical prediction of the branching fraction of B_s->phi mu mu, for q2 between 15 and 19 GeV^2

prediction_RDRDstar: |
   Theoretical prediction of the ratios R_D and R_D*

prediction_RK_LHCb_1p1_6: |
   Theoretical prediction of the ratio R_K, for q2 between 1.1 and 6 GeV^2 (relevant for LHCb analysis)

prediction_RKstar_LHCb_0p045_1p1: |
   Theoretical prediction of the ratio R_K*, for q2 between 0.045 and 1.1 GeV^2 (relevant for LHCb analysis)

prediction_RKstar_LHCb_1p1_6: |
   Theoretical prediction of the ratio R_K*, for q2 between 1.1 and 6 GeV^2 (relevant for LHCb analysis)


#-------------------------------------
#  SUSY-HIT capabilities
#-------------------------------------

SUSY_HIT_1_5_init: |
   Initialise SUSY-HIT backend

sdecay: |
   Computation of all MSSM decays.

unlikely: |
   An unlikely double (used for SUSY-HIT initialisation).

cb_checkfavvio: |
   Common block containing options for flavour violation.

cb_susyhitin: |
   Various standard model parameters used by SUSY-HIT.

cb_sd_leshouches1: |
   SLHA1 values for SDecay.

cb_sd_leshouches2: |
   SLHA2 values for SDecay

cb_slha_leshouches1_hdec: |
   SLHA1 values for HDecay.

cb_slha_leshouches2_hdec: |
   SLHA2 values for HDecay.

cb_widtha_hdec: |
   Decay width and branching fractions to SM and Higgs sector particles of A_0.

cb_widthhl_hdec: |
   Decay width and branching fractions to SM and Higgs sector particles of h0_1.

cb_widthhh_hdec: |
   Decay width and branching fractions to SM and Higgs sector particles of h0_2.

cb_widthhc_hdec: |
   Decay width and branching fractions to SM and Higgs sector particles of H_+.

cb_wisusy_hdec: |
   Branching fractions of various particles to SUSY particles.

cb_wisfer_hdec: |
   Branching fractions of various particles to sfermions.

cb_hd_golddec: |
   Goldstino decay widths.

cb_sd_char2body: |
   Branching fractions for two body decays of chargino_+_1.

cb_sd_char2bodygrav: |
   Branching fractions for two body decays of chargino_+_1 with gravitino in final state.

cb_sd_char3body: |
   Branching fractions for three body decays of chargino_+_1.

cb_sd_charwidth: |
   The total width of chargino_+_1.

cb_sd_neut2body: |
   Branching fractions for two body decays of neutralino_1.

cb_sd_neut2bodygrav: |
   Branching fractions for two body decays of neutralino_1 with gravitino in final state.

cb_sd_neut3body: |
   Branching fractions for three body decays of neutralino_1.

cb_sd_neutloop: |
   Branching fractions for loop induced decays of neutralino_1.

cb_sd_neutwidth: |
   Total width of neutralino_1.

cb_sd_glui2body: |
   Branching fractions for two body decays of gluino.

cb_sd_glui3body: |
   Branching fractions for three body decays of gluino.

cb_sd_gluiloop: |
   Branching fractions for loop induced decays of gluino.

cb_sd_gluiwidth: |
   Total width of gluino.

cb_sd_sup2body: |
   Branching fractions for two body decays of sups.

cb_sd_supwidth: |
   Total width of sups.

cb_sd_sdown2body: |
   Branching fractions for two body decays of sdowns.

cb_sd_sdownwidth: |
   Total width of sdowns.

cb_sd_stop2body: |
   Branching fractions for two body decays of stops.

cb_sd_stop3body: |
   Branching fractions for three body decays of stops.

cb_sd_stoploop: |
   Branching fractions for loop induced decays of stops.

cb_sd_stop4body: |
   Branching fractions for four body decays of stops.

cb_sd_stopwidth: |
   Total width of stops.

cb_sd_sbot2body: |
   Branching fractions for two body decays of sbottoms.

cb_sd_sbot3body: |
   Branching fractions for three body decays of sbottoms.

cb_sd_sbotwidth: |
   Total width of sbottoms.

cb_sd_sel2body: |
   Branching fractions for two body decaus of selectrons.

cb_sd_selwidth: |
   Total width of selectrons.

cb_sd_snel2body: |
   Branching fractions for two body decays of electron sneutrinos.

cb_sd_snelwidth: |
   Total width of electron sneutrinos.

cb_sd_stau2body: |
   Branching fractions for two body decauys of staus.

cb_sd_stau2bodygrav: |
   Branching fractions for two body decays of staus with gravitinos in the final state.

cb_sd_stauwidth: |
   Total width of staus.

cb_sd_sntau2body: |
   Branching fractions for two body decays of tau sneutrinos.

cb_sd_sntauwidth: |
   Total width of tau sneutrinos.

cb_sd_top2body: |
   Branching fractions for tops to two body final states.

cb_sd_topwidth: |
   Total width of top.

cb_flavviolation: |
   Mixing matrices.

cb_sd_mbmb: |
   Mb(Mb) in the MSbar scheme.

cb_sd_selectron: |
   Selectron mixing matrix.

susy_hit_backend_level_init: |
   Runs SUSY-HIT decay calculations.

H_minus_decay_rates: |
   Decay rate of the negative chared higgs.

scharm_l_decay_rates: |
   Decay rate of the left-handed scharm.

scharm_r_decay_rates: |
   Decay rate of the right-handed scharm.

scharmbar_l_decay_rates: |
   Decay rate of the left-handed anti-scharm.

scharmbar_r_decay_rates: |
   Decay rate of the right-handed anti-scharm.

sdown_l_decay_rates: |
   Decay rate of the left-handed sdown.

sdown_r_decay_rates: |
   Decay rate of the right-handed sdown.

sdownbar_l_decay_rates: |
   Decay rate of the left-handed anti-sdown.

sdownbar_r_decay_rates: |
   Decay rate of the right-handed auti-sdown.

selectron_l_decay_rates: |
   Decay rate of the left-handed selectron.

selectron_r_decay_rates: |
   Decay rate of the right-handed selectron.

selectronbar_l_decay_rates: |
   Decay rate of the left-handed anti-selectron.

selectronbar_r_decay_rates: |
   Decay rate of the right-handed anti-selectron.

pi_0_decay_rates: |
   Decay rate of the pi_0 meson.

pi_minus_decay_rates: |
   Decay rate of the pi minus mesaon.

pi_plus_decay_rates: |
   Decay rate of the pi plus meson.

rho_0_decay_rates: |
   Decay rate of the rho_0 meson.

rho_minus_decay_rates: |
   Decay rate of the rho minus meson.

rho_plus_decay_rates: |
   Decay rate of the rho plus meson.

smuon_l_decay_rates: |
   Decay rate of the left-handed smuon.

smuon_r_decay_rates: |
   Decay rate of the right-handed smuon.

smuonbar_l_decay_rates: |
   Decay rate of the left-handed anti-smuon.

smuonbar_r_decay_rates: |
   Decay rate of the right-handed anti-smuon.

sstrange_l_decay_rates: |
   Decay rate of the left-handed sstrang.

sstrange_r_decay_rates: |
   Decay rate of the right-handed sstrang.

sstrangebar_l_decay_rates: |
   Decay rate of the left-handed anti-sstrang.

sstrangebar_r_decay_rates: |
   Decay rate of the right-handed anti-sstrang.

sup_l_decay_rates: |
   Decay rate of the left-handed sup.

sup_r_decay_rates: |
   Decay rate of the right-handed sup.

supbar_l_decay_rates: |
   Decay rate of the left-handed anti-sup.

supbar_r_decay_rates: |
   Decay rate of the right-handed anti-sup.

#-------------------------------------
#  Model capabilities
#-------------------------------------

DMEFT_parameters: |
   Parameters for the DMEFT model (see ./gambit DMEFT)

Halo_Einasto_parameters: |
   Parameters of the Einasto halo profile (rho0, rhos, vrot, v0, vesc, rs, r_sun, alpha).
   See also ./gambit Halo_Einasto

Halo_Einasto_rho0_parameters: |
   Parameters of the Einasto halo profile, with rhos being internally calculated from rho0 and the other parameters.
   See also ./gambit Halo_Einasto_rho0

Halo_Einasto_rhos_parameters: |
   Parameters of the Einasto halo profile, with rho0 being internally calculated from rhos and the other parameters.
   See also ./gambit Halo_Einasto_rhos

Halo_gNFW_parameters: |
   Parameters of the generalized NFW halo profile (rho0, rhos, vrot, v0, vesc, rs, r_sun, alpha, beta, gamma).
   See also ./gambit Halo_gNFW

Halo_gNFW_rho0_parameters: |
   Parameters of the generalized NFW halo profile, with rhos being internally calculated from rho0 and the other parameters.
   See also ./gambit Halo_gNFW_rho0

Halo_gNFW_rhos_parameters: |
   Parameters of the generalized NFW halo profile, with rho0 being internally calculated from rhos and the other parameters.
   See also ./gambit Halo_gNFW_rhos

MSSM10atQ_parameters: |
   Parameters for the model MSSM10atQ (see ./gambit MSSM10atQ)

MSSM10batQ_parameters: |
   Parameters for the model MSSM10batQ (see ./gambit MSSM10batQ)

MSSM10catQ_parameters: |
   Parameters for the model MSSM10catQ (see ./gambit MSSM10catQ)

MSSM11atQ_parameters: |
   Parameters for the model MSSM11atQ (see ./gambit MSSM11atQ)

MSSM15atQ_parameters: |
   Parameters for the model MSSM15atQ (see ./gambit MSSM15atQ)

MSSM16atQ_parameters: |
   Parameters for the model MSSM16atQ (see ./gambit MSSM16atQ)

MSSM19atQ_parameters: |
   Parameters for the model MSSM19atQ (see ./gambit MSSM19atQ)

MSSM20atMSUSY_parameters: |
   Parameters for the model MSSM20atMSUSY (see ./gambit MSSM20atMSUSY)

MSSM20atMSUSY_mA_parameters: |
   Parameters for the model MSSM20atMSUSY_mA (see ./gambit MSSM20atMSUSY_mA)

MSSM20atMGUT_parameters: |
   Parameters for the model MSSM20atMGUT (see ./gambit MSSM20atMGUT)

MSSM20atMGUT_mA_parameters: |
   Parameters for the model MSSM20atMGUT_mA (see ./gambit MSSM20atMGUT_mA)

MSSM20atQ_parameters: |
   Parameters for the model MSSM20atQ (see ./gambit MSSM20atQ)

MSSM24atQ_parameters: |
   Parameters for the model MSSM24atQ (see ./gambit MSSM24atQ)

MSSM25atMSUSY_parameters: |
   Parameters for the model MSSM25atMSUSY (see ./gambit MSSM25atMSUSY)

MSSM25atMSUSY_mA_parameters: |
   Parameters for the model MSSM25atMSUSY_mA (see ./gambit MSSM25atMSUSY_mA)

MSSM25atMGUT_parameters: |
   Parameters for the model MSSM25atMGUT (see ./gambit MSSM25atMGUT)

MSSM25atMGUT_mA_parameters: |
   Parameters for the model MSSM25atMGUT_mA (see ./gambit MSSM25atMGUT_mA)

MSSM25atQ_parameters: |
   Parameters for the model MSSM25atQ (see ./gambit MSSM25atQ)

MSSM30atMSUSY_parameters: |
   Parameters for the model MSSM30atMSUSY (see ./gambit MSSM30atMSUSY)

MSSM30atMSUSY_mA_parameters: |
   Parameters for the model MSSM30atMSUSY_mA (see ./gambit MSSM30atMSUSY_mA)

MSSM30atMGUT_parameters: |
   Parameters for the model MSSM30atMGUT (see ./gambit MSSM30atMGUT)

MSSM30atMGUT_mA_parameters: |
   Parameters for the model MSSM30atMGUT_mA (see ./gambit MSSM30atMGUT_mA)

MSSM30atQ_parameters: |
   Parameters for the model MSSM30atQ (see ./gambit MSSM30atQ)

MSSM63atMGUT_parameters: |
   Parameters for the model MSSM63atMGUT (see ./gambit MSSM63atMGUT)

MSSM63atMSUSY_parameters: |
   Parameters for the model MSSM63atMSUSY (see ./gambit MSSM63atMSUSY)

MSSM63atQ_parameters: |
   Parameters for the model MSSM63atQ (see ./gambit MSSM63atQ)

MSSM63atMGUT_mA_parameters: |
   Parameters for the model MSSM63atMGUT_mA (see ./gambit MSSM63atMGUT_mA)

MSSM63atMSUSY_mA_parameters: |
   Parameters for the model MSSM63atMSUSY_mA (see ./gambit MSSM63atMSUSY_mA)

MSSM7atQ_parameters: |
   Parameters for the model MSSM7atQ (see ./gambit MSSM7atQ)

MSSM9atQ_parameters: |
   Parameters for the model MSSM9atQ (see ./gambit MSSM9atQ)

MSSM9batQ_parameters: |
   Parameters for the model MSSM9batQ (see ./gambit MSSM9batQ)

MSSM10atQ_mA_parameters: |
   Parameters for the model MSSM10atQ_mA (see ./gambit MSSM10atQ_mA)

MSSM10batQ_mA_parameters: |
   Parameters for the model MSSM10batQ_mA (see ./gambit MSSM10batQ_mA)

MSSM10catQ_mA_parameters: |
   Parameters for the model MSSM10catQ_mA (see ./gambit MSSM10catQ_mA)

MSSM11atQ_mA_parameters: |
   Parameters for the model MSSM11atQ_mA (see ./gambit MSSM11atQ_mA)

MSSM15atQ_mA_parameters: |
   Parameters for the model MSSM15atQ_mA (see ./gambit MSSM15atQ_mA)

MSSM16atQ_mA_parameters: |
   Parameters for the model MSSM16atQ_mA (see ./gambit MSSM16atQ_mA)

MSSM19atQ_mA_parameters: |
   Parameters for the model MSSM19atQ_mA (see ./gambit MSSM19atQ_mA)

MSSM20atQ_mA_parameters: |
   Parameters for the model MSSM20atQ_mA (see ./gambit MSSM20atQ_mA)

MSSM24atQ_mA_parameters: |
   Parameters for the model MSSM24atQ_mA (see ./gambit MSSM24atQ_mA)

MSSM25atQ_mA_parameters: |
   Parameters for the model MSSM25atQ_mA (see ./gambit MSSM25atQ_mA)

MSSM30atQ_mA_parameters: |
   Parameters for the model MSSM30atQ_mA (see ./gambit MSSM30atQ_mA)

MSSM63atQ_mA_parameters: |
   Parameters for the model MSSM63atQ_mA (see ./gambit MSSM63atQ_mA)

MSSM7atQ_mA_parameters: |
   Parameters for the model MSSM7atQ_mA (see ./gambit MSSM7atQ_mA)

MSSM9atQ_mA_parameters: |
   Parameters for the model MSSM9atQ_mA (see ./gambit MSSM9atQ_mA)

MSSM9batQ_mA_parameters: |
   Parameters for the model MSSM9batQ_mA (see ./gambit MSSM9batQ_mA)

NUHM1_parameters: |
   Parameters for the model NUHM1 (see ./gambit NUHM1)

NUHM2_parameters: |
   Parameters for the model NUHM2 (see ./gambit NUHM2)

CMSSM_parameters: |
   Parameters for the model CMSSM (see ./gambit CMSSM)

NormalDist_parameters: |
   Parameters for the model NormalDist (see ./gambit NormalDist)

ScalarSingletDM_Z3_parameters: |
   Parameters for the model ScalarSingletDM_Z3 (see ./gambit ScalarSingletDM_Z3)

ScalarSingletDM_Z3_running_parameters: |
   Parameters for the model ScalarSingletDM_Z3_running (see ./gambit ScalarSingletDM_Z3)

ScalarSingletDM_Z2_parameters: |
   Parameters for the model ScalarSingletDM_Z2 (see ./gambit ScalarSingletDM_Z2)

ScalarSingletDM_Z2_running_parameters: |
   Parameters for the model ScalarSingletDM_Z2_running (see ./gambit ScalarSingletDM_Z2_running)

VectorSingletDM_Z2_parameters: |
   Parameters for the model VectorSingletDM_Z2 (see ./gambit VectorSingletDM_Z2)

MajoranaSingletDM_Z2_parameters: |
   Parameters for the model MajoranaSingletDM_Z2 (see ./gambit MajoranaSingletDM_Z2)

MajoranaSingletDM_Z2_sps_parameters: |
   Parameters for the model MajoranaSingletDM_Z2_sps (see ./gambit MajoranaSingletDM_Z2_sps)

DiracSingletDM_Z2_parameters: |
   Parameters for the model DiracSingletDM_Z2 (see ./gambit DiracSingletDM_Z2)

DiracSingletDM_Z2_sps_parameters: |
   Parameters for the model DiracSingletDM_Z2_sps (see ./gambit DiracSingletDM_Z2_sps)

MDM_parameters: |
   Parameters for the mimimal dark matter (MDM) model (see ./gambit MDM)

StandardModel_Higgs_parameters: |
   Parameters for the model StandardModel_Higgs (see ./gambit StandardModel_Higgs)

StandardModel_Higgs_running_parameters: |
   Parameters for the model StandardModel_Higgs_running (see ./gambit StandardModel_Higgs_running)

StandardModel_SLHA2_parameters: |
   Parameters for the model StandardModel_SLHA2 (see ./gambit StandardModel_SLHA2)

StandardModel_mNudiff_parameters: |
   Parameters for the model StandardModel_mNudiff (see ./gambit StandardModel_mNudiff)

SuperRenormHP_parameters: |
   Parameters for the model SuperRenormHP (see ./gambit SuperRenormHP)

TestModel1D_parameters: |
   Parameters for the model TestModel1D (see ./gambit TestModel1D)

WC_parameters: |
   Parameters for the model WC (see ./gambit WC)

WC_LR_parameters: |
   Primary parameters for WC_LR model (see ./gambit WC_LR)

WC_LUV_parameters: |
   Primary parameter for WC_LUV model (see ./gambit WC_LUV)

mSUGRA_parameters: |
   Parameters for the model mSUGRA (see ./gambit mSUGRA)

nuclear_params_fnq_parameters: |
   Parameters for the model nuclear_params_fnq (see ./gambit nuclear_params_fnq)

nuclear_params_sigma0_sigmal_parameters: |
   Parameters for the model nuclear_params_sigma0_sigmal (see ./gambit nuclear_params_sigma0_sigmal)

nuclear_params_sigmas_sigmal_parameters: |
   Parameters for the model nuclear_params_sigmas_sigmal (see ./gambit nuclear_params_sigmas_sigmal)

nuclear_params_ChPT_parameters: |
   Parameters for the model nuclear_params_ChPT (see ./gambit nuclear_params_ChPT)

nuclear_params_ChPT_sigmapiN_parameters: |
   Parameters for the model nuclear_params_ChPT_sigmapiN (see ./gambit nuclear_params_ChPT_sigmapiN)

nuclear_params_neutron_lifetime_parameters: |
   Model for the neutron lifetime.
   See ./gambit nuclear_params_neutron_lifetime for details.

RightHandedNeutrinos_parameters: |
   Parameters for the model RightHandedNeutrinos (see ./gambit RightHandedNeutrios)

RightHandedNeutrinos_diff_parameters: |
   Parameters for the model RightHandedNeutrinos_diff (see ./gambit RightHandedNeutrinos_diff)

ColliderBit_SLHA_file_model_parameters: |
   Parameters for the ColliderBit dummy model ColliderBit_SLHA_file_model.
   See ./gambit ColliderBit_SLHA_file_model_parameters for details.

ColliderBit_SLHA_scan_model_parameters: |
   Parameters for the ColliderBit dummy model ColliderBit_SLHA_scan_model.
   See ./gambit ColliderBit_SLHA_scan_model_parameters for details.

NREO_scalarDM_parameters: |
   Parameters for the model Non-Relativistic Effective Operator model of scalar dark matter
   See ./gambit NREO_scalarDM for details

NREO_DiracDM_parameters: |
   Parameters for the model Non-Relativistic Effective Operator model of Dirac dark matter
   See ./gambit NREO_DiracDM for details

NREO_MajoranaDM_parameters: |
   Parameters for the model Non-Relativistic Effective Operator model of Majorana dark matter
   See ./gambit NREO_MajoranaDM for details

WIMP_sigmav_parameters: |
   Parameters for the WIMP_sigmav (see ./gambit WIMP_sigmav)

#-------------------------------------
#  FeynHiggs capabilities
#-------------------------------------

FeynHiggs_2_11_2_init: |
   Initialisation of FeynHiggs.

FeynHiggs_2_11_3_init: |
   Initialisation of FeynHiggs.

FeynHiggs_2_12_0_init: |
   Initialisation of FeynHiggs.

FHConstraints: |
   FeynHiggs precision constraint observables.

FHCouplings: |
   FeynHiggs particle couplings.

FHFlavour: |
   FeynHiggs flavour observables.

FHGetPara: |
   Get FeynHiggs parameters.

FHHiggsCorr: |
   FeynHiggs Higgs masses.

FHHiggsProd: |
   FeynHiggs Higgs production.

FHSelectUZ: |
   Select Higgs mixing scheme to use and whether or not to use resummed masses in the corresponding couplings in FeynHiggs.

FHSetDebug: |
   Set FeynHiggs debugging level.

FHSetFlags: |
   Set FeynHiggs flags. Must be called before any other FeynHiggs functions.

FHSetLFV: |
   Set lepton flavour violation parameters in FeynHiggs.

FHSetNMFV: |
   Set non-minimal flavour violation parameters in FeynHiggs.

FHSetPara: |
   Set FeynHiggs parameters.

FHSetSMPara: |
   Set FeynHiggs Standard Model parameters.

FHUncertainties: |
   Return FeynHiggs guesses for theoretical uncertainties on Higgs masses.

FH_Couplings_output: |
   The output from having computed FHCouplings with FeynHiggs.

FlavourObs: |
   FeynHiggs flavour observables, packaged up for use as a dependency.


#----------------------------
#  gamLike capabilities
#----------------------------

gamLike_1_0_0_init: |
   Initialisation of gamLike.

gamLike_1_0_1_init: |
   Initialisation of gamLike.

init: |
   Initialise variables in gamLike.
lnL: |
   Calculates the likelihood for gamma-ray indirect searches for dark matter.

set_data_path: |
   Set the data path for gamLike.

set_halo_profile: |
   Set the halo profile in gamLike.

#----------------------------
#  gm2calc capabilities
#----------------------------

gm2calc_1_2_0_init: |
   Initialises gm2calc, version 1.2.0.

gm2calc_1_3_0_init: |
   Initialised gm2calc, version 1.3.0.

calculate_amu_1loop: |
   Calculates the anomalous magnetic moment of the muon at 1 loop.

calculate_amu_1loop_non_tan_beta_resummed: |
   Calculates the anomalous magnetic moment of the muon at 1 loop with no resummation of tan beta.

calculate_amu_2loop: |
   Calculates the anomalous magnetic moment of the muon at 2 loops.

calculate_amu_2loop_non_tan_beta_resummed: |
   Calculates the anomalous magnetic moment of the muon at 2 loops with no resummation of tan beta.

calculate_uncertainty_amu_2loop: |
   Calculates the uncertainty on the anomalous magnetic moment of the muon at 2 loops.


#----------------------------
#  Axion-related capabilities
#----------------------------

CosmoALP_parameters: |
   Parameters of the CosmoALP model (Cagg, fa, ma0, thetai, f0_thermal, T_R).
   See ./gambit CosmoALP

CosmoALP_gg_tau_parameters: |
   Parameters of the CosmoALP_gg_tau model (tau, fa, ma0, Tchi, beta thetai, f0_thermal, T_R).
   See ./gambit CosmoALP_gg_tau

GeneralCosmoALP_parameters: |
   Parameters of the GeneralCosmoALP model (gagg, gaee, gaN, fa, ma0, Tchi, beta, thetai, f0_thermal, T_R).
   See ./gambit GeneralCosmoALP

GeneralALP_parameters: |
   Parameters of the GeneralALP model (gagg, gaee, gaN, fa, ma0, Tchi, beta, thetai).
   See also ./gambit GeneralALP

QCDAxion_parameters: |
   Parameters of the QCDAxion model (EoverN, CaggQCD, Caee, CaN, fa, LambdaChi, Tchi, beta, thetai).
   See also ./gambit QCDAxion

KSVZAxion_parameters: |
   Parameters of the KSVZAxion model (EoverN, CaggQCD, CaN, fa, LambdaChi, Tchi, beta, thetai).
   See also ./gambit KSVZAxion

DFSZAxion_I_parameters: |
   Parameters of the DFSZAxion_I model (EoverN, CaggQCD, CaN, tanbeta, fa, LambdaChi, Tchi, beta, thetai).
   See also ./gambit DFSZAxion_I

DFSZAxion_II_parameters: |
   Parameters of the DFSZAxion_II model (EoverN, CaggQCD, CaN, tanbeta, fa, LambdaChi, Tchi, beta, thetai).
   See also ./gambit DFSZAxion_II

ConstantMassALP_parameters: |
   Parameters of the ConstantMassALP model (Cagg, Caee, CaN, fa, Lambda, thetai).
   See also ./gambit ConstantMassALP

XENON1T_DM_NuisanceParameters_parameters: |
   Parameters of the XENON1T_DM_NuisanceParameters model (delta_eff,delta_bkg,x_3H).
   See also ./gambit XENON1T_DM_NuisanceParameters

XENON1T_NuisanceParameters_parameters: |
   Parameters of the XENON1T_NuisanceParameters model (eta).
   See also ./gambit XENON1T_NuisanceParameters

QCDAxion_ZeroTemperatureMass: |
   Nuisance likelihood for the QCD-related energy scale LambdaChi, which defines the low-energy QCD axion mass.

QCDAxion_TemperatureDependence: |
   Nuisance likelihood for the parameters beta and Tchi, which define the temperature dependence of the QCD axion mass for high temperatures.

QCDAxion_AxionPhotonConstant: |
   Nuisance likelihood for the contribution of axion-pion interactions in the chiral Lagrangian to the axion-photon coupling.

AxionOscillationTemperature: |
   Calculates the temperature scale at which the axion field starts to oscillate.

ALPS1_signal_vac: |
   Calculates the signal prediction for one data frame of the ALPS 1 experiment (evacuated setup).

ALPS1_signal_gas: |
   Calculates the signal prediction for one data frame of the ALPS 1 experiment (setup filled with Argon gas).

lnL_ALPS1: |
   Loglikelihood for all runs of the ALPS 1 experiment.

CAST2007_signal_vac : |
   Signal prediction for a 2004 vacuum run of the CAST experiment.

CAST2017_signal_vac : |
   Signal prediction for the combined 2013, 2014 and 2015 vacuum runs of the CAST experiment.

lnL_CAST2007: |
   Loglikelihood for CAST 2007 experimental results.

lnL_CAST2017: |
   Loglikelihood for CAST 2017 experimental results.

Haloscope_signal: |
   Calculates the relative expected signal for a haloscope ignoring experimental parameters and mass dependence.

lnL_Haloscope_ADMX1: |
   Loglikelihood for the combined ADMX 1998 to 2011 experimental results.

lnL_Haloscope_ADMX2: |
   Loglikelihood for the ADMX 2018 experimental result.

lnL_Haloscope_RBF: |
   Loglikelihood for the RBF experiment.

lnL_Haloscope_UF: |
   Loglikelihood for the UF experiment.

RParameter: |
   Calculates the expected R parameter for a system with axions.

lnL_RParameter: |
   Loglikelihood for the observed R parameter.

lnL_WDVar_G117B15A: |
   LogLikelihood for the White Dwarf G117-B15A (cooling hint).

lnL_WDVar_R548: |
   Loglikelihood for the White Dwarf R548 (cooling hint).

lnL_WDVar_PG1351489: |
   Loglikelihood for the White Dwarf PG 1351+489 (cooling hint).

lnL_WDVar_L192: |
   Loglikelihood for the White Dwarf L19-2 (cooling hint).

lnL_SN1987A: |
   Loglikelihood for an axion signal from SN1987A (conversion in the Galactic magnetic field or axion decay into photons).

PhotonFluence_SN1987A_Conversion: |
   Photon fluence from axion-photon conversion in the Galactic magnetic field.

PhotonFluence_SN1987A_Decay: |
   Photon fluence from axion decay into photons.

lnL_HESS_GCMF: |
   LogLikelihood for H.E.S.S. constraints on axions (Galactic Centre magnetic field result).

lnL_XENON1T_Anomaly: |
   Likelihood function for the 2020 XENON-1T anomaly (solar ALP hypothesis) [arXiv:2006.10035].

lnL_XENON1T_DM_Anomaly: |
   Likelihood function for the 2020 XENON-1T anomaly (DM ALP hypothesis) [arXiv:2006.10035].

lnL_XENON1T_Anomaly_NuisanceParameters: |
    Likelihood function for experimental nuisance parameters (detector effciency and background level) the 2020 XENON-1T anomaly [arXiv:2006.10035].

#------------------------------
#  SUSYHD capabilities
#------------------------------

SUSYHD_1_0_2_init: |
   Initialises SUSYHD, version 1.0.2

SUSYHD_SetSMparameters: |
   Sets the SM parameters to be used in SUSYHD

SUSYHD_MHiggs: |
   Calculates the Higgs mass using SUSYHD

SUSYHD_DeltaMHiggs : |
   Calculates the uncertainty on the Higgs mass using SUSYHD

#----------------------------
#  plc
#----------------------------

plc_3_0_init: |
   initialize the Planck likelihood from an cldf file.

clik_cleanup: |
   clean-up delete allocated pointers to a Planck likelihood object.

clik_lensing_cleanup: |
   clean-up delete allocated pointers to a Planck lensing likelihood object.

clik_cleanup_error: |
   clean-up delete the allocated pointer to the "Error" instance

clik_is_error: |
   check whether an error occurred within the plc execution

clik_string_error: |
   get explanation of plc error

clik_compute_loglike: |
   compute a log likelihood value
   cl_and_pars is order this way
   first the power spectra from l=0 to l=lmax[cli] (included) in the order
   TT EE BB TE TB EB. Only the one where lmax[cli]!=-1 have to be included
   then the extra parameters in the order given by clik_get_extra_parameters.
   The power spectra are in microK^2
   for example, for a likelihood acting on TT, EE and TE with 3 extra parameters
   will expect an array ordered this way
   C_0^TT ... C_lmax[0]^TT C_0^EE ... C_lmax[1]^EE C_0^TE ... C_lmax[3]^T3 extrapar1 extrapar2 extrapar3

clik_lensing_compute_loglike: |
   same as clik_compute_loglike but for the use with the lensing likelihood
   of Planck.

clik_get_extra_parameter_names: |
   retrieve the number of extra parameters and their names
   names is allocated by the function. It has to be cleaned after.

clik_get_list_cls: |
   retrieve the list of cls as a list of flags
   order is  TT EE BB TE TB EB
   for example for a likelihood acting on TT
   has_cl = 1 0 0 0 0 0

clik_get_lmax: |
   retrieve the lmax for each power spectrum
   -1 --> no cl
   order is TT EE BB TE TB EB
   for example for a likelihood acting on TT EE TE with same lmax 2000
   lmax = 2000 2000 -1 2000 -1 -1 -1

clik_lensing_get_lmaxs: |
   As 'clik_get_lmax' but designed to be called with lensing likelihood object.
   -1 --> no cl
   order is PhiPhi TT EE BB TE TB EB
   for example for a likelihood acting on PhiPhi TT EE TE with same lmax 2000
   lmax = 2000 2000 2000 -1 2000 -1 -1 -1

clik_initialize: |
   initialize the Planck likelihood from an cldf file.

clik_lensing_initialize: |
   initialize the Planck lensing likelihood.

clik_initialize_error: |
   initialize the error object.

plc_loglike_highl_TTTEEE_2015: |
 Planck high-ell likelihood for CMB temperature and polarisation provided by the plc package for the 2015 data release.

plc_loglike_highl_TTTEEE_2018: |
 Planck high-ell likelihood for CMB temperature and polarisation provided by the plc package for the 2018 data release.

plc_loglike_highl_TTTEEE_lite_2015: |
  Planck lite high-ell likelihood for CMB and polarisation with marginalised foregrounds provided by the plc package for the 2015 data release.

plc_loglike_highl_TTTEEE_lite_2018: |
  Planck lite high-ell likelihood for CMB and polarisation with marginalised foregrounds provided by the plc package for the 2018 data release.

plc_loglike_highl_TT_2015: |
  Planck high-ell likelihood for CMB temperature anisotropies provided by the plc package for the 2015 data release.

plc_loglike_highl_TT_2018: |
  Planck high-ell likelihood for CMB temperature anisotropies provided by the plc package for the 2018 data release.

plc_loglike_highl_TT_lite_2015: |
  Planck lite high-ell likelihood for CMB temperature anisotropies with marginalised foregrounds provided by the plc package for the 2015 data release.

plc_loglike_highl_TT_lite_2018: |
  Planck lite high-ell likelihood for CMB temperature anisotropies with marginalised foregrounds provided by the plc package for the 2018 data release.

plc_loglike_lensing_2015: |
  Planck CMB lensing likelihood provided by the plc package for the 2015 data release.

plc_loglike_lensing_2018: |
  Planck CMB lensing likelihood provided by the plc package for the 2018 data release.

plc_loglike_lensing_marged_2018: |
  Marginalised Planck CMB lensing likelihood provided by the plc package for the 2018 data release.

plc_loglike_lowl_EE_2018: |
  Planck low-ell likelihood for CMB temperature and polarisation provided by the plc package for the 2018 data release.

plc_loglike_lowl_TEB_2015: |
  Planck low-ell likelihood for CMB temperature and polarisation provided by the plc package for the 2015 data release.

plc_loglike_lowl_TT_2015: |
  Planck low-ell likelihood for CMB temperature anisotropies provided by the plc package for the 2015 data release.

plc_loglike_lowl_TT_2018: |
  Planck low-ell likelihood for CMB temperature anisotropies provided by the plc package for the 2018 data release.

plc_required_Cl:
  Retrieve lmax and boolean flags whether the temperature and/or polarisation power spectra should be calculated. Needed as input for the Boltzmann solver.

#----------------------------
#  MultiModeCode
#----------------------------

multimodecode_gambit_driver: |
   MultiModeCode driver for GAMBIT: takes in all
   input parameters as well as ode solver and other
   initialization parameters and solves the inflationary
   dynamics with MultiModeCode.

MultiModeCode_2_0_0_init: |
   initializer for MultiModeCode.

multimodecode_gambit_driver_test: |
   some test function with less parameters for input.
   will be deleted.

multimode_input_parameters: |
   Creates object containing the generic inputs for calling multimodecode.

multimode_internal: |
   Exclusively used for internal variables and function for the MultiModeCode backend.

multimodecode_parametrised_ps: |
   Backend convenience function to fill the values parametrising the phenomenological power spectrum in the gambit_inflation_observables object.

multimodecode_primordial_ps: |
   Backend convenience function to fill the arrays in the gambit_inflation_observables object for the full primordial power spectrum.

#----------------------------
#  CLASS / classy
#----------------------------

class_get_unlensed_cl: |
    Returns the dimensionless unlensed cl spectra of a given type.
    The types are "tt", "te", "ee", "bb", and "pp".

class_get_lensed_cl: |
    Returns the dimensionless lensed cl spectra of a given type.
    The types are "tt", "te", "ee", "bb", and "pp".

class_get_Da: |
    Returns angular diameter distance at given z.

class_get_Dl: |
    Returns luminosity distance at given z.

class_get_Hz: |
    Returns Hubble parameter at given z.

class_get_tz: |
    Returns time since big bang at given z, as computed by CLASS in Mpc (assuming c=1)

class_get_rs: |
    Returns comoving sound horizon at baryon drag.

class_get_tau_reio: |
    Returns optical depth at reionisation.

class_get_z_reio: |
    Returns redshift of reionisation.

class_get_scale_independent_growth_factor: |
    Return the scale invariant growth factor D(a) for CDM perturbations
    for a given redshift (exactly, the quantity defined by Class as index_bg_D in the background module)
    computed by CLASS.

class_get_scale_independent_growth_factor_f: |
    Return the scale invariant growth factor f(z)=d ln D / d ln a for CDM perturbations
    for a given redshift (exactly, the quantity defined by Class as index_bg_f in the background module)
    computed by CLASS.

class_get_sigma8: |
    Returns sigma8, root mean square density fluctuations within spheres of radius 8/h Mpc, computed at z = 0 by CLASS.

class_get_Omega0_m: |
    Returns Omega0_m (matter energy density today) computed by CLASS. (Mainly for test purposes, you can use gambit internal capability Omega0_m, Omega0_g..).

class_get_Omega0_ncdm_tot: |
    Returns Omega0_ncdm (massive neutrinos and potential extra species) computed by CLASS.

class_get_Omega0_Lambda: |
    Returns Omega0_Lambda as passed to/computed by CLASS.

class_get_Omega0_r: |
    Returns Omega0_r as computed by CLASS. Contains contributions from photons, ultra-relativistic species and dark
    radiation (if present).

class_get_Omega0_ur: |
    Returns Omega0_ur as computed by CLASS. Contains contributions from ultra-relativistic species today.

class_get_H0: |
    Returns the Hubble rate today, as computed by CLASS [km/s/Mpc].

#----------------------------
#  MontePythonLike
#----------------------------

get_MP_available_likelihoods: |
    Returns a list with all available likelihoods implemented in MontePython. New likelihoods can simply be added
    into the MontePython installation folder and GAMBIT will recognize it without the need to recompile.

check_likelihood_classy_combi: |
    Checks if a given likelihood can be computed with the CLASS version in use. For older CLASS versions, some necessary features might not be available. The list of incompatible likelihood and CLASS version combinations is defined in the MontePython frontend source file.

check_likelihood_support: |
    Checks if a given MontePython likelihood is currently supported. The reason why some likelihoods are not supported are:

    - likelihood is only compatible with either python 2 or 3 and GAMBIT is configured with unsupported python version
    - likelihood implementation does not follow MontePython guidelines. Examples could be
        * quantities derived by CLASS are not called directly through the CLASS python object but through MontePython data.get_mcmc_parameters(['derived'])
        * parameters setting the observables that CLASS has to compute are not specified
        correctly with 'need_cosmo_arguments' function
      If you fix these issues, you can use the likelihood and remove it from the 'unsupported_likes' list in the MontePython frontend source file.

get_MP_loglike: |
    Returns LogLike value of MontePython likelihood specified by passing the name of the likelihood as a string.

create_MP_data_object: |
    Create a python object storing all information

calc_MP_LogLikes: |
    Calls MontePython to get the likelihood of all experiments (tagged with 'Likelihood' and 'Observable'). The results are stored as map from experiment name to LogLike result in the type MPLike_result_container.

MP_Combined_LogLike: |
   Returns combined LogLike of all montethon Likelihoods used in the scan.

MP_LogLikes: |
   Calls montethon to get the likelihood of all experiments (tagged with Likelihood and Observable). The results are stored as map from experiment name to LogLike result in the type MPLike_result_container.

MP_Observables: |
    Returns a map from experiment name to LogLike value containing the likelihood of all experiments used as an Observable. These are not added to the value returned by MP_Combined_LogLike, hence they are not driving the scan.

MP_experiment_names: |
  Set names of all experiments in use for a scan and stores the path to the settings file for the different likelihoods by reading in the runOptions 'Likelihoods' and/or 'Observables' of this capability.

MontePythonLike_3_3_0_init: |
  Initialise MontePython backend v3.3.0.

MontePythonLike_3_5_0_init: |
  Initialise MontePython backend v3.5.0.

MP_objects: |
   Creates an object containing the montethon ~Data and Likelihood objects, deining which experiments are in use in the process.

parameter_dict_for_MPLike: |
   Returns bind11::dict filled with the mcmc_parameters dictionary of montethon's Data object, with current values of nuisance parameters.

create_MP_likelihood_objects: |
   Returns a map of string to Python objects: the Python objects from MontePython are the initialised "Likelihood" objects used internally.

bao_like_correlation: |
   Adds the correlation coefficients of the bao_correlations likelihood to the output file. Optional to use in combination with the bao_correlations montethon likelihoods.

#----------------------------
#  DarkAges
#----------------------------

DarkAges_1_2_0_init: |
   Function to initialize the instance of the DarkAges package.
   Retrieve all input dependencies (DM-mass, injection spectra, ...) and
   perform the convolution wit the transfer functions to get f(z).

get_energy_injection_efficiency_table: |
   Get the energy injection efficiency table from the DarkAges frontend

#----------------------------
#  CosmoBit Models
#----------------------------

AnnihilatingDM_general_parameters: |
   General model of (s-wave) annihilating dark matter into prompt pairs of e+/e- and/or photons.
   See ./gambit AnnihilatingDM_general for more details.

AnnihilatingDM_mixture_parameters: |
   Model of (s-wave) annihilating dark matter into prompt pairs of e+/e- and/or photons.
   See ./gambit AnnihilatingDM_mixture for more details.

AnnihilatingDM_photon_parameters: |
   Model of (s-wave) annihilating matter into a prompt pair of photons.
   See ./gambit AnnihilatingDM_photon and ./gambit AnnihilatingDM_general for more details.

AnnihilatingDM_electron_parameters: |
   Model of (s-wave) annihilating matter into a prompt pair of e+/e-.
   See ./gambit AnnihilatingDM_electron and ./gambit AnnihilatingDM_general for more details.

DecayingDM_general_parameters: |
   General model of decaying dark matter into prompt pairs of e+/e- and/or photons.
   See ./gambit DecayingDM_general for more details.

DecayingDM_mixture_parameters: |
   Model of decaying dark matter into prompt pairs of e+/e- and/or photons.
   See ./gambit DecayingDM_mixture for more details.

DecayingDM_photon_parameters: |
   Model of decaying dark matter into a prompt pair of photons.
   See ./gambit DecayingDM_photon and ./gambit DecayingDM_general for more details.

DecayingDM_electron_parameters: |
   Model of decaying dark matter into a prompt pair of e+/e-.
   See ./gambit DecayingDM_electron and ./gambit DecayingDM_general for more details.

LCDM_parameters: |
   Standard (4+1)-parameter LCDM model (no neutrinos, no inflation), using H0 instead of 100*theta_s.
   See ./gambit LCDM for more details.

LCDM_theta_parameters: |
   Standard (4+1)-parameter LCDM model (no neutrinos, no inflation), using 100*theta_s instead of H0.
   See ./gambit LCDM_theta for more details.

LCDM_zreio_parameters: |
   Standard (4+1)-parameter LCDM model (no neutrinos, no inflation), using z_reio instead of tau_reio.
   See ./gambit LCDM_zreio for more details.

etaBBN_rBBN_rCMB_dNurBBN_dNurCMB_parameters: |
   Model to be scanned in addition to LCDM as an extension: allowing for non-standard values of the baryon-to-photon ratio at BBN, non-standard values of the temperature ratio between photon and neutrinos at BBN and CMB release, as well as additional ultra-relativistic species present during BBN or at CMB release. See ./gambit etaBBN_rBBN_rCMB_dNurBBN_dNurCMB for more details.

etaBBN_parameters: |
   Child model of etaBBN_rBBN_rCMB_dNurBBN_dNurCMB with only etaBBN as free parameter. See ./gambit etaBBN for more details.

etaBBN_rBBN_dNurBBN_parameters: |
   Child model of etaBBN_rBBN_rCMB_dNurBBN_dNurCMB. See ./gambit etaBBN_rBBN_dNurBBN for more details.

rBBN_dNurBBN_parameters: |
   Child model of etaBBN_rBBN_dNurBBN. See ./gambit rBBN_dNurBBN for more details.

rBBN_rCMB_dNurBBN_dNurCMB_parameters: |
   Child model of etaBBN_rBBN_rCMB_dNurBBN_dNurCMB. See ./gambit rBBN_rCMB_dNurBBN_dNurCMB for more details.

dNurBBN_dNurCMB_parameters: |
   Child model of rBBN_rCMB_dNurBBN_dNurCMB model. See ./gambit dNurBBN_dNurCMB for more details.

dNurCMB_parameters: |
   Child model of dNurBBN_dNurCMB model. See ./gambit dNurCMB for more details.

rBBN_rCMB_parameters: |
   Child model of rBBN_rCMB_dNurBBN_dNurCMB model. See ./gambit rBBN_rCMB for more details.

rCMB_parameters: |
   Child model of rBBN_rCMB model. See ./gambit rCMB for more details.

PowerLaw_ps_parameters: |
   Returns the purely phenomenological parametrised scale-free power spectrum.
   See ./gambit PowerLaw_ps for details.

Minimal_PowerLaw_ps_parameters: |
   Simple, parametrised, purely phenomenological, scale-free power spectrum, with no tensor modes.
   See ./gambit Minimal_PowerLaw_ps for details.

Inflation_InstReh_1Starobinsky_parameters: |
   Inflation model with potential V(phi) = (lambda M_P)^4 [1-exp(-sqrt(2/3)phi/M_P)]^2, assuming instant reheating.
   See ./gambit Inflation_InstReh_1Starobinsky for more details.

Inflation_InstReh_1mono23_parameters: |
   Inflation model with potential V(phi) = 1.5 lambda phi^(2/3), assuming instant reheating. See ./gambit Inflation_InstReh_1mono23 for more details.

Inflation_InstReh_1linear_parameters: |
   Inflation model with potential V(phi) = lambda phi, assuming instant reheating. See ./gambit Inflation_InstReh_1linear for more details.

Inflation_InstReh_1quadratic_parameters: |
   Inflation model with potential V(phi) = lambda phi, assuming instant reheating. See ./gambit Inflation_InstReh_1quadratic for more details.

Inflation_InstReh_1quartic_parameters: |
   Inflation model with potential V(phi) = 0.25 lambda phi^4, assuming instant reheating. See ./gambit Inflation_InstReh_1quartic for more details.

Inflation_InstReh_1natural_parameters: |
   Natural inflation model (axion-like particles) with potential V(phi) = Lambda^4 [1 + cos(phi/f)], assuming instant reheating. See ./gambit Inflation_InstReh_1natural for more details.

cosmo_nuisance_JLA_parameters: |
   Cosmological nuisance parameters for JLA SNe Ia likelihood. See ./gambit cosmo_nuisance_JLA for more details.

cosmo_nuisance_Pantheon_parameters: |
   Cosmological nuisance parameters for Pantheon SNe Ia likelihood. See ./gambit cosmo_nuisance_Pantheon for more details.

cosmo_nuisance_acbar_parameters: |
   Cosmological nuisance parameters for acbar. See ./gambit cosmo_nuisance_acbar for more details.

cosmo_nuisance_BK15_parameters: |
   Cosmological nuisance parameters for Keck Array/BICEP. See ./gambit cosmo_nuisance_BK15 for more details.

cosmo_nuisance_BK14_parameters: |
   Cosmological nuisance parameters for Keck Array/BICEP. See ./gambit cosmo_nuisance_BK14 for more details.

cosmo_nuisance_BK14priors_parameters: |
   Cosmological nuisance parameters for Keck Array/BICEP. See ./gambit cosmo_nuisance_BK14priors for more details.

cosmo_nuisance_CFHTLens_correlation_parameters: |
   Cosmological nuisance parameters for CFHTLenS tomographic weak lensing likelihood. See ./gambit cosmo_nuisance_CFHTLens_correlation for more details.

cosmo_nuisance_euclid_lensing_parameters: |
   Cosmological nuisance parameters for Euclid cosmic shear likelihood. See ./gambit cosmo_nuisance_euclid_lensing for more details.

cosmo_nuisance_euclid_pk_parameters: |
   Cosmological nuisance parameters for Euclid cosmic shear likelihood. See ./gambit cosmo_nuisance_euclid_pk for more details.

cosmo_nuisance_euclid_pk_noShot_parameters: |
   Cosmological nuisance parameters for Euclid cosmic shear likelihood. See ./gambit cosmo_nuisance_euclid_pk_noShot for more details.

cosmo_nuisance_ISW_parameters: |
   Cosmological nuisance parameters for tomographic ISW likelihood. See ./gambit cosmo_nuisance_ISW for more details.

cosmo_nuisance_kids450_qe_likelihood_public_parameters: |
   Cosmological nuisance parameters for KiDS-450 shear power spectrum likelihood. See ./gambit cosmo_nuisance_kids450_qe_likelihood_public for more details.

cosmo_nuisance_ska1_parameters: |
   Cosmological nuisance parameters for SKA1 21cm intensity mapping and galaxy clustering likelihoods. See ./gambit cosmo_nuisance_ska1 for more details.

cosmo_nuisance_ska1_IM_band_parameters: |
   Cosmological nuisance parameters for SKA1 21cm intensity mapping likelihoods. See ./gambit cosmo_nuisance_ska1_IM_band for more details.

cosmo_nuisance_ska1_IM_band_noHI_parameters: |
   Cosmological nuisance parameters for SKA1 21cm intensity mapping likelihoods. See ./gambit cosmo_nuisance_ska1_IM_band_noHI for more details.

cosmo_nuisance_ska1_pk_parameters: |
   Cosmological nuisance parameters for SKA1 galaxy clustering likelihood. See ./gambit cosmo_nuisance_ska1_pk for more details.

cosmo_nuisance_ska2_pk_parameters: |
   Cosmological nuisance parameters for SKA2 galaxy clustering likelihood. See ./gambit cosmo_nuisance_ska2_pk for more details.

cosmo_nuisance_ska_lensing_parameters: |
   Cosmological nuisance parameters for SKA 1&2 cosmic shear likelihoods. See ./gambit cosmo_nuisance_ska_lensing for more details.

cosmo_nuisance_spt_parameters: |
      Cosmological nuisance parameters for acbar. See ./gambit cosmo_nuisance_spt for more details.

cosmo_nuisance_Planck_TTTEEE_parameters: |
  See model parameters in config/models.dat

cosmo_nuisance_Planck_TT_parameters: |
  See model parameters in config/models.dat

cosmo_nuisance_Planck_lite_parameters: |
  See model parameters in config/models.dat

cosmo_nuisance_SpectralDistortions_parameters: |
      Cosmological nuisance parameters for spectral distortions, i.e. FIRAS, PIXIE and PRISM. See ./gambit cosmo_nuisance_SpectralDistortions for more details.

cosmo_nuisance_dummy_parameters: |
   Dummy model for cosmological nuisance parameters that can be used by new MontePython likelihoods. This model has 10 parameters, more can be added anytime to Models/include/gambit/Models/models/CosmoNuisanceModels.hpp.
   See ./gambit cosmo_nuisance_dummy for more details.

#----------------------------
#  CosmoBit
#----------------------------

T_cmb: |
  Sets CMB temperature (to 2.7255 if not specified in the YAML file).

T_ncdm: |
   Returns the neutrino temperature in units of Tcmb.

omega_cdm: |
    Returns the cold DM density.

n0_g: |
   Returns the number density of photons today, n_0^gamma, in cm^-3.

eta0: |
   Returns the baryon-to-photon ratio today, eta_0.

Omega0_g: |
   Returns the total photon content today, Omega_gamma.

Omega0_ur: |
   Returns the total content in ultrarelativistic species today.

Omega0_r: |
   Returns the total radiation content today, Omega_r.

Omega0_m: |
   Returns the total matter content today, Omega_m.

Omega0_cdm: |
   Returns the total cold DM content today, Omega_cdm.

Omega0_ncdm: |
   Returns the total neutrino content today, Omega_ncdm.

Omega0_b: |
   Returns the total baryon content today, Omega_b.

H_at_z: |
   Returns functor that calculates the Hubble rate at given redshift z [km/s/Mpc].

H0: |
   The Hubble rate today [km/s/Mpc].

time_at_z: |
   Returns functor that calculates the time since big bang at given redshift z [s]

age_universe: |
   Age of the universe [s].

helium_abundance: |
   The He4 abundance.

primordial_power_spectrum: |
   Creates object containing the primordial power spectra of scalar, tensor, and isocurvature perturbations, for a given array of [k] values.

k_pivot: |
   Returns the comoving pivot scale, k_star in Mpc^-1.

mNu_tot: |
   Returns the total mass of neutrinos in eV.

Neff_SM: |
   Returns the effective number of neutrino species in the SM.

N_ur: |
   Returns the total number of ultra-relativistic species today.

S8_cosmo: |
   Returns S8 = sigma_8 (Omega0_m/0.3)^0.5, a measure for the amplitude of the matter power spectrum on scale 8/h Mpc.

rs_drag: |
   Returns the comoving sound horizon at baryon drag.

tau_reio: |
    Returns optical depth at reionisation.

z_reio: |
    Returns redshift of reionisation.

unlensed_Cl_TT: |
   Returns the unlensed dimensionless CMB temperature-temperature anisotro spectrum.

unlensed_Cl_EE: |
   Returns the unlensed dimensionless CMB E-mode spectrum.

unlensed_Cl_BB: |
   Returns the unlensed dimensionless CMB B-mode spectrum.

unlensed_Cl_TE: |
   Returns the unlensed dimensionless CMB TE cross-correlations.

unlensed_Cl_PhiPhi: |
   Returns the unlensed dimensionless CMB lensing potential.

lensed_Cl_TT: |
   Returns the lensed dimensionless CMB temperature-temperature anisotro spectrum.

lensed_Cl_EE: |
   Returns the lensed dimensionless CMB E-mode spectrum.

lensed_Cl_BB: |
   Returns the lensed dimensionless CMB B-mode spectrum.

lensed_Cl_TE: |
   Returns the lensed dimensionless CMB TE cross-correlations.

lensed_Cl_PhiPhi: |
   Returns the lensed dimensionless CMB lensing potential.

Neff_evolution: |
   Set or compute non-standard values of dNeff and r (T_nu/T_nu_SM) at CMB release.

eta_ratio: |
   Set or compute the ratio of the values of the baryon-to-photon ratio at BBN and today.

external_dNeff_etaBBN: |
   Compute dNeff @CMB and etaBBN for non-standard models. E.g. needed for the CosmoALP model.

minimum_abundance: |
   Compute minimal Freeze-in abundance of axion-like particles, produced via Primakoff processes.

minimum_fraction: |
   Compute the fraction of the minimal freeze-in abundance of axion-like particles, produced via Primakoff processes, to the total abundance of dark matter

total_DM_abundance: |
    Compute the total abundance of axion-like particles, produced either by misalignment or freeze-in.

Neff: |
   Returns the effective number of neutrino species.

NuMasses_SM: |
  Create a map containing neutrino masses, the corresponding number of non-cold DM components (N_ncdm) today as well as the sum of the neutrino masses. Needed to pass correct parameters to CLASS.

classy_NuMasses_Nur_input: |
   Sets all neutrino related input parameters for classy (N_ur, N_ncdm, T_ncdm, m_ncdm) and stores them in a Python dictionary.

classy_MPLike_input: |
   Sets all input parameters for classy from active montethon likelihoods and stores them in a Python dictionary. If no montethon likelihoods are in use, this will simply pass an empty dictionary.

classy_PlanckLike_input: |
   Sets all input parameters for classy needed for the calculation of active Planck CMB likelihoods. This sets the non-linear treatment to "halofit", the maximum angular scale up to which the CMB spectra are computed, and which spectra need to be computed (temperature, polarisation and/or lensing).

classy_primordial_input: |
   Sets all primordial input parameters for classy. These are the primordial helium abundance, and parameters related to the primordial power spectrum. This can either be just A_s, n_s (and r) through the function set_classy_parameters_parametrised_ps, or the full shape of the spectrum calculated from an inflationary model through the function set_classy_parameters_primordial_ps.

classy_parameters_EnergyInjection: |
   Sets all input parameters for exoclass relevant for energy injection in the early Universe. These parameters are for example the DM mass and cross section (for annihilating DM models) or the DM lifetime and fraction (decaying DM models). Further, the energy injection coefficients and the injection efficiency functions are passed.

classy_input_params: |
  Creates an object of type Classy_input, containing a Python dictionary with all relevant input parameters for the classy run.
  Additional input options for CLASS (precision parameters, more output...) can be set by setting a runOption 'classy_dict' for the function 'set_classy_input_params' and specifying these parameters.

class_get_Neff: |
  Return Neff as calculated by CLASS.

class_get_cl: |
  Return lensed CLs from class in units of muK^2  @Patrick -> check

classy_2_6_3_init: |
  Initialise CLASS 2.6.3 run through the classy python wrapper.

classy_2_9_3_init: |
  Initialise CLASS 2.9.3 run through the classy python wrapper.

classy_2_9_4_init: |
  Initialise CLASS 2.9.4 run through the classy python wrapper.

classy_3_1_0_init: |
  Initialise CLASS 3.1.0 run through the classy python wrapper.

classy_exo_2_7_2_init: |
  Initialise ExoCLASS 2.7.2 run through the classy python wrapper.

get_classy_backendDir: |
  Return the path to the CLASS version that is used in the current run.

get_classy_cosmo_object: |
  Return an instance of the CLASS python object, usually initialised as 'cosmo'. In GAMBIT, this object will be passed to MontePython for the computation of external likelihoods.

compute_Planck_lowp_TT_loglike: |
   function computes the Planck log-likelihood for a  given
   set of  Cl's for low values of l (below 30).

compute_Planck_high_TT_loglike: |
   function computes the Planck log-likelihood for a  given
   set of  Cl's for high values of l (above 30).

compute_Planck_lensing_loglike: |
   function computes the Planck lensing- log-likelihood for
   a  given set of  Cl's.

lnL_A_planck : |
   "prior"-likelihood for A_planck. Applies the Gauss bell on
    A_planck if a flat prior is chosen. Should have the same
    effect than using a Gaussian prior on it in the first place.

Planck_highl_loglike: |
   Calculates the Planck CMB likelihood for the multipole range 30 leq ell leq 2508.

Planck_lowl_loglike: |
   Computes the Planck CMB likelihood for the multipole range 2 leq ell leq 29.

Planck_lensing_loglike: |
   Computes the Planck lensing log-likelihood for a given set of C_ells. All module functions described here have the prefix function_Planck_lensing_.

Planck_nuisance_prior_loglike: |
   Provides Gaussian priors on the nuisance parameters of the Planck likelihoods, as suggested by the Planck collaboration.

Planck_sz_prior_loglike: |
   Provides priors on the tSZ and kSZ amplitudes. The correlation is unconstrained by Planck. Uses prior based on SPT and ACT data, cf. Eq. (32) of Aghanim et al. 2015 (arXiv 1507.02704).

DM_mass: |
    Dark matter mass (in GeV).

DM_fraction: |
    fraction of the abundance of the dark matter candidate in question
    (mostly a decaying component) contributing to the total DM abundance.

lifetime: |
    lifetime of the decaying dark matter component (in s).

energy_injection_spectrum: |
    Spectrum of electrons/positrons and photons injected by
    the decay or annihilation of a DM particle with a certain mass.

energy_injection_efficiency: |
   Gets the energy injection efficiency table from the darkages frontend.

f_eff: |
   Effective energy injection efficiency (constant used for on-the-spot approximation)

p_ann: |
   Annihilation rate (p_ann = f_eff * f^2 * <sv>/m)
   Unit: cm^3 s^-1 GeV^-1

lnL_p_ann: |
   Profiled likelihood on p_ann

gagg: |
   ALP-photon coupling.

# -----------
# ACROPOLIS
# -----------

Acropolis_1_2_1_init: |
    Initialise ACROPOLIS (v1.2.1)

set_input_params: |
    Sets the input parametes for Acropolis.

abundance_photodisintegration_decay: |
    Computes the abundances of primordial elements after photodisintegration by a decaying particle.

# -----------
# AlterBBN
# -----------

AlterBBN_2_2_init: |
    Initialise AlterBBN.

AlterBBN_Input: |
   Sets input parameters for an alterbbn run.

Init_AlterBBN: |
    Set the members of the AlterBBN relicparam structure to their according values and. Modify this function if you want to pass so far unimplemented options to AlterBBN.

AlterBBN_modelinfo: |
     Holds internal AlterBBN parameters in structure relicparam.

Init_cosmomodel: |
     Initialise AlterBBN internal structure.

get_NNUC: |
    Return global AlterBBN parameter NNUC (# computed element abundances).

call_nucl: |
    Backend convenience function to set all inputs for call to AlterBBN's nucl_err function to calculation BBN abundances.

call_nucl_err: |
    Backend convenience function to set all inputs for call to AlterBBN's nucl_err function to calculation BBN abundances + errors.

nucl: |
    AlterBBN function that computes element abundances during BBN.

nucl_err: |
    AlterBBN function that computes element abundances and their covariance during BBN.

BBN_LogLike: |
   Computes likelihood for BBN data.

primordial_abundances_BBN: |
   Computes primordial abundances, their uncertainties and covariance matrix after BBN, using AlterBBN.

primordial_abundances: |
   Computes primordial abundances, their uncertainties and covariance matrix today, including the effect of photodisintegration using Acropolis, if relevant.

Helium_abundance: |
    Compute predicted Helium mass fraction, Yp, and theoretical error from BBN. First vector entry mean, second standard deviation.

Helium3_abundance: |
    Compute predicted Helium3 abundance (by number w.r.t. hydrogen) and theoretical error from BBN. First vector entry mean, second standard deviation.

Deuterium_abundance: |
    Compute predicted Deuterium abundance (by number w.r.t. hydrogen) and theoretical error from BBN. First vector entry mean, second standard deviation.

Lithium7_abundance: |
    Compute predicted Lithium7 abundance (by number w.r.t. hydrogen) and theoretical error from BBN. First vector entry mean, second standard deviation.

Beryllium7_abundance: |
    Compute predicted Beryllium7 abundance (by number w.r.t. hydrogen) and theoretical error from BBN. First vector entry mean, second standard deviation.

get_abund_map_AlterBBN: |
    A map that translates element name to position of element in the ratioH (abundances) vector.

#-------------------
# NeutrinoBit capabilities
#-------------------

UPMNS: |
  Active neutrino mixing matrix (Pontecorvo-Maki–Nakagawa–Sakata matrix)

SeesawI_Theta: |
  Active-Sterile neutrino mixing matrix in the type I seesaw mechanism

SeesawI_Vnu: |
  Active neutrino mixing matrix in the type I seesaw mechanism

m_nu: |
  Matrix of active neutrinos

md21: |
  Squared mass difference between the first and second neutrino masses

md31: |
  Squared mass difference between the first and third neutrino masses

md32: |
  Squared mass difference between the second and third neutrino masses

min_mass: |
  Minimum mass of the active neutrinos

ordering: |
  Ordering of the neutrino mass eigenstates: 1 = normal, 0 = inverted

theta12: |
  Active neutrino mixing angle theta12

theta13: |
  Active neutrino mixing angle theta13

theta23: |
  Active neutrino mixing angle theta23

deltaCP: |
  CP violating phase of the UPMNS matrix

theta12_NuFit_v3_2_lnL: |
  Log-likelihood of the active neutrino mixing angle theta12 with respect to NuFit v3.2 data

theta12_NuFit_v4_1_lnL: |
  Log-likelihood of the active neutrino mixing angle theta12 with respect to NuFit v4.1 data

theta13_NuFit_v3_2_lnL: |
  Log-likelihood of the active neutrino mixing angle theta13 with respect to NuFit v3.2 data

theta13_NuFit_v4_1_lnL: |
  Log-likelihood of the active neutrino mixing angle theta13 with respect to NuFit v4.1 data

theta23_NuFit_v3_2_lnL: |
  Log-likelihood of the active neutrino mixing angle theta23 with respect to NuFit v3.2 data

theta23_NuFit_v4_1_lnL: |
  Log-likelihood of the active neutrino mixing angle theta23 with respect to NuFit v4.1 data

deltaCP_NuFit_v3_2_lnL: |
  Log-likelihood of the CP violating phase with respect to NuFit v3.2 data

deltaCP_NuFit_v4_1_lnL: |
  Log-likelihood of the CP violating phase with respect to NuFit v4.1 data

md21_NuFit_v3_2_lnL: |
  Log-likelihood of the 1-2 mass splitting with respect to NuFit v3.2 data

md21_NuFit_v4_1_lnL: |
  Log-likelihood of the 1-2 mass splitting with respect to NuFit v4.1 data

md3l_NuFit_v3_2_lnL: |
  Log-likelihood of the 3-l (l= 1 for NO, 2 for IO) mass splitting with respect to NuFit v3.2 data

md3l_NuFit_v4_1_lnL: |
  Log-likelihood of the 3-l (l= 1 for NO, 2 for IO) mass splitting with respect to NuFit v4.1 data

md21_md3l_NuFit_v4_1_lnL: |
  2D log-likelihood of the 1-2 and 3-l (l= 1 for NO, 2 for IO) mass splittings with respect to NuFit v4.1 data

sum_mnu_lnL: |
  Log-likelihood of the sum of light neutrino masses usign cosmological constraints

Unitarity: |
  Test for unitarity of the full mixing matrix

perturbativity_lnL: |
  Test for perturbativity of the Yukawa couplings

Ue1: |
  (1,1) entry of the active-sterile mixing matrix

Ue1_phase: |
  (1,1) phase of the active-sterile mixing matrix

Ue2: |
  (1,2) entry of the active-sterile mixing matrix

Ue2_phase: |
  (1,2) phase of the active-sterile mixing matrix

Ue3: |
  (1,3) entry of the active-sterile mixing matrix

Ue3_phase: |
  (1,3) phase of the active-sterile mixing matrix

Um1: |
  (2,1) entry of the active-sterile mixing matrix

Um1_phase: |
  (2,1) phase of the active-sterile mixing matrix

Um2: |
  (2,2) entry of the active-sterile mixing matrix

Um2_phase: |
  (2,2) phase of the active-sterile mixing matrix

Um3: |
  (2,3) entry of the active-sterile mixing matrix

Um3_phase: |
  (2,3) phase of the active-sterile mixing matrix

Ut1: |
  (3,1) entry of the active-sterile mixing matrix

Ut1_phase: |
  (3,1) phase of the active-sterile mixing matrix

Ut2: |
  (3,2) entry of the active-sterile mixing matrix

Ut2_phase: |
  (3,2) phase of the active-sterile mixing matrix

Ut3: |
  (3,3) entry of the active-sterile mixing matrix

Ut3_phase: |
  (3,3) phase of the active-sterile mixing matrix

Gamma_RHN23nu: |
  Decay rate of right-handed neutrinos to 3 left-handed neutrinos

Gamma_RHN2Bcl: |
  Decay rate of right-handed neutrinos to a charmed B meson and a lepton

Gamma_RHN2Bplusl: |
  Decay rate of right-handed neutrinos to a positively-charged B meson and a lepton

Gamma_RHN2Dplusl: |
  Decay rate of right-handed neutrinos to a positively-charged D meson and a lepton

Gamma_RHN2Dsl: |
  Decay rate of right-handed neutrinos to a strange D meson and a lepton

Gamma_RHN2Kplusl: |
  Decay rate of right-handed neutrinos to a positively-charged kaon and a lepton

Gamma_RHN2etanu: |
  Decay rate of right-handed neutrinos to an eta meson and a left-handed neutrino

Gamma_RHN2etaprimenu: |
  Decay rate of right-handed neutrinos to an eta prime meson and a left-handed neutrino

Gamma_RHN2llnu: |
  Decay rate of right-handed neutrinos to two leptons of different flavor and a left-handed neutrino

Gamma_RHN2null: |
  Decay rate of right-handed neutrinos to a left-handed neutrino of one flavor and a pair of leptons of another flavor

Gamma_RHN2pi0nu: |
  Decay rate of right-handed neutrinos to a neutral pion and a left-handed neutrino

Gamma_RHN2piplusl: |
  Decay rate of right-handed neutrinos to a positively-charged pion and a lepton

Gamma_RHN2rho0nu: |
  Decay rate of right-handed neutrinos to a neutral rho meson and a left-handed neutrino

Gamma_RHN2rhoplusl: |
  Decay rate of right-handed neutrinos to a positively-charged rho meson and a lepton

Gamma_RHN2Dstarplusl: |
  Decay rate of right-handed neutrinos to a positively-charged D* meson and a lepton

Gamma_RHN2Dstarsl: |
  Decay rate of right-handed neutrinos to a positively-charged Ds* and a lepton

Gamma_RHN2Jpsinu: |
  Decay rate of right-handed neutrinos to a J/psi meson and a left-handed neutrino

Gamma_RHN2etacnu: |
  Decay rate of right-handed neutrinos to a eta_c meson and a left-handed neutrino

Gamma_RHN2omeganu: |
  Decay rate of right-handed neutrinos to a omega meson and a left-handed neutrino

Gamma_RHN2phinu: |
  Decay rate of right-handed neutrinos to a phi meson and a left-handed neutrino

Gamma_RHN2nuuubar: |
  Decay rate of right-handed neutrinos to a left-handed neutrino and a meson composed of up-type quarks

Gamma_RHN2nuddbar: |
  Decay rate of right-handed neutrinos to a left-handed neutrino and a meson composed of down-type quarks

Gamma_RHN2ludbar: |
  Decay rate of right-handed neutrinos to a lepton, one up-type and one down-type quark

Gamma_BBN: |
  Total decay rate for right-handed neutrinos, combining all decays listed

lnL_bbn: |
  Log-likelihood for the lifetime of right-handed neutrinos, based on BBN constraint

R_K: |
  Lepton universality ratio of Kaon decays to leptons

R_pi: |
  Lepton universality ratio of pion decays to leptons

R_tau: |
  Lepton universality ratio of tau decays to leptons

R_W: |
  Lepton universality ratio of W decays to leptons

lnL_R_K: |
  Log-likelihood for lepton universality ratio of Kaon decays to leptons

lnL_R_pi: |
  Log-likelihood for lepton universality ratio of pion decays to leptons

lnL_R_tau: |
  Log-likelihood for lepton universality ratio of tau decays to leptons

lnL_R_W: |
  Log-likelihood for lepton universality ratio of W decays to leptons

calc_Vus: |
  Calculate optimized value of Vus for Theta

lnLckm_Vus:
  Log-likelihood for CKM unitarity using Vus as input parameter

lnLckm_Vusmin: |
  Log-likelihood for CKM unitarity profiling over Vus

Thalf_0nubb_Ge: |
  Neutrinoless double beta half-life for 76Ge detector

Thalf_0nubb_Xe: |
  Neutrinoless double beta half-life for 136Xe detector

lnL_0nubb_GERDA: |
  Log-likelihood for the neutrinoless double beta decay rate for the 76Ge detector

lnL_0nubb_KamLAND_Zen: |
  Log-likelihood for the neutrinoless double beta decay rate for the 136Xe detector

lnL_0nubb: |
  Log-likelihood for all neutrinoless double beta decay experiments

mbb_0nubb_Ge: |
  effective neutrino mass (mbetabeta) from neutrinoless double beta for 76Ge detector

mbb_0nubb_Xe: |
  effective neutrino mass (mbetabeta) from neutrinoless double beta for 136Xe detector

lnL_mbb_0nubb_GERDA: |
  Log-likelihood for the effective neutrino mass (mbetabeta) for the 76Ge detector

lnL_mbb_0nubb_KamLAND_Zen: |
  Log-likelihood for the effective neutrino mass (mbetabeta) for the 136Xe detector

lnL_mbb_0nubb: |
  Log-likelihood for the effective neutrino mass (mbetabeta) for the 136Xe detector and 76Ge detector

lnLatlase: |
  Log-likelihood for direct searches of right-handed neutrinos in the ATLAS experiment in the electron sector

lnLatlasmu: |
  Log-likelihood for direct searches of right-handed neutrinos in the ATLAS experiment in the muon sector

lnLcharme: |
  Log-likelihood for direct searches of right-handed neutrinos in the CHARM experiment in the electron sector

lnLcharmmu: |
  Log-likelihood for direct searches of right-handed neutrinos in the CHARM experiment in the muon sector

lnLcharmtau: |
  Log-likelihood for direct searches of right-handed neutrinos in the CHARM experiment in the tau sector

lnLdelphi_shortlived: |
  Log-likelihood for direct searches of short-lived right-handed neutrinos in the Delphi experiment

lnLdelphi_longlived: |
  Log-likelihood for direct searches of long-lived right-handed neutrinos in the Delphi experiment

lnLe949: |
  Log-likelihood for direct searches of right-handed neutrinos in the E949 experiment

lnLlhce: |
  Log-likelihood for direct searches of right-handed neutrinos in the LHC experiment in the electron sector

lnLlhcmu: |
  Log-likelihood for direct searches of right-handed neutrinos in the LHC experiment in the muon sector

lnLnutev: |
  Log-likelihood for direct searches of right-handed neutrinos in the NuTeV experiment

lnLpienu: |
  Log-likelihood for direct searches of right-handed neutrinos in the PieNu experiment

lnLps191e: |
  Log-likelihood for direct searches of right-handed neutrinos in the PS191 experiment in the electron sector

lnLps191mu: |
  Log-likelihood for direct searches of right-handed neutrinos in the PS191 experiment in the muon sector

RHN_coupling_slide: |
  Artificial coupling slide

#-------------------------------------
#  Capgen capabilities
#-------------------------------------

CaptnGeneral_2_1_init: |
  Initialize Captn' general 2.1 backend.

captn_init: |
  Actually initialize Captn' general.

cap_sun_saturation: |
  Compute the saturation value of dark matter capture in the Sun based on halo params.

cap_Sun_vnqn_isoscalar: |
  Compute v^n or q^n solar capture rate.

captn_init_oper: |
  Initalizes stuff specific to non-relativistic effective operator method

captn_NREO: |
  Computes capture rate using non-relativistic effective operator method

captn_populate_array: |
  Inserts the desired value for the constant picked by its indices

c0_1_cap: |
  The c^{0}_{1} coupling constant from arxiv 1501.03729

c0_2_cap: |
  The c^{0}_{2} coupling constant from arxiv 1501.03729

c0_3_cap: |
  The c^{0}_{3} coupling constant from arxiv 1501.03729

c0_4_cap: |
  The c^{0}_{4} coupling constant from arxiv 1501.03729

c0_5_cap: |
  The c^{0}_{5} coupling constant from arxiv 1501.03729

c0_6_cap: |
  The c^{0}_{6} coupling constant from arxiv 1501.03729

c0_7_cap: |
  The c^{0}_{7} coupling constant from arxiv 1501.03729

c0_8_cap: |
  The c^{0}_{8} coupling constant from arxiv 1501.03729

c0_9_cap: |
  The c^{0}_{9} coupling constant from arxiv 1501.03729

c0_10_cap: |
  The c^{0}_{10} coupling constant from arxiv 1501.03729

c0_11_cap: |
  The c^{0}_{11} coupling constant from arxiv 1501.03729

c0_12_cap: |
  The c^{0}_{12} coupling constant from arxiv 1501.03729

c0_13_cap: |
  The c^{0}_{13} coupling constant from arxiv 1501.03729

c0_14_cap: |
  The c^{0}_{14} coupling constant from arxiv 1501.03729

c0_15_cap: |
  The c^{0}_{15} coupling constant from arxiv 1501.03729

c1_1_cap: |
  The c^{1}_{1} coupling constant from arxiv 1501.03729

c1_2_cap: |
  The c^{1}_{2} coupling constant from arxiv 1501.03729

c1_3_cap: |
  The c^{1}_{3} coupling constant from arxiv 1501.03729

c1_4_cap: |
  The c^{1}_{4} coupling constant from arxiv 1501.03729

c1_5_cap: |
  The c^{1}_{5} coupling constant from arxiv 1501.03729

c1_6_cap: |
  The c^{1}_{6} coupling constant from arxiv 1501.03729

c1_7_cap: |
  The c^{1}_{7} coupling constant from arxiv 1501.03729

c1_8_cap: |
  The c^{1}_{8} coupling constant from arxiv 1501.03729

c1_9_cap: |
  The c^{1}_{9} coupling constant from arxiv 1501.03729

c1_10_cap: |
  The c^{1}_{10} coupling constant from arxiv 1501.03729

c1_11_cap: |
  The c^{1}_{11} coupling constant from arxiv 1501.03729

c1_12_cap: |
  The c^{1}_{12} coupling constant from arxiv 1501.03729

c1_13_cap: |
  The c^{1}_{13} coupling constant from arxiv 1501.03729

c1_14_cap: |
  The c^{1}_{14} coupling constant from arxiv 1501.03729

c1_15_cap: |
  The c^{1}_{15} coupling constant from arxiv 1501.03729

jwimp: |
  Spin of the Dark Matter particle created with map_to_cap() in NREO model.

#-------------------------------------
#  CalcHEP capabilities
#-------------------------------------

CalcHEP_3_6_27_init: |
  Initialise CalcHEP backend.

generate_decay_code: |
  Generates the codelet for a 1->2 process in CalcHEP.

generate_xsec_code: |
  Generates the codelet for a 2->2 process in CalcHEP.

Assign_Value: |
  Assigns a numerical value to a given CalcHEP parameter (with error-checking).

Assign_Widths: |
  Passes the width from each BSM particle (+ top quark) in the model, from the DecayTable to CalcHEP.

Assign_All_Values: |
  Takes all parameters in a model as given by the vector of SpectrumParameters, and assigns them by value to the appropriate CalcHEP parameter names.

CH_Decay_Width: |
  Provides spin-averaged decay width for 2 body decay process in CM frame at tree-level.

CH_Sigma_V: |
  Computes annihilation cross-section for 2->2 process, DM+DMbar -> X + Y at tree level. Coannihilations not currently supported; we require the mass of both in states are equal.

setModel: |
  Set the model within CalcHEP.

pdg2mass: |
  Returns the name of the mass parameter within CalcHEP for a given PDG code.

pdg2width: |
  Returns the name of the width parameter within CalcHEP for a given PDG code.

calcMainFunc: |
  Calculates and updates all PUBLIC (model-dependent) parameters in CalcHEP.

pMass: |
  Obtains the value of the mass of a particle, for a given CalcHEP particle name.

getMEcode: |
  Generates shared object file computing matrix element - or points to if it already exists.

passParameters: |
  Exports numerical values of parameters to the dynamic CalcHEP matrix element code

varNames: |
  CalcHEP's internal list of variable names.

#------------------------
#  Rivet capabilites
#-----------------------

Rivet_3_0_0_init: |
  Initialise Rivet backend


#---------------------
# DirecDM capabilities
#---------------------

DirectDM_2_2_0_init: |
  Initialise the DirectDM backend

get_NR_WCs_flav: |
  Get Wilson Coefficients at 2 GeV in a quark flavour matching scheme.

DirectDMNuisanceParameters: |
  Extract the nuisance parameters for DirectDM as a map

#--------------------------------
#  Vacuum stability capabilities
#--------------------------------

VS_likelihood: |
  Computes the likelihood associated with the stability of the scalar potential

VS_results: |
  Results from a Vevacious run in the format of a string to double map

check_vacuum_stability: |
  Computes the stability of a scalar potential with Vevacious

compare_panic_vacua: |
  Compares two vacua to check if they are the same

panic_vacua: |
  List of requested panic vacua

tunnelling_strategy: |
  List of requested tunnelling strategies

vevacious_file_location: |
    Sets the name and locations of the ini files for vevacious for each model, since they might not be just <MODELNAME>.vin, etc. Model dependent.

init_vevacious: |
    Initialize vevacious. Set potential runOptions for vevacious in the YAML file in the rules section for this capability. Model independent.

vevacious_1_0_init: |
    Initialization of vevacious 1.0 backend.

pass_spectrum_to_vevacious: |
    Adds all entries of the spectrum object (as SLHAea) that need to be passed to vevacious to an instance of type SpectrumEntriesForVevacious and returns this instance. The actual passing happens in the helper function exec_pass_spectrum_to_vevacious which gets executed every time before a vevacious call. Model dependent.

#-------------------------------------
#  ObjectivesBit capabilities
#-------------------------------------

gaussian: |
  Multi-dimensional Gaussian centered at 0.5 with diagonal covariances of 0.1^2.

rosenbrock: |
  Multi-dimensional generalization of 2d Rosenbrock function. See https://en.wikipedia.org/wiki/Rosenbrock_function

himmelblau: |
  Two-dimensional Himmelblau function. See https://en.wikipedia.org/wiki/Himmelblau%27s_function

mccormick: |
  Two-dimensional McCormick function.

ackley: |
  Multi-dimensional Ackely function. See https://en.wikipedia.org/wiki/Ackley_function

eggbox: |
  Multi-dimensional eggbox function. Test problem 2 from https://arxiv.org/abs/1306.2144

rastrigin: |
  Multi-dimensional Rastrigin function. See https://en.wikipedia.org/wiki/Rastrigin_function

beale: |
  Two-dimensional Beale function.

shells: |
  Multi-dimensional Gausian shells. Test problem 1 from https://arxiv.org/abs/1306.2144

styblinski_tang: |
  Multi-dimensional Styblinski-Tang function.

easom: |
  Two-dimensional Easom function.

tf1: |
  Analytic function 1 from https://arxiv.org/abs/2101.04525

tf2: |
  Analytic function 2 from https://arxiv.org/abs/2101.04525

tf3: |
  Analytic function 3 from https://arxiv.org/abs/2101.04525

tf4: |
  Analytic function 4 from https://arxiv.org/abs/2101.04525

trivial_1d_parameters: |
  Model parameters for the trivial 1D model

trivial_2d_parameters: |
  Model parameters for the trivial 2D model

trivial_3d_parameters: |
  Model parameters for the trivial 3D model

trivial_4d_parameters: |
  Model parameters for the trivial 4D model

trivial_5d_parameters: |
  Model parameters for the trivial 5D model

trivial_7d_parameters: |
  Model parameters for the trivial 7D model

trivial_10d_parameters: |
  Model parameters for the trivial 10D model
