<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="WIMP__EFT_8cpp" kind="file" language="C++">
    <compoundname>WIMP_EFT.cpp</compoundname>
    <includes local="no">boost/make_shared.hpp</includes>
    <includes local="yes">gambit/Elements/gambit_module_headers.hpp</includes>
    <includes local="yes">gambit/DarkBit/DarkBit_rollcall.hpp</includes>
    <includes refid="DarkBit__utils_8hpp" local="yes">gambit/DarkBit/DarkBit_utils.hpp</includes>
    <includes refid="ProcessCatalog_8hpp" local="yes">gambit/DarkBit/ProcessCatalog.hpp</includes>
    <includes local="yes">gambit/Utils/numerical_constants.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>gambit/Elements/gambit_module_headers.hpp</label>
      </node>
      <node id="11">
        <label>gambit/DarkBit/ProcessCatalog.hpp</label>
        <link refid="ProcessCatalog_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>WIMP_EFT.cpp</label>
        <link refid="WIMP__EFT_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="4">
        <label>gambit/DarkBit/DarkBit_rollcall.hpp</label>
      </node>
      <node id="10">
        <label>gambit/Elements/daFunk.hpp</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="9">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="5">
        <label>gambit/DarkBit/DarkBit_utils.hpp</label>
        <link refid="DarkBit__utils_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>gambit/Utils/numerical_constants.hpp</label>
      </node>
      <node id="8">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
      <node id="2">
        <label>boost/make_shared.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classGambit_1_1DarkBit_1_1WIMP__EFT__DM" prot="public">Gambit::DarkBit::WIMP_EFT_DM</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1DarkBit">Gambit::DarkBit</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="WIMP__EFT_8cpp_1a302187f8cea1d9db96ad663af098f41e" prot="public" static="no">
        <name>getSMmass</name>
        <param><defname>Name</defname></param>
        <param><defname>spinX2</defname></param>
        <initializer>       catalog.particleProperties.insert(std::pair&lt;string, TH_ParticleProperty&gt; \
       (Name , TH_ParticleProperty(spec.get(Par::Pole_Mass,Name), spinX2)));</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" line="324" column="15"/>
      </memberdef>
      <memberdef kind="define" id="WIMP__EFT_8cpp_1a5cfd88c7fb3e3b8b9d35eb54806de6da" prot="public" static="no">
        <name>addParticle</name>
        <param><defname>Name</defname></param>
        <param><defname>Mass</defname></param>
        <param><defname>spinX2</defname></param>
        <initializer>       catalog.particleProperties.insert(std::pair&lt;string, TH_ParticleProperty&gt; \
       (Name , TH_ParticleProperty(Mass, spinX2)));</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" line="327" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Module functions associated with creating and translating WIMP-nucleon and WIMP-quark effective operator couplings from GAMBIT ModelParameters. Functions which compute these EFT couplings for specific &quot;UV&quot; models live in DarkBit sources files named after those models.</para>
<para>Includes module functions to compute non-relativistic operator couplings from relativistic ones using DirectDM.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:b.farmer@imperial.ac.uk">b.farmer@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 Jul</para>
</simplesect>
<simplesect kind="author"><para>Felix Kahlhofer (<ulink url="mailto:kahlhoefer@physik.rwth-aachen.de">kahlhoefer@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 May</para>
</simplesect>
<simplesect kind="author"><para>Ankit Beniwal (<ulink url="mailto:ankit.beniwal@uclouvain.be">ankit.beniwal@uclouvain.be</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 Dec</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:gonzalo@physik.rwth-aachen.de">gonzalo@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2021 Sep</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/make_shared.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Elements/gambit_module_headers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/DarkBit/DarkBit_rollcall.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DarkBit__utils_8hpp" kindref="compound">gambit/DarkBit/DarkBit_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ProcessCatalog_8hpp" kindref="compound">gambit/DarkBit/ProcessCatalog.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/numerical_constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DARKBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DarkBit</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>class<sp/>used<sp/>for<sp/>WIMP<sp/>EFT<sp/>process<sp/>catalog<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classGambit_1_1DarkBit_1_1WIMP__EFT__DM" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1DarkBit_1_1WIMP__EFT__DM" kindref="compound">WIMP_EFT_DM</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1DarkBit_1_1WIMP__EFT__DM_1af251df9fcb48a66db00e040f1a8550af" kindref="member">WIMP_EFT_DM</ref>(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">TH_ProcessCatalog</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>catalog)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mh<sp/><sp/><sp/>(catalog-&gt;<ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog_1a681f0593cd152e9b894f975fde28332c" kindref="member">getParticleProperty</ref>(</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">).<ref refid="structGambit_1_1DarkBit_1_1TH__ParticleProperty_1a4ef18f5f6563ce01addefb10eea03275" kindref="member">mass</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mb<sp/><sp/><sp/>(catalog-&gt;<ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog_1a681f0593cd152e9b894f975fde28332c" kindref="member">getParticleProperty</ref>(</highlight><highlight class="stringliteral">&quot;d_3&quot;</highlight><highlight class="normal">).<ref refid="structGambit_1_1DarkBit_1_1TH__ParticleProperty_1a4ef18f5f6563ce01addefb10eea03275" kindref="member">mass</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mc<sp/><sp/><sp/>(catalog-&gt;<ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog_1a681f0593cd152e9b894f975fde28332c" kindref="member">getParticleProperty</ref>(</highlight><highlight class="stringliteral">&quot;u_2&quot;</highlight><highlight class="normal">).<ref refid="structGambit_1_1DarkBit_1_1TH__ParticleProperty_1a4ef18f5f6563ce01addefb10eea03275" kindref="member">mass</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mtau<sp/>(catalog-&gt;<ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog_1a681f0593cd152e9b894f975fde28332c" kindref="member">getParticleProperty</ref>(</highlight><highlight class="stringliteral">&quot;e-_3&quot;</highlight><highlight class="normal">).<ref refid="structGambit_1_1DarkBit_1_1TH__ParticleProperty_1a4ef18f5f6563ce01addefb10eea03275" kindref="member">mass</ref>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mt<sp/><sp/><sp/>(catalog-&gt;<ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog_1a681f0593cd152e9b894f975fde28332c" kindref="member">getParticleProperty</ref>(</highlight><highlight class="stringliteral">&quot;u_3&quot;</highlight><highlight class="normal">).<ref refid="structGambit_1_1DarkBit_1_1TH__ParticleProperty_1a4ef18f5f6563ce01addefb10eea03275" kindref="member">mass</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mZ0<sp/><sp/>(catalog-&gt;<ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog_1a681f0593cd152e9b894f975fde28332c" kindref="member">getParticleProperty</ref>(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).<ref refid="structGambit_1_1DarkBit_1_1TH__ParticleProperty_1a4ef18f5f6563ce01addefb10eea03275" kindref="member">mass</ref>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mW<sp/><sp/><sp/>(catalog-&gt;<ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog_1a681f0593cd152e9b894f975fde28332c" kindref="member">getParticleProperty</ref>(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).<ref refid="structGambit_1_1DarkBit_1_1TH__ParticleProperty_1a4ef18f5f6563ce01addefb10eea03275" kindref="member">mass</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1DarkBit_1_1WIMP__EFT__DM_1aaaa360de5c35c64a7e076b63780310d3" kindref="member">sv</ref>(std::string<sp/>channel,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hardcoded<sp/>minimum<sp/>velocity<sp/>avoids<sp/>NaN<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pat<sp/>didn&apos;t<sp/>like<sp/>the<sp/>hardcoded<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>std::max(v,<sp/>1e-6);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>4*mass*mass/(1-v*v/4);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqrt_s<sp/>=<sp/>sqrt(s);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>channel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hh&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sqrt_s<sp/>&gt;<sp/>mh*2<sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A<sp/>+<sp/>B*v*v;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>channel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal"><sp/>and<sp/>sqrt_s<sp/>&lt;<sp/>mb*2<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>channel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cc&quot;</highlight><highlight class="normal"><sp/>and<sp/>sqrt_s<sp/>&lt;<sp/>mc*2<sp/><sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>channel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tautau&quot;</highlight><highlight class="normal"><sp/>and<sp/>sqrt_s<sp/>&lt;<sp/>mtau*2<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>channel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tt&quot;</highlight><highlight class="normal"><sp/>and<sp/>sqrt_s<sp/>&lt;<sp/>mt*2<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>channel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ZZ&quot;</highlight><highlight class="normal"><sp/>and<sp/>sqrt_s<sp/>&lt;<sp/>mZ0*2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>channel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;WW&quot;</highlight><highlight class="normal"><sp/>and<sp/>sqrt_s<sp/>&lt;<sp/>mW*2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sqrt_s<sp/>&lt;<sp/>300<sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Explicitly<sp/>close<sp/>channel<sp/>for<sp/>off-shell<sp/>top<sp/>quarks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>channel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tt&quot;</highlight><highlight class="normal"><sp/>and<sp/>sqrt_s<sp/>&lt;<sp/>mt*2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A<sp/>+<sp/>B*v*v;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A<sp/>+<sp/>B*v*v;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mh,<sp/>mb,<sp/>mc,<sp/>mtau,<sp/>mt,<sp/>mZ0,<sp/>mW;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="WIMP__EFT_8cpp_1aaf9f0af83002c50bc352f2f0e398da61" kindref="member">DarkMatter_ID_EFT</ref>(std::string&amp;<sp/>result)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::DarkMatter_ID_EFT;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ModelInUse(</highlight><highlight class="stringliteral">&quot;NREO_scalarDM&quot;</highlight><highlight class="normal">))<sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ModelInUse(</highlight><highlight class="stringliteral">&quot;NREO_MajoranaDM&quot;</highlight><highlight class="normal">))<sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;psi&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ModelInUse(</highlight><highlight class="stringliteral">&quot;NREO_DiracDM&quot;</highlight><highlight class="normal">))<sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chi&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DarkMatterConj_ID_EFT(std::string&amp;<sp/>result)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::DarkMatterConj_ID_EFT;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ModelInUse(</highlight><highlight class="stringliteral">&quot;NREO_scalarDM&quot;</highlight><highlight class="normal">))<sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ModelInUse(</highlight><highlight class="stringliteral">&quot;NREO_MajoranaDM&quot;</highlight><highlight class="normal">))<sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;psi&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ModelInUse(</highlight><highlight class="stringliteral">&quot;NREO_DiracDM&quot;</highlight><highlight class="normal">))<sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chi~&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Translation<sp/>of<sp/>NREO<sp/>ModelParameters<sp/>into<sp/>NREO_DM_nucleon_couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="147"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NREO_couplings_from_parameters(NREO_DM_nucleon_couplings&amp;<sp/>NREO_couplings)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::NREO_couplings_from_parameters;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NREO_couplings<sp/>=<sp/>NREO_DM_nucleon_couplings(Param);<sp/></highlight><highlight class="comment">//<sp/>Constructor<sp/>takes<sp/>care<sp/>of<sp/>the<sp/>parameter<sp/>copying<sp/>for<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NREO_couplings.CPTbasis<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Translation<sp/>of<sp/>DD_couplings<sp/>into<sp/>NREO_DM_nucleon_couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NREO_from_DD_couplings(NREO_DM_nucleon_couplings&amp;<sp/>NREO_couplings)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::NREO_from_DD_couplings;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DM_nucleon_couplings<sp/>ddc<sp/>=<sp/>*Dep::DD_couplings;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NREO_couplings.c0[1]<sp/>=<sp/>(ddc.gps<sp/>+<sp/>ddc.gns);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NREO_couplings.c1[1]<sp/>=<sp/>(ddc.gps<sp/>-<sp/>ddc.gns);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NREO_couplings.c0[4]<sp/>=<sp/>(ddc.gpa<sp/>+<sp/>ddc.gna);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NREO_couplings.c1[4]<sp/>=<sp/>(ddc.gpa<sp/>-<sp/>ddc.gna);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NREO_couplings.CPTbasis<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Non-relativistic<sp/>Wilson<sp/>Coefficients,<sp/>model<sp/>independent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="WIMP__EFT_8cpp_1a387ede7567afa7a652b0ba399d002256" kindref="member">DD_nonrel_WCs_flavscheme</ref>(NREO_DM_nucleon_couplings<sp/>&amp;result)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::DD_nonrel_WCs_flavscheme;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>quark<sp/>flavours<sp/>used<sp/>for<sp/>matching<sp/>(default<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scheme<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(5,<sp/></highlight><highlight class="stringliteral">&quot;flavs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>defined<sp/>for<sp/>3,<sp/>4,<sp/>+<sp/>5<sp/>flavour<sp/>scheme.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scheme<sp/>!=<sp/>3<sp/>&amp;&amp;<sp/>scheme<sp/>!=<sp/>4<sp/>&amp;&amp;<sp/>scheme<sp/>!=<sp/>5)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;DD_nonrel_WCs_flavscheme<sp/>quark<sp/>flavour<sp/>matching<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;scheme<sp/>must<sp/>be<sp/>for<sp/>3,<sp/>4<sp/>or<sp/>5<sp/>quark<sp/>flavors<sp/>only.<sp/>Please<sp/>check<sp/>your<sp/>YAML<sp/>file.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Obtain<sp/>spin<sp/>of<sp/>DM<sp/>particle,<sp/>plus<sp/>identify<sp/>whether<sp/>DM<sp/>is<sp/>self-conjugate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mDM<sp/>=<sp/>Dep::WIMP_properties-&gt;mass;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sDM<sp/><sp/>=<sp/>Dep::WIMP_properties-&gt;spinx2;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_SC<sp/>=<sp/>Dep::WIMP_properties-&gt;sc;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>DM_type<sp/>based<sp/>on<sp/>the<sp/>spin<sp/>and<sp/>&amp;<sp/>conjugacy<sp/>of<sp/>DM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DM_type;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nuisance<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map_str_dbl<sp/>inputs<sp/>=<sp/>*Dep::DirectDMNuisanceParameters;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fermion<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sDM<sp/>==<sp/>1)<sp/>{<sp/>is_SC<sp/>?<sp/>DM_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal"><sp/>:<sp/>DM_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sDM<sp/>==<sp/>0)<sp/>{<sp/>is_SC<sp/>?<sp/>DM_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal"><sp/>:<sp/>DM_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>etc.<sp/>DM<sp/>not<sp/>supported<sp/>by<sp/>DirectDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>DarkBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;DD_nonrel_WCs_flavscheme<sp/>only<sp/>usable<sp/>for<sp/>spin-0<sp/>and<sp/>spin-1/2<sp/>DM.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relativistic<sp/>Wilson<sp/>Coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map_str_dbl<sp/>relativistic_WCs<sp/>=<sp/>*Dep::DD_rel_WCs_flavscheme;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>non-relativistic<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>BEreq::get_NR_WCs_flav(relativistic_WCs,<sp/>mDM,<sp/>scheme,<sp/>DM_type,<sp/>inputs);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="WIMP__EFT_8cpp_1ae4ffe9eb4f2b5d253d25db36bb72ecde" kindref="member">ExtractDirectDMNuisanceParameters</ref>(map_str_dbl<sp/>&amp;result)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::ExtractDirectDMNuisanceParameters;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kick<sp/>things<sp/>off<sp/>with<sp/>SMInputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SMInputs<sp/>sminputs<sp/>=<sp/>*Dep::SMINPUTS;<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;aMZinv&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.alphainv;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1:<sp/>Inverse<sp/>electromagnetic<sp/>coupling<sp/>at<sp/>the<sp/>Z<sp/>pole<sp/>in<sp/>the<sp/>MSbar<sp/>scheme<sp/>(with<sp/>5<sp/>active<sp/>flavours)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;GF&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.GF;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2:<sp/>Fermi<sp/>constant<sp/>(in<sp/>units<sp/>of<sp/>GeV^-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;asMZ&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.alphaS;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3:<sp/>Strong<sp/>coupling<sp/>at<sp/>the<sp/>Z<sp/>pole<sp/>in<sp/>the<sp/>MSbar<sp/>scheme<sp/>(with<sp/>5<sp/>active<sp/>flavours).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;Mz&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.mZ;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4:<sp/>Z<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;mb_at_mb&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.mBmB;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5:<sp/>b<sp/>quark<sp/>running<sp/>mass<sp/>in<sp/>the<sp/>MSbar<sp/>scheme<sp/>(at<sp/>mB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;mt_pole&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.mT;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6:<sp/>Top<sp/>quark<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;mtau&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.mTau;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7:<sp/>Tau<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;me&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.mE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>11:<sp/>Electron<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;mmu&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.mMu;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>13:<sp/>Muon<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;md_at_2GeV&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.mD;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>21:<sp/>d<sp/>quark<sp/>running<sp/>mass<sp/>in<sp/>the<sp/>MSbar<sp/>scheme<sp/>at<sp/>2<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;mu_at_2GeV&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.mU;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>22:<sp/>u<sp/>quark<sp/>running<sp/>mass<sp/>in<sp/>the<sp/>MSbar<sp/>scheme<sp/>at<sp/>2<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;ms_at_2GeV&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.mS;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>23:<sp/>s<sp/>quark<sp/>running<sp/>mass<sp/>in<sp/>the<sp/>MSbar<sp/>scheme<sp/>at<sp/>2<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;mc_at_mc&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sminputs.mCmC;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>24:<sp/>c<sp/>quark<sp/>running<sp/>mass<sp/>in<sp/>the<sp/>MSbar<sp/>scheme<sp/>at<sp/>mC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>top<sp/>it<sp/>up<sp/>with<sp/>parameters<sp/>from<sp/>nuclear_params_ChPT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;gA&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;gA&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;mG&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;mG&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;sigmaup&quot;</highlight><highlight class="normal">]<sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;sigmaup&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;sigmadp&quot;</highlight><highlight class="normal">]<sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;sigmadp&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;sigmaun&quot;</highlight><highlight class="normal">]<sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;sigmaun&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;sigmadn&quot;</highlight><highlight class="normal">]<sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;sigmadn&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;sigmas&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;sigmas&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;DeltauDeltad&quot;</highlight><highlight class="normal">]<sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;DeltauDeltad&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;Deltas&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;Deltas&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;B0mu&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;B0mu&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;B0md&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;B0md&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;B0ms&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;B0ms&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;mup&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;mup&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;mun&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;mun&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;mus&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;mus&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;gTu&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;gTu&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;gTd&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;gTd&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;gTs&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;gTs&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note!<sp/>Setting<sp/>BT10dn<sp/>equal<sp/>to<sp/>BT10up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;BT10up&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;BT10up&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;BT10dn&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;BT10up&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note!<sp/>Setting<sp/>BT10un<sp/>equal<sp/>to<sp/>BT10dp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;BT10dp&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;BT10dp&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;BT10un&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;BT10dp&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;BT10s&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;BT10s&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;rs2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;rs2&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Process<sp/>catalog<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="283"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="WIMP__EFT_8cpp_1a4cf00e60a1ecde29a2b51792c526b4a2" kindref="member">TH_ProcessCatalog_WIMP_EFT</ref>(DarkBit::TH_ProcessCatalog<sp/>&amp;result)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::TH_ProcessCatalog_WIMP_EFT;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::vector;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>empty<sp/>catalog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_ProcessCatalog<sp/>catalog;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>initial<sp/>state<sp/>particles<sp/>from<sp/>particle<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMstr<sp/>=<sp/>Dep::WIMP_properties-&gt;name;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMbarstr<sp/>=<sp/>Dep::WIMP_properties-&gt;conjugate;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WIMP_mass<sp/>=<sp/>Dep::WIMP_properties-&gt;mass;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WIMP_spinx2<sp/>=<sp/>Dep::WIMP_properties-&gt;spinx2;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>container<sp/>for<sp/>annihilation<sp/>processes<sp/>for<sp/>dark<sp/>matter<sp/>initial<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_Process<sp/>process_ann(DMstr,<sp/>DMbarstr);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Explicitly<sp/>state<sp/>that<sp/>Dirac<sp/>DM<sp/>is<sp/>not<sp/>self-conjugate<sp/>to<sp/>add<sp/>extra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>factors<sp/>of<sp/>1/2<sp/>where<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>process_ann.isSelfConj<sp/>=<sp/>Dep::WIMP_properties-&gt;sc;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_annihilation<sp/>annihilationProps;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>finalstates<sp/>{</highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;WW&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tautau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZZ&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hh&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>channel<sp/>=<sp/>finalstates.begin();<sp/>channel!=finalstates.end();<sp/>++channel)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>A(</highlight><highlight class="stringliteral">&quot;A_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>B(</highlight><highlight class="stringliteral">&quot;B_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>annihilationProps.setA(*channel,*Param[A+*channel]);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>annihilationProps.setB(*channel,*Param[B+*channel]);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Import<sp/>particle<sp/>masses<sp/>and<sp/>couplings</highlight></codeline>
<codeline lineno="322"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convenience<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>getSMmass(Name,<sp/>spinX2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.particleProperties.insert(std::pair&lt;string,<sp/>TH_ParticleProperty&gt;<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Name<sp/>,<sp/>TH_ParticleProperty(spec.get(Par::Pole_Mass,Name),<sp/>spinX2)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>addParticle(Name,<sp/>Mass,<sp/>spinX2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.particleProperties.insert(std::pair&lt;string,<sp/>TH_ParticleProperty&gt;<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Name<sp/>,<sp/>TH_ParticleProperty(Mass,<sp/>spinX2)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Import<sp/>Standard<sp/>Model<sp/>spectrum<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::SM_spectrum;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMInputs&amp;<sp/>SMI<sp/><sp/>=<sp/>spec.get_SMInputs();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Import<sp/>couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>SM<sp/>pole<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(</highlight><highlight class="stringliteral">&quot;e-_1&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;e+_1&quot;,<sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;e-_2&quot;,<sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;e+_2&quot;,<sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;e-_3&quot;,<sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;e+_3&quot;,<sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;Z0&quot;,<sp/><sp/><sp/><sp/><sp/>2)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;W+&quot;,<sp/><sp/><sp/><sp/><sp/>2)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;W-&quot;,<sp/><sp/><sp/><sp/><sp/>2)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;g&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>2)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;gamma&quot;,<sp/><sp/>2)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;u_3&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;ubar_3&quot;,<sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;d_3&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getSMmass(&quot;dbar_3&quot;,<sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pole<sp/>masses<sp/>not<sp/>available<sp/>for<sp/>the<sp/>light<sp/>quarks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;u_1&quot;<sp/><sp/><sp/>,<sp/>SMI.mU,<sp/><sp/>1)<sp/></highlight><highlight class="comment">//<sp/>mu(2<sp/>GeV)^MS-bar,<sp/>not<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;ubar_1&quot;,<sp/>SMI.mU,<sp/><sp/>1)<sp/></highlight><highlight class="comment">//<sp/>mu(2<sp/>GeV)^MS-bar,<sp/>not<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;d_1&quot;<sp/><sp/><sp/>,<sp/>SMI.mD,<sp/><sp/>1)<sp/></highlight><highlight class="comment">//<sp/>md(2<sp/>GeV)^MS-bar,<sp/>not<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;dbar_1&quot;,<sp/>SMI.mD,<sp/><sp/>1)<sp/></highlight><highlight class="comment">//<sp/>md(2<sp/>GeV)^MS-bar,<sp/>not<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;u_2&quot;<sp/><sp/><sp/>,<sp/>SMI.mCmC,1)<sp/></highlight><highlight class="comment">//<sp/>mc(mc)^MS-bar,<sp/>not<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;ubar_2&quot;,<sp/>SMI.mCmC,1)<sp/></highlight><highlight class="comment">//<sp/>mc(mc)^MS-bar,<sp/>not<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;d_2&quot;<sp/><sp/><sp/>,<sp/>SMI.mS,<sp/><sp/>1)<sp/></highlight><highlight class="comment">//<sp/>ms(2<sp/>GeV)^MS-bar,<sp/>not<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;dbar_2&quot;,<sp/>SMI.mS,<sp/><sp/>1)<sp/></highlight><highlight class="comment">//<sp/>ms(2<sp/>GeV)^MS-bar,<sp/>not<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Masses<sp/>for<sp/>neutrino<sp/>flavour<sp/>eigenstates.<sp/>Set<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(presently<sp/>not<sp/>required)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;nu_e&quot;,<sp/><sp/><sp/><sp/><sp/>0.0,<sp/>1)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;nubar_e&quot;,<sp/><sp/>0.0,<sp/>1)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;nu_mu&quot;,<sp/><sp/><sp/><sp/>0.0,<sp/>1)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;nubar_mu&quot;,<sp/>0.0,<sp/>1)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;nu_tau&quot;,<sp/><sp/><sp/>0.0,<sp/>1)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;nubar_tau&quot;,0.0,<sp/>1)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Higgs-sector<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mH<sp/>=<sp/>spec.get(Par::Pole_Mass,&quot;h0_1&quot;);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;h0_1&quot;,<sp/><sp/><sp/><sp/><sp/>mH,<sp/>0)<sp/><sp/></highlight><highlight class="comment">//<sp/>SM-like<sp/>Higgs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;pi0&quot;,<sp/><sp/><sp/>meson_masses.pi0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;pi+&quot;,<sp/><sp/><sp/>meson_masses.pi_plus,<sp/><sp/><sp/>0)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;pi-&quot;,<sp/><sp/><sp/>meson_masses.pi_minus,<sp/><sp/>0)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;eta&quot;,<sp/><sp/><sp/>meson_masses.eta,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;rho0&quot;,<sp/><sp/>meson_masses.rho0,<sp/><sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;rho+&quot;,<sp/><sp/>meson_masses.rho_plus,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;rho-&quot;,<sp/><sp/>meson_masses.rho_minus,<sp/>1)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;omega&quot;,<sp/>meson_masses.omega,<sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dark<sp/>matter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(DMstr,<sp/>WIMP_mass,<sp/>WIMP_spinx2)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(not<sp/>process_ann.isSelfConj)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(DMbarstr,<sp/>WIMP_mass,<sp/>WIMP_spinx2)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>convenience<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>getSMmass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>addParticle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Import<sp/>Decay<sp/>information</highlight></codeline>
<codeline lineno="399"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Import<sp/>decay<sp/>table<sp/>from<sp/>DecayBit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable*<sp/>tbl<sp/>=<sp/>&amp;(*Dep::decay_rates);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>of<sp/>imported<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;string&gt;<sp/>importedDecays;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>branching<sp/>ratio<sp/>to<sp/>include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minBranching<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Import<sp/>relevant<sp/>decays<sp/>(only<sp/>Higgs<sp/>and<sp/>subsequent<sp/>decays)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DarkBit_utils::ImportDecays;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notes:<sp/>Virtual<sp/>Higgs<sp/>decays<sp/>into<sp/>offshell<sp/>W+W-<sp/>final<sp/>states<sp/>are<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>imported.<sp/><sp/>All<sp/>other<sp/>channels<sp/>are<sp/>correspondingly<sp/>rescaled.<sp/><sp/>Decay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>FF<sp/>final<sp/>states<sp/>is<sp/>accounted<sp/>for,<sp/>leading<sp/>to<sp/>zero<sp/>photons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImportDecays(</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">,<sp/>catalog,<sp/>importedDecays,<sp/>tbl,<sp/>minBranching,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::vec&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-_3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instantiate<sp/>new<sp/>WIMP_EFT_DM<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wimpDM<sp/>=<sp/>boost::make_shared&lt;WIMP_EFT_DM&gt;(&amp;catalog);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>annihilation<sp/>channel<sp/>list<sp/>and<sp/>add<sp/>thresholds<sp/>to<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(remark:<sp/>the<sp/>lowest<sp/>threshold<sp/>is<sp/>here<sp/>=<sp/>2*WIMP_mass,<sp/>whereas<sp/>in<sp/>DS-internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conventions,<sp/>this<sp/>lowest<sp/>threshold<sp/>is<sp/>not<sp/>listed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>process_ann.resonances_thresholds.threshold_energy.push_back(2*WIMP_mass);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>channel<sp/>=</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::vec&lt;string&gt;(</highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;WW&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tautau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZZ&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p1<sp/>=</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::vec&lt;string&gt;(</highlight><highlight class="stringliteral">&quot;d_3&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u_2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;e+_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u_3&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p2<sp/>=</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::vec&lt;string&gt;(</highlight><highlight class="stringliteral">&quot;dbar_3&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar_2&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;e-_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar_3&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>channel.size();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtot_final<sp/>=</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.getParticleProperty(p1[i]).mass<sp/>+</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.getParticleProperty(p2[i]).mass;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>final<sp/>states<sp/>that<sp/>are<sp/>open<sp/>for<sp/>T~m/20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>WIMP_mass*2<sp/>&gt;<sp/>mtot_final*0.5<sp/>)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>annihilationProps.A(channel[i]);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B<sp/>=<sp/>annihilationProps.B(channel[i]);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>kinematicFunction<sp/>=<sp/>daFunk::funcM(wimpDM,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classGambit_1_1DarkBit_1_1WIMP__EFT__DM_1aaaa360de5c35c64a7e076b63780310d3" kindref="member">WIMP_EFT_DM::sv</ref>,<sp/>channel[i],<sp/>WIMP_mass,<sp/>A,<sp/>B,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH_Channel<sp/>new_channel(</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::vec&lt;string&gt;(p1[i],<sp/>p2[i]),<sp/>kinematicFunction</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_ann.channelList.push_back(new_channel);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>WIMP_mass*2<sp/>&gt;<sp/>mtot_final<sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_ann.resonances_thresholds.threshold_energy.</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_back(mtot_final);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>resonance<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>None<sp/>for<sp/>this<sp/>model<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>process<sp/>to<sp/>previous<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>catalog.processList.push_back(process_ann);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>catalog.validate();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>finished<sp/>process<sp/>catalog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>catalog;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>function<sp/>TH_ProcessCatalog_WIMP_EFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp"/>
  </compounddef>
</doxygen>
