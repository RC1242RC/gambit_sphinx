<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="LibFirst__1__1_8hpp" kind="file" language="C++">
    <compoundname>LibFirst_1_1.hpp</compoundname>
    <includes local="no">cstdarg</includes>
    <includes refid="include_2gambit_2Backends_2backend__undefs_8hpp" local="yes">gambit/Backends/backend_undefs.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>cstdarg</label>
      </node>
      <node id="3">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
      <node id="1">
        <label>LibFirst_1_1.hpp</label>
        <link refid="LibFirst__1__1_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="LibFirst__1__1_8hpp_1a7f7848301604c58c8962207acd75ff6e" prot="public" static="no">
        <name>BACKENDNAME</name>
        <initializer>LibFirst</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="23" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFirst__1__1_8hpp_1a339bf682af9659de270251e5d18011be" prot="public" static="no">
        <name>BACKENDLANG</name>
        <initializer>CXX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="24" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFirst__1__1_8hpp_1a1c6d5de492ac61ad29aec7aa9a436bbf" prot="public" static="no">
        <name>VERSION</name>
        <initializer>1.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="25" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFirst__1__1_8hpp_1a8d5a383ba38225163529bfcb55b74444" prot="public" static="no">
        <name>SAFE_VERSION</name>
        <initializer>1_1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="26" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFirst__1__1_8hpp_1a62a0f8a0b822f31ff84bc8252b33e7c8" prot="public" static="no">
        <name>REFERENCE</name>
        <initializer>GAMBIT:2017yxo</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="27" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="LibFirst__1__1_8hpp_1a086b62fdf5041cfa9601435a9d8b444a" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></type>
        <definition>LOAD_LIBRARY double _Z11arrayarg_2DPA10_d double</definition>
        <argsstring></argsstring>
        <name>double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="43" column="2" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="LibFirst__1__1_8hpp_1ac1a876344c05733cdae1a1f3ef1187f0" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> double _Z11arrayarg_2DPA10_d</type>
        <definition>LOAD_LIBRARY char MSSM63atQ double MSSM63atQ int</definition>
        <argsstring></argsstring>
        <name>int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="56" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="LibFirst__1__1_8hpp_1a3046c2adce99f614888908882225a8db" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> double _Z11arrayarg_2DPA10_d</type>
        <definition>LOAD_LIBRARY double _Z11arrayarg_2DPA10_d awesomeness</definition>
        <argsstring></argsstring>
        <name>awesomeness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="56" column="13" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="LibFirst__1__1_8hpp_1a54ab1143046de87b696d6e2e1ca4e5b2" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> double _Z11arrayarg_2DPA10_d</type>
        <definition>LOAD_LIBRARY double _Z11arrayarg_2DPA10_d NUHM1</definition>
        <argsstring></argsstring>
        <name>NUHM1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="56" column="25" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="LibFirst__1__1_8hpp_1a46afc31d46ad5acbb706344e9c742ca8" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> double _Z11arrayarg_2DPA10_d ScalarSingletDM_Z3</type>
        <definition>LOAD_LIBRARY double _Z11arrayarg_2DPA10_d ScalarSingletDM_Z3 BE_INI_FUNCTION</definition>
        <argsstring></argsstring>
        <name>BE_INI_FUNCTION</name>
        <initializer>{
  
  static bool scan_level = true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="60" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="LibFirst__1__1_8hpp_1aad2dab6f3108b88f6a1246d84f9db946" prot="public" static="no" mutable="no">
        <type></type>
        <definition>scan_level</definition>
        <argsstring></argsstring>
        <name>scan_level</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="69" column="3" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="LibFirst__1__1_8hpp_1ad76cf8d64b3b76f441001dae3d890c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></type>
        <definition>LOAD_LIBRARY BE_FUNCTION</definition>
        <argsstring>(someFunction, void,(), &quot;_Z12someFunctionv&quot;, &quot;someFunction&quot;,(NUHM1, WC)) BE_FUNCTION(arrayarg_2D</argsstring>
        <name>BE_FUNCTION</name>
        <param>
          <type>someFunction</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>&quot;_Z12someFunctionv&quot;</type>
        </param>
        <param>
          <type>&quot;someFunction&quot;</type>
        </param>
        <param>
          <type>(NUHM1, WC)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="LibFirst__1__1_8hpp_1a136d90a6796237a1a05c72f196a0d97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> double _Z11arrayarg_2DPA10_d</type>
        <definition>LOAD_LIBRARY double _Z11arrayarg_2DPA10_d BE_FUNCTION</definition>
        <argsstring>(arrayarg_3D, double,(double(*)[10][10]), &quot;_Z11arrayarg_3DPA10_A10_d&quot;, &quot;example_be_array_3D&quot;) BE_CONV_FUNCTION(awesomenessByAnders</argsstring>
        <name>BE_FUNCTION</name>
        <param>
          <type>arrayarg_3D</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(double(*)[10][10])</type>
        </param>
        <param>
          <type>&quot;_Z11arrayarg_3DPA10_A10_d&quot;</type>
        </param>
        <param>
          <type>&quot;example_be_array_3D&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="LibFirst__1__1_8hpp_1a9d8b760073c710f9361fc1c0d1134b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(scan_level)</argsstring>
        <name>if</name>
        <param>
          <type>scan_level</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="64" column="3" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="LibFirst__1__1_8hpp_1ade66586343b836e02d579be538960218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>logger</definition>
        <argsstring>()&lt;&lt; &quot;Initialised someDouble to &quot;&lt;&lt; *SomeDouble&lt;&lt; EOM</argsstring>
        <name>logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" line="75" column="5" declfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp" declline="75" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Example of how to use the macros in &apos;<ref refid="backend__macros_8hpp" kindref="compound">backend_macros.hpp</ref>&apos; to set up a frontend for a specific library.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Anders Kvellestad </para>
</simplesect>
<simplesect kind="date"><para>2013 Mar, Apr</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:patscott@physics.mcgill.ca">patscott@physics.mcgill.ca</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 Apr </para>
</simplesect>
<simplesect kind="date"><para>2014 May</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDNAME<sp/>LibFirst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDLANG<sp/>CXX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION<sp/>1.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAFE_VERSION<sp/>1_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFERENCE<sp/>GAMBIT:2017yxo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Begin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="backend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>models<sp/>that<sp/>this<sp/>backend<sp/>can<sp/>be<sp/>used<sp/>with.<sp/><sp/>If<sp/>absent,<sp/>all<sp/>models<sp/>are<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="common__macros_8hpp_1a4236f3c5c82e25ac792c299085d80d0c" kindref="member">BE_ALLOW_MODELS</ref>(NUHM1,ScalarSingletDM_Z3,WC,CMSSM)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">BE_FUNCTION(initialize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;_Z10initializei&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;initialize_capability&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">BE_FUNCTION(someFunction,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;_Z12someFunctionv&quot;,<sp/>&quot;someFunction&quot;,<sp/>(NUHM1,WC))</highlight></codeline>
<codeline lineno="38"><highlight class="normal">BE_FUNCTION(returnResult,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;_Z12returnResultv&quot;,&quot;returnResult_capability&quot;)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">BE_FUNCTION(byRefExample,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;_Z12byRefExampleRd&quot;,<sp/>&quot;refex&quot;)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">BE_FUNCTION(byRefExample2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;_Z13byRefExample2Rdd&quot;,<sp/>&quot;refex2&quot;)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">BE_FUNCTION(nastyExample,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>etc),<sp/>&quot;_Z12nastyExampleiz&quot;,<sp/>&quot;varex&quot;)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">BE_FUNCTION(arrayarg_1D,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*),<sp/>&quot;_Z11arrayarg_1DPd&quot;,<sp/>&quot;example_be_array_1D&quot;)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">BE_FUNCTION(arrayarg_2D,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*)[10]),<sp/>&quot;_Z11arrayarg_2DPA10_d&quot;,<sp/>&quot;example_be_array_2D&quot;)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">BE_FUNCTION(arrayarg_3D,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*)[10][10]),<sp/>&quot;_Z11arrayarg_3DPA10_A10_d&quot;,<sp/>&quot;example_be_array_3D&quot;)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">BE_VARIABLE(SomeInt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>&quot;someInt&quot;,<sp/>&quot;SomeInt&quot;,<sp/>(NUHM1))</highlight></codeline>
<codeline lineno="48"><highlight class="normal">BE_VARIABLE(SomeDouble,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>&quot;someDouble&quot;,<sp/>&quot;SomeDouble&quot;)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">BE_VARIABLE(SomeArray,<sp/>dblarr,<sp/>&quot;someArray&quot;,<sp/>&quot;SomeArray&quot;)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">BE_VARIABLE(SomeVector,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;,<sp/>&quot;someVector&quot;,<sp/>&quot;test_vector&quot;)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialisation<sp/>function<sp/>(dependencies)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="backend__macros_8hpp_1aea3b23df19f8b65789823ed8730430db" kindref="member">BE_INI_DEPENDENCY</ref>(nevents,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>functions<sp/>(registration)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">BE_CONV_FUNCTION(awesomenessByAnders,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>&quot;awesomeness&quot;,<sp/>(NUHM1,ScalarSingletDM_Z3))</highlight></codeline>
<codeline lineno="57"><highlight class="normal">BE_CONV_FUNCTION(variadicConvenience,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>etc),<sp/>&quot;varex2&quot;)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialisation<sp/>function<sp/>(definition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="common__macros_8hpp_1a825694403adda6ccd191cb93020fbe23" kindref="member">BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan-level<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scan_level<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan_level)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialising<sp/>backend<sp/>LibFirst,<sp/>v1.1.<sp/><sp/>My<sp/>.so<sp/>file<sp/>is<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>backendDir<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/>(*InUse::awesomenessByAnders<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Ready<sp/>to<sp/>bust<sp/>out<sp/>some<sp/>awesomeness.&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>awesomeness<sp/>shall<sp/>be<sp/>forthcoming.&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>scan_level<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Point-level<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::SomeDouble)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>*SomeDouble<sp/>=<sp/>2.1;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialised<sp/>someDouble<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*SomeDouble<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ModelInUse(</highlight><highlight class="stringliteral">&quot;CMSSM&quot;</highlight><highlight class="normal">))<sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M0<sp/>in<sp/>libfirst<sp/>v1.1<sp/>initialisation<sp/>function:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*Param[</highlight><highlight class="stringliteral">&quot;M0&quot;</highlight><highlight class="normal">]<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>awesomenessByAnders(*Dep::nevents);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="common__macros_8hpp_1a12da9763bf3b37787fa5ae54cf36c779" kindref="member">END_BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>functions<sp/>(definitions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;cstdarg&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>awesomenessByAnders(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>logger().send(</highlight><highlight class="stringliteral">&quot;Message<sp/>from<sp/>&apos;awesomenessByAnders&apos;<sp/>backend<sp/>convenience<sp/>function<sp/>in<sp/>LibFirst<sp/>v1.1<sp/>wrapper&quot;</highlight><highlight class="normal">,LogTags::info);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>initialize(a);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>someFunction();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnResult();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variadicConvenience(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>...)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>*SomeDouble;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>count);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>va_arg(args,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>End</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="include_2gambit_2Backends_2backend__undefs_8hpp" kindref="compound">gambit/Backends/backend_undefs.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_1.hpp"/>
  </compounddef>
</doxygen>
