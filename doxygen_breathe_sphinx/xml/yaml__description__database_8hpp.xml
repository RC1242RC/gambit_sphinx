<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="yaml__description__database_8hpp" kind="file" language="C++">
    <compoundname>yaml_description_database.hpp</compoundname>
    <includes local="no">yaml-cpp/yaml.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">sstream</includes>
    <includes local="no">utility</includes>
    <includes local="yes">gambit/Utils/util_types.hpp</includes>
    <includes local="yes">gambit/Utils/standalone_error_handlers.hpp</includes>
    <includes local="yes">gambit/Utils/variadic_functions.hpp</includes>
    <includes local="yes">gambit/Utils/yaml_variadic_functions.hpp</includes>
    <includedby refid="core_8hpp" local="yes">core.hpp</includedby>
    <includedby refid="core_8cpp" local="yes">core.cpp</includedby>
    <includedby refid="yaml__description__database_8cpp" local="yes">yaml_description_database.cpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
      </node>
      <node id="1">
        <label>yaml_description_database.hpp</label>
        <link refid="yaml__description__database_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>gambit/Utils/variadic_functions.hpp</label>
      </node>
      <node id="7">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
      </node>
      <node id="2">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11">
        <label>container_factory.cpp</label>
        <link refid="container__factory_8cpp"/>
      </node>
      <node id="5">
        <label>gambit.cpp</label>
        <link refid="gambit_8cpp"/>
      </node>
      <node id="1">
        <label>yaml_description_database.hpp</label>
        <link refid="yaml__description__database_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>container_factory.hpp</label>
        <link refid="container__factory_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>likelihood_container.cpp</label>
        <link refid="likelihood__container_8cpp"/>
      </node>
      <node id="14">
        <label>diagnostics.cpp</label>
        <link refid="diagnostics_8cpp"/>
      </node>
      <node id="17">
        <label>core.cpp</label>
        <link refid="core_8cpp"/>
      </node>
      <node id="10">
        <label>likelihood_container.hpp</label>
        <link refid="likelihood__container_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core_singleton.hpp</label>
        <link refid="core__singleton_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>depresolver.cpp</label>
        <link refid="depresolver_8cpp"/>
      </node>
      <node id="7">
        <label>ini_functions.cpp</label>
        <link refid="Core_2src_2ini__functions_8cpp"/>
      </node>
      <node id="4">
        <label>gambit.hpp</label>
        <link refid="gambit_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>modelgraph.hpp</label>
        <link refid="modelgraph_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>yaml_description_database.cpp</label>
        <link refid="yaml__description__database_8cpp"/>
      </node>
      <node id="8">
        <label>depresolver.hpp</label>
        <link refid="depresolver_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>core_singleton.cpp</label>
        <link refid="core__singleton_8cpp"/>
      </node>
      <node id="15">
        <label>modelgraph.cpp</label>
        <link refid="modelgraph_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structGambit_1_1capability__info" prot="public">Gambit::capability_info</innerclass>
    <innerclass refid="structGambit_1_1model__info" prot="public">Gambit::model_info</innerclass>
    <innerclass refid="classGambit_1_1DescriptionDatabase" prot="public">Gambit::DescriptionDatabase</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Small wrapper object for parsing and emitting capability/model etc. database information using yaml-cpp</para>
<para>Also in this file are the definitions of structs for carrying around capability/model information, as well as YAML emitters/decoders for these structs.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:ben.farmer@gmail.com">ben.farmer@gmail.com</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2014 Aug,Sep</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;yaml-cpp/yaml.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/util_types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/standalone_error_handlers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/variadic_functions.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/yaml_variadic_functions.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__yaml_description_database_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__yaml_description_database_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40" refid="structGambit_1_1capability__info" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1capability__info" kindref="compound">capability_info</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43" refid="structGambit_1_1capability__info_1a5083ab370a1da9da83cc9086d0c61f74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>str<sp/><ref refid="structGambit_1_1capability__info_1a5083ab370a1da9da83cc9086d0c61f74" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="45" refid="structGambit_1_1capability__info_1af85ade6c5af81f4d3c0a24dfb52af76a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>std::set&lt;std::pair&lt;str,str&gt;<sp/>&gt;<sp/>&gt;<sp/><ref refid="structGambit_1_1capability__info_1af85ade6c5af81f4d3c0a24dfb52af76a" kindref="member">modset</ref>;</highlight></codeline>
<codeline lineno="47" refid="structGambit_1_1capability__info_1a3b42d249798f5a648010a529fbce1cbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>std::set&lt;std::pair&lt;str,str&gt;<sp/>&gt;<sp/>&gt;<sp/><ref refid="structGambit_1_1capability__info_1a3b42d249798f5a648010a529fbce1cbe" kindref="member">beset</ref>;</highlight></codeline>
<codeline lineno="49" refid="structGambit_1_1capability__info_1a5f7fc9c8e6f5be1f2f031d076912a9a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>str<sp/><ref refid="structGambit_1_1capability__info_1a5f7fc9c8e6f5be1f2f031d076912a9a5" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="51" refid="structGambit_1_1capability__info_1a8638f6e1b8f46e46820be3b3b77bf8b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1capability__info_1a8638f6e1b8f46e46820be3b3b77bf8b0" kindref="member">has_description</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structGambit_1_1model__info" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1model__info" kindref="compound">model_info</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58" refid="structGambit_1_1model__info_1a158feefc2382c80e0355adcd4cfb66cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>str<sp/><ref refid="structGambit_1_1model__info_1a158feefc2382c80e0355adcd4cfb66cf" kindref="member">name</ref>;<sp/></highlight></codeline>
<codeline lineno="60" refid="structGambit_1_1model__info_1ad6c0da1d0798b0ce84268a35fbe757b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::vector&lt;str&gt;<sp/><ref refid="structGambit_1_1model__info_1ad6c0da1d0798b0ce84268a35fbe757b5" kindref="member">parameters</ref>;<sp/></highlight></codeline>
<codeline lineno="62" refid="structGambit_1_1model__info_1aaf291f010e997219c2999550522327f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1model__info_1aaf291f010e997219c2999550522327f8" kindref="member">nparams</ref>;</highlight></codeline>
<codeline lineno="64" refid="structGambit_1_1model__info_1a4301e6fdf2644e9baf41bd4fa3289d87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>str<sp/><ref refid="structGambit_1_1model__info_1a4301e6fdf2644e9baf41bd4fa3289d87" kindref="member">parent</ref>;<sp/></highlight></codeline>
<codeline lineno="66" refid="structGambit_1_1model__info_1a8b16919b67ea6bd034cc144c68682c3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::vector&lt;str&gt;<sp/><ref refid="structGambit_1_1model__info_1a8b16919b67ea6bd034cc144c68682c3c" kindref="member">lineage</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="structGambit_1_1model__info_1a012052c212933cde335b6ec8a3833eea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::vector&lt;str&gt;<sp/><ref refid="structGambit_1_1model__info_1a012052c212933cde335b6ec8a3833eea" kindref="member">descendants</ref>;</highlight></codeline>
<codeline lineno="70" refid="structGambit_1_1model__info_1a0d579b40fbee4d755f6d2a14de5c8624" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>str<sp/><ref refid="structGambit_1_1model__info_1a0d579b40fbee4d755f6d2a14de5c8624" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="72" refid="structGambit_1_1model__info_1a800fc8bb5d226f5b93eb9466de377f15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1model__info_1a800fc8bb5d226f5b93eb9466de377f15" kindref="member">has_description</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>YAML::Emitter&amp;<sp/>operator<sp/>&lt;&lt;<sp/>(YAML::Emitter&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1capability__info" kindref="compound">capability_info</ref>&amp;);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>YAML::Emitter&amp;<sp/>operator<sp/>&lt;&lt;<sp/>(YAML::Emitter&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1model__info" kindref="compound">model_info</ref>&amp;);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="83" refid="classGambit_1_1DescriptionDatabase" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1DescriptionDatabase" kindref="compound">DescriptionDatabase</ref><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1DescriptionDatabase_1a26f6ce930dfb98f1d2c9f77c8686190c" kindref="member">DescriptionDatabase</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1DescriptionDatabase_1a26f6ce930dfb98f1d2c9f77c8686190c" kindref="member">DescriptionDatabase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1DescriptionDatabase_1a26f6ce930dfb98f1d2c9f77c8686190c" kindref="member">DescriptionDatabase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YAML::Node<sp/>&amp;descriptions);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1DescriptionDatabase_1a26f6ce930dfb98f1d2c9f77c8686190c" kindref="member">DescriptionDatabase</ref>(YAML::Node<sp/>&amp;&amp;descriptions);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>args&gt;</highlight></codeline>
<codeline lineno="103" refid="classGambit_1_1DescriptionDatabase_1a7e1ad0b7ae04916d7eca7ce2945bfb6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1DescriptionDatabase_1a7e1ad0b7ae04916d7eca7ce2945bfb6c" kindref="member">hasKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>args&amp;...<sp/>keys)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="104"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getVariadicNode(descriptions,<sp/>keys...);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>args&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TYPE<sp/>getValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>args&amp;...<sp/>keys)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="110"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YAML::Node<sp/>node<sp/>=<sp/>getVariadicNode(descriptions,<sp/>keys...);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>node)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>entry<sp/>for<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stringifyVariadic(keys...)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]\n<sp/>Node<sp/>contents:<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>descriptions;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utils_error().raise(LOCAL_INFO,os.str());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.as&lt;TYPE&gt;();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>args&gt;</highlight></codeline>
<codeline lineno="125" refid="classGambit_1_1DescriptionDatabase_1a328e31c1548710447ecc1a6b4e2c1dec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1DescriptionDatabase_1a328e31c1548710447ecc1a6b4e2c1dec" kindref="member">loadFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptions<sp/>=<sp/>YAML::LoadFile(filename);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(YAML::Exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>msg;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>descriptions<sp/>file<sp/>\&quot;&quot;</highlight><highlight class="normal">&lt;&lt;filename&lt;&lt;</highlight><highlight class="stringliteral">&quot;\&quot;!<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>check<sp/>that<sp/>file<sp/>exists!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(yaml-cpp<sp/>error:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;e.what()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utils_error().raise(LOCAL_INFO,msg.str());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,int&gt;<sp/><ref refid="classGambit_1_1DescriptionDatabase_1a51a0a94a0c98681c3d0e4a121fee481b" kindref="member">check_for_duplicates</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;str&gt;<sp/><ref refid="classGambit_1_1DescriptionDatabase_1a051f98b640720789cd28db0cc8dea25c" kindref="member">get_all_values</ref>(str<sp/>key);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>descriptions;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>Gambit<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//defined<sp/>__yaml_description_database_hpp__</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Core/include/gambit/Core/yaml_description_database.hpp"/>
  </compounddef>
</doxygen>
