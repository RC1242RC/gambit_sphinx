<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="AlterBBN__2__2_8cpp" kind="file" language="C++">
    <compoundname>AlterBBN_2_2.cpp</compoundname>
    <includes local="no">sstream</includes>
    <includes refid="frontend__macros_8hpp" local="yes">gambit/Backends/frontend_macros.hpp</includes>
    <includes refid="AlterBBN__2__2_8hpp" local="yes">gambit/Backends/frontends/AlterBBN_2_2.hpp</includes>
    <incdepgraph>
      <node id="33">
        <label>gambit/Backends/frontends/AlterBBN_2_2.hpp</label>
        <link refid="AlterBBN__2__2_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>gambit/Backends/common_macros.hpp</label>
        <link refid="common__macros_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>boost/preprocessor/seq/transform.hpp</label>
      </node>
      <node id="16">
        <label>gambit/Backends/mathematica_macros.hpp</label>
        <link refid="mathematica__macros_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="7">
        <label>gambit/Elements/types_rollcall.hpp</label>
      </node>
      <node id="32">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="14">
        <label>gambit/Backends/interoperability.hpp</label>
        <link refid="interoperability_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>gambit/Backends/python_macros.hpp</label>
        <link refid="python__macros_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="6">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
      </node>
      <node id="22">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>gambit/Utils/util_functions.hpp</label>
      </node>
      <node id="20">
        <label>gambit/Elements/ini_catch.hpp</label>
      </node>
      <node id="26">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="28">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/Backends/interoperability_macros.hpp</label>
        <link refid="interoperability__macros_8hpp"/>
      </node>
      <node id="3">
        <label>gambit/Backends/frontend_macros.hpp</label>
        <link refid="frontend__macros_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sstream</label>
      </node>
      <node id="1">
        <label>AlterBBN_2_2.cpp</label>
        <link refid="AlterBBN__2__2_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>boost/preprocessor/control/iif.hpp</label>
      </node>
      <node id="17">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="34">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
      <node id="18">
        <label>gambit/Utils/util_macros.hpp</label>
      </node>
      <node id="25">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
      <node id="11">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="19">
        <label>gambit/Backends/mathematica_function.hpp</label>
        <link refid="mathematica__function_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Elements/module_macros_inmodule.hpp</label>
      </node>
      <node id="31">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="27">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="30">
        <label>gambit/Backends/python_function.hpp</label>
        <link refid="python__function_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="AlterBBN__2__2_8cpp_1aefb1937ad82dd3b38a994d90c823f2c1" prot="public" static="no">
        <name>NNUC</name>
        <initializer>26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/AlterBBN_2_2.cpp" line="39" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/AlterBBN_2_2.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Frontend for AlterBBN backend</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Janina Renk (<ulink url="mailto:janina.renk@fysik.su.se">janina.renk@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2018 Jun </para>
</simplesect>
<simplesect kind="date"><para>2020 Jan </para>
</simplesect>
<simplesect kind="date"><para>2020 May</para>
</simplesect>
<simplesect kind="author"><para>Patrick St√∂cker (<ulink url="mailto:stoecker@physik.rwth-achen.de">stoecker@physik.rwth-achen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 Sep</para>
</simplesect>
<simplesect kind="author"><para>Will Handley (<ulink url="mailto:wh260@cam.ac.uk">wh260@cam.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 Mar</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:pat.scott@uq.edu.au">pat.scott@uq.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 Apr</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:gonzalo@physik.rwth-aachen.de">gonzalo@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2022 Jan</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frontend__macros_8hpp" kindref="compound">gambit/Backends/frontend_macros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AlterBBN__2__2_8hpp" kindref="compound">gambit/Backends/frontends/AlterBBN_2_2.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NNUC<sp/>26<sp/>//<sp/>number<sp/>of<sp/>element<sp/>abundances<sp/>computed<sp/>in<sp/>AlterBBN<sp/>2.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="common__macros_8hpp_1a825694403adda6ccd191cb93020fbe23" kindref="member">BE_INI_FUNCTION</ref>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="common__macros_8hpp_1a12da9763bf3b37787fa5ae54cf36c779" kindref="member">END_BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>functions<sp/>(definitions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nucl_err_res=0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>map_str_dbl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_AlterBBN_input{};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>prev_ratioH(0.,<sp/>NNUC+1);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>prev_cov_ratioH(0.,<sp/>(NNUC+1)*(NNUC+1));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>std::set&lt;std::string&gt;<sp/>known_relicparam_options<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;eta0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Nnu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dNnu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;neutron_lifetime&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;err&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;failsafe&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fill_cosmomodel(AlterBBN_2_2::relicparam<sp/>*<sp/>input_relicparam,<sp/>map_str_dbl<sp/>&amp;<sp/>AlterBBN_input)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>only<sp/>options<sp/>that<sp/>are<sp/>known<sp/>to<sp/>the<sp/>interface,<sp/>i.e.<sp/>that<sp/>they<sp/>are<sp/>one<sp/>of<sp/>the<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defined<sp/>in<sp/>the<sp/>string<sp/>set<sp/>&apos;known_relicparam_options&apos;<sp/>above,<sp/>are<sp/>passed<sp/>to<sp/>AlterBBN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first_run<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(first_run)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>it<sp/>:<sp/>AlterBBN_input)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>throw<sp/>error<sp/>if<sp/>an<sp/>option<sp/>is<sp/>not<sp/>currently<sp/>being<sp/>passed<sp/>on<sp/>to<sp/>AlterBBN<sp/>&amp;<sp/>tell<sp/>user<sp/>how<sp/>to<sp/>change<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(known_relicparam_options.count(it.first)==0)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errormsg;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errormsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Option<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>tried<sp/>to<sp/>pass<sp/>to<sp/>AlterBBN_&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>VERSION&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>know<sp/>to<sp/>the<sp/>relicparam<sp/>strucutre<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errormsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Known<sp/>options<sp/>are:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>item<sp/>:<sp/>known_relicparam_options)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errormsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errormsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Check<sp/>for<sp/>typos<sp/>or<sp/>add<sp/>new<sp/>one<sp/>to<sp/>the<sp/>string<sp/>set<sp/>&apos;known_relicparam_options&apos;<sp/>in<sp/>Backends/src/frontends/AlterBBN_&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>VERSION&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.cpp&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_error().raise(LOCAL_INFO,errormsg.str());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first_run<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>below<sp/>for<sp/>the<sp/>parameter<sp/>you<sp/>want<sp/>to<sp/>overwrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlterBBN_input.count(</highlight><highlight class="stringliteral">&quot;eta0&quot;</highlight><highlight class="normal">)){input_relicparam-&gt;eta0<sp/>=<sp/>AlterBBN_input[</highlight><highlight class="stringliteral">&quot;eta0&quot;</highlight><highlight class="normal">];}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlterBBN_input.count(</highlight><highlight class="stringliteral">&quot;Nnu&quot;</highlight><highlight class="normal">)){input_relicparam-&gt;Nnu<sp/>=<sp/>AlterBBN_input[</highlight><highlight class="stringliteral">&quot;Nnu&quot;</highlight><highlight class="normal">];}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlterBBN_input.count(</highlight><highlight class="stringliteral">&quot;dNnu&quot;</highlight><highlight class="normal">)){input_relicparam-&gt;dNnu<sp/>=<sp/>AlterBBN_input[</highlight><highlight class="stringliteral">&quot;dNnu&quot;</highlight><highlight class="normal">];}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlterBBN_input.count(</highlight><highlight class="stringliteral">&quot;neutron_lifetime&quot;</highlight><highlight class="normal">)){input_relicparam-&gt;life_neutron<sp/>=<sp/>AlterBBN_input[</highlight><highlight class="stringliteral">&quot;neutron_lifetime&quot;</highlight><highlight class="normal">];}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>error<sp/>handling<sp/>related<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlterBBN_input.count(</highlight><highlight class="stringliteral">&quot;failsafe&quot;</highlight><highlight class="normal">)){input_relicparam-&gt;failsafe<sp/>=<sp/>(int)AlterBBN_input[</highlight><highlight class="stringliteral">&quot;failsafe&quot;</highlight><highlight class="normal">];}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlterBBN_input.count(</highlight><highlight class="stringliteral">&quot;err&quot;</highlight><highlight class="normal">)){input_relicparam-&gt;err<sp/>=<sp/>(int)AlterBBN_input[</highlight><highlight class="stringliteral">&quot;err&quot;</highlight><highlight class="normal">];}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>call_nucl_err(map_str_dbl<sp/>&amp;AlterBBN_input,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>ratioH,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>cov_ratioH<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlterBBN_input<sp/>!=<sp/>prev_AlterBBN_input)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AlterBBN_2_2::relicparam<sp/>input_relicparam;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Init_cosmomodel(&amp;input_relicparam);<sp/></highlight><highlight class="comment">//<sp/>initialise<sp/>values<sp/>of<sp/>relicparam<sp/>structure<sp/>to<sp/>their<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fill_cosmomodel(&amp;input_relicparam,<sp/>AlterBBN_input);<sp/></highlight><highlight class="comment">//<sp/>fill<sp/>strucutre<sp/>with<sp/>values<sp/>contained<sp/>in<sp/>AlerBBN_input<sp/>map<sp/>which<sp/>is<sp/>filled<sp/>in<sp/>CosmoBit.ccp<sp/>for<sp/>different<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nucl_err_res<sp/>=<sp/>nucl_err(&amp;input_relicparam,<sp/>ratioH,<sp/>cov_ratioH);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_ratioH<sp/>=<sp/>std::vector&lt;double&gt;(ratioH,<sp/>ratioH+NNUC+1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_cov_ratioH<sp/>=<sp/>std::vector&lt;double&gt;(cov_ratioH,<sp/>cov_ratioH+(NNUC+1)*(NNUC+1));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_AlterBBN_input<sp/>=<sp/>AlterBBN_input;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;i&lt;NNUC+1;i++)<sp/>ratioH[i]<sp/>=<sp/>prev_ratioH[i];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;i&lt;(NNUC+1)*(NNUC+1);i++)<sp/>cov_ratioH[i]<sp/>=<sp/>prev_cov_ratioH[i];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nucl_err_res;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>call_nucl(map_str_dbl<sp/>&amp;AlterBBN_input,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ratioH)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>AlterBBN_2_2::relicparam<sp/>input_relicparam;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>Init_cosmomodel(&amp;input_relicparam);<sp/></highlight><highlight class="comment">//<sp/>initialise<sp/>values<sp/>of<sp/>relicparam<sp/>structure<sp/>to<sp/>their<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_cosmomodel(&amp;input_relicparam,<sp/>AlterBBN_input);<sp/></highlight><highlight class="comment">//<sp/>fill<sp/>strucutre<sp/>with<sp/>values<sp/>contained<sp/>in<sp/>AlerBBN_input<sp/>map<sp/>which<sp/>is<sp/>filled<sp/>in<sp/>CosmoBit.ccp<sp/>for<sp/>different<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!nucl(&amp;input_relicparam,<sp/>ratioH);<sp/></highlight><highlight class="comment">//<sp/>nucl<sp/>returns<sp/>1<sp/>if<sp/>there<sp/>is<sp/>an<sp/>error<sp/>and<sp/>0<sp/>otherwise,<sp/>the<sp/>opposite<sp/>of<sp/>nucl_err,<sp/>so<sp/>negate<sp/>the<sp/>return<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_NNUC()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NNUC;<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>map_str_int<sp/>get_abund_map_AlterBBN()</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{{</highlight><highlight class="stringliteral">&quot;H2&quot;</highlight><highlight class="normal">,3},{</highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,3},{</highlight><highlight class="stringliteral">&quot;H3&quot;</highlight><highlight class="normal">,4},{</highlight><highlight class="stringliteral">&quot;He3&quot;</highlight><highlight class="normal">,5},{</highlight><highlight class="stringliteral">&quot;He4&quot;</highlight><highlight class="normal">,6},{</highlight><highlight class="stringliteral">&quot;Yp&quot;</highlight><highlight class="normal">,6},{</highlight><highlight class="stringliteral">&quot;Li6&quot;</highlight><highlight class="normal">,7},{</highlight><highlight class="stringliteral">&quot;Li7&quot;</highlight><highlight class="normal">,8},{</highlight><highlight class="stringliteral">&quot;Be7&quot;</highlight><highlight class="normal">,9},{</highlight><highlight class="stringliteral">&quot;Li8&quot;</highlight><highlight class="normal">,10}};<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/AlterBBN_2_2.cpp"/>
  </compounddef>
</doxygen>
