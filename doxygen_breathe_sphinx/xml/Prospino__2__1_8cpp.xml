<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Prospino__2__1_8cpp" kind="file" language="C++">
    <compoundname>Prospino_2_1.cpp</compoundname>
    <includes refid="backend__singleton_8hpp" local="yes">gambit/Backends/backend_singleton.hpp</includes>
    <includes refid="frontend__macros_8hpp" local="yes">gambit/Backends/frontend_macros.hpp</includes>
    <includes refid="Prospino__2__1_8hpp" local="yes">gambit/Backends/frontends/Prospino_2_1.hpp</includes>
    <includes local="yes">gambit/Elements/mssm_slhahelp.hpp</includes>
    <includes local="yes">gambit/Utils/slhaea_helpers.hpp</includes>
    <includes local="yes">gambit/Utils/version.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>Prospino_2_1.cpp</label>
        <link refid="Prospino__2__1_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>gambit/Backends/common_macros.hpp</label>
        <link refid="common__macros_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>boost/preprocessor/seq/transform.hpp</label>
      </node>
      <node id="32">
        <label>gambit/Backends/frontends/Prospino_2_1.hpp</label>
        <link refid="Prospino__2__1_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>gambit/Backends/mathematica_macros.hpp</label>
        <link refid="mathematica__macros_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="12">
        <label>gambit/Elements/types_rollcall.hpp</label>
      </node>
      <node id="31">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="19">
        <label>gambit/Backends/interoperability.hpp</label>
        <link refid="interoperability_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>gambit/Backends/python_macros.hpp</label>
        <link refid="python__macros_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>map</label>
      </node>
      <node id="11">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
      </node>
      <node id="2">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>gambit/Utils/util_functions.hpp</label>
      </node>
      <node id="24">
        <label>gambit/Elements/ini_catch.hpp</label>
      </node>
      <node id="7">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="27">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
      </node>
      <node id="20">
        <label>gambit/Backends/interoperability_macros.hpp</label>
        <link refid="interoperability__macros_8hpp"/>
      </node>
      <node id="8">
        <label>gambit/Backends/frontend_macros.hpp</label>
        <link refid="frontend__macros_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>boost/preprocessor/control/iif.hpp</label>
      </node>
      <node id="6">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="33">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
      <node id="22">
        <label>gambit/Utils/util_macros.hpp</label>
      </node>
      <node id="36">
        <label>gambit/Utils/version.hpp</label>
      </node>
      <node id="5">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
      <node id="16">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="23">
        <label>gambit/Backends/mathematica_function.hpp</label>
        <link refid="mathematica__function_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>gambit/Elements/module_macros_inmodule.hpp</label>
      </node>
      <node id="30">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="26">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="34">
        <label>gambit/Elements/mssm_slhahelp.hpp</label>
      </node>
      <node id="29">
        <label>gambit/Backends/python_function.hpp</label>
        <link refid="python__function_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="Prospino__2__1_8cpp_1aaafaae600f13dc30b28320e959695ccb" prot="public" static="no">
        <name>BACKEND_DEBUG</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" line="23" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="Prospino__2__1_8cpp_1aeab5d44c426d953a35368f02a8ab0504" prot="public" static="no" mutable="no">
        <type></type>
        <definition>BE_NAMESPACE</definition>
        <argsstring></argsstring>
        <name>BE_NAMESPACE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" line="27" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Prospino__2__1_8cpp_1afb79772ad01aa8fbed6809a1f22a751c" prot="public" static="no" mutable="no">
        <type>Farray&lt; Fdouble, 1, 20 &gt;</type>
        <definition>Farray&lt;Fdouble,1,20&gt; unimass</definition>
        <argsstring></argsstring>
        <name>unimass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" line="176" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Prospino__2__1_8cpp_1a8b08fee5d0223b3a92ab7ef0fea63202" prot="public" static="no" mutable="no">
        <type>Farray&lt; Fdouble, 0, 99 &gt;</type>
        <definition>Farray&lt;Fdouble,0,99&gt; lowmass</definition>
        <argsstring></argsstring>
        <name>lowmass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" line="177" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Prospino__2__1_8cpp_1aa4387904b1c00de79a42b675b295dd17" prot="public" static="no" mutable="no">
        <type>Farray&lt; Fdouble, 1, 2, 1, 2 &gt;</type>
        <definition>Farray&lt;Fdouble,1,2,1,2&gt; uu_in</definition>
        <argsstring></argsstring>
        <name>uu_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" line="178" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Prospino__2__1_8cpp_1a62fb4f4a53b7a67ed55df20644c1f940" prot="public" static="no" mutable="no">
        <type>Farray&lt; Fdouble, 1, 2, 1, 2 &gt;</type>
        <definition>Farray&lt;Fdouble,1,2,1,2&gt; vv_in</definition>
        <argsstring></argsstring>
        <name>vv_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" line="178" column="16" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Prospino__2__1_8cpp_1a1b3fef5bfa4f0b385ffb1235147b8a19" prot="public" static="no" mutable="no">
        <type>Farray&lt; Fdouble, 1, 4, 1, 4 &gt;</type>
        <definition>Farray&lt;Fdouble,1,4,1,4&gt; bw_in</definition>
        <argsstring></argsstring>
        <name>bw_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" line="179" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Prospino__2__1_8cpp_1a08224582f1da17f6776701b89382b191" prot="public" static="no" mutable="no">
        <type>Farray&lt; Fdouble, 1, 2, 1, 2 &gt;</type>
        <definition>Farray&lt;Fdouble,1,2,1,2&gt; mst_in</definition>
        <argsstring></argsstring>
        <name>mst_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" line="180" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Prospino__2__1_8cpp_1a937de5593b0ae26f69d60d40acd93c0b" prot="public" static="no" mutable="no">
        <type>Farray&lt; Fdouble, 1, 2, 1, 2 &gt;</type>
        <definition>Farray&lt;Fdouble,1,2,1,2&gt; msb_in</definition>
        <argsstring></argsstring>
        <name>msb_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" line="180" column="17" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Prospino__2__1_8cpp_1a06a216d02a67e73d8aed9710fe00302f" prot="public" static="no" mutable="no">
        <type>Farray&lt; Fdouble, 1, 2, 1, 2 &gt;</type>
        <definition>Farray&lt;Fdouble,1,2,1,2&gt; msl_in</definition>
        <argsstring></argsstring>
        <name>msl_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" line="180" column="24" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Frontend for Prospino 2.1 backend</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Anders Kvellestad </para>
</simplesect>
<simplesect kind="date"><para>2019 Apr, Nov</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="backend__singleton_8hpp" kindref="compound">gambit/Backends/backend_singleton.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frontend__macros_8hpp" kindref="compound">gambit/Backends/frontend_macros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Prospino__2__1_8hpp" kindref="compound">gambit/Backends/frontends/Prospino_2_1.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Elements/mssm_slhahelp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/slhaea_helpers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/version.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKEND_DEBUG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Map<sp/>from<sp/>PID_pair<sp/>to<sp/>prospino_settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>giant<sp/>map<sp/>initializer:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;PID_pair,<sp/>prospino_settings&gt;<sp/>PID_pairs_to_prospino_settings</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prospino<sp/>settings:<sp/>inlo,<sp/>isq_ng_in,<sp/>icoll_in,<sp/>energy_in,<sp/>i_error_in,<sp/>finalState,<sp/>ipart1,<sp/>ipart2,<sp/>isquark1_in,<sp/>isquark2_in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000021,<sp/>1000021),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;gg&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000021,<sp/>1000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sg&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000021,<sp/>1000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sg&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000021,<sp/>1000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sg&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000021,<sp/>1000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sg&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000021,<sp/>2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sg&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000021,<sp/>2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sg&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000021,<sp/>2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sg&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000021,<sp/>2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sg&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,-1000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,-1000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,-1000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,-1000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,-2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,-2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,-2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,-2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,-1000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,-1000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,-1000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,-2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,-2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,-2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,-2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,-1000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,-1000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,-2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,-2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,-2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,-2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000002,-1000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000002,-2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000002,-2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000002,-2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000002,-2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000002,-2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000002,-2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000002,-2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000002,-2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000001,-2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000001,-2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000001,-2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000003,-2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000003,-2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000004,-2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,<sp/>1000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,<sp/>1000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,<sp/>1000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,<sp/>1000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,<sp/>2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,<sp/>2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,<sp/>2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000004,<sp/>2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,<sp/>1000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,<sp/>1000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,<sp/>1000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,<sp/>2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,<sp/>2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,<sp/>2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000003,<sp/>2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,<sp/>1000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,<sp/>1000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,<sp/>2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,<sp/>2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,<sp/>2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000001,<sp/>2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000002,<sp/>1000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000002,<sp/>2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000002,<sp/>2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000002,<sp/>2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000002,<sp/>2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000002,<sp/>2000002),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>1)<sp/>),</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000002,<sp/>2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000002,<sp/>2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000002,<sp/>2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000001,<sp/>2000001),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>2)<sp/>),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000001,<sp/>2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000001,<sp/>2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>2,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000003,<sp/>2000003),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>3)<sp/>),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000003,<sp/>2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>3,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000004,<sp/>2000004),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>4,<sp/>4)<sp/>),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000006,-1000006),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;tb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000006,-2000006),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;tb&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>2,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000005,-1000005),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000005,-2000005),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>2,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000022,<sp/>1000022),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000022,<sp/>1000023),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000022,<sp/>1000025),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000022,<sp/>1000035),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>4,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000022,<sp/>1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>5,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000022,<sp/>1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>6,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000022,-1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>7,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000022,-1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>8,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000023,<sp/>1000023),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>2,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000023,<sp/>1000025),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>3,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000023,<sp/>1000035),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>4,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000023,<sp/>1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>5,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000023,<sp/>1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>6,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000023,-1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>7,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000023,-1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>8,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000025,<sp/>1000025),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>3,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000025,<sp/>1000035),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>4,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000025,<sp/>1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>5,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000025,<sp/>1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>6,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000025,-1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>7,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000025,-1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>8,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000035,<sp/>1000035),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>4,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000035,<sp/>1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>5,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000035,<sp/>1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>6,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000035,-1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>7,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000035,-1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>8,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000024,<sp/>1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>5,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000024,<sp/>1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>6,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000024,-1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>7,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000024,-1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>8,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000037,<sp/>1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>6,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000037,-1000024),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>7,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000037,-1000037),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;nn&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>8,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000011,-1000011),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000011,-2000011),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000012,-1000012),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000012,-1000011),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000011,-1000012),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000015,-1000015),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000015,-2000015),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>7,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000015,-2000015),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000016,-1000016),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>9,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000016,-1000015),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>10,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000015,-1000016),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>11,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(1000016,-2000015),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>12,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_pair(<sp/>PID_pair(2000015,-1000016),<sp/>prospino_settings(1,<sp/>1,<sp/>1,<sp/>13000.,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ll&quot;</highlight><highlight class="normal">,<sp/>13,<sp/>1,<sp/>0,<sp/>0)<sp/>),</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>arrays<sp/>for<sp/>prospino<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>Farray&lt;Fdouble,1,20&gt;<sp/>unimass;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>Farray&lt;Fdouble,0,99&gt;<sp/>lowmass;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>Farray&lt;Fdouble,1,2,1,2&gt;<sp/>uu_in,<sp/>vv_in;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>Farray&lt;Fdouble,1,4,1,4&gt;<sp/>bw_in;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>Farray&lt;Fdouble,1,2,1,2&gt;<sp/>mst_in,<sp/>msb_in,<sp/>msl_in;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>apply<sp/>mass<sp/>spectrum<sp/>modifications<sp/>required<sp/>for<sp/>specific<sp/>processes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>Farray&lt;Fdouble,0,99&gt;<sp/>process_specific_lowmass_mods(Farray&lt;Fdouble,0,99&gt;<sp/>lowmass_in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PID_pair&amp;<sp/>pid_pair,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>trust_level)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>input<sp/>array<sp/>to<sp/>output<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>Farray&lt;Fdouble,0,99&gt;<sp/>lowmass_out(lowmass_in);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>absolute-value<sp/>pids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>abs_pid1<sp/>=<sp/>abs(pid_pair.pid1());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>abs_pid2<sp/>=<sp/>abs(pid_pair.pid2());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_m<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>mass<sp/>values<sp/>are<sp/>on<sp/>purpose<sp/>set<sp/>just<sp/>below<sp/>the<sp/>true<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>91.18;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mW<sp/>=<sp/>80.37;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Useful<sp/>maps<sp/>and<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;int,int&gt;<sp/>pid_lowmass_map<sp/>=<sp/>{{1000022,5},</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1000023,6},</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1000025,7},</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1000035,8},</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1000024,9},<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1000037,10}};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>neutralino_pids<sp/>=<sp/>{1000022,<sp/>1000023,<sp/>1000025,<sp/>1000035};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>chargino_pids<sp/>=<sp/>{1000024,<sp/>1000037};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Neutralino<sp/>and<sp/>chargino<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pid1_neutralino<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pid2_neutralino<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pid1_chargino<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pid2_chargino<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::find(neutralino_pids.begin(),<sp/>neutralino_pids.end(),<sp/>abs_pid1)<sp/>!=<sp/>neutralino_pids.end())</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pid1_neutralino<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::find(chargino_pids.begin(),<sp/>chargino_pids.end(),<sp/>abs_pid1)<sp/>!=<sp/>chargino_pids.end())</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pid1_chargino<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::find(neutralino_pids.begin(),<sp/>neutralino_pids.end(),<sp/>abs_pid2)<sp/>!=<sp/>neutralino_pids.end())</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pid2_neutralino<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::find(chargino_pids.begin(),<sp/>chargino_pids.end(),<sp/>abs_pid2)<sp/>!=<sp/>chargino_pids.end())</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pid2_chargino<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neutralino--neutralino<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pid1_neutralino<sp/>&amp;&amp;<sp/>pid2_neutralino)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid1_index<sp/>=<sp/>pid_lowmass_map.at(abs_pid1);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid2_index<sp/>=<sp/>pid_lowmass_map.at(abs_pid2);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta_m<sp/>=<sp/>abs(lowmass_out(pid1_index))<sp/>+<sp/>abs(lowmass_out(pid2_index))<sp/>-<sp/>mZ;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neutralino--chargino<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pid1_neutralino<sp/>&amp;&amp;<sp/>pid2_chargino)<sp/>||<sp/>(pid1_chargino<sp/>&amp;&amp;<sp/>pid2_neutralino))</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid1_index<sp/>=<sp/>pid_lowmass_map.at(abs_pid1);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid2_index<sp/>=<sp/>pid_lowmass_map.at(abs_pid2);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta_m<sp/>=<sp/>abs(lowmass_out(pid1_index))<sp/>+<sp/>abs(lowmass_out(pid2_index))<sp/>-<sp/>mW;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chargino--chargino<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pid1_chargino<sp/>&amp;&amp;<sp/>pid2_chargino)<sp/>||<sp/>(pid1_chargino<sp/>&amp;&amp;<sp/>pid2_chargino))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid1_index<sp/>=<sp/>pid_lowmass_map.at(abs_pid1);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid2_index<sp/>=<sp/>pid_lowmass_map.at(abs_pid2);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta_m<sp/>=<sp/>abs(lowmass_out(pid1_index))<sp/>+<sp/>abs(lowmass_out(pid2_index))<sp/>-<sp/>mZ;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>increase<sp/>the<sp/>masses<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta_m<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid1_index<sp/>=<sp/>pid_lowmass_map.at(abs_pid1);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid2_index<sp/>=<sp/>pid_lowmass_map.at(abs_pid2);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign_mass_pid1<sp/>=<sp/>lowmass_out(pid1_index)<sp/>&lt;<sp/>0<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign_mass_pid2<sp/>=<sp/>lowmass_out(pid2_index)<sp/>&lt;<sp/>0<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lowmass_out(pid1_index)<sp/>=<sp/>sign_mass_pid1<sp/>*<sp/>(abs(lowmass_out(pid1_index))<sp/>+<sp/>0.5<sp/>*<sp/>abs(delta_m));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lowmass_out(pid2_index)<sp/>=<sp/>sign_mass_pid2<sp/>*<sp/>(abs(lowmass_out(pid2_index))<sp/>+<sp/>0.5<sp/>*<sp/>abs(delta_m));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setting<sp/>trust_level<sp/>=<sp/>0,<sp/>since<sp/>we&apos;re<sp/>in<sp/>the<sp/>region<sp/>were<sp/>we<sp/>can&apos;t<sp/>really<sp/>trust<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trust_level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lowmass_out;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Callback<sp/>function<sp/>for<sp/>error<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>be<sp/>called<sp/>from<sp/>Prospino.<sp/>Needs<sp/>C<sp/>linkage,<sp/>and<sp/>thus<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>backend-specific<sp/>name<sp/>to<sp/>guard<sp/>against<sp/>name<sp/>clashes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CAT_4(BACKENDNAME,_,SAFE_VERSION,_ErrorHandler)()</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Prospino<sp/>backend<sp/>called<sp/>HARD_STOP.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backend<sp/>init<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="common__macros_8hpp_1a825694403adda6ccd191cb93020fbe23" kindref="member">BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan-level<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scan_level<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan_level)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>the<sp/>function<sp/>pointer<sp/>variable<sp/>from<sp/>Prospino<sp/>to<sp/>our<sp/>ErrorHandler<sp/>callback<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>*ErrorHandler_cptr<sp/>=<sp/>&amp;<sp/>CAT_4(BACKENDNAME,_,SAFE_VERSION,_ErrorHandler);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Help<sp/>Prospino<sp/>find<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>prospino_dir<sp/>=<sp/>Backends::backendInfo().path_dir(STRINGIFY(BACKENDNAME),<sp/>STRINGIFY(VERSION));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>Fstring&lt;500&gt;<sp/>prospino_dir_in<sp/>=<sp/>prospino_dir.c_str();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{<sp/>prospino_gb_init(prospino_dir_in);<sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::runtime_error&amp;<sp/>e)<sp/>{<sp/>invalid_point().raise(e.what());<sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>scan_level<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Point-level<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>input<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>std::fill(std::begin(unimass.array),<sp/>std::end(unimass.array),<sp/>0.0);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>std::fill(std::begin(lowmass.array),<sp/>std::end(lowmass.array),<sp/>0.0);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>std::fill(std::begin(uu_in.array),<sp/>std::end(uu_in.array),<sp/>0.0);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>std::fill(std::begin(vv_in.array),<sp/>std::end(vv_in.array),<sp/>0.0);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>std::fill(std::begin(bw_in.array),<sp/>std::end(bw_in.array),<sp/>0.0);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>std::fill(std::begin(mst_in.array),<sp/>std::end(mst_in.array),<sp/>0.0);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>std::fill(std::begin(msb_in.array),<sp/>std::end(msb_in.array),<sp/>0.0);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>std::fill(std::begin(msl_in.array),<sp/>std::end(msl_in.array),<sp/>0.0);</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><ref refid="common__macros_8hpp_1a12da9763bf3b37787fa5ae54cf36c779" kindref="member">END_BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>functions<sp/>(definition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convenience<sp/>function<sp/>to<sp/>fill<sp/>Prospino<sp/>arrays<sp/>from<sp/>SLHA1<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prospino_read_slha1_input(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SLHAstruct&amp;<sp/>slha)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>type<sp/>converter<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>SLHAea::to;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>input<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(0)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;HMIX&quot;</highlight><highlight class="normal">).at(1).at(1));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(1).at(1));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(2).at(1));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(3)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(3).at(1));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(4)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000021).at(1));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(5)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000022).at(1));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(6)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000023).at(1));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(7)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000025).at(1));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(8)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000035).at(1));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(9)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000024).at(1));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(10)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000037).at(1));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(11)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000001).at(1));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(52)<sp/>=<sp/>lowmass(11);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(12)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000001).at(1));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(58)<sp/>=<sp/>lowmass(12);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(13)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000002).at(1));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(51)<sp/>=<sp/>lowmass(13);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(14)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000002).at(1));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(57)<sp/>=<sp/>lowmass(14);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(17)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000005).at(1));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(55)<sp/>=<sp/>lowmass(17);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(18)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000005).at(1));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(61)<sp/>=<sp/>lowmass(18);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(19)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000006).at(1));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(56)<sp/>=<sp/>lowmass(19);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(20)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000006).at(1));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(62)<sp/>=<sp/>lowmass(20);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(30)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000011).at(1));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(31)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000011).at(1));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(32)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000012).at(1));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(33)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000015).at(1));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(34)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000015).at(1));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(35)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000016).at(1));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(40)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(36).at(1));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(41)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(25).at(1));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(42)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(35).at(1));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(43)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(37).at(1));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(53)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000003).at(1));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(59)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000003).at(1));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(54)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000004).at(1));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(60)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000004).at(1));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Degenerate<sp/>squark<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degen_squark_mass_8<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>degen_squark_mass_8<sp/>+=<sp/>lowmass(51)<sp/>+<sp/>lowmass(52)<sp/>+<sp/>lowmass(53)<sp/>+<sp/>lowmass(54);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>degen_squark_mass_8<sp/>+=<sp/>lowmass(57)<sp/>+<sp/>lowmass(58)<sp/>+<sp/>lowmass(59)<sp/>+<sp/>lowmass(60);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>degen_squark_mass_8<sp/>=<sp/>degen_squark_mass_8/8.;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(15)<sp/>=<sp/>degen_squark_mass_8;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degen_squark_mass_10<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>degen_squark_mass_10<sp/>+=<sp/>lowmass(51)<sp/>+<sp/>lowmass(52)<sp/>+<sp/>lowmass(53)<sp/>+<sp/>lowmass(54)<sp/>+<sp/>lowmass(55);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>degen_squark_mass_10<sp/>+=<sp/>lowmass(57)<sp/>+<sp/>lowmass(58)<sp/>+<sp/>lowmass(59)<sp/>+<sp/>lowmass(60)<sp/>+<sp/>lowmass(61);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>degen_squark_mass_10<sp/>=<sp/>degen_squark_mass_10/10.;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(16)<sp/>=<sp/>degen_squark_mass_10;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BLOCK<sp/>ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>to&lt;double&gt;(<sp/>slha.at(</highlight><highlight class="stringliteral">&quot;ALPHA&quot;</highlight><highlight class="normal">).back().front()<sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(44)<sp/>=<sp/>sin(alpha);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(45)<sp/>=<sp/>cos(alpha);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AD,<sp/>AU,<sp/>AE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(21)<sp/>=<sp/>-to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;AD&quot;</highlight><highlight class="normal">).at(3,3).at(2));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>sign!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(24)<sp/>=<sp/>-to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;AU&quot;</highlight><highlight class="normal">).at(3,3).at(2));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>sign!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass(36)<sp/>=<sp/>-to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;AE&quot;</highlight><highlight class="normal">).at(3,3).at(2));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>sign!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Neutralino<sp/>mixing<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(1,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(1,1).at(2));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(1,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(1,2).at(2));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(1,3)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(1,3).at(2));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(1,4)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(1,4).at(2));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(2,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(2,1).at(2));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(2,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(2,2).at(2));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(2,3)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(2,3).at(2));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(2,4)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(2,4).at(2));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(3,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(3,1).at(2));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(3,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(3,2).at(2));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(3,3)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(3,3).at(2));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(3,4)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(3,4).at(2));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(4,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(4,1).at(2));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(4,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(4,2).at(2));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(4,3)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(4,3).at(2));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_in(4,4)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(4,4).at(2));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Chargino<sp/>mixing<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>uu_in(1,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;UMIX&quot;</highlight><highlight class="normal">).at(1,1).at(2));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>uu_in(1,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;UMIX&quot;</highlight><highlight class="normal">).at(1,2).at(2));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>uu_in(2,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;UMIX&quot;</highlight><highlight class="normal">).at(2,1).at(2));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>uu_in(2,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;UMIX&quot;</highlight><highlight class="normal">).at(2,2).at(2));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>vv_in(1,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;VMIX&quot;</highlight><highlight class="normal">).at(1,1).at(2));</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>vv_in(1,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;VMIX&quot;</highlight><highlight class="normal">).at(1,2).at(2));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>vv_in(2,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;VMIX&quot;</highlight><highlight class="normal">).at(2,1).at(2));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>vv_in(2,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;VMIX&quot;</highlight><highlight class="normal">).at(2,2).at(2));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sfermion<sp/>mixing<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>mst_in(1,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;STOPMIX&quot;</highlight><highlight class="normal">).at(1,1).at(2));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>mst_in(1,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;STOPMIX&quot;</highlight><highlight class="normal">).at(1,2).at(2));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>mst_in(2,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;STOPMIX&quot;</highlight><highlight class="normal">).at(2,1).at(2));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>mst_in(2,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;STOPMIX&quot;</highlight><highlight class="normal">).at(2,2).at(2));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>msb_in(1,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;SBOTMIX&quot;</highlight><highlight class="normal">).at(1,1).at(2));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>msb_in(1,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;SBOTMIX&quot;</highlight><highlight class="normal">).at(1,2).at(2));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>msb_in(2,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;SBOTMIX&quot;</highlight><highlight class="normal">).at(2,1).at(2));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>msb_in(2,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;SBOTMIX&quot;</highlight><highlight class="normal">).at(2,2).at(2));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>msl_in(1,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;STAUMIX&quot;</highlight><highlight class="normal">).at(1,1).at(2));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>msl_in(1,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;STAUMIX&quot;</highlight><highlight class="normal">).at(1,2).at(2));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>msl_in(2,1)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;STAUMIX&quot;</highlight><highlight class="normal">).at(2,1).at(2));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>msl_in(2,2)<sp/>=<sp/>to&lt;double&gt;(slha.at(</highlight><highlight class="stringliteral">&quot;STAUMIX&quot;</highlight><highlight class="normal">).at(2,2).at(2));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convenience<sp/>function<sp/>to<sp/>run<sp/>Prospino<sp/>and<sp/>get<sp/>a<sp/>vector<sp/>of<sp/>cross-sections,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>Prospino<sp/>settings<sp/>from<sp/>YAML<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>map_str_dbl<sp/>prospino_run(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PID_pair&amp;<sp/>pid_pair,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Options&amp;<sp/>runOptions)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>run<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@todo<sp/>Should<sp/>the<sp/>collider<sp/>settings<sp/>(e.g.<sp/>energy)<sp/>be<sp/>automatically<sp/>matched<sp/>to<sp/>the<sp/>Pythia<sp/>instance?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inlo<sp/>=<sp/>runOptions.getValueOrDef&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(1,<sp/></highlight><highlight class="stringliteral">&quot;inlo&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specify<sp/>LO<sp/>only[0]<sp/>or<sp/>complete<sp/>NLO<sp/>(slower)[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isq_ng_in<sp/>=<sp/>runOptions.getValueOrDef&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(1,<sp/></highlight><highlight class="stringliteral">&quot;isq_ng_in&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specify<sp/>degenerate<sp/>[0]<sp/>or<sp/>free<sp/>[1]<sp/>squark<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icoll_in<sp/>=<sp/>runOptions.getValueOrDef&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(1,<sp/></highlight><highlight class="stringliteral">&quot;icoll_in&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>collider<sp/>:<sp/>tevatron[0],<sp/>lhc[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>energy_in<sp/>=<sp/>runOptions.getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(13000.0,<sp/></highlight><highlight class="stringliteral">&quot;energy_in&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>collider<sp/>energy<sp/>in<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_error_in<sp/>=<sp/>runOptions.getValueOrDef&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(0,<sp/></highlight><highlight class="stringliteral">&quot;i_error_in&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>central<sp/>scale<sp/>[0]<sp/>or<sp/>scale<sp/>variation<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_missing_cross_sections_to_zero<sp/>=<sp/>runOptions.getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;set_missing_cross_sections_to_zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prospino_run_alloptions(pid_pair,<sp/>inlo,<sp/>isq_ng_in,<sp/>icoll_in,<sp/>energy_in,<sp/>i_error_in,<sp/>set_missing_cross_sections_to_zero);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convenience<sp/>function<sp/>to<sp/>run<sp/>Prospino<sp/>and<sp/>get<sp/>a<sp/>vector<sp/>of<sp/>cross-sections,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>Prospino<sp/>settings<sp/>directly<sp/>as<sp/>function<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>map_str_dbl<sp/>prospino_run_alloptions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PID_pair&amp;<sp/>pid_pair,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>inlo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>isq_ng_in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>icoll_in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>energy_in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>i_error_in,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>set_missing_cross_sections_to_zero)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initially<sp/>set<sp/>trust_level<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trust_level<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>we<sp/>have<sp/>a<sp/>set<sp/>of<sp/>prospino<sp/>settings<sp/>for<sp/>the<sp/>given<sp/>PID_pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PID_pairs_to_prospino_settings.find(pid_pair)<sp/>==<sp/>PID_pairs_to_prospino_settings.end())</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(set_missing_cross_sections_to_zero)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_str_dbl<sp/>result;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;LO[pb]&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;LO_rel_error&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;NLO[pb]&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;NLO_rel_error&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;LO_ms[pb]&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;NLO_ms[pb]&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;trust_level&quot;</highlight><highlight class="normal">]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>errmsg;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>prospino<sp/>settings<sp/>found<sp/>for<sp/>the<sp/>PID_pair<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>pid_pair.str()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_error().raise(LOCAL_INFO,<sp/>errmsg);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>prospino<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>prospino_settings<sp/>ps(<sp/>PID_pairs_to_prospino_settings.at(pid_pair)<sp/>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>prospino_settings<sp/>instance<sp/>with<sp/>the<sp/>run<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>ps.inlo<sp/>=<sp/>inlo;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>ps.isq_ng_in<sp/>=<sp/>isq_ng_in;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>ps.icoll_in<sp/>=<sp/>icoll_in;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>ps.energy_in<sp/>=<sp/>energy_in;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>ps.i_error_in<sp/>=<sp/>i_error_in;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Are<sp/>any<sp/>process-specific<sp/>modifications<sp/>required<sp/>for<sp/>this<sp/>process?<sp/>And<sp/>do<sp/>they<sp/>affect<sp/>the<sp/>trust_level?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>Farray&lt;Fdouble,0,99&gt;<sp/>lowmass_mod;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmass_mod<sp/>=<sp/>process_specific_lowmass_mods(lowmass,<sp/>pid_pair,<sp/>trust_level);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>prospino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>Farray&lt;Fdouble,0,6&gt;<sp/>prospino_result;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prospino_gb(prospino_result,<sp/>ps.inlo,<sp/>ps.isq_ng_in,<sp/>ps.icoll_in,<sp/>ps.energy_in,<sp/>ps.i_error_in,<sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps.final_state_in,<sp/>ps.ipart1_in,<sp/>ps.ipart2_in,<sp/>ps.isquark1_in,<sp/>ps.isquark2_in,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unimass,<sp/>lowmass_mod,<sp/>uu_in,<sp/>vv_in,<sp/>bw_in,<sp/>mst_in,<sp/>msb_in,<sp/>msl_in);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::runtime_error&amp;<sp/>e)<sp/>{<sp/>invalid_point().raise(e.what());<sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>result<sp/>map<sp/>with<sp/>the<sp/>content<sp/>of<sp/>prospino_result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>map_str_dbl<sp/>result;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;LO[pb]&quot;</highlight><highlight class="normal">]<sp/>=<sp/>prospino_result(0);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;LO_rel_error&quot;</highlight><highlight class="normal">]<sp/>=<sp/>prospino_result(1);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;NLO[pb]&quot;</highlight><highlight class="normal">]<sp/>=<sp/>prospino_result(2);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;NLO_rel_error&quot;</highlight><highlight class="normal">]<sp/>=<sp/>prospino_result(3);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">]<sp/>=<sp/>prospino_result(4);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;LO_ms[pb]&quot;</highlight><highlight class="normal">]<sp/>=<sp/>prospino_result(5);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;NLO_ms[pb]&quot;</highlight><highlight class="normal">]<sp/>=<sp/>prospino_result(6);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>result[</highlight><highlight class="stringliteral">&quot;trust_level&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(trust_level);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/Prospino_2_1.cpp"/>
  </compounddef>
</doxygen>
