<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="DarkBit__standalone__WIMP_8cpp" kind="file" language="C++">
    <compoundname>DarkBit_standalone_WIMP.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="yes">gambit/Elements/standalone_module.hpp</includes>
    <includes local="yes">gambit/DarkBit/DarkBit_rollcall.hpp</includes>
    <includes local="yes">gambit/Elements/spectrum_factories.hpp</includes>
    <includes local="yes">gambit/Utils/util_functions.hpp</includes>
    <includes local="no">boost/multi_array.hpp</includes>
    <incdepgraph>
      <node id="4">
        <label>gambit/Elements/standalone_module.hpp</label>
      </node>
      <node id="3">
        <label>fstream</label>
      </node>
      <node id="5">
        <label>gambit/DarkBit/DarkBit_rollcall.hpp</label>
      </node>
      <node id="7">
        <label>gambit/Utils/util_functions.hpp</label>
      </node>
      <node id="6">
        <label>gambit/Elements/spectrum_factories.hpp</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>boost/multi_array.hpp</label>
      </node>
      <node id="1">
        <label>DarkBit_standalone_WIMP.cpp</label>
        <link refid="DarkBit__standalone__WIMP_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1DarkBit">Gambit::DarkBit</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="DarkBit__standalone__WIMP_8cpp_1a5cfd88c7fb3e3b8b9d35eb54806de6da" prot="public" static="no">
        <name>addParticle</name>
        <param><defname>Name</defname></param>
        <param><defname>Mass</defname></param>
        <param><defname>spinX2</defname></param>
        <initializer>        catalog.particleProperties.insert(std::pair&lt;string, TH_ParticleProperty&gt; \
        (Name , TH_ParticleProperty(Mass, spinX2)));</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="135" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="DarkBit__standalone__WIMP_8cpp_1adbc70527c58151ad870b8e61c5f23522" prot="public" static="no" mutable="no">
        <type></type>
        <definition>WIMP_properties</definition>
        <argsstring></argsstring>
        <name>WIMP_properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="42" column="2" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__standalone__WIMP_8cpp_1ac0c062e000d954af06bffea2affbf726" prot="public" static="no" mutable="no">
        <type></type>
        <definition>OLD_CAPABILITY</definition>
        <argsstring></argsstring>
        <name>OLD_CAPABILITY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="42" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__standalone__WIMP_8cpp_1a4de84a436691e1b44beb1eab9128ae91" prot="public" static="no" mutable="no">
        <type></type>
        <definition>WIMP_properties_WIMP</definition>
        <argsstring></argsstring>
        <name>WIMP_properties_WIMP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="42" column="33" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__standalone__WIMP_8cpp_1ad647016466f491fb294352350b4ac441" prot="public" static="no" mutable="no">
        <type></type>
        <definition>WIMPprops</definition>
        <argsstring></argsstring>
        <name>WIMPprops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="42" column="54" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__standalone__WIMP_8cpp_1a5d8241c3468bd4b03641c20b1af51a67" prot="public" static="no" mutable="no">
        <type></type>
        <definition>DarkMatter_ID</definition>
        <argsstring></argsstring>
        <name>DarkMatter_ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="42" column="65" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__standalone__WIMP_8cpp_1a5b9470fd45a8223131269cedc2f10a96" prot="public" static="no" mutable="no">
        <type></type>
        <definition>DarkMatterConj_ID</definition>
        <argsstring></argsstring>
        <name>DarkMatterConj_ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="42" column="91" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="DarkBit__standalone__WIMP_8cpp_1ae986497e801488b16b5acc3a32848449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QUICK_FUNCTION</definition>
        <argsstring>(DarkBit, TH_ProcessCatalog, OLD_CAPABILITY, TH_ProcessCatalog_WIMP, TH_ProcessCatalog,(),(mwimp, double)) QUICK_FUNCTION(DarkBit</argsstring>
        <name>QUICK_FUNCTION</name>
        <param>
          <type>DarkBit</type>
        </param>
        <param>
          <type>TH_ProcessCatalog</type>
        </param>
        <param>
          <type>OLD_CAPABILITY</type>
        </param>
        <param>
          <type>TH_ProcessCatalog_WIMP</type>
        </param>
        <param>
          <type>TH_ProcessCatalog</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>(mwimp, double)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__standalone__WIMP_8cpp_1a0610d8aa4aca5af2b71cb3cbe28f20c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string void</type>
        <definition>std::string void dump_array_to_file</definition>
        <argsstring>(const std::string &amp;filename, const boost::multi_array&lt; double, 2 &gt; &amp;a, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y)</argsstring>
        <name>dump_array_to_file</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const boost::multi_array&lt; double, 2 &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="45" column="6" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="45" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__standalone__WIMP_8cpp_1ae0360a66c7cd13aca3bd7e2e7db36884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dumpSpectrum</definition>
        <argsstring>(std::vector&lt; std::string &gt; filenames, double mWIMP, double sv, std::vector&lt; double &gt; brList, double mPhi=-1)</argsstring>
        <name>dumpSpectrum</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>filenames</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mWIMP</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>brList</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mPhi</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="67" column="6" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="67" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__standalone__WIMP_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="268" column="5" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="268" bodyend="1029"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Example of GAMBIT DarkBit standalone main program.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Christoph Weniger </para>
</simplesect>
<simplesect kind="date"><para>2016 Feb </para>
</simplesect>
<simplesect kind="author"><para>Jonathan Cornell </para>
</simplesect>
<simplesect kind="date"><para>2016 July </para>
</simplesect>
<simplesect kind="author"><para>Sebastian Wild </para>
</simplesect>
<simplesect kind="date"><para>2016 Aug </para>
</simplesect>
<simplesect kind="date"><para>2020 </para>
</simplesect>
<simplesect kind="author"><para>Torsten Bringmann</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Elements/standalone_module.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/DarkBit/DarkBit_rollcall.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Elements/spectrum_factories.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/util_functions.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/multi_array.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">DarkBit::Functown;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functors<sp/>wrapping<sp/>the<sp/>module&apos;s<sp/>actual<sp/>module<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">BackendIniBit::Functown;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functors<sp/>wrapping<sp/>the<sp/>backend<sp/>initialisation<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="DarkBit__standalone__MSSM_8cpp_1a01c72e2595b3c5b9003b5dc52a4dbd6f" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>TH_ProcessCatalog,<sp/>OLD_CAPABILITY,<sp/>TH_ProcessCatalog_WIMP,<sp/>TH_ProcessCatalog,<sp/>(),<sp/>(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="DarkBit__standalone__MSSM_8cpp_1a01c72e2595b3c5b9003b5dc52a4dbd6f" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>DarkMatter_ID,<sp/>OLD_CAPABILITY,<sp/>DarkMatter_ID_WIMP,<sp/>std::string,<sp/>())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="DarkBit__standalone__MSSM_8cpp_1a01c72e2595b3c5b9003b5dc52a4dbd6f" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>DarkMatterConj_ID,<sp/>OLD_CAPABILITY,<sp/>DarkMatterConj_ID_WIMP,<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>())</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="DarkBit__standalone__MSSM_8cpp_1a01c72e2595b3c5b9003b5dc52a4dbd6f" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>DD_couplings,<sp/>OLD_CAPABILITY,<sp/>DD_couplings_WIMP,<sp/>DM_nucleon_couplings,<sp/>())</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="DarkBit__standalone__MSSM_8cpp_1a01c72e2595b3c5b9003b5dc52a4dbd6f" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>WIMP_properties,<sp/>OLD_CAPABILITY,<sp/>WIMP_properties_WIMP,<sp/>WIMPprops,<sp/>(),<sp/>(DarkMatter_ID,<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">),<sp/>(DarkMatterConj_ID,<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump_array_to_file(const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>filename,<sp/>const</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::multi_array&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>2&gt;<sp/>&amp;<sp/>a,<sp/>const<sp/>std::vector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>&amp;<sp/>x,<sp/>const</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>std::fstream<sp/>file;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>file.open(filename,<sp/>std::ios_base::out);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0.0<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x.size();<sp/>i++)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/>x[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>y.size();<sp/>j++)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/>y[j]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x.size();<sp/>i++)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/>a[i][j]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dumpSpectrum(std::vector&lt;std::string&gt;<sp/>filenames,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mWIMP,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sv,<sp/>std::vector&lt;double&gt;<sp/>brList,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mPhi<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>DarkMatter_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>DarkMatterConj_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>WIMP_properties_WIMP.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;mWIMP&quot;</highlight><highlight class="normal">,<sp/>mWIMP);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>WIMP_properties_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="DarkBit_8cpp_1a1a65ac2306dd60d61fff98af4701275b" kindref="member">mwimp_generic</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;std::vector&lt;double&gt;&gt;(</highlight><highlight class="stringliteral">&quot;brList&quot;</highlight><highlight class="normal">,<sp/>brList);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;sv&quot;</highlight><highlight class="normal">,<sp/>sv);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPhi<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;mPhi&quot;</highlight><highlight class="normal">,<sp/>mPhi);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="DarkBit_8cpp_1a47cfb4f0c5ee54a13d2464f23db17602" kindref="member">DM_process_from_ProcessCatalog</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>RD_fraction_one.reset_and_calculate();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a15714f42fe847496bbf18ac7ad1168e9" kindref="member">GA_SimYieldTable_MicrOmegas</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a013113a2f75a02da4eb2b936db6e0685" kindref="member">GA_SimYieldTable_DarkSUSY</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aa322856334c1d7f7daf04539de2bec3f" kindref="member">positron_SimYieldTable_DarkSUSY</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a49f9c1b957308ac474c9fd18e1a82714" kindref="member">electron_SimYieldTable_from_positron_SimYieldTable</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aaf5d82a0edcff73727936e38a7e17f5d" kindref="member">antiproton_SimYieldTable_DarkSUSY</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1ab5faf1c8ee81f61ce4bf25c722836339" kindref="member">antideuteron_SimYieldTable_DarkSUSY</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a44bfdb5a633cc2cc5d1b72ca96e69091" kindref="member">Combine_SimYields</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="Cascades_8cpp_1a97edfd5270c5f0222aa120356445ccaf" kindref="member">cascadeMC_FinalStates</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="Cascades_8cpp_1af814869a1f2f1a3d357364ba08bf4b17" kindref="member">cascadeMC_InitialStates</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="Cascades_8cpp_1a9c52c4c1754eef5e95456be41b2601bc" kindref="member">cascadeMC_DecayTable</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="Cascades_8cpp_1a9d360a3cc724081297c6024ffb4e9143" kindref="member">cascadeMC_LoopManager</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="Cascades_8cpp_1adb0d1580949dcbf94725377b21b002c9" kindref="member">cascadeMC_gammaSpectra</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1afc91e2a127d483fd1215573df7a9f164" kindref="member">GA_AnnYield_General</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a76e1a09054ddce13600d76fe83cb7f20" kindref="member">dump_gammaSpectrum</ref>.setOption&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">,<sp/>filenames[0]);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a76e1a09054ddce13600d76fe83cb7f20" kindref="member">dump_gammaSpectrum</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filenames.size()<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="Cascades_8cpp_1a9d6ad47b6c1dd40c170d8edc34ee6571" kindref="member">cascadeMC_positronSpectra</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aed1387b7270539845bcf8939a5ef2d8f" kindref="member">positron_AnnYield_General</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a76da5d131b4e86104e73197a430fcd22" kindref="member">dump_positronSpectrum</ref>.setOption&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">,<sp/>filenames[1]);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a76da5d131b4e86104e73197a430fcd22" kindref="member">dump_positronSpectrum</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="Cascades_8cpp_1a2e4f91f825c9443eba658d013e200073" kindref="member">cascadeMC_antiprotonSpectra</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a656c3a7cc030833a626b7a51d814331f" kindref="member">antiproton_AnnYield_General</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a42092eec2e56ba9f64ff2d17065dbc73" kindref="member">dump_antiprotonSpectrum</ref>.setOption&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">,<sp/>filenames[2]);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a42092eec2e56ba9f64ff2d17065dbc73" kindref="member">dump_antiprotonSpectrum</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="Cascades_8cpp_1a0396900e4afa5a304d34ba9572d89133" kindref="member">cascadeMC_antideuteronSpectra</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1ad12e3f79e1e69ef234ca7b0527d96678" kindref="member">antideuteron_AnnYield_General</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a976f3e7918daee9f72bd14e6584b209c" kindref="member">dump_antideuteronSpectrum</ref>.setOption&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">,<sp/>filenames[3]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a976f3e7918daee9f72bd14e6584b209c" kindref="member">dump_antideuteronSpectrum</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----<sp/>Set<sp/>up<sp/>basic<sp/>internal<sp/>structures<sp/>for<sp/>direct<sp/>&amp;<sp/>indirect<sp/>detection<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DarkBit</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>(TH_ProcessCatalog&amp;<sp/>result)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::TH_ProcessCatalog_WIMP;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::vector;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>empty<sp/>catalog<sp/>and<sp/>main<sp/>annihilation<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_ProcessCatalog<sp/>catalog;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_Process<sp/>process_ann(</highlight><highlight class="stringliteral">&quot;WIMP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;WIMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_Process<sp/>process_dec(</highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_Process<sp/>process_dec1(</highlight><highlight class="stringliteral">&quot;phi1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_Process<sp/>process_dec2(</highlight><highlight class="stringliteral">&quot;phi2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Import<sp/>particle<sp/>masses<sp/>and<sp/>couplings</highlight></codeline>
<codeline lineno="134"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>addParticle(Name,<sp/>Mass,<sp/>spinX2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.particleProperties.insert(std::pair&lt;string,<sp/>TH_ParticleProperty&gt;<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Name<sp/>,<sp/>TH_ParticleProperty(Mass,<sp/>spinX2)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mWIMP<sp/>=<sp/>*Dep::mwimp;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sv<sp/>=<sp/>runOptions-&gt;getValue&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;sv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>defined<sp/>as<sp/>sv(v)<sp/>=<sp/>sv(v=0)<sp/>+<sp/>b*(sv=0)*v**2</highlight></codeline>
<codeline lineno="145"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>brList<sp/>=<sp/>runOptions-&gt;getValue&lt;std::vector&lt;double&gt;&gt;(</highlight><highlight class="stringliteral">&quot;brList&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mPhi<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(59.0,<sp/></highlight><highlight class="stringliteral">&quot;mPhi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>2)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;Z0&quot;,<sp/>91.2,<sp/><sp/>2)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;W+&quot;,<sp/>80.39,<sp/>2)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;W-&quot;,<sp/>80.39,<sp/>2)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;e+_3&quot;,<sp/>1.8,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;e-_3&quot;,<sp/>1.8,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;e+_1&quot;,<sp/>0.00051,<sp/>1)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;e-_1&quot;,<sp/>0.00051,<sp/>1)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;b&quot;,<sp/>4.9,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;bbar&quot;,<sp/>4.9,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;d_3&quot;,<sp/>4.9,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;dbar_3&quot;,<sp/>4.9,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;p&quot;,<sp/>m_proton,<sp/>1)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;pbar&quot;,<sp/>m_proton,<sp/>1)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;n&quot;,<sp/>m_neutron,<sp/>1)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;nbar&quot;,<sp/>m_neutron,<sp/>1)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;D&quot;,<sp/>m_deuteron,<sp/>2)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;Dbar&quot;,<sp/>m_deuteron,<sp/>2)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;WIMP&quot;,<sp/>mWIMP,<sp/><sp/>0)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;phi&quot;,<sp/><sp/>mPhi,<sp/><sp/>0)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;phi1&quot;,<sp/>100.,<sp/><sp/>0)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addParticle(&quot;phi2&quot;,<sp/>100.,<sp/><sp/>0)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>addParticle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_Channel<sp/>dec_channel(daFunk::vec&lt;string&gt;(</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">),<sp/>daFunk::cnst(1.));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>process_dec.channelList.push_back(dec_channel);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_Channel<sp/>dec_channel1(daFunk::vec&lt;string&gt;(</highlight><highlight class="stringliteral">&quot;e+_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-_3&quot;</highlight><highlight class="normal">),<sp/>daFunk::cnst(1.));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>process_dec1.channelList.push_back(dec_channel1);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_Channel<sp/>dec_channel2(daFunk::vec&lt;string&gt;(</highlight><highlight class="stringliteral">&quot;d_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_3&quot;</highlight><highlight class="normal">),<sp/>daFunk::cnst(1.));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>process_dec2.channelList.push_back(dec_channel2);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>process_ann.resonances_thresholds.threshold_energy.push_back(2*mWIMP);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p1<sp/>=<sp/>daFunk::vec&lt;string&gt;(</highlight><highlight class="stringliteral">&quot;d_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p2<sp/>=<sp/>daFunk::vec&lt;string&gt;(</highlight><highlight class="stringliteral">&quot;dbar_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;phi2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>brList.size()-1;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtot_final<sp/>=</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.getParticleProperty(p1[i]).mass<sp/>+</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.getParticleProperty(p2[i]).mass;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mWIMP*2<sp/>&gt;<sp/>mtot_final<sp/>&amp;&amp;<sp/>brList[i]!=<sp/>0.)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>p1[i]<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>p2[i]<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>brList[i]<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>kinematicFunction<sp/>=<sp/>(daFunk::one(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">)+<ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(daFunk::var(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">),<sp/>2)*b)*sv*brList[i];</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH_Channel<sp/>new_channel(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::vec&lt;string&gt;(p1[i],<sp/>p2[i]),<sp/>kinematicFunction</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_ann.channelList.push_back(new_channel);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_ann.resonances_thresholds.threshold_energy.</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_back(mtot_final);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>brList[7]<sp/>&gt;<sp/>0.<sp/>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>E<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note::<sp/>The<sp/>below<sp/>is<sp/>an<sp/>arbitrary<sp/>form<sp/>of<sp/>the<sp/>differential<sp/>section<sp/>for<sp/>demonstration<sp/>purposes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>kinematicFunction<sp/>=<sp/>daFunk::one(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E1&quot;</highlight><highlight class="normal">)/(<ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(E-50,<sp/>4)+1)*sv*brList[7];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>In<sp/>the<sp/>three<sp/>body<sp/>final<sp/>states,<sp/>the<sp/>gamma<sp/>yield<sp/>from<sp/>AnnYield<sp/>currently<sp/>is<sp/>just<sp/>the<sp/>contribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>first<sp/>particle<sp/>in<sp/>the<sp/>list<sp/>(here<sp/>the<sp/>photon):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH_Channel<sp/>new_channel(daFunk::vec&lt;string&gt;(</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-_1&quot;</highlight><highlight class="normal">),<sp/>kinematicFunction);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_ann.channelList.push_back(new_channel);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>catalog.processList.push_back(process_ann);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>catalog.processList.push_back(process_dec);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>catalog.processList.push_back(process_dec1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>catalog.processList.push_back(process_dec2);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>catalog.validate();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>catalog;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>function<sp/>TH_ProcessCatalog_WIMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Identifier<sp/>for<sp/>DM<sp/>particle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DarkMatter_ID_WIMP(std::string&amp;<sp/>result)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WIMP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Identifier<sp/>for<sp/>conjugate<sp/>DM<sp/>particle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DarkMatterConj_ID_WIMP(std::string&amp;<sp/>result)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WIMP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WIMP<sp/>properites</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WIMP_properties_WIMP(WIMPprops<sp/>&amp;props)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::WIMP_properties_WIMP;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props.name<sp/>=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props.spinx2<sp/>=<sp/>Models::ParticleDB().get_spinx2(props.name);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props.sc<sp/>=<sp/>not<sp/>Models::ParticleDB().has_antiparticle(props.name);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props.conjugate<sp/>=<sp/>props.sc<sp/>?<sp/>props.name<sp/>:<sp/>*Dep::DarkMatterConj_ID;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props.mass<sp/>=<sp/>runOptions-&gt;getValue&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;mWIMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>(DM_nucleon_couplings&amp;<sp/>result)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::DD_couplings_WIMP;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.gps<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.,<sp/></highlight><highlight class="stringliteral">&quot;gps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.gns<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.,<sp/></highlight><highlight class="stringliteral">&quot;gns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.gpa<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.,<sp/></highlight><highlight class="stringliteral">&quot;gpa&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.gna<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.,<sp/></highlight><highlight class="stringliteral">&quot;gna&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gambit_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Welcome<sp/>to<sp/>the<sp/>DarkBit<sp/>Generic<sp/>WIMP<sp/>standalone<sp/>program!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;**************************************************************************************&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>standalone<sp/>example<sp/>demonstrates<sp/>how<sp/>to<sp/>calculate<sp/>a<sp/>range<sp/>of<sp/>observables<sp/>and<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;likelihoods<sp/>for<sp/>a<sp/>generic<sp/>WIMP<sp/>model<sp/>defined<sp/>by<sp/>the<sp/>WIMP<sp/>mass<sp/>and<sp/>an<sp/>annihilation<sp/>(or<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;scattering)<sp/>cross<sp/>section.<sp/>The<sp/>model<sp/>also<sp/>contains<sp/>three<sp/>scalar<sp/>particles<sp/>which<sp/>decay:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;phi<sp/>-&gt;<sp/>gamma<sp/>gamma<sp/><sp/><sp/><sp/>phi_1<sp/>-&gt;<sp/>tau+<sp/>tau-<sp/><sp/>phi_2<sp/>-&gt;<sp/>b<sp/>bbar&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>DarkBit_standalone_WIMP<sp/>mode&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/>Options:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>0:<sp/>Outputs<sp/>spectrum<sp/>of<sp/>gamma<sp/>rays<sp/>from<sp/>WIMP<sp/>annihilation<sp/>to<sp/>b<sp/>bbar<sp/>(dPhi_dE0.dat)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>1:<sp/>Outputs<sp/>spectrum<sp/>of<sp/>gamma<sp/>rays<sp/>from<sp/>WIMP<sp/>annihilation<sp/>to<sp/>gamma<sp/>Z_0<sp/>(dPhi_dE1.dat)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>2:<sp/>Outputs<sp/>spectrum<sp/>of<sp/>gamma<sp/>rays<sp/>from<sp/>WIMP<sp/>annihilation<sp/>to<sp/>gamma<sp/>gamma<sp/>(dPhi_dE2.dat)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>3:<sp/>Outputs<sp/>spectrum<sp/>of<sp/>gamma<sp/>rays<sp/>from<sp/>WIMP<sp/>annihilation<sp/>to<sp/>tau+<sp/>tau-<sp/>(dPhi_dE3.dat)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>4:<sp/>Outputs<sp/>spectrum<sp/>of<sp/>gamma<sp/>rays<sp/>from<sp/>WIMP<sp/>annihilation<sp/>to<sp/>W+<sp/>W-<sp/>(dPhi_dE4.dat)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>5:<sp/>Outputs<sp/>spectrum<sp/>of<sp/>gamma<sp/>rays<sp/>from<sp/>WIMP<sp/>annihilation<sp/>to<sp/>gamma<sp/>e+<sp/>e-<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>(dPhi_dE5.dat)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>6:<sp/>Outputs<sp/>tables<sp/>of<sp/>gamma-ray<sp/>likelihoods<sp/>and<sp/>the<sp/>relic<sp/>density&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;sigma<sp/>v&gt;<sp/>/<sp/>m_WIMP<sp/>parameter<sp/>space.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>7:<sp/>Outputs<sp/>tables<sp/>of<sp/>direct<sp/>detection<sp/>likelihoods<sp/>in<sp/>sigma<sp/>/<sp/>m_WIMP<sp/>parameter&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>space.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&gt;=10:<sp/>Outputs<sp/>spectra<sp/>of<sp/>gamma<sp/>rays,<sp/>positrons,<sp/>anti-protons<sp/>and<sp/>anti-deuterons<sp/>from&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP<sp/>annihilation<sp/>to<sp/>phi<sp/>phi_2.<sp/>The<sp/>mode<sp/>value<sp/>is<sp/>m_phi<sp/>while<sp/>m_phi_2=100<sp/>GeV.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>output<sp/>filenames<sp/>are<sp/>dPhi_dE_FCMC_(spectrum)_(mode).dat.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>N.B.<sp/>Here<sp/>dPhi/dE<sp/>=<sp/>sigma<sp/>v<sp/>/<sp/>m_chi^2<sp/>*<sp/>dN/dE&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;**************************************************************************************&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc==1)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>select<sp/>test<sp/>mode&gt;=0&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>std::stoi((std::string)argv[1]);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>with<sp/>mode<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mode<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>Initialise<sp/>logging<sp/>and<sp/>exceptions<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>initialise_standalone_logs(</highlight><highlight class="stringliteral">&quot;runs/DarkBit_standalone_WIMP/logs/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()&lt;&lt;</highlight><highlight class="stringliteral">&quot;Running<sp/>DarkBit<sp/>standalone<sp/>example&quot;</highlight><highlight class="normal">&lt;&lt;LogTags::info&lt;&lt;EOM;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>model_warning().set_fatal(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>Check<sp/>that<sp/>required<sp/>backends<sp/>are<sp/>present<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>Backends::backendInfo().works[</highlight><highlight class="stringliteral">&quot;DarkSUSY_generic_wimp6.2.5&quot;</highlight><highlight class="normal">])<sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;DarkSUSY_generic_wimp_6.2.5<sp/>is<sp/>missing!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>Backends::backendInfo().works[</highlight><highlight class="stringliteral">&quot;gamLike1.0.1&quot;</highlight><highlight class="normal">])<sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;gamLike<sp/>1.0.1<sp/>is<sp/>missing!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>Backends::backendInfo().works[</highlight><highlight class="stringliteral">&quot;DDCalc2.2.0&quot;</highlight><highlight class="normal">])<sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;DDCalc<sp/>2.2.0<sp/>is<sp/>missing!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>Backends::backendInfo().works[</highlight><highlight class="stringliteral">&quot;MicrOmegas_MSSM3.6.9.2&quot;</highlight><highlight class="normal">])<sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;MicrOmegas<sp/>3.6.9.2<sp/>for<sp/>MSSM<sp/>is<sp/>missing!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>Initialize<sp/>models<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>halo<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>ModelParameters*<sp/>Halo_primary_parameters<sp/>=<sp/>Models::Halo_Einasto::Functown::primary_parameters.getcontentsPtr();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vrot&quot;</highlight><highlight class="normal">,<sp/>235.);<sp/></highlight><highlight class="comment">//<sp/>Local<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;v0&quot;</highlight><highlight class="normal">,<sp/>235.);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vesc&quot;</highlight><highlight class="normal">,<sp/>550.);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;rho0&quot;</highlight><highlight class="normal">,<sp/>0.4);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;r_sun&quot;</highlight><highlight class="normal">,<sp/>8.5);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;rs&quot;</highlight><highlight class="normal">,<sp/>20.);<sp/><sp/></highlight><highlight class="comment">//<sp/>Global<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;rhos&quot;</highlight><highlight class="normal">,<sp/>0.08);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">,<sp/>0.17);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---<sp/>Resolve<sp/>halo<sp/>dependencies<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a61a1c8167ecfdebe66974cad691f65ac" kindref="member">ExtractLocalMaxwellianHalo</ref>.notifyOfModel(</highlight><highlight class="stringliteral">&quot;Halo_Einasto&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a61a1c8167ecfdebe66974cad691f65ac" kindref="member">ExtractLocalMaxwellianHalo</ref>.resolveDependency(&amp;Models::Halo_Einasto::Functown::primary_parameters);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a61a1c8167ecfdebe66974cad691f65ac" kindref="member">ExtractLocalMaxwellianHalo</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1ad750ce4cfc57d0b47c2a2f56c8a4ab9f" kindref="member">GalacticHalo_Einasto</ref>.notifyOfModel(</highlight><highlight class="stringliteral">&quot;Halo_Einasto&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1ad750ce4cfc57d0b47c2a2f56c8a4ab9f" kindref="member">GalacticHalo_Einasto</ref>.resolveDependency(&amp;Models::Halo_Einasto::Functown::primary_parameters);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1ad750ce4cfc57d0b47c2a2f56c8a4ab9f" kindref="member">GalacticHalo_Einasto</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>Initialize<sp/>backends<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>for<sp/>direct<sp/>and<sp/>indirect<sp/>detection<sp/>likelihoods<sp/>that<sp/>dark<sp/>matter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>density<sp/>is<sp/>always<sp/>the<sp/>measured<sp/>one<sp/>(despite<sp/>relic<sp/>density<sp/>results)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>RD_fraction_one.reset_and_calculate();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>DD<sp/>couplings<sp/>for<sp/>DDCalc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DirectDetection_8cpp_1af8f7ac04e9a585b594bb5093333f4448" kindref="member">DDCalc_Couplings_WIMP_nucleon</ref>.resolveDependency(&amp;DD_couplings_WIMP);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DirectDetection_8cpp_1af8f7ac04e9a585b594bb5093333f4448" kindref="member">DDCalc_Couplings_WIMP_nucleon</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>DDCalc<sp/>backend<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>Backends::DDCalc_2_2_0::Functown::DDCalc_CalcRates_simple.setStatus(2);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>Backends::DDCalc_2_2_0::Functown::DDCalc_Experiment.setStatus(2);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>Backends::DDCalc_2_2_0::Functown::DDCalc_LogLikelihood.setStatus(2);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>DDCalc_2_2_0_init.resolveDependency(&amp;ExtractLocalMaxwellianHalo);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>for<sp/>direct<sp/>and<sp/>indirect<sp/>detection<sp/>likelihoods<sp/>that<sp/>dark<sp/>matter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>density<sp/>is<sp/>always<sp/>the<sp/>measured<sp/>one<sp/>(despite<sp/>relic<sp/>density<sp/>results)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>DDCalc_2_2_0_init.resolveDependency(&amp;RD_fraction_one);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>DDCalc_2_2_0_init.resolveDependency(&amp;mwimp_generic);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DDCalc_2_2_0_init.resolveDependency(&amp;spinwimpx2_generic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DDCalc_2_2_0_init.resolveDependency(&amp;wimp_sc_generic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>DDCalc_2_2_0_init.resolveDependency(&amp;DDCalc_Couplings_WIMP_nucleon);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>gamLike<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>gamLike_1_0_1_init.reset_and_calculate();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>DarkSUSY<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>DarkSUSY_generic_wimp_6_2_5_init.reset_and_calculate();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>MicrOmegas<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>below<sp/>allows<sp/>us<sp/>to<sp/>initialise<sp/>MicrOmegas_MSSM<sp/>without<sp/>a<sp/>particular<sp/>MSSM<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>MicrOmegas_MSSM_3_6_9_2_init.notifyOfModel(</highlight><highlight class="stringliteral">&quot;Halo_Einasto&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>MicrOmegas_MSSM_3_6_9_2_init.reset_and_calculate();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>Gamma-ray<sp/>and<sp/>other<sp/>indirect<sp/>detection<sp/>yields<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>tabulated<sp/>gamma-ray<sp/>yields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a013113a2f75a02da4eb2b936db6e0685" kindref="member">GA_SimYieldTable_DarkSUSY</ref>.resolveBackendReq(&amp;Backends::DarkSUSY_generic_wimp_6_2_5::Functown::dsanyield_sim);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a15714f42fe847496bbf18ac7ad1168e9" kindref="member">GA_SimYieldTable_MicrOmegas</ref>.resolveBackendReq(&amp;Backends::MicrOmegas_MSSM_3_6_9_2::Functown::dNdE);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a013113a2f75a02da4eb2b936db6e0685" kindref="member">GA_SimYieldTable_DarkSUSY</ref>.setOption&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a15714f42fe847496bbf18ac7ad1168e9" kindref="member">GA_SimYieldTable_MicrOmegas</ref>.setOption&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>whether<sp/>to<sp/>use<sp/>DarkSUSY<sp/>or<sp/>MicrOmegas<sp/>for<sp/>simulated<sp/>gamma-ray<sp/>yields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//auto<sp/>SimYieldTablePointer<sp/>=<sp/>&amp;GA_SimYieldTable_MicrOmegas;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>SimYieldTablePointer<sp/>=<sp/>&amp;<ref refid="IndirectDetectionYields_8cpp_1a013113a2f75a02da4eb2b936db6e0685" kindref="member">GA_SimYieldTable_DarkSUSY</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a44bfdb5a633cc2cc5d1b72ca96e69091" kindref="member">Combine_SimYields</ref>.resolveDependency(SimYieldTablePointer);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>DarkSUSY<sp/>for<sp/>e+,<sp/>e-,<sp/>pbar<sp/>and<sp/>Dbar<sp/>yields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aa322856334c1d7f7daf04539de2bec3f" kindref="member">positron_SimYieldTable_DarkSUSY</ref>.resolveBackendReq(&amp;Backends::DarkSUSY_generic_wimp_6_2_5::Functown::dsanyield_sim);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a49f9c1b957308ac474c9fd18e1a82714" kindref="member">electron_SimYieldTable_from_positron_SimYieldTable</ref>.resolveDependency(&amp;positron_SimYieldTable_DarkSUSY);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aaf5d82a0edcff73727936e38a7e17f5d" kindref="member">antiproton_SimYieldTable_DarkSUSY</ref>.resolveBackendReq(&amp;Backends::DarkSUSY_generic_wimp_6_2_5::Functown::dsanyield_sim);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1ab5faf1c8ee81f61ce4bf25c722836339" kindref="member">antideuteron_SimYieldTable_DarkSUSY</ref>.resolveBackendReq(&amp;Backends::DarkSUSY_generic_wimp_6_2_5::Functown::dsanyield_sim);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aa322856334c1d7f7daf04539de2bec3f" kindref="member">positron_SimYieldTable_DarkSUSY</ref>.setOption&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aaf5d82a0edcff73727936e38a7e17f5d" kindref="member">antiproton_SimYieldTable_DarkSUSY</ref>.setOption&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1ab5faf1c8ee81f61ce4bf25c722836339" kindref="member">antideuteron_SimYieldTable_DarkSUSY</ref>.setOption&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a44bfdb5a633cc2cc5d1b72ca96e69091" kindref="member">Combine_SimYields</ref>.resolveDependency(&amp;positron_SimYieldTable_DarkSUSY);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a44bfdb5a633cc2cc5d1b72ca96e69091" kindref="member">Combine_SimYields</ref>.resolveDependency(&amp;electron_SimYieldTable_from_positron_SimYieldTable);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a44bfdb5a633cc2cc5d1b72ca96e69091" kindref="member">Combine_SimYields</ref>.resolveDependency(&amp;antiproton_SimYieldTable_DarkSUSY);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a44bfdb5a633cc2cc5d1b72ca96e69091" kindref="member">Combine_SimYields</ref>.resolveDependency(&amp;antideuteron_SimYieldTable_DarkSUSY);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Identify<sp/>process<sp/>as<sp/>annihilation<sp/>rather<sp/>than<sp/>decay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a47cfb4f0c5ee54a13d2464f23db17602" kindref="member">DM_process_from_ProcessCatalog</ref>.resolveDependency(&amp;TH_ProcessCatalog_WIMP);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a47cfb4f0c5ee54a13d2464f23db17602" kindref="member">DM_process_from_ProcessCatalog</ref>.resolveDependency(&amp;DarkMatter_ID_WIMP);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Infer<sp/>for<sp/>which<sp/>type<sp/>of<sp/>final<sp/>states<sp/>particles<sp/>MC<sp/>should<sp/>be<sp/>performed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a97edfd5270c5f0222aa120356445ccaf" kindref="member">cascadeMC_FinalStates</ref>.setOption&lt;std::vector&lt;std::string&gt;&gt;(</highlight><highlight class="stringliteral">&quot;cMC_finalStates&quot;</highlight><highlight class="normal">,<sp/>daFunk::vec((std::string)</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>initial<sp/>states<sp/>for<sp/>cascade<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1af814869a1f2f1a3d357364ba08bf4b17" kindref="member">cascadeMC_InitialStates</ref>.resolveDependency(&amp;cascadeMC_FinalStates);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1af814869a1f2f1a3d357364ba08bf4b17" kindref="member">cascadeMC_InitialStates</ref>.resolveDependency(&amp;DarkMatter_ID_WIMP);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1af814869a1f2f1a3d357364ba08bf4b17" kindref="member">cascadeMC_InitialStates</ref>.resolveDependency(&amp;DarkMatterConj_ID_WIMP);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1af814869a1f2f1a3d357364ba08bf4b17" kindref="member">cascadeMC_InitialStates</ref>.resolveDependency(&amp;TH_ProcessCatalog_WIMP);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1af814869a1f2f1a3d357364ba08bf4b17" kindref="member">cascadeMC_InitialStates</ref>.resolveDependency(&amp;Combine_SimYields);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1af814869a1f2f1a3d357364ba08bf4b17" kindref="member">cascadeMC_InitialStates</ref>.resolveDependency(&amp;DM_process_from_ProcessCatalog);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Collect<sp/>decay<sp/>information<sp/>for<sp/>cascade<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9c52c4c1754eef5e95456be41b2601bc" kindref="member">cascadeMC_DecayTable</ref>.resolveDependency(&amp;TH_ProcessCatalog_WIMP);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9c52c4c1754eef5e95456be41b2601bc" kindref="member">cascadeMC_DecayTable</ref>.resolveDependency(&amp;Combine_SimYields);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>MC<sp/>loop<sp/>manager<sp/>for<sp/>cascade<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9d360a3cc724081297c6024ffb4e9143" kindref="member">cascadeMC_LoopManager</ref>.setOption&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cMC_maxEvents&quot;</highlight><highlight class="normal">,<sp/>20000);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a270268be9d8a3c7cc0df0c757eed789f" kindref="member">cascadeMC_Histograms</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cMC_endCheckFrequency&quot;</highlight><highlight class="normal">,<sp/>25);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a270268be9d8a3c7cc0df0c757eed789f" kindref="member">cascadeMC_Histograms</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cMC_gammaRelError&quot;</highlight><highlight class="normal">,<sp/>.05);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a270268be9d8a3c7cc0df0c757eed789f" kindref="member">cascadeMC_Histograms</ref>.setOption&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cMC_numSpecSamples&quot;</highlight><highlight class="normal">,<sp/>25);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a270268be9d8a3c7cc0df0c757eed789f" kindref="member">cascadeMC_Histograms</ref>.setOption&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cMC_NhistBins&quot;</highlight><highlight class="normal">,<sp/>300);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9d360a3cc724081297c6024ffb4e9143" kindref="member">cascadeMC_LoopManager</ref>.resolveDependency(&amp;cascadeMC_InitialStates);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;functor*&gt;<sp/>nested_functions<sp/>=<sp/>initVector&lt;functor*&gt;(</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cascadeMC_GenerateChain,<sp/>&amp;cascadeMC_Histograms,<sp/>&amp;cascadeMC_EventCount);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9d360a3cc724081297c6024ffb4e9143" kindref="member">cascadeMC_LoopManager</ref>.setNestedList(nested_functions);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>MC<sp/>step<sp/>for<sp/>cascade<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1ac4a562d66b2b97e5f8f8ecb3b3e35352" kindref="member">cascadeMC_GenerateChain</ref>.resolveDependency(&amp;cascadeMC_DecayTable);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1ac4a562d66b2b97e5f8f8ecb3b3e35352" kindref="member">cascadeMC_GenerateChain</ref>.resolveLoopManager(&amp;cascadeMC_LoopManager);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>histogram<sp/>for<sp/>cascade<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a270268be9d8a3c7cc0df0c757eed789f" kindref="member">cascadeMC_Histograms</ref>.resolveDependency(&amp;cascadeMC_GenerateChain);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a270268be9d8a3c7cc0df0c757eed789f" kindref="member">cascadeMC_Histograms</ref>.resolveDependency(&amp;TH_ProcessCatalog_WIMP);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a270268be9d8a3c7cc0df0c757eed789f" kindref="member">cascadeMC_Histograms</ref>.resolveDependency(&amp;Combine_SimYields);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a270268be9d8a3c7cc0df0c757eed789f" kindref="member">cascadeMC_Histograms</ref>.resolveDependency(&amp;cascadeMC_FinalStates);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a270268be9d8a3c7cc0df0c757eed789f" kindref="member">cascadeMC_Histograms</ref>.resolveLoopManager(&amp;cascadeMC_LoopManager);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>convergence<sp/>of<sp/>cascade<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a45b12802136b30f507974354deecaa4c" kindref="member">cascadeMC_EventCount</ref>.resolveLoopManager(&amp;cascadeMC_LoopManager);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Infer<sp/>gamma-ray<sp/>spectra<sp/>for<sp/>recorded<sp/>MC<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1adb0d1580949dcbf94725377b21b002c9" kindref="member">cascadeMC_gammaSpectra</ref>.resolveDependency(&amp;cascadeMC_InitialStates);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1adb0d1580949dcbf94725377b21b002c9" kindref="member">cascadeMC_gammaSpectra</ref>.resolveDependency(&amp;cascadeMC_FinalStates);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1adb0d1580949dcbf94725377b21b002c9" kindref="member">cascadeMC_gammaSpectra</ref>.resolveDependency(&amp;cascadeMC_Histograms);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1adb0d1580949dcbf94725377b21b002c9" kindref="member">cascadeMC_gammaSpectra</ref>.resolveDependency(&amp;cascadeMC_EventCount);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Infer<sp/>positron<sp/>spectra<sp/>for<sp/>recorded<sp/>MC<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9d6ad47b6c1dd40c170d8edc34ee6571" kindref="member">cascadeMC_positronSpectra</ref>.resolveDependency(&amp;cascadeMC_InitialStates);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9d6ad47b6c1dd40c170d8edc34ee6571" kindref="member">cascadeMC_positronSpectra</ref>.resolveDependency(&amp;cascadeMC_FinalStates);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9d6ad47b6c1dd40c170d8edc34ee6571" kindref="member">cascadeMC_positronSpectra</ref>.resolveDependency(&amp;cascadeMC_Histograms);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9d6ad47b6c1dd40c170d8edc34ee6571" kindref="member">cascadeMC_positronSpectra</ref>.resolveDependency(&amp;cascadeMC_EventCount);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a76da5d131b4e86104e73197a430fcd22" kindref="member">dump_positronSpectrum</ref>.resolveDependency(&amp;positron_AnnYield_General);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Infer<sp/>anti-proton<sp/>spectra<sp/>for<sp/>recorded<sp/>MC<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a2e4f91f825c9443eba658d013e200073" kindref="member">cascadeMC_antiprotonSpectra</ref>.resolveDependency(&amp;cascadeMC_InitialStates);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a2e4f91f825c9443eba658d013e200073" kindref="member">cascadeMC_antiprotonSpectra</ref>.resolveDependency(&amp;cascadeMC_FinalStates);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a2e4f91f825c9443eba658d013e200073" kindref="member">cascadeMC_antiprotonSpectra</ref>.resolveDependency(&amp;cascadeMC_Histograms);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a2e4f91f825c9443eba658d013e200073" kindref="member">cascadeMC_antiprotonSpectra</ref>.resolveDependency(&amp;cascadeMC_EventCount);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a42092eec2e56ba9f64ff2d17065dbc73" kindref="member">dump_antiprotonSpectrum</ref>.resolveDependency(&amp;antiproton_AnnYield_General);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Infer<sp/>anti-deuteron<sp/>spectra<sp/>for<sp/>recorded<sp/>MC<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a0396900e4afa5a304d34ba9572d89133" kindref="member">cascadeMC_antideuteronSpectra</ref>.resolveDependency(&amp;cascadeMC_InitialStates);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a0396900e4afa5a304d34ba9572d89133" kindref="member">cascadeMC_antideuteronSpectra</ref>.resolveDependency(&amp;cascadeMC_FinalStates);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a0396900e4afa5a304d34ba9572d89133" kindref="member">cascadeMC_antideuteronSpectra</ref>.resolveDependency(&amp;cascadeMC_Histograms);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a0396900e4afa5a304d34ba9572d89133" kindref="member">cascadeMC_antideuteronSpectra</ref>.resolveDependency(&amp;cascadeMC_EventCount);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a976f3e7918daee9f72bd14e6584b209c" kindref="member">dump_antideuteronSpectrum</ref>.resolveDependency(&amp;antideuteron_AnnYield_General);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>total<sp/>gamma-ray<sp/>yield<sp/>(cascade<sp/>MC<sp/>+<sp/>tabulated<sp/>results)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1afc91e2a127d483fd1215573df7a9f164" kindref="member">GA_AnnYield_General</ref>.resolveDependency(&amp;TH_ProcessCatalog_WIMP);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1afc91e2a127d483fd1215573df7a9f164" kindref="member">GA_AnnYield_General</ref>.resolveDependency(&amp;GA_SimYieldTable_DarkSUSY);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1afc91e2a127d483fd1215573df7a9f164" kindref="member">GA_AnnYield_General</ref>.resolveDependency(&amp;DarkMatter_ID_WIMP);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1afc91e2a127d483fd1215573df7a9f164" kindref="member">GA_AnnYield_General</ref>.resolveDependency(&amp;DarkMatterConj_ID_WIMP);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1afc91e2a127d483fd1215573df7a9f164" kindref="member">GA_AnnYield_General</ref>.resolveDependency(&amp;cascadeMC_gammaSpectra);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a76e1a09054ddce13600d76fe83cb7f20" kindref="member">dump_gammaSpectrum</ref>.resolveDependency(&amp;GA_AnnYield_General);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>total<sp/>positron<sp/>yield<sp/>(cascade<sp/>MC<sp/>+<sp/>tabulated<sp/>results)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aed1387b7270539845bcf8939a5ef2d8f" kindref="member">positron_AnnYield_General</ref>.resolveDependency(&amp;TH_ProcessCatalog_WIMP);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aed1387b7270539845bcf8939a5ef2d8f" kindref="member">positron_AnnYield_General</ref>.resolveDependency(&amp;positron_SimYieldTable_DarkSUSY);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aed1387b7270539845bcf8939a5ef2d8f" kindref="member">positron_AnnYield_General</ref>.resolveDependency(&amp;DarkMatter_ID_WIMP);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aed1387b7270539845bcf8939a5ef2d8f" kindref="member">positron_AnnYield_General</ref>.resolveDependency(&amp;DarkMatterConj_ID_WIMP);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1aed1387b7270539845bcf8939a5ef2d8f" kindref="member">positron_AnnYield_General</ref>.resolveDependency(&amp;cascadeMC_positronSpectra);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a76da5d131b4e86104e73197a430fcd22" kindref="member">dump_positronSpectrum</ref>.resolveDependency(&amp;positron_AnnYield_General);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>total<sp/>anti-proton<sp/>yield<sp/>(cascade<sp/>MC<sp/>+<sp/>tabulated<sp/>results)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a656c3a7cc030833a626b7a51d814331f" kindref="member">antiproton_AnnYield_General</ref>.resolveDependency(&amp;TH_ProcessCatalog_WIMP);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a656c3a7cc030833a626b7a51d814331f" kindref="member">antiproton_AnnYield_General</ref>.resolveDependency(&amp;antiproton_SimYieldTable_DarkSUSY);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a656c3a7cc030833a626b7a51d814331f" kindref="member">antiproton_AnnYield_General</ref>.resolveDependency(&amp;DarkMatter_ID_WIMP);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a656c3a7cc030833a626b7a51d814331f" kindref="member">antiproton_AnnYield_General</ref>.resolveDependency(&amp;DarkMatterConj_ID_WIMP);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a656c3a7cc030833a626b7a51d814331f" kindref="member">antiproton_AnnYield_General</ref>.resolveDependency(&amp;cascadeMC_antiprotonSpectra);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a42092eec2e56ba9f64ff2d17065dbc73" kindref="member">dump_antiprotonSpectrum</ref>.resolveDependency(&amp;antiproton_AnnYield_General);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>total<sp/>anti-deuteron<sp/>yield<sp/>(cascade<sp/>MC<sp/>+<sp/>tabulated<sp/>results)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1ad12e3f79e1e69ef234ca7b0527d96678" kindref="member">antideuteron_AnnYield_General</ref>.resolveDependency(&amp;TH_ProcessCatalog_WIMP);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1ad12e3f79e1e69ef234ca7b0527d96678" kindref="member">antideuteron_AnnYield_General</ref>.resolveDependency(&amp;antideuteron_SimYieldTable_DarkSUSY);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1ad12e3f79e1e69ef234ca7b0527d96678" kindref="member">antideuteron_AnnYield_General</ref>.resolveDependency(&amp;DarkMatter_ID_WIMP);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1ad12e3f79e1e69ef234ca7b0527d96678" kindref="member">antideuteron_AnnYield_General</ref>.resolveDependency(&amp;DarkMatterConj_ID_WIMP);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1ad12e3f79e1e69ef234ca7b0527d96678" kindref="member">antideuteron_AnnYield_General</ref>.resolveDependency(&amp;cascadeMC_antideuteronSpectra);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a976f3e7918daee9f72bd14e6584b209c" kindref="member">dump_antideuteronSpectrum</ref>.resolveDependency(&amp;antideuteron_AnnYield_General);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resolve<sp/>Galactic<sp/>halo<sp/>requirements<sp/>for<sp/>gamLike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>set_gamLike_GC_halo.resolveDependency(&amp;GalacticHalo_Einasto);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>set_gamLike_GC_halo.resolveBackendReq(&amp;Backends::gamLike_1_0_1::Functown::set_halo_profile);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>Fermi<sp/>LAT<sp/>dwarf<sp/>likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1aabe988fec6fe85889f60d85d5d6348c4" kindref="member">lnL_FermiLATdwarfs_gamLike</ref>.resolveDependency(&amp;GA_AnnYield_General);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1aabe988fec6fe85889f60d85d5d6348c4" kindref="member">lnL_FermiLATdwarfs_gamLike</ref>.resolveDependency(&amp;DM_process_from_ProcessCatalog);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>for<sp/>direct<sp/>and<sp/>indirect<sp/>detection<sp/>likelihoods<sp/>that<sp/>dark<sp/>matter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>density<sp/>is<sp/>always<sp/>the<sp/>measured<sp/>one<sp/>(despite<sp/>relic<sp/>density<sp/>results)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1aabe988fec6fe85889f60d85d5d6348c4" kindref="member">lnL_FermiLATdwarfs_gamLike</ref>.resolveDependency(&amp;RD_fraction_one);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1aabe988fec6fe85889f60d85d5d6348c4" kindref="member">lnL_FermiLATdwarfs_gamLike</ref>.resolveBackendReq(&amp;Backends::gamLike_1_0_1::Functown::lnL);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1a8c28991228d6698e25e7167dfe1b1cbe" kindref="member">lnL_HESSGC_gamLike</ref>.resolveDependency(&amp;GA_AnnYield_General);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1a8c28991228d6698e25e7167dfe1b1cbe" kindref="member">lnL_HESSGC_gamLike</ref>.resolveDependency(&amp;DM_process_from_ProcessCatalog);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1a8c28991228d6698e25e7167dfe1b1cbe" kindref="member">lnL_HESSGC_gamLike</ref>.resolveDependency(&amp;RD_fraction_one);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1a8c28991228d6698e25e7167dfe1b1cbe" kindref="member">lnL_HESSGC_gamLike</ref>.resolveBackendReq(&amp;Backends::gamLike_1_0_1::Functown::lnL);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>lnL_CTAGC_gamLike.resolveDependency(&amp;GA_AnnYield_General);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>lnL_CTAGC_gamLike.resolveDependency(&amp;DM_process_from_ProcessCatalog);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>lnL_CTAGC_gamLike.resolveDependency(&amp;RD_fraction_one);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>lnL_CTAGC_gamLike.resolveBackendReq(&amp;Backends::gamLike_1_0_1::Functown::lnL);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1abcb92f036ad32291dfdce538386f5f93" kindref="member">lnL_FermiGC_gamLike</ref>.resolveDependency(&amp;GA_AnnYield_General);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1abcb92f036ad32291dfdce538386f5f93" kindref="member">lnL_FermiGC_gamLike</ref>.resolveDependency(&amp;DM_process_from_ProcessCatalog);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1abcb92f036ad32291dfdce538386f5f93" kindref="member">lnL_FermiGC_gamLike</ref>.resolveDependency(&amp;RD_fraction_one);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1abcb92f036ad32291dfdce538386f5f93" kindref="member">lnL_FermiGC_gamLike</ref>.resolveBackendReq(&amp;Backends::gamLike_1_0_1::Functown::lnL);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Calculate<sp/>relic<sp/>density<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*any*<sp/>of<sp/>the<sp/>models<sp/>listed<sp/>by<sp/>&quot;ALLOW_MODELS&quot;<sp/>in<sp/>DarkBit_rollcall.hpp<sp/>will<sp/>work<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ac2f48d384ce79fef12757ba81b4c73f0" kindref="member">RD_eff_annrate_from_ProcessCatalog</ref>.notifyOfModel(</highlight><highlight class="stringliteral">&quot;ScalarSingletDM_Z2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ac2f48d384ce79fef12757ba81b4c73f0" kindref="member">RD_eff_annrate_from_ProcessCatalog</ref>.resolveDependency(&amp;TH_ProcessCatalog_WIMP);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ac2f48d384ce79fef12757ba81b4c73f0" kindref="member">RD_eff_annrate_from_ProcessCatalog</ref>.resolveDependency(&amp;DarkMatter_ID_WIMP);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ac2f48d384ce79fef12757ba81b4c73f0" kindref="member">RD_eff_annrate_from_ProcessCatalog</ref>.resolveDependency(&amp;DarkMatterConj_ID_WIMP);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ad580e53c59bb8d97a390401eef6296e7" kindref="member">RD_spectrum_from_ProcessCatalog</ref>.resolveDependency(&amp;TH_ProcessCatalog_WIMP);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ad580e53c59bb8d97a390401eef6296e7" kindref="member">RD_spectrum_from_ProcessCatalog</ref>.resolveDependency(&amp;DarkMatter_ID_WIMP);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ad580e53c59bb8d97a390401eef6296e7" kindref="member">RD_spectrum_from_ProcessCatalog</ref>.resolveDependency(&amp;DarkMatterConj_ID_WIMP);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ac2f48d384ce79fef12757ba81b4c73f0" kindref="member">RD_eff_annrate_from_ProcessCatalog</ref>.resolveDependency(&amp;DarkMatter_ID_WIMP);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ac2f48d384ce79fef12757ba81b4c73f0" kindref="member">RD_eff_annrate_from_ProcessCatalog</ref>.resolveDependency(&amp;DarkMatterConj_ID_WIMP);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1a91ad397d72de0713e0ade011b6b63780" kindref="member">RD_spectrum_ordered_func</ref>.resolveDependency(&amp;RD_spectrum_from_ProcessCatalog);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1aeabdd217c098d8501a8d77a3020864d7" kindref="member">RD_oh2_DS_general</ref>.resolveDependency(&amp;RD_spectrum_ordered_func);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1aeabdd217c098d8501a8d77a3020864d7" kindref="member">RD_oh2_DS_general</ref>.resolveDependency(&amp;RD_eff_annrate_from_ProcessCatalog);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1aeabdd217c098d8501a8d77a3020864d7" kindref="member">RD_oh2_DS_general</ref>.resolveBackendReq(&amp;Backends::DarkSUSY_generic_wimp_6_2_5::Functown::rdpars);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1aeabdd217c098d8501a8d77a3020864d7" kindref="member">RD_oh2_DS_general</ref>.resolveBackendReq(&amp;Backends::DarkSUSY_generic_wimp_6_2_5::Functown::rdtime);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1aeabdd217c098d8501a8d77a3020864d7" kindref="member">RD_oh2_DS_general</ref>.resolveBackendReq(&amp;Backends::DarkSUSY_generic_wimp_6_2_5::Functown::dsrdcom);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1aeabdd217c098d8501a8d77a3020864d7" kindref="member">RD_oh2_DS_general</ref>.resolveBackendReq(&amp;Backends::DarkSUSY_generic_wimp_6_2_5::Functown::dsrdstart);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1aeabdd217c098d8501a8d77a3020864d7" kindref="member">RD_oh2_DS_general</ref>.resolveBackendReq(&amp;Backends::DarkSUSY_generic_wimp_6_2_5::Functown::dsrdens);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>Calculate<sp/>direct<sp/>detection<sp/>constraints<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>direct<sp/>detection<sp/>rates<sp/>for<sp/>LZ,<sp/>PandaX<sp/>2017,<sp/>Xenon<sp/>1T<sp/>and<sp/>PICO-60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>LZ_Calc.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_Experiment);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>LZ_Calc.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_CalcRates_simple);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>PandaX_2017_Calc.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_Experiment);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>PandaX_2017_Calc.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_CalcRates_simple);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>PICO_60_2019_Calc.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_Experiment);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>PICO_60_2019_Calc.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_CalcRates_simple);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>XENON1T_2018_Calc.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_Experiment);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>XENON1T_2018_Calc.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_CalcRates_simple);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>direct<sp/>detection<sp/>likelihood<sp/>for<sp/>LZ,<sp/>PandaX<sp/>2017,<sp/>Xenon<sp/>1T<sp/>and<sp/>PICO-60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>LZ_GetLogLikelihood.resolveDependency(&amp;LZ_Calc);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>LZ_GetLogLikelihood.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_Experiment);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>LZ_GetLogLikelihood.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_LogLikelihood);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>PandaX_2017_GetLogLikelihood.resolveDependency(&amp;PandaX_2017_Calc);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>PandaX_2017_GetLogLikelihood.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_Experiment);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>PandaX_2017_GetLogLikelihood.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_LogLikelihood);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>XENON1T_2018_GetLogLikelihood.resolveDependency(&amp;XENON1T_2018_Calc);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>XENON1T_2018_GetLogLikelihood.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_Experiment);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>XENON1T_2018_GetLogLikelihood.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_LogLikelihood);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>PICO_60_2019_GetLogLikelihood.resolveDependency(&amp;PICO_60_2019_Calc);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>PICO_60_2019_GetLogLikelihood.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_Experiment);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>PICO_60_2019_GetLogLikelihood.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_LogLikelihood);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Provide<sp/>bin<sp/>number<sp/>in<sp/>LZ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>LZ_GetBinSignal.resolveDependency(&amp;LZ_Calc);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>LZ_GetBinSignal.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_Experiment);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>LZ_GetBinSignal.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_Bins);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>LZ_GetBinSignal.resolveBackendReq(&amp;Backends::DDCalc_2_2_0::Functown::DDCalc_BinSignal);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>generic<sp/>WIMP<sp/>mass<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.resolveDependency(&amp;DarkMatter_ID_WIMP);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.resolveDependency(&amp;DarkMatterConj_ID_WIMP);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a1a65ac2306dd60d61fff98af4701275b" kindref="member">mwimp_generic</ref>.resolveDependency(&amp;WIMP_properties_WIMP);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.resolveDependency(&amp;mwimp_generic);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DirectDetection_8cpp_1a6c8dc089f01db4a962bc86c02aa041c9" kindref="member">sigma_SI_p_simple</ref>.resolveDependency(&amp;DD_couplings_WIMP);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DirectDetection_8cpp_1a6c8dc089f01db4a962bc86c02aa041c9" kindref="member">sigma_SI_p_simple</ref>.resolveDependency(&amp;mwimp_generic);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>gamma-ray<sp/>spectra<sp/>for<sp/>various<sp/>final<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(mode<sp/>&gt;=<sp/>0)<sp/>and<sp/>(mode<sp/>&lt;<sp/>6)<sp/>)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Producing<sp/>test<sp/>spectra.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass<sp/>=<sp/>100.;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sv<sp/>=<sp/>3e-26;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>array<sp/>that<sp/>is<sp/>being<sp/>passed<sp/>to<sp/>dumpSpectrum<sp/>give<sp/>the<sp/>branching<sp/>fraction<sp/>to<sp/>various<sp/>final<sp/>states.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>They<sp/>are<sp/>(as<sp/>defined<sp/>in<sp/>TH_ProcessCatalog_WIMP):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0:<sp/>b<sp/>bbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1:<sp/>gamma<sp/>Z_0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2:<sp/>gamma<sp/>gamma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3:<sp/>tau+<sp/>tau-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4:<sp/>W+<sp/>W-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5:<sp/>e+<sp/>e-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6:<sp/>phi<sp/>phi2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7:<sp/>gamma<sp/>e+<sp/>e-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode==5)<sp/>dumpSpectrum({</highlight><highlight class="stringliteral">&quot;dPhi_dE5.dat&quot;</highlight><highlight class="normal">},<sp/>mass,<sp/>sv*0.1,<sp/>daFunk::vec&lt;double&gt;(0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>1.));</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode==0)<sp/>dumpSpectrum({</highlight><highlight class="stringliteral">&quot;dPhi_dE0.dat&quot;</highlight><highlight class="normal">},<sp/>mass,<sp/>sv,<sp/>daFunk::vec&lt;double&gt;(1.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode==1)<sp/>dumpSpectrum({</highlight><highlight class="stringliteral">&quot;dPhi_dE1.dat&quot;</highlight><highlight class="normal">},<sp/>mass,<sp/>sv,<sp/>daFunk::vec&lt;double&gt;(0.,<sp/>1.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode==2)<sp/>dumpSpectrum({</highlight><highlight class="stringliteral">&quot;dPhi_dE2.dat&quot;</highlight><highlight class="normal">},<sp/>mass,<sp/>sv,<sp/>daFunk::vec&lt;double&gt;(0.,<sp/>0.,<sp/>1.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode==3)<sp/>dumpSpectrum({</highlight><highlight class="stringliteral">&quot;dPhi_dE3.dat&quot;</highlight><highlight class="normal">},<sp/>mass,<sp/>sv,<sp/>daFunk::vec&lt;double&gt;(0.,<sp/>0.,<sp/>0.,<sp/>1.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode==4)<sp/>dumpSpectrum({</highlight><highlight class="stringliteral">&quot;dPhi_dE4.dat&quot;</highlight><highlight class="normal">},<sp/>mass,<sp/>sv,<sp/>daFunk::vec&lt;double&gt;(0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>1.,<sp/>0.,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>gamma-ray<sp/>spectra<sp/>for<sp/>various<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>&gt;=<sp/>10)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Producing<sp/>test<sp/>spectra.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass<sp/>=<sp/>100.;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sv<sp/>=<sp/>3e-26;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>filenames<sp/>=</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dPhi_dE_FCMC_gamma_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(mode)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dPhi_dE_FCMC_positron_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(mode)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dPhi_dE_FCMC_antiproton_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(mode)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dPhi_dE_FCMC_antideuteron_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(mode)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dumpSpectrum(filenames,<sp/>mass,<sp/>sv,<sp/>daFunk::vec&lt;double&gt;(0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>1.,<sp/>0.),<sp/>mode);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Systematic<sp/>parameter<sp/>maps<sp/>annihilation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode==6)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Producing<sp/>gamma<sp/>ray<sp/>test<sp/>maps.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mBins<sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>svBins<sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oh2,<sp/>lnL;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>sv_list,<sp/>m_list;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1ad750ce4cfc57d0b47c2a2f56c8a4ab9f" kindref="member">GalacticHalo_Einasto</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_gamLike_GC_halo.reset_and_calculate();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::multi_array&lt;double,<sp/>2&gt;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_b_array{boost::extents[mBins][svBins]},</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_b_array2{boost::extents[mBins][svBins]},</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_b_array3{boost::extents[mBins][svBins]},</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_b_array4{boost::extents[mBins][svBins]},</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_tau_array{boost::extents[mBins][svBins]};</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::multi_array&lt;double,<sp/>2&gt;<sp/>oh2_array{boost::extents[mBins][svBins]};</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sv_list<sp/>=<sp/>daFunk::logspace(-28.0,<sp/>-22.0,<sp/>svBins);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calculating<sp/>gamma-ray<sp/>likelihood<sp/>tables<sp/>for<sp/>annihilation<sp/>to<sp/>b<sp/>bbar.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_list<sp/>=<sp/>daFunk::logspace(log10(5.),<sp/>4.,<sp/>mBins);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_list.size();<sp/>i++)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>sv_list.size();<sp/>j++)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkMatter_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkMatterConj_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;mWIMP&quot;</highlight><highlight class="normal">,<sp/>m_list[i]);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a1a65ac2306dd60d61fff98af4701275b" kindref="member">mwimp_generic</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;sv&quot;</highlight><highlight class="normal">,<sp/>sv_list[j]);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameters:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_list[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sv_list[j]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;std::vector&lt;double&gt;&gt;(</highlight><highlight class="stringliteral">&quot;brList&quot;</highlight><highlight class="normal">,<sp/>daFunk::vec&lt;double&gt;(1.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a47cfb4f0c5ee54a13d2464f23db17602" kindref="member">DM_process_from_ProcessCatalog</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RD_fraction_one.reset_and_calculate();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a15714f42fe847496bbf18ac7ad1168e9" kindref="member">GA_SimYieldTable_MicrOmegas</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a013113a2f75a02da4eb2b936db6e0685" kindref="member">GA_SimYieldTable_DarkSUSY</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a44bfdb5a633cc2cc5d1b72ca96e69091" kindref="member">Combine_SimYields</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a97edfd5270c5f0222aa120356445ccaf" kindref="member">cascadeMC_FinalStates</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1af814869a1f2f1a3d357364ba08bf4b17" kindref="member">cascadeMC_InitialStates</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9c52c4c1754eef5e95456be41b2601bc" kindref="member">cascadeMC_DecayTable</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9d360a3cc724081297c6024ffb4e9143" kindref="member">cascadeMC_LoopManager</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1adb0d1580949dcbf94725377b21b002c9" kindref="member">cascadeMC_gammaSpectra</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1afc91e2a127d483fd1215573df7a9f164" kindref="member">GA_AnnYield_General</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1aabe988fec6fe85889f60d85d5d6348c4" kindref="member">lnL_FermiLATdwarfs_gamLike</ref>.setOption&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1aabe988fec6fe85889f60d85d5d6348c4" kindref="member">lnL_FermiLATdwarfs_gamLike</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL<sp/>=<sp/><ref refid="SimpleLikelihoods_8cpp_1aabe988fec6fe85889f60d85d5d6348c4" kindref="member">lnL_FermiLATdwarfs_gamLike</ref>(0);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fermi<sp/>dwarf<sp/>likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_b_array[i][j]<sp/>=<sp/>lnL;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1a8c28991228d6698e25e7167dfe1b1cbe" kindref="member">lnL_HESSGC_gamLike</ref>.setOption&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;integral_fixedJ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1a8c28991228d6698e25e7167dfe1b1cbe" kindref="member">lnL_HESSGC_gamLike</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL<sp/>=<sp/><ref refid="SimpleLikelihoods_8cpp_1a8c28991228d6698e25e7167dfe1b1cbe" kindref="member">lnL_HESSGC_gamLike</ref>(0);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;HESS<sp/>GC<sp/>likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_b_array2[i][j]<sp/>=<sp/>lnL;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_CTAGC_gamLike.reset_and_calculate();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL<sp/>=<sp/>lnL_CTAGC_gamLike(0);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CTA<sp/>GC<sp/>likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_b_array3[i][j]<sp/>=<sp/>lnL;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1abcb92f036ad32291dfdce538386f5f93" kindref="member">lnL_FermiGC_gamLike</ref>.setOption&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fixedJ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1abcb92f036ad32291dfdce538386f5f93" kindref="member">lnL_FermiGC_gamLike</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL<sp/>=<sp/><ref refid="SimpleLikelihoods_8cpp_1abcb92f036ad32291dfdce538386f5f93" kindref="member">lnL_FermiGC_gamLike</ref>(0);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_b_array4[i][j]<sp/>=<sp/>lnL;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fermi<sp/>GC<sp/>likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;FermiD_b_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_b_array,<sp/>m_list,<sp/>sv_list);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;HESSGC_b_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_b_array2,<sp/>m_list,<sp/>sv_list);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;CTAGC_b_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_b_array3,<sp/>m_list,<sp/>sv_list);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;FermiGC_b_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_b_array4,<sp/>m_list,<sp/>sv_list);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calculating<sp/>Fermi-LAT<sp/>dwarf<sp/>spheroidal<sp/>likehood<sp/>table<sp/>for<sp/>annihilation<sp/>to<sp/>tau+<sp/>tau-.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_list<sp/>=<sp/>daFunk::logspace(log10(1.9),<sp/>4.,<sp/>mBins);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_list.size();<sp/>i++)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>sv_list.size();<sp/>j++)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkMatter_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkMatterConj_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;mWIMP&quot;</highlight><highlight class="normal">,<sp/>m_list[i]);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a1a65ac2306dd60d61fff98af4701275b" kindref="member">mwimp_generic</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;sv&quot;</highlight><highlight class="normal">,<sp/>sv_list[j]);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameters:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_list[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sv_list[j]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;std::vector&lt;double&gt;&gt;(</highlight><highlight class="stringliteral">&quot;brList&quot;</highlight><highlight class="normal">,<sp/>daFunk::vec&lt;double&gt;(0.,<sp/>0.,<sp/>0.,<sp/>1.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a47cfb4f0c5ee54a13d2464f23db17602" kindref="member">DM_process_from_ProcessCatalog</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RD_fraction_one.reset_and_calculate();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a15714f42fe847496bbf18ac7ad1168e9" kindref="member">GA_SimYieldTable_MicrOmegas</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a013113a2f75a02da4eb2b936db6e0685" kindref="member">GA_SimYieldTable_DarkSUSY</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1a44bfdb5a633cc2cc5d1b72ca96e69091" kindref="member">Combine_SimYields</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a97edfd5270c5f0222aa120356445ccaf" kindref="member">cascadeMC_FinalStates</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1af814869a1f2f1a3d357364ba08bf4b17" kindref="member">cascadeMC_InitialStates</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9c52c4c1754eef5e95456be41b2601bc" kindref="member">cascadeMC_DecayTable</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1a9d360a3cc724081297c6024ffb4e9143" kindref="member">cascadeMC_LoopManager</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Cascades_8cpp_1adb0d1580949dcbf94725377b21b002c9" kindref="member">cascadeMC_gammaSpectra</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="IndirectDetectionYields_8cpp_1afc91e2a127d483fd1215573df7a9f164" kindref="member">GA_AnnYield_General</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SimpleLikelihoods_8cpp_1aabe988fec6fe85889f60d85d5d6348c4" kindref="member">lnL_FermiLATdwarfs_gamLike</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL<sp/>=<sp/><ref refid="SimpleLikelihoods_8cpp_1aabe988fec6fe85889f60d85d5d6348c4" kindref="member">lnL_FermiLATdwarfs_gamLike</ref>(0);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fermi<sp/>LAT<sp/>likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_tau_array[i][j]<sp/>=<sp/>lnL;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;FermiD_tau_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_tau_array,<sp/>m_list,<sp/>sv_list);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calculating<sp/>table<sp/>of<sp/>Omega<sp/>h^2<sp/>values.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_list<sp/>=<sp/>daFunk::logspace(-1.0,<sp/>4.,<sp/>mBins);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_list.size();<sp/>i++)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>sv_list.size();<sp/>j++)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkMatter_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkMatterConj_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;mWIMP&quot;</highlight><highlight class="normal">,<sp/>m_list[i]);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a1a65ac2306dd60d61fff98af4701275b" kindref="member">mwimp_generic</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;sv&quot;</highlight><highlight class="normal">,<sp/>sv_list[j]);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameters:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_list[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sv_list[j]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;std::vector&lt;double&gt;&gt;(</highlight><highlight class="stringliteral">&quot;brList&quot;</highlight><highlight class="normal">,<sp/>daFunk::vec&lt;double&gt;(0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>1.,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ac2f48d384ce79fef12757ba81b4c73f0" kindref="member">RD_eff_annrate_from_ProcessCatalog</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1ad580e53c59bb8d97a390401eef6296e7" kindref="member">RD_spectrum_from_ProcessCatalog</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1a91ad397d72de0713e0ade011b6b63780" kindref="member">RD_spectrum_ordered_func</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="RelicDensity_8cpp_1aeabdd217c098d8501a8d77a3020864d7" kindref="member">RD_oh2_DS_general</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oh2<sp/>=<sp/><ref refid="RelicDensity_8cpp_1aeabdd217c098d8501a8d77a3020864d7" kindref="member">RD_oh2_DS_general</ref>(0);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Omega<sp/>h^2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>oh2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oh2_array[i][j]<sp/>=<sp/>oh2;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;oh2_table.dat&quot;</highlight><highlight class="normal">,<sp/>oh2_array,<sp/>m_list,<sp/>sv_list);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Systematic<sp/>parameter<sp/>maps<sp/>scattering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode==7)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Producing<sp/>direct<sp/>detection<sp/>test<sp/>maps.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lnL1,<sp/>lnL2,<sp/>lnL3,<sp/>lnL4;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g,<sp/>reduced_mass;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>mBins<sp/>=<sp/>300;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>sBins<sp/>=<sp/>200;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mBins<sp/>=<sp/>120;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sBins<sp/>=<sp/>80;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mN<sp/>=<sp/>(m_proton<sp/>+<sp/>m_neutron)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>m_list<sp/>=<sp/>daFunk::logspace(0.0,<sp/>4.0,<sp/>mBins);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>s_list;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::multi_array&lt;double,<sp/>2&gt;<sp/>lnL_array1{boost::extents[mBins][sBins]},</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_array2{boost::extents[mBins][sBins]},<sp/>lnL_array3{boost::extents[mBins][sBins]},</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_array4{boost::extents[mBins][sBins]};</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;sv&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.setOption&lt;std::vector&lt;double&gt;&gt;(</highlight><highlight class="stringliteral">&quot;brList&quot;</highlight><highlight class="normal">,<sp/>daFunk::vec&lt;double&gt;(1.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s_list<sp/>=<sp/>daFunk::logspace(-47.,<sp/>-40.,<sp/>sBins);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>array<sp/>of<sp/>sigma_SI<sp/>and<sp/>lnL<sp/>values<sp/>for<sp/>LZ,<sp/>PandaX,<sp/>XENON1T<sp/>and<sp/>PICO-60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assuming<sp/>gps=gns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calculating<sp/>tables<sp/>of<sp/>SI<sp/>likelihoods.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_list.size();<sp/>i++)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>s_list.size();<sp/>j++)</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-initialize<sp/>DDCalc<sp/>with<sp/>LZ/Xenon/PandaX<sp/>halo<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;rho0&quot;</highlight><highlight class="normal">,<sp/>0.3);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vrot&quot;</highlight><highlight class="normal">,<sp/>232.7);<sp/></highlight><highlight class="comment">//<sp/>v_Earth<sp/>=<sp/>245<sp/>km/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;v0&quot;</highlight><highlight class="normal">,<sp/>220.);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vesc&quot;</highlight><highlight class="normal">,<sp/>544.);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a61a1c8167ecfdebe66974cad691f65ac" kindref="member">ExtractLocalMaxwellianHalo</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkMatter_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkMatterConj_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;mWIMP&quot;</highlight><highlight class="normal">,<sp/>m_list[i]);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a1a65ac2306dd60d61fff98af4701275b" kindref="member">mwimp_generic</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameters:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_list[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s_list[j]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduced_mass<sp/>=<sp/>(m_list[i]<sp/>*<sp/>mN)<sp/>/<sp/>(mN<sp/>+<sp/>m_list[i]);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>sqrt(s_list[j]*pi/gev2cm2)<sp/>/<sp/>(reduced_mass);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>for<sp/>direct<sp/>and<sp/>indirect<sp/>detection<sp/>likelihoods<sp/>that<sp/>dark<sp/>matter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>density<sp/>is<sp/>always<sp/>the<sp/>measured<sp/>one<sp/>(despite<sp/>relic<sp/>density<sp/>results)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RD_fraction_one.reset_and_calculate();</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;gps&quot;</highlight><highlight class="normal">,<sp/>g);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;gns&quot;</highlight><highlight class="normal">,<sp/>g);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;gpa&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;gna&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DirectDetection_8cpp_1af8f7ac04e9a585b594bb5093333f4448" kindref="member">DDCalc_Couplings_WIMP_nucleon</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDCalc_2_2_0_init.reset_and_calculate();</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LZ_Calc.reset_and_calculate();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LZ_GetLogLikelihood.reset_and_calculate();</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XENON1T_2018_Calc.reset_and_calculate();</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XENON1T_2018_GetLogLikelihood.reset_and_calculate();</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PandaX_2017_Calc.reset_and_calculate();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PandaX_2017_GetLogLikelihood.reset_and_calculate();</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL1<sp/>=<sp/>LZ_GetLogLikelihood(0);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL2<sp/>=<sp/>PandaX_2017_GetLogLikelihood(0);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL3<sp/>=<sp/>XENON1T_2018_GetLogLikelihood(0);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>LocalHalo<sp/>Model<sp/>parameters<sp/>to<sp/>PICO-60<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;rho0&quot;</highlight><highlight class="normal">,<sp/>0.3);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vrot&quot;</highlight><highlight class="normal">,<sp/>220.);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;v0&quot;</highlight><highlight class="normal">,<sp/>220.);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vesc&quot;</highlight><highlight class="normal">,<sp/>544.);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a61a1c8167ecfdebe66974cad691f65ac" kindref="member">ExtractLocalMaxwellianHalo</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDCalc_2_2_0_init.reset_and_calculate();</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PICO_60_2019_Calc.reset_and_calculate();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PICO_60_2019_GetLogLikelihood.reset_and_calculate();</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL4<sp/>=<sp/>PICO_60_2019_GetLogLikelihood(0);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LZ<sp/>SI<sp/>lnL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PandaX_2017<sp/>SI<sp/>lnL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;XENON1T_2018<sp/>SI<sp/>lnL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL3<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PICO_60_2019<sp/>SI<sp/>lnL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL4<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDCalc_2_2_0_init.reset_and_calculate();</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LZ_Calc.reset_and_calculate();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>events;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LZ_GetBinSignal.reset_and_calculate();</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events<sp/>=<sp/>LZ_GetBinSignal(0);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbins<sp/>=<sp/>events.size();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>LZ<sp/>bins:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nbins<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Predicted<sp/>signal:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>:<sp/>events)<sp/>std::cout<sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_array1[i][j]<sp/>=<sp/>lnL1;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_array2[i][j]<sp/>=<sp/>lnL2;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_array3[i][j]<sp/>=<sp/>lnL3;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_array4[i][j]<sp/>=<sp/>lnL4;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;LZ_SI_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_array1,<sp/>m_list,<sp/>s_list);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;PandaX_2017_SI_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_array2,<sp/>m_list,<sp/>s_list);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;XENON1T_2018_SI_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_array3,<sp/>m_list,<sp/>s_list);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;PICO_60_2019_SI_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_array4,<sp/>m_list,<sp/>s_list);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s_list<sp/>=<sp/>daFunk::logspace(-42.,<sp/>-35.,<sp/>sBins);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>array<sp/>of<sp/>sigma_SI<sp/>and<sp/>lnL<sp/>values<sp/>for<sp/>LZ,<sp/>PandaX,<sp/>XENON1T<sp/>and<sp/>PICO-60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assuming<sp/>gna=0<sp/>(proton-only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calculating<sp/>tables<sp/>of<sp/>SD<sp/>likelihoods.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_list.size();<sp/>i++)</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>s_list.size();<sp/>j++)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-initialize<sp/>DDCalc<sp/>with<sp/>LZ/Xenon/PandaX<sp/>halo<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;rho0&quot;</highlight><highlight class="normal">,<sp/>0.3);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vrot&quot;</highlight><highlight class="normal">,<sp/>232.7);<sp/></highlight><highlight class="comment">//<sp/>v_Earth<sp/>=<sp/>245<sp/>km/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;v0&quot;</highlight><highlight class="normal">,<sp/>220.);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vesc&quot;</highlight><highlight class="normal">,<sp/>544.);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a61a1c8167ecfdebe66974cad691f65ac" kindref="member">ExtractLocalMaxwellianHalo</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkMatter_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkMatterConj_ID_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;mWIMP&quot;</highlight><highlight class="normal">,<sp/>m_list[i]);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIMP_properties_WIMP.reset_and_calculate();</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a1a65ac2306dd60d61fff98af4701275b" kindref="member">mwimp_generic</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameters:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_list[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s_list[j]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduced_mass<sp/>=<sp/>(m_list[i]<sp/>*<sp/>m_proton)<sp/>/<sp/>(m_proton<sp/>+<sp/>m_list[i]);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>sqrt(s_list[j]*pi/(3*gev2cm2))<sp/>/<sp/>(reduced_mass);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" kindref="member">TH_ProcessCatalog_WIMP</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RD_fraction_one.reset_and_calculate();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;gps&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;gns&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;gpa&quot;</highlight><highlight class="normal">,<sp/>g);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;gna&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" kindref="member">DD_couplings_WIMP</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDCalc_2_2_0_init.reset_and_calculate();</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LZ_Calc.reset_and_calculate();</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LZ_GetLogLikelihood.reset_and_calculate();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XENON1T_2018_Calc.reset_and_calculate();</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XENON1T_2018_GetLogLikelihood.reset_and_calculate();</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PandaX_2017_Calc.reset_and_calculate();</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PandaX_2017_GetLogLikelihood.reset_and_calculate();</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL1<sp/>=<sp/>LZ_GetLogLikelihood(0);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL2<sp/>=<sp/>PandaX_2017_GetLogLikelihood(0);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL3<sp/>=<sp/>XENON1T_2018_GetLogLikelihood(0);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>LocalHalo<sp/>Model<sp/>parameters<sp/>to<sp/>PICO-60<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;rho0&quot;</highlight><highlight class="normal">,<sp/>0.3);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vrot&quot;</highlight><highlight class="normal">,<sp/>220.);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;v0&quot;</highlight><highlight class="normal">,<sp/>220.);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vesc&quot;</highlight><highlight class="normal">,<sp/>544.);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a61a1c8167ecfdebe66974cad691f65ac" kindref="member">ExtractLocalMaxwellianHalo</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDCalc_2_2_0_init.reset_and_calculate();</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PICO_60_2019_Calc.reset_and_calculate();</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PICO_60_2019_GetLogLikelihood.reset_and_calculate();</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL4<sp/>=<sp/>PICO_60_2019_GetLogLikelihood(0);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_STANDALONE_WIMP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LZ<sp/>SD<sp/>lnL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PandaX_2017<sp/>SD<sp/>lnL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;XENON1T_2018<sp/>SD<sp/>lnL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL3<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PICO_60_2019<sp/>SD<sp/>lnL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lnL4<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_array1[i][j]<sp/>=<sp/>lnL1;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_array2[i][j]<sp/>=<sp/>lnL2;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_array3[i][j]<sp/>=<sp/>lnL3;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnL_array4[i][j]<sp/>=<sp/>lnL4;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;LZ_SD_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_array1,<sp/>m_list,<sp/>s_list);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;PandaX_2017_SD_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_array2,<sp/>m_list,<sp/>s_list);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;XENON1T_2018_SD_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_array3,<sp/>m_list,<sp/>s_list);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dump_array_to_file(</highlight><highlight class="stringliteral">&quot;PICO_60_2019_SD_table.dat&quot;</highlight><highlight class="normal">,<sp/>lnL_array4,<sp/>m_list,<sp/>s_list);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>halo<sp/>parameters<sp/>to<sp/>DarkBit<sp/>defaults.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;rho0&quot;</highlight><highlight class="normal">,<sp/>0.4);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vrot&quot;</highlight><highlight class="normal">,<sp/>235.);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;v0&quot;</highlight><highlight class="normal">,<sp/>235.);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Halo_primary_parameters-&gt;setValue(</highlight><highlight class="stringliteral">&quot;vesc&quot;</highlight><highlight class="normal">,<sp/>550.);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1a61a1c8167ecfdebe66974cad691f65ac" kindref="member">ExtractLocalMaxwellianHalo</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit_8cpp_1ad750ce4cfc57d0b47c2a2f56c8a4ab9f" kindref="member">GalacticHalo_Einasto</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DarkBit_standalone_WIMP<sp/>has<sp/>exited<sp/>with<sp/>fatal<sp/>exception:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp"/>
  </compounddef>
</doxygen>
