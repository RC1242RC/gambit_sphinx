<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="SUSY-HIT__1__5_8cpp" kind="file" language="C++">
    <compoundname>SUSY-HIT_1_5.cpp</compoundname>
    <includes local="no">sstream</includes>
    <includes refid="frontend__macros_8hpp" local="yes">gambit/Backends/frontend_macros.hpp</includes>
    <includes refid="SUSY-HIT__1__5_8hpp" local="yes">gambit/Backends/frontends/SUSY-HIT_1_5.hpp</includes>
    <includes local="yes">gambit/Elements/mssm_slhahelp.hpp</includes>
    <includes local="yes">gambit/Utils/slhaea_helpers.hpp</includes>
    <incdepgraph>
      <node id="23">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>gambit/Backends/common_macros.hpp</label>
        <link refid="common__macros_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>gambit/Backends/frontends/SUSY-HIT_1_5.hpp</label>
        <link refid="SUSY-HIT__1__5_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>boost/preprocessor/seq/transform.hpp</label>
      </node>
      <node id="16">
        <label>gambit/Backends/mathematica_macros.hpp</label>
        <link refid="mathematica__macros_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="7">
        <label>gambit/Elements/types_rollcall.hpp</label>
      </node>
      <node id="32">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="14">
        <label>gambit/Backends/interoperability.hpp</label>
        <link refid="interoperability_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>gambit/Backends/python_macros.hpp</label>
        <link refid="python__macros_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="6">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
      </node>
      <node id="22">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>gambit/Utils/util_functions.hpp</label>
      </node>
      <node id="20">
        <label>gambit/Elements/ini_catch.hpp</label>
      </node>
      <node id="26">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="28">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>SUSY-HIT_1_5.cpp</label>
        <link refid="SUSY-HIT__1__5_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
      </node>
      <node id="15">
        <label>gambit/Backends/interoperability_macros.hpp</label>
        <link refid="interoperability__macros_8hpp"/>
      </node>
      <node id="3">
        <label>gambit/Backends/frontend_macros.hpp</label>
        <link refid="frontend__macros_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sstream</label>
      </node>
      <node id="8">
        <label>boost/preprocessor/control/iif.hpp</label>
      </node>
      <node id="17">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="34">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
      <node id="18">
        <label>gambit/Utils/util_macros.hpp</label>
      </node>
      <node id="25">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
      <node id="11">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="19">
        <label>gambit/Backends/mathematica_function.hpp</label>
        <link refid="mathematica__function_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Elements/module_macros_inmodule.hpp</label>
      </node>
      <node id="31">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="27">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="35">
        <label>gambit/Elements/mssm_slhahelp.hpp</label>
      </node>
      <node id="30">
        <label>gambit/Backends/python_function.hpp</label>
        <link refid="python__function_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Frontend for SUSY-HIT 1.5 backend</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Pat Scott </para>
</simplesect>
<simplesect kind="date"><para>2015 Jan-May</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frontend__macros_8hpp" kindref="compound">gambit/Backends/frontend_macros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SUSY-HIT__1__5_8hpp" kindref="compound">gambit/Backends/frontends/SUSY-HIT_1_5.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Elements/mssm_slhahelp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/slhaea_helpers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>functions<sp/>(definitions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>required_block(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>name,<sp/>SLHAea::Block&amp;<sp/>block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SLHAea::Coll&amp;<sp/>slha)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slha.find(name)<sp/>!=<sp/>slha.end())<sp/>block<sp/>=<sp/>slha.at(name);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Sorry,<sp/>SUSY-HIT<sp/>needs<sp/>SLHA<sp/>block:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>you<sp/>tried<sp/>to<sp/>read<sp/>in<sp/>a<sp/>debug<sp/>SLHA<sp/>file<sp/>with<sp/>missing<sp/>entries<sp/>(e.g.<sp/>STOPMIX,<sp/>STAUMIX,\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;etc),<sp/>then<sp/>sort<sp/>out<sp/>your<sp/>SLHA<sp/>file<sp/>so<sp/>that<sp/>it<sp/>is<sp/>readable<sp/>by<sp/>SUSY-HIT!<sp/><sp/>If<sp/>you<sp/>can&apos;t<sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;do<sp/>that,<sp/>then<sp/>depending<sp/>on<sp/>what<sp/>blocks<sp/>your<sp/>file<sp/>has,<sp/>you<sp/>may<sp/>be<sp/>able<sp/>to<sp/>instead<sp/>use<sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;it<sp/>to<sp/>initialise<sp/>either<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>1.<sp/>a<sp/>GAMBIT<sp/>Spectrum<sp/>object<sp/>(see<sp/>SpecBit::get_MSSM_spectrum_from_SLHAfile),<sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>2.<sp/>a<sp/>GAMBIT<sp/>DecayTable<sp/>object<sp/>(see<sp/>DecayBit::all_decays_from_SLHA).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run_susy_hit(SLHAstruct<sp/>slha,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>W_width,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Z_width)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>SLHAea::to;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>out<sp/>all<sp/>the<sp/>SLHA1<sp/>PDG<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdg_codes[35];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[0]<sp/><sp/>=<sp/>24;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>W+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[1]<sp/><sp/>=<sp/>25;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[2]<sp/><sp/>=<sp/>35;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[3]<sp/><sp/>=<sp/>36;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[4]<sp/><sp/>=<sp/>37;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>H+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[5]<sp/><sp/>=<sp/>1000001;<sp/></highlight><highlight class="comment">//<sp/>~d_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[6]<sp/><sp/>=<sp/>2000001;<sp/></highlight><highlight class="comment">//<sp/>~d_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[7]<sp/><sp/>=<sp/>1000002;<sp/></highlight><highlight class="comment">//<sp/>~u_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[8]<sp/><sp/>=<sp/>2000002;<sp/></highlight><highlight class="comment">//<sp/>~u_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[9]<sp/><sp/>=<sp/>1000003;<sp/></highlight><highlight class="comment">//<sp/>~s_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[10]<sp/>=<sp/>2000003;<sp/></highlight><highlight class="comment">//<sp/>~s_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[11]<sp/>=<sp/>1000004;<sp/></highlight><highlight class="comment">//<sp/>~c_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[12]<sp/>=<sp/>2000004;<sp/></highlight><highlight class="comment">//<sp/>~c_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[13]<sp/>=<sp/>1000005;<sp/></highlight><highlight class="comment">//<sp/>~b_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[14]<sp/>=<sp/>2000005;<sp/></highlight><highlight class="comment">//<sp/>~b_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[15]<sp/>=<sp/>1000006;<sp/></highlight><highlight class="comment">//<sp/>~t_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[16]<sp/>=<sp/>2000006;<sp/></highlight><highlight class="comment">//<sp/>~t_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[17]<sp/>=<sp/>1000011;<sp/></highlight><highlight class="comment">//<sp/>~e_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[18]<sp/>=<sp/>2000011;<sp/></highlight><highlight class="comment">//<sp/>~e_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[19]<sp/>=<sp/>1000012;<sp/></highlight><highlight class="comment">//<sp/>~nu_eL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[20]<sp/>=<sp/>1000013;<sp/></highlight><highlight class="comment">//<sp/>~mu_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[21]<sp/>=<sp/>2000013;<sp/></highlight><highlight class="comment">//<sp/>~mu_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[22]<sp/>=<sp/>1000014;<sp/></highlight><highlight class="comment">//<sp/>~nu_muL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[23]<sp/>=<sp/>1000015;<sp/></highlight><highlight class="comment">//<sp/>~tau_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[24]<sp/>=<sp/>2000015;<sp/></highlight><highlight class="comment">//<sp/>~tau_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[25]<sp/>=<sp/>1000016;<sp/></highlight><highlight class="comment">//<sp/>~nu_tauL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[26]<sp/>=<sp/>1000021;<sp/></highlight><highlight class="comment">//<sp/>~g</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[27]<sp/>=<sp/>1000022;<sp/></highlight><highlight class="comment">//<sp/>~chi_10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[28]<sp/>=<sp/>1000023;<sp/></highlight><highlight class="comment">//<sp/>~chi_20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[29]<sp/>=<sp/>1000025;<sp/></highlight><highlight class="comment">//<sp/>~chi_30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[30]<sp/>=<sp/>1000035;<sp/></highlight><highlight class="comment">//<sp/>~chi_40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[31]<sp/>=<sp/>1000024;<sp/></highlight><highlight class="comment">//<sp/>~chi_1+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[32]<sp/>=<sp/>1000037;<sp/></highlight><highlight class="comment">//<sp/>~chi_2+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[33]<sp/>=<sp/>5;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>b<sp/>pole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>pdg_codes[34]<sp/>=<sp/>1000039;<sp/></highlight><highlight class="comment">//<sp/>~G</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>all<sp/>SLHA2<sp/>Q<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=22;<sp/>++i)<sp/>sd_leshouches2-&gt;qvalue(i)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>SLHA2<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>SLHAea::Block<sp/>sminputs,<sp/>vckm,<sp/>msoft,<sp/>mass,<sp/>nmix,<sp/>vmix,<sp/>umix;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>SLHAea::Block<sp/>stopmix,<sp/>sbotmix,<sp/>staumix,<sp/>alpha,<sp/>hmix,<sp/>gauge;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>SLHAea::Block<sp/>au,<sp/>ad,<sp/>ae,<sp/>yu,<sp/>yd,<sp/>ye,<sp/>msq2,<sp/>msd2,<sp/>msu2,<sp/>td,<sp/>tu;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>SLHAea::Block<sp/>usqmix,<sp/>dsqmix,<sp/>selmix,<sp/>spinfo;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;SPINFO&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>spinfo,<sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>sminputs,<sp/>slha);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;VCKMIN&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>vckm,<sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>msoft,<sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mass,<sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>nmix,<sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;VMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>vmix,<sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;UMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>umix,<sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;ALPHA&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>alpha,<sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;HMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>hmix,<sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;GAUGE&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>gauge,<sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;STOPMIX&quot;</highlight><highlight class="normal">,<sp/><sp/>stopmix,<sp/><sp/>slha);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;SBOTMIX&quot;</highlight><highlight class="normal">,<sp/><sp/>sbotmix,<sp/><sp/>slha);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;STAUMIX&quot;</highlight><highlight class="normal">,<sp/><sp/>staumix,<sp/><sp/>slha);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;YU&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>yu,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;YD&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>yd,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;YE&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ye,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;AU&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>au,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;AD&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ad,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;AE&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ae,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPINFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>sd_leshouches1-&gt;spinfo1<sp/>=<sp/>(spinfo[1].is_data_line())<sp/>?<sp/>spinfo[1][1]<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>RGE<sp/>+Spectrum<sp/>calculator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>sd_leshouches1-&gt;spinfo2<sp/>=<sp/>(spinfo[2].is_data_line())<sp/>?<sp/>spinfo[2][1]<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>version<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SMINPUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=14;<sp/>++i)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;smval(i)<sp/>=<sp/>(sminputs[i].is_data_line())<sp/>?<sp/>to&lt;double&gt;(sminputs[i][1])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=15;<sp/>i&lt;=20;<sp/>++i)<sp/>sd_leshouches2-&gt;smval(i)<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zeroing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SUSY-HIT<sp/>and<sp/>HDecay<sp/>non-SLHA<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>susyhitin-&gt;amsin<sp/>=<sp/>to&lt;double&gt;(sminputs.at(23).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSBAR(1):<sp/>HDECAY<sp/>claims<sp/>it<sp/>wants<sp/>ms(1GeV)^MSbar,<sp/>but<sp/>we<sp/>don&apos;t<sp/>believe<sp/>it,<sp/>and<sp/>give<sp/>it<sp/>m_s(2GeV)^MSBar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>susyhitin-&gt;amcin<sp/>=<sp/>to&lt;double&gt;(sminputs.at(24).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MC:<sp/>HDECAY<sp/>claims<sp/>it<sp/>wants<sp/>the<sp/>c<sp/>pole<sp/>mass,<sp/>but<sp/>that<sp/>is<sp/>not<sp/>well<sp/>defined,<sp/>so<sp/>we<sp/>give<sp/>it<sp/>mc(mc)^MSBar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>susyhitin-&gt;ammuonin<sp/>=<sp/>sd_leshouches2-&gt;smval(13);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MMUON:<sp/>mmu(pole)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>susyhitin-&gt;alphin<sp/>=<sp/>sd_leshouches2-&gt;smval(1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ALPHA:<sp/>alpha_em^-1(M_Z)^MSbar<sp/>(scheme<sp/>and<sp/>scale<sp/>not<sp/>specified<sp/>in<sp/>SUSYHIT<sp/>or<sp/>HDECAY<sp/>documentation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>susyhitin-&gt;gamwin<sp/>=<sp/>W_width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GAMW:<sp/>W<sp/>width<sp/>(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>susyhitin-&gt;gamzin<sp/>=<sp/>Z_width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GAMZ:<sp/>Z<sp/>width<sp/>(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="MSSM__H_8hpp_1a21318c67be94f159cd3a21d7def0b1ca" kindref="member">lambda</ref><sp/>=<sp/>to&lt;double&gt;(vckm.at(1).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wolfenstein<sp/>lambda</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>to&lt;double&gt;(vckm.at(2).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wolfenstein<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rhobar<sp/>=<sp/>to&lt;double&gt;(vckm.at(3).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wolfenstein<sp/>rhobar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>etabar<sp/>=<sp/>to&lt;double&gt;(vckm.at(4).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wolfenstein<sp/>etabar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>susyhitin-&gt;vusin<sp/>=<sp/>Spectrum::Wolf2V_us(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar);<sp/></highlight><highlight class="comment">//<sp/>VUS:<sp/>|CKM<sp/>V_us|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>susyhitin-&gt;vcbin<sp/>=<sp/>Spectrum::Wolf2V_cb(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar);<sp/></highlight><highlight class="comment">//<sp/>VCB:<sp/>|CKM<sp/>V_cb|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>susyhitin-&gt;rvubin<sp/>=<sp/>std::abs(Spectrum::Wolf2V_ub(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar))<sp/>/<sp/>susyhitin-&gt;vcbin;<sp/></highlight><highlight class="comment">//<sp/>VUB/VCB:<sp/>Ratio<sp/>of<sp/>CKM<sp/>|V_UB|/|V_CB|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MODSEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;imod(1)<sp/>=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1,<sp/>x<sp/>=<sp/>SUSY<sp/>model<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;imod(2)<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>general<sp/>MSSM,<sp/>1<sp/>=<sp/>SUGRA<sp/>=&gt;<sp/>do<sp/>not<sp/>calculate<sp/>metastable<sp/>NLSP<sp/>decays<sp/>to<sp/>gravitinos.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sd_leshouches2-&gt;imod(2)<sp/>=<sp/>2;<sp/><sp/>//<sp/>2<sp/>=<sp/>GMSB<sp/>=&gt;<sp/>calculate<sp/>metastable<sp/>NLSP<sp/>decays<sp/>to<sp/>gravitinos.<sp/><sp/>Not<sp/>yet<sp/>implemented<sp/>in<sp/>GAMBIT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>checkfavvio-&gt;imodfav(1)<sp/>=<sp/>6;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6,<sp/>x<sp/>=<sp/><sp/>Flavour<sp/>violation<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>checkfavvio-&gt;imodfav(2)<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>no<sp/>FV,<sp/>1<sp/>=<sp/>q<sp/>FV,<sp/>2<sp/>=<sp/>l<sp/>FV,<sp/>3<sp/>=<sp/>both.<sp/><sp/>For<sp/>FV<sp/>decays,<sp/>must<sp/>be<sp/>set<sp/>non-zero<sp/>later<sp/>before<sp/>calling<sp/>sdecay()<sp/>again.<sp/><sp/>Not<sp/>yet<sp/>implemented<sp/>in<sp/>GAMBIT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSOFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=100;<sp/>++i)<sp/>sd_leshouches2-&gt;msoftval(i)<sp/>=<sp/>unlikely();<sp/></highlight><highlight class="comment">//<sp/>indicate<sp/>undefined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msoft.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(3)<sp/>=<sp/>to&lt;double&gt;(msoft.find_block_def()-&gt;at(3));</highlight><highlight class="comment">//<sp/>Q(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msoft_indices[20]<sp/>=<sp/>{1,<sp/>2,<sp/>3,<sp/>21,<sp/>22,<sp/>31,<sp/>32,<sp/>33,<sp/>34,<sp/>35,<sp/>36,<sp/>41,<sp/>42,<sp/>43,<sp/>44,<sp/>45,<sp/>46,<sp/>47,<sp/>48,<sp/>49};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>M_1,<sp/>M_2,<sp/>M_3,<sp/>M^2_Hd,<sp/>M^2_Hu,<sp/>M_eL,<sp/>M_muL,<sp/>M_tauL,<sp/>M_eR,<sp/>M_muR,<sp/>M_tauR,<sp/>M_q1L,<sp/>M_q2L,<sp/>M_q3L,<sp/>M_uR,<sp/>M_cR,<sp/>M_tR,<sp/>M_dR,<sp/>M_sR,<sp/>M_bR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>msoft_indices)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msoft[i].is_data_line())<sp/>sd_leshouches2-&gt;msoftval(i)<sp/>=<sp/>to&lt;double&gt;(msoft.at(i).at(1));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;msoft[&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;]<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;msoftval(i)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EXTPAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;extval(0)<sp/>=<sp/>sd_leshouches2-&gt;qvalue(3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EWSB<sp/>scale<sp/>(set<sp/>to<sp/>SUSY<sp/>scale<sp/>as<sp/>per<sp/>MSOFT).<sp/><sp/>Not<sp/>used<sp/>by<sp/>SUSY-HIT<sp/>anymore.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;extval<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;extval(0)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=35;<sp/>++i)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;massval(i)<sp/>=<sp/>(mass[pdg_codes[i-1]].is_data_line())<sp/>?<sp/>to&lt;double&gt;(mass[pdg_codes[i-1]][1])<sp/>:<sp/>unlikely();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;massval(&quot;<sp/>&lt;&lt;<sp/>pdg_codes[i-1]<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;massval(i)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=36;<sp/>i&lt;=50;<sp/>++i)<sp/>sd_leshouches2-&gt;massval(i)<sp/>=<sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>zeroing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=4;<sp/>++i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=4;<sp/>++j)<sp/>sd_leshouches2-&gt;nmixval(i,j)<sp/>=<sp/>(nmix[initVector&lt;int&gt;(i,j)].is_data_line())<sp/>?<sp/>to&lt;double&gt;(nmix.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>i=1;<sp/>i&lt;=4;<sp/>++i)<sp/>for<sp/>(int<sp/>j=1;<sp/>j&lt;=4;<sp/>++j)<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;nmixval(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;nmixval(i,j)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VMIX,<sp/>UMIX,<sp/>STOPMIX,<sp/>SBOTMIX,<sp/>STAUMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=2;<sp/>++i)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=2;<sp/>++j)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>ij<sp/>=<sp/>initVector&lt;int&gt;(i,j);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;vmixval(i,j)<sp/>=<sp/>(vmix[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(vmix.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;umixval(i,j)<sp/>=<sp/>(umix[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(umix.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;stopmixval(i,j)<sp/>=<sp/>(stopmix[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(stopmix.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;sbotmixval(i,j)<sp/>=<sp/>(sbotmix[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(sbotmix.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;staumixval(i,j)<sp/>=<sp/>(staumix[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(staumix.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;vmixval(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;vmixval(i,j)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;umixval(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;umixval(i,j)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;stopmixval(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;stopmixval(i,j)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;sbotmixval(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;sbotmixval(i,j)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;staumixval(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;staumixval(i,j)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ALPHA<sp/>(value<sp/>is<sp/>spectrum<sp/>generator&apos;s<sp/>&quot;best<sp/>choice&quot;<sp/>=&gt;<sp/>can<sp/>be<sp/>on-shell,<sp/>DRbar<sp/>at<sp/>a<sp/>given<sp/>scale,<sp/>whatever)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;alphaval<sp/>=<sp/>to&lt;double&gt;(alpha.back().at(0));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mixing<sp/>angle<sp/>in<sp/>the<sp/>neutral<sp/>Higgs<sp/>boson<sp/>sector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;alphaval<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;alphaval<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmix.find_block_def()-&gt;size()<sp/><sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(1)<sp/>=<sp/>to&lt;double&gt;(hmix.find_block_def()-&gt;at(3));<sp/></highlight><highlight class="comment">//<sp/>Q(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=10;<sp/>++i)<sp/>sd_leshouches2-&gt;hmixval(i)<sp/>=<sp/>(hmix[i].is_data_line())<sp/>?<sp/>to&lt;double&gt;(hmix[i][1])<sp/>:<sp/>unlikely();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>i=1;<sp/>i&lt;=10;<sp/>++i)<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;hmixval(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;hmixval(i)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GAUGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gauge.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(2)<sp/>=<sp/>to&lt;double&gt;(gauge.find_block_def()-&gt;at(3));</highlight><highlight class="comment">//<sp/>Q(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;gaugeval(1)<sp/>=<sp/>to&lt;double&gt;(gauge.at(1).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gprime(Q)<sp/>DRbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;gaugeval(2)<sp/>=<sp/>to&lt;double&gt;(gauge.at(2).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>g(Q)<sp/>DRbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;gaugeval(3)<sp/>=<sp/>to&lt;double&gt;(gauge.at(3).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>g_3(Q)<sp/>DRbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for(int<sp/>i=1;i&lt;=3;i++)<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;gaugeval(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>sd_leshouches2-&gt;gaugeval(i)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AU,<sp/>AD,<sp/>AE,<sp/>YU,<sp/>YD,<sp/>YE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(au.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(4)<sp/><sp/>=<sp/>to&lt;double&gt;(au.find_block_def()-&gt;at(3));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Q(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ad.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(5)<sp/><sp/>=<sp/>to&lt;double&gt;(ad.find_block_def()-&gt;at(3));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Q(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ae.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(6)<sp/><sp/>=<sp/>to&lt;double&gt;(ae.find_block_def()-&gt;at(3));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Q(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yu.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(7)<sp/><sp/>=<sp/>to&lt;double&gt;(yu.find_block_def()-&gt;at(3));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Q(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yd.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(8)<sp/><sp/>=<sp/>to&lt;double&gt;(yd.find_block_def()-&gt;at(3));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Q(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ye.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(9)<sp/><sp/>=<sp/>to&lt;double&gt;(ye.find_block_def()-&gt;at(3));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Q(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=3;<sp/>++i)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=3;<sp/>++j)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>ij<sp/>=<sp/>initVector&lt;int&gt;(i,j);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;auval(i,j)<sp/>=<sp/>(au[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(au.at(i,j)[2])<sp/>:<sp/>unlikely();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;adval(i,j)<sp/>=<sp/>(ad[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(ad.at(i,j)[2])<sp/>:<sp/>unlikely();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;aeval(i,j)<sp/>=<sp/>(ae[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(ae.at(i,j)[2])<sp/>:<sp/>unlikely();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;yuval(i,j)<sp/>=<sp/>(yu[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(yu.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;ydval(i,j)<sp/>=<sp/>(yd[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(yd.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_leshouches2-&gt;yeval(i,j)<sp/>=<sp/>(ye[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(ye.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLHA2<sp/>blocks<sp/>zeroed<sp/>for<sp/>safety.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=6;<sp/>++i)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=6;<sp/>++j)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=3<sp/>and<sp/>j&lt;=3)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;msq2(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;msd2(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;msu2(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;td(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;tu(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;vckm(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;usqmix(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;dsqmix(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_selectron-&gt;selmix(i,j)<sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>SUSY-HIT<sp/>not<sp/>to<sp/>bother<sp/>calculating<sp/>the<sp/>b<sp/>pole<sp/>mass<sp/>from<sp/>mb(mb)_MSbar,<sp/>just<sp/>use<sp/>the<sp/>value<sp/>we<sp/>pass<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>sd_mbmb-&gt;i_sd_mbmb<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>calculation<sp/>without<sp/>flavour-violating<sp/>light<sp/>stop<sp/>decays.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>flavviolation-&gt;ifavvio<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>is<sp/>only<sp/>relevant<sp/>if<sp/>considering<sp/>FV<sp/>stop<sp/>decays<sp/>and<sp/>SLHA2<sp/>inputs.<sp/><sp/>Code<sp/>below<sp/>is<sp/>tested<sp/>in<sp/>as<sp/>much<sp/>as<sp/>it<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>right<sp/>common<sp/>blocks<sp/>with<sp/>the<sp/>right<sp/>stuff.<sp/><sp/>We<sp/>haven&apos;t<sp/>tested<sp/>what<sp/>sorts<sp/>of<sp/>results<sp/>you<sp/>can<sp/>get<sp/>out<sp/>of<sp/>it<sp/>though.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>order<sp/>to<sp/>turn<sp/>FV<sp/>on,<sp/>some<sp/>time<sp/>after<sp/>the<sp/>initial<sp/>call<sp/>to<sp/>sdecay()<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>function,<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>organise<sp/>a<sp/>method<sp/>to<sp/>read<sp/>in<sp/>the<sp/>SLHA2<sp/>version<sp/>of<sp/>the<sp/>spectrum<sp/>object,<sp/>then<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>flavviolation-&gt;ifavvio<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>checkfavvio-&gt;imodfav(1)<sp/>=<sp/>6;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>checkfavvio-&gt;imodfav(2)<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>call<sp/>sdecay()<sp/>again.<sp/><sp/>You<sp/>might<sp/>do<sp/>that<sp/>somehow<sp/>in<sp/>this<sp/>function,<sp/>or<sp/>in<sp/>a<sp/>module<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>may<sp/>be<sp/>a<sp/>smart<sp/>way<sp/>to<sp/>order<sp/>this<sp/>so<sp/>that<sp/>it<sp/>happens<sp/>automatically<sp/>if<sp/>and<sp/>when<sp/>you<sp/>want<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>before<sp/>spending<sp/>time<sp/>automating<sp/>this,<sp/>it<sp/>still<sp/>needs<sp/>to<sp/>be<sp/>tested<sp/>that<sp/>running<sp/>first<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flavour<sp/>violation<sp/>and<sp/>then<sp/>re-running<sp/>with<sp/>flavour<sp/>violation<sp/>actually<sp/>works,<sp/>i.e.<sp/>it<sp/>does<sp/>not<sp/>break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>non-FV<sp/>results.<sp/><sp/>The<sp/>SUSY-HIT<sp/>authors<sp/>say<sp/>they<sp/>think<sp/>it<sp/>should<sp/>be<sp/>OK,<sp/>but<sp/>they<sp/>have<sp/>never<sp/>done<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="272"><highlight class="comment"></highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>MSQ2,<sp/>MSD2,<sp/>MSU2,<sp/>TD,<sp/>TU</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(msq2.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(17)<sp/>=<sp/>to&lt;double&gt;(msq2.find_block_def()-&gt;at(3));<sp/>//<sp/>Q(GeV)<sp/>corrects<sp/>minor<sp/>bug<sp/>in<sp/>SUSY-HIT<sp/>SLHA<sp/>reader</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(msd2.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(10)<sp/>=<sp/>to&lt;double&gt;(msd2.find_block_def()-&gt;at(3));<sp/>//<sp/>Q(GeV)</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(msu2.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(11)<sp/>=<sp/>to&lt;double&gt;(msu2.find_block_def()-&gt;at(3));<sp/>//<sp/>Q(GeV)</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(td.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(12)<sp/>=<sp/>to&lt;double&gt;(td.find_block_def()-&gt;at(3));<sp/><sp/><sp/><sp/><sp/>//<sp/>Q(GeV)</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(tu.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(13)<sp/>=<sp/>to&lt;double&gt;(tu.find_block_def()-&gt;at(3));<sp/><sp/><sp/><sp/><sp/>//<sp/>Q(GeV)</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i=1;<sp/>i&lt;=3;<sp/>++i)</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j=1;<sp/>j&lt;=3;<sp/>++j)</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>ij<sp/>=<sp/>initVector&lt;int&gt;(i,j);</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;msq2(i,j)<sp/>=<sp/>(msq2[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(msq2.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;msd2(i,j)<sp/>=<sp/>(msd2[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(msd2.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;msu2(i,j)<sp/>=<sp/>(msu2[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(msu2.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;td(i,j)<sp/>=<sp/>(td[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(td.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;tu(i,j)<sp/>=<sp/>(tu[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(tu.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="comment"></highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/>//VCKM</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(vckm.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(21)<sp/>=<sp/>to&lt;double&gt;(vckm.find_block_def()-&gt;at(3));<sp/>//<sp/>Q(GeV)</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/>flavviolation-&gt;vckm(1,1)<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spectrum::Wolf2V_ud(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar);</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/>flavviolation-&gt;vckm(1,2)<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spectrum::Wolf2V_us(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar);</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/>flavviolation-&gt;vckm(1,3)<sp/>=<sp/>std::abs(Spectrum::Wolf2V_ud(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar));</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/>flavviolation-&gt;vckm(2,1)<sp/>=<sp/>std::abs(Spectrum::Wolf2V_cb(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar));</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/>flavviolation-&gt;vckm(2,2)<sp/>=<sp/>std::abs(Spectrum::Wolf2V_cs(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar));</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/>flavviolation-&gt;vckm(2,3)<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spectrum::Wolf2V_cb(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar);</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/>flavviolation-&gt;vckm(3,1)<sp/>=<sp/>std::abs(Spectrum::Wolf2V_td(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar));</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/>flavviolation-&gt;vckm(3,2)<sp/>=<sp/>std::abs(Spectrum::Wolf2V_ts(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar));</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>flavviolation-&gt;vckm(3,3)<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spectrum::Wolf2V_tb(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar);</highlight></codeline>
<codeline lineno="303"><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>USQMIX,<sp/>DSQMIX,<sp/>SELMIX</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(usqmix.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(14)<sp/>=<sp/>to&lt;double&gt;(usqmix.find_block_def()-&gt;at(3));<sp/>//<sp/>Q(GeV)</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(dsqmix.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(15)<sp/>=<sp/>to&lt;double&gt;(dsqmix.find_block_def()-&gt;at(3));<sp/>//<sp/>Q(GeV)<sp/>corrects<sp/>minor<sp/>bug<sp/>in<sp/>SUSY-HIT<sp/>SLHA<sp/>reader.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(selmix.find_block_def()-&gt;size()<sp/>&gt;=<sp/>4)<sp/>sd_leshouches2-&gt;qvalue(16)<sp/>=<sp/>to&lt;double&gt;(selmix.find_block_def()-&gt;at(3));<sp/>//<sp/>Q(GeV)<sp/>corrects<sp/>minor<sp/>bug<sp/>in<sp/>SUSY-HIT<sp/>SLHA<sp/>reader.</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i=1;<sp/>i&lt;=6;<sp/>++i)</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j=1;<sp/>j&lt;=6;<sp/>++j)</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>ij<sp/>=<sp/>initVector&lt;int&gt;(i,j);</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;usqmix(i,j)<sp/>=<sp/>(usqmix[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(usqmix.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavviolation-&gt;dsqmix(i,j)<sp/>=<sp/>(dsqmix[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(dsqmix.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_selectron-&gt;selmix(i,j)<sp/><sp/>=<sp/>(selmix[ij].is_data_line())<sp/>?<sp/>to&lt;double&gt;(selmix.at(i,j)[2])<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>equivalent<sp/>SLHA<sp/>common<sp/>blocks<sp/>for<sp/>HDecay.<sp/><sp/>Only<sp/>differences<sp/>are<sp/>dimension<sp/>of<sp/>qvalues<sp/>and<sp/>zero<sp/>vs<sp/>unlikely<sp/>for<sp/>au,<sp/>ad<sp/>&amp;<sp/>ae.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>*slha_leshouches1_hdec<sp/>=<sp/>*sd_leshouches1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLHA1<sp/>block<sp/>is<sp/>identical<sp/>in<sp/>SDECAY<sp/>and<sp/>HDECAY.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;imod<sp/>=<sp/>sd_leshouches2-&gt;imod;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>model;<sp/>1,<sp/>1<sp/>=<sp/>SUGRA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;smval<sp/>=<sp/>sd_leshouches2-&gt;smval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SMINPUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;extval<sp/>=<sp/>sd_leshouches2-&gt;extval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EXTPAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;massval<sp/>=<sp/>sd_leshouches2-&gt;massval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;nmixval<sp/>=<sp/>sd_leshouches2-&gt;nmixval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;vmixval<sp/>=<sp/>sd_leshouches2-&gt;vmixval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;umixval<sp/>=<sp/>sd_leshouches2-&gt;umixval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;stopmixval<sp/>=<sp/>sd_leshouches2-&gt;stopmixval;<sp/></highlight><highlight class="comment">//<sp/>STOPMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;sbotmixval<sp/>=<sp/>sd_leshouches2-&gt;sbotmixval;<sp/></highlight><highlight class="comment">//<sp/>SBOTMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;staumixval<sp/>=<sp/>sd_leshouches2-&gt;staumixval;<sp/></highlight><highlight class="comment">//<sp/>STAUMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;alphaval<sp/>=<sp/>sd_leshouches2-&gt;alphaval;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;hmixval<sp/>=<sp/>sd_leshouches2-&gt;hmixval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;gaugeval<sp/>=<sp/>sd_leshouches2-&gt;gaugeval;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GAUGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;msoftval<sp/>=<sp/>sd_leshouches2-&gt;msoftval;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSOFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;yuval<sp/>=<sp/>sd_leshouches2-&gt;yuval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>YU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;ydval<sp/>=<sp/>sd_leshouches2-&gt;ydval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>YD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;yeval<sp/>=<sp/>sd_leshouches2-&gt;yeval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>YE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=3;<sp/>++i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=3;<sp/>++j)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sd_leshouches2-&gt;auval(i,j)<sp/>==<sp/>unlikely())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;auval(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;auval(i,j)<sp/>=<sp/>sd_leshouches2-&gt;auval(i,j);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sd_leshouches2-&gt;adval(i,j)<sp/>==<sp/>unlikely())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;adval(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;adval(i,j)<sp/>=<sp/>sd_leshouches2-&gt;adval(i,j);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sd_leshouches2-&gt;aeval(i,j)<sp/>==<sp/>unlikely())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;aeval(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha_leshouches2_hdec-&gt;aeval(i,j)<sp/>=<sp/>sd_leshouches2-&gt;aeval(i,j);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=20;<sp/>++i)<sp/>slha_leshouches2_hdec-&gt;qvalue(i)<sp/>=<sp/>sd_leshouches2-&gt;qvalue(i);<sp/></highlight><highlight class="comment">//<sp/>Q(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>SUSY-HIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>sdecay();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialisation<sp/>function<sp/>(definition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><ref refid="common__macros_8hpp_1a825694403adda6ccd191cb93020fbe23" kindref="member">BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>SLHAstruct<sp/>slha;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>user<sp/>provides<sp/>a<sp/>file<sp/>list,<sp/>just<sp/>read<sp/>in<sp/>SLHA<sp/>files<sp/>for<sp/>debugging<sp/>and<sp/>ignore<sp/>the<sp/>MSSM_spectrum<sp/>dependency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runOptions-&gt;hasKey(</highlight><highlight class="stringliteral">&quot;debug_SLHA_filenames&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;str&gt;<sp/>filenames<sp/>=<sp/>runOptions-&gt;getValue&lt;std::vector&lt;str&gt;<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;debug_SLHA_filenames&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>SLHA<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filenames[counter]<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>ifs(filenames[counter]);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ifs.good())<sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;SLHA<sp/>file<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>ifs<sp/>&gt;&gt;<sp/>slha;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>ifs.close();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter<sp/>&gt;=<sp/>filenames.size())<sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>CKM<sp/>entries<sp/>are<sp/>missing<sp/>from<sp/>the<sp/>SLHA<sp/>file,<sp/>fill<sp/>them<sp/>in<sp/>with<sp/>defaults.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>SLHAea_add(slha,<sp/></highlight><highlight class="stringliteral">&quot;VCKMIN&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0.22537,<sp/></highlight><highlight class="stringliteral">&quot;lambda&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>SLHAea_add(slha,<sp/></highlight><highlight class="stringliteral">&quot;VCKMIN&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>0.814,<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>SLHAea_add(slha,<sp/></highlight><highlight class="stringliteral">&quot;VCKMIN&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0.117,<sp/></highlight><highlight class="stringliteral">&quot;rhobar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>SLHAea_add(slha,<sp/></highlight><highlight class="stringliteral">&quot;VCKMIN&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>0.353,<sp/></highlight><highlight class="stringliteral">&quot;etabar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>b<sp/>pole<sp/>mass<sp/>is<sp/>missing<sp/>from<sp/>the<sp/>SLHA<sp/>file,<sp/>fill<sp/>it<sp/>in<sp/>with<sp/>a<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>SLHAea_add(slha,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>5,<sp/>4.87878,<sp/></highlight><highlight class="stringliteral">&quot;mb<sp/>(pole)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>actual<sp/>spectrum<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>spectrum<sp/>object<sp/>is<sp/>at<sp/>the<sp/>SUSY<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>Dep::MSSM_spectrum-&gt;get_HE().GetScale();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>susy_scale<sp/>=<sp/>Dep::MSSM_spectrum-&gt;get(Par::mass1,<sp/></highlight><highlight class="stringliteral">&quot;susy_scale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>some<sp/>reason<sp/>the<sp/>precision<sp/>on<sp/>these<sp/>is<sp/>different,<sp/>so<sp/>they<sp/>won&apos;t<sp/>be<sp/>exactly<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(scale<sp/>-<sp/>susy_scale)<sp/>&gt;<sp/>1e-10)<sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;MSSM_spectrum<sp/>dependency<sp/>is<sp/>not<sp/>at<sp/>the<sp/>SUSY<sp/>scale.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>SLHA1<sp/>object.<sp/>SUSY-HIT<sp/>is<sp/>not<sp/>SLHA2-compliant,<sp/>despite<sp/>its<sp/>ability<sp/>to<sp/>deal<sp/>with<sp/>FV<sp/>stop<sp/>decays.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>slha<sp/>=<sp/>Dep::MSSM_spectrum-&gt;getSLHAea(1);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>tolerances<sp/>for<sp/>off-diagonal<sp/>sfermion<sp/>mixing.<sp/><sp/>It&apos;s<sp/>a<sp/>bit<sp/>inefficient<sp/>to<sp/>redo<sp/>this<sp/>here,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>that<sp/>these<sp/>conversions<sp/>have<sp/>been<sp/>done<sp/>already<sp/>in<sp/>getSLHAea,<sp/>but<sp/>it&apos;s<sp/>neater<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>providing<sp/>a<sp/>generic<sp/>means<sp/>to<sp/>pass<sp/>the<sp/>different<sp/>tolerances<sp/>through<sp/>the<sp/>spectrum<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpterror<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpterror<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>str<sp/>SLHA1_states[18]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;~e_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~e_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~mu_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~mu_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~u_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~u_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~d_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~d_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~c_L&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;~c_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~s_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~s_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~t_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~t_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~b_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~b_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~tau_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~tau_2&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>12;<sp/>i++)<sp/>slhahelp::mass_es_from_gauge_es(SLHA1_states[i],<sp/>Dep::MSSM_spectrum-&gt;get_HE(),<sp/>gtol,<sp/>LOCAL_INFO,<sp/>gpterror);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>12;<sp/>i<sp/>&lt;<sp/>18;<sp/>i++)<sp/>slhahelp::mass_es_closest_to_family(SLHA1_states[i],<sp/>Dep::MSSM_spectrum-&gt;get_HE(),<sp/>ftol,<sp/>LOCAL_INFO,<sp/>fpterror);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>W<sp/>and<sp/>Z<sp/>widths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>W_width<sp/>=<sp/>0.5*(Dep::W_plus_decay_rates-&gt;width_in_GeV<sp/>+<sp/>Dep::W_minus_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Z_width<sp/>=<sp/>Dep::Z_decay_rates-&gt;width_in_GeV;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>decay<sp/>rates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>run_susy_hit(slha,<sp/>W_width,<sp/>Z_width);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><ref refid="common__macros_8hpp_1a12da9763bf3b37787fa5ae54cf36c779" kindref="member">END_BE_INI_FUNCTION</ref></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/SUSY-HIT_1_5.cpp"/>
  </compounddef>
</doxygen>
