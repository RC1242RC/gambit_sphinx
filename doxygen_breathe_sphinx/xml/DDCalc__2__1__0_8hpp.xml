<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="DDCalc__2__1__0_8hpp" kind="file" language="C++">
    <compoundname>DDCalc_2_1_0.hpp</compoundname>
    <includes refid="include_2gambit_2Backends_2backend__undefs_8hpp" local="yes">gambit/Backends/backend_undefs.hpp</includes>
    <includedby refid="DDCalc__2__1__0_8cpp" local="yes">DDCalc_2_1_0.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>DDCalc_2_1_0.hpp</label>
        <link refid="DDCalc__2__1__0_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>DDCalc_2_1_0.hpp</label>
        <link refid="DDCalc__2__1__0_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>DDCalc_2_1_0.cpp</label>
        <link refid="DDCalc__2__1__0_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="DDCalc__2__1__0_8hpp_1a7f7848301604c58c8962207acd75ff6e" prot="public" static="no">
        <name>BACKENDNAME</name>
        <initializer>DDCalc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp" line="39" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DDCalc__2__1__0_8hpp_1a339bf682af9659de270251e5d18011be" prot="public" static="no">
        <name>BACKENDLANG</name>
        <initializer>Fortran</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp" line="40" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DDCalc__2__1__0_8hpp_1a1c6d5de492ac61ad29aec7aa9a436bbf" prot="public" static="no">
        <name>VERSION</name>
        <initializer>2.1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp" line="41" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DDCalc__2__1__0_8hpp_1a8d5a383ba38225163529bfcb55b74444" prot="public" static="no">
        <name>SAFE_VERSION</name>
        <initializer>2_1_0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp" line="42" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DDCalc__2__1__0_8hpp_1a62a0f8a0b822f31ff84bc8252b33e7c8" prot="public" static="no">
        <name>REFERENCE</name>
        <initializer>GAMBIT:2017fax,GAMBIT:2018eea</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp" line="43" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Frontend header for the DDCalc backend.</para>
<para>Compile-time registration of available functions and variables from this backend.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Lars A. Dal (<ulink url="mailto:l.a.dal@fys.uio.no">l.a.dal@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2014 Jul</para>
</simplesect>
<simplesect kind="author"><para>Christopher Savage (<ulink url="mailto:chris@savage.name">chris@savage.name</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2014 Sept </para>
</simplesect>
<simplesect kind="date"><para>2015 Jan,Feb,June</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Apr</para>
</simplesect>
<simplesect kind="author"><para>Sebastian Wild (<ulink url="mailto:sebastian.wild@ph.tum.de">sebastian.wild@ph.tum.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Aug</para>
</simplesect>
<simplesect kind="author"><para>Felix Kahlhoefer (<ulink url="mailto:felix.kahlhoefer@desy.de">felix.kahlhoefer@desy.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Aug </para>
</simplesect>
<simplesect kind="date"><para>2020 May</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Identify<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDNAME<sp/>DDCalc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDLANG<sp/>Fortran</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION<sp/>2.1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAFE_VERSION<sp/>2_1_0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFERENCE<sp/>GAMBIT:2017fax,GAMBIT:2018eea</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="backend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BACKEND<sp/>FUNCTIONS<sp/>=======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Import<sp/>functions.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>BE_FUNCTION<sp/>arguments:</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Function<sp/>name<sp/>used<sp/>within<sp/>GAMBIT.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Function<sp/>return<sp/>type<sp/>(void<sp/>for<sp/>fortran<sp/>subroutines).</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Argument<sp/>type<sp/>list<sp/>(pointers<sp/>for<sp/>fortran<sp/>routines).</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Symbol<sp/>name<sp/>in<sp/>compiled<sp/>object<sp/>file<sp/>(see<sp/>below).</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Capability<sp/>name.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/>Naming<sp/>conventions<sp/>for<sp/>the<sp/>object/library<sp/>symbols<sp/>of<sp/>Fortran<sp/>module</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/>routines<sp/>are<sp/>typically:</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>__&lt;modulename&gt;_MOD_&lt;routinename&gt;<sp/><sp/>[gfortran]</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;modulename&gt;_mp_&lt;routinename&gt;_<sp/><sp/><sp/><sp/>[ifort]</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/>where<sp/>the<sp/>module<sp/>and<sp/>routine<sp/>names<sp/>are<sp/>in<sp/>lower<sp/>case.<sp/><sp/>To<sp/>avoid</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/>compiler-dependendent<sp/>symbol<sp/>names,<sp/>BIND()<sp/>statements<sp/>are<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/>the<sp/>Fortran<sp/>source<sp/>code<sp/>to<sp/>explicitly<sp/>specify<sp/>the<sp/>symbol<sp/>names.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/>[n.b.:<sp/>For<sp/>non-module<sp/>routines,<sp/>&apos;&lt;routinename&gt;_&apos;<sp/>(again<sp/>in<sp/>lower</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/>case)<sp/>is<sp/>the<sp/>convention<sp/>for<sp/>both<sp/>compilers.]<sp/><sp/>We<sp/>take<sp/>as<sp/>our<sp/>naming</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/>convention<sp/>for<sp/>the<sp/>externally-accessible<sp/>DDCalc<sp/>routines:</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>C_DDCalc_&lt;modulename(kinda)&gt;_routinename&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/>The<sp/>&apos;C&apos;<sp/>is<sp/>to<sp/>signify<sp/>routines<sp/>intended<sp/>for<sp/>calling<sp/>from<sp/>C/C++</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/>(argument<sp/>and<sp/>return<sp/>types<sp/>are<sp/>expressly<sp/>declared<sp/>to<sp/>be<sp/>type-</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/>compatible<sp/>with<sp/>the<sp/>C<sp/>bool,<sp/>int,<sp/>and<sp/>double<sp/>types).</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>initialisation<sp/>of<sp/>three<sp/>main<sp/>classes<sp/>via<sp/>factory<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">BE_FUNCTION(DDCalc_InitWIMP,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C_DDWIMP_ddcalc_initwimp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;InitWIMP&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">BE_FUNCTION(DDCalc_InitHalo,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;C_DDHalo_ddcalc_inithalo&quot;,<sp/>&quot;InitHalo&quot;)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">BE_FUNCTION(DDCalc_InitDetector,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDExperiments_ddcalc_initdetector&quot;,<sp/>&quot;InitDetector&quot;)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialization<sp/>(specific<sp/>experimental<sp/>factory<sp/>functions).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">BE_FUNCTION(XENON100_2012_Init,<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_xenon100_2012_init&quot;,<sp/><sp/>&quot;XENON100_2012_Init&quot;)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">BE_FUNCTION(XENON1T_2017_Init,<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_xenon1t_2017_init&quot;,<sp/><sp/><sp/>&quot;XENON1T_2017_Init&quot;)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">BE_FUNCTION(XENON1T_2018_Init,<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_xenon1t_2018_init&quot;,<sp/><sp/><sp/>&quot;XENON1T_2018_Init&quot;)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">BE_FUNCTION(LUX_2013_Init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_lux_2013_init&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LUX_2013_Init&quot;)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">BE_FUNCTION(LUX_2016_Init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_lux_2016_init&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LUX_2016_Init&quot;)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">BE_FUNCTION(PandaX_2016_Init,<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_pandax_2016_init&quot;,<sp/><sp/><sp/><sp/>&quot;PandaX_2016_Init&quot;)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">BE_FUNCTION(PandaX_2017_Init,<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_pandax_2017_init&quot;,<sp/><sp/><sp/><sp/>&quot;PandaX_2017_Init&quot;)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">BE_FUNCTION(LUX_2015_Init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_lux_2015_init&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LUX_2015_Init&quot;)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">BE_FUNCTION(PICO_2L_Init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_pico_2l_init&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PICO_2L_Init&quot;)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">BE_FUNCTION(PICO_60_Init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_pico_60_init&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PICO_60_Init&quot;)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">BE_FUNCTION(PICO_60_2017_Init,<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_pico_60_2017_init&quot;,<sp/><sp/><sp/>&quot;PICO_60_2017_Init&quot;)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">BE_FUNCTION(SuperCDMS_2014_Init,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_supercdms_2014_init&quot;,<sp/>&quot;SuperCDMS_2014_Init&quot;)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">BE_FUNCTION(CDMSlite_Init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_cdmslite_init&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;CDMSlite_Init&quot;)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">BE_FUNCTION(SIMPLE_2014_Init,<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_simple_2014_init&quot;,<sp/><sp/><sp/><sp/>&quot;SIMPLE_2014_Init&quot;)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">BE_FUNCTION(CRESST_II_Init,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_cresst_ii_init&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>&quot;CRESST_II_Init&quot;)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">BE_FUNCTION(LZ_Init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_lz_init&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LZ_Init&quot;)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">BE_FUNCTION(PICO_500_Init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_pico_500_init&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PICO_500_Init&quot;)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">BE_FUNCTION(DarkSide_50_Init,<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_darkside_50_init&quot;,<sp/><sp/><sp/><sp/>&quot;DarkSide_50_Init&quot;)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">BE_FUNCTION(DARWIN_Init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDCalc_darwin_init&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;DARWIN_Init&quot;)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//BE_FUNCTION(DARWIN_Ar_Init,<sp/><sp/><sp/><sp/><sp/><sp/>int,<sp/>(),<sp/>&quot;C_DDCalc_darwin_ar_init&quot;,<sp/>&quot;DARWIN_Ar_Init&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//BE_FUNCTION(DARWIN_Xe_Init,<sp/><sp/><sp/><sp/><sp/><sp/>int,<sp/>(),<sp/>&quot;C_DDCalc_darwin_xe_init&quot;,<sp/>&quot;DARWIN_Xe_Init&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>halo<sp/>parameters<sp/>(Standard<sp/>Halo<sp/>Model):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>rho<sp/>[GeV/cm^3],<sp/>vrot<sp/>[km/s],<sp/>v0<sp/>[km/s],<sp/>vesc<sp/>[km/s]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>need<sp/>only<sp/>be<sp/>called<sp/>once<sp/>at<sp/>the<sp/>beginning<sp/>if<sp/>the<sp/>halo<sp/>parameters<sp/>will<sp/>not<sp/>be<sp/>modified<sp/>during<sp/>a<sp/>scan.<sp/><sp/>Default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>values<sp/>are<sp/>already<sp/>set<sp/>via<sp/>DDCalc_InitHalo<sp/>routine,<sp/>so<sp/>it<sp/>need<sp/>not<sp/>be<sp/>called<sp/>at<sp/>all<sp/>if<sp/>the<sp/>default<sp/>values<sp/>are<sp/>to<sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">BE_FUNCTION(DDCalc_SetSHM,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_setshm&quot;,<sp/>&quot;SetSHM&quot;)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>WIMP<sp/>mass<sp/>and<sp/>couplings/cross-sections<sp/>for<sp/>standard<sp/>SI/SD<sp/>scattering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>three<sp/>versions,<sp/>depending<sp/>on<sp/>how<sp/>the<sp/>couplings<sp/>are<sp/>specified:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>mfa:<sp/><sp/><sp/><sp/>mass,<sp/>fp,<sp/>fn,<sp/>ap,<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>mG:<sp/><sp/><sp/><sp/><sp/>mass,<sp/>Gp_SI,<sp/>Gn_SI,<sp/>Gp_SD,<sp/>Gn_SD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>msigma:<sp/>mass,<sp/>sigmapSI,<sp/>sigmanSI,<sp/>sigmapSD,<sp/>sigmanSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Units:<sp/>mass<sp/>[GeV];<sp/>f,<sp/>G<sp/>[GeV^-2];<sp/>a<sp/>[unitless];<sp/>sigma<sp/>[pb]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Here,<sp/>f<sp/>&amp;<sp/>a<sp/>are<sp/>the<sp/>typical<sp/>WIMP-nucleon<sp/>couplings<sp/>for<sp/>spin-independent<sp/>(SI)<sp/>and<sp/>spin-dependent<sp/>(SD)<sp/>interactions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>G&apos;s<sp/>are<sp/>the<sp/>effective<sp/>4<sp/>fermion<sp/>vertex<sp/>couplings,<sp/>related<sp/>to<sp/>f<sp/>&amp;<sp/>a<sp/>by<sp/>a<sp/>normalization<sp/>factor.<sp/><sp/>The<sp/>sigmas<sp/>are<sp/>WIMP-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nucleon<sp/>scattering<sp/>cross-sections;<sp/>a<sp/>negative<sp/>value<sp/>can<sp/>be<sp/>used<sp/>to<sp/>indicated<sp/>the<sp/>corresponding<sp/>coupling<sp/>should<sp/>be<sp/>taken</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>negative.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">BE_FUNCTION(DDCalc_SetWIMP_mfa,<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_setwimp_mfa&quot;,<sp/><sp/><sp/><sp/>&quot;SetWIMP_mfa&quot;)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">BE_FUNCTION(DDCalc_SetWIMP_mG,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_setwimp_mg&quot;,<sp/><sp/><sp/><sp/><sp/>&quot;SetWIMP_mG&quot;)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">BE_FUNCTION(DDCalc_SetWIMP_msigma,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_setwimp_msigma&quot;,<sp/>&quot;SetWIMP_msigma&quot;)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>WIMP<sp/>mass<sp/>and<sp/>couplings/cross-sections.<sp/>Same<sp/>signature<sp/>and<sp/>units<sp/>as<sp/>above<sp/>for<sp/>setters.<sp/><sp/>The<sp/>only<sp/>difference<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>WIMP-nucleon<sp/>cross-sections<sp/>are<sp/>always<sp/>positive<sp/>(physical)<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">BE_FUNCTION(DDCalc_GetWIMP_mfa,<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_getwimp_mfa&quot;,<sp/><sp/><sp/><sp/>&quot;GetWIMP_mfa&quot;)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">BE_FUNCTION(DDCalc_GetWIMP_mG,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_getwimp_mg&quot;,<sp/><sp/><sp/><sp/><sp/>&quot;GetWIMP_mG&quot;)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">BE_FUNCTION(DDCalc_GetWIMP_msigma,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_getwimp_msigma&quot;,<sp/>&quot;GetWIMP_msigma&quot;)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>WIMP<sp/>mass,<sp/>spin,<sp/>and<sp/>coupling<sp/>structure<sp/>within<sp/>the<sp/>general<sp/>non-relativistic<sp/>effective<sp/>theory<sp/>of<sp/>DM-nucleon<sp/>interactions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>SetWIMP_NREffectiveTheory<sp/>initializes<sp/>a<sp/>WIMP<sp/>within<sp/>the<sp/>non-relativistic<sp/>effective<sp/>theory<sp/>setup,<sp/>setting<sp/>all<sp/>coefficients<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Arguments<sp/>are<sp/>the<sp/>WIMP<sp/>index,<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>WIMP<sp/>in<sp/>GeV,<sp/>and<sp/>the<sp/>spin<sp/>of<sp/>the<sp/>WIMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>SetWIMP_NREFT_CPT<sp/>initializes<sp/>a<sp/>WIMP<sp/>within<sp/>the<sp/>non-relativistic<sp/>effective<sp/>theory<sp/>setup<sp/>with<sp/>corrections<sp/>from<sp/>CPT,<sp/>setting<sp/>all<sp/>coefficients<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Arguments<sp/>are<sp/>the<sp/>WIMP<sp/>index,<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>WIMP<sp/>in<sp/>GeV,<sp/>and<sp/>the<sp/>spin<sp/>of<sp/>the<sp/>WIMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>SetNRCoefficient<sp/>sets<sp/>the<sp/>coefficient<sp/>of<sp/>a<sp/>single<sp/>operator<sp/>to<sp/>a<sp/>given<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>This<sp/>function<sp/>can<sp/>be<sp/>called<sp/>for<sp/>WIMPs<sp/>initialised<sp/>via<sp/>either<sp/>SetWIMP_NREffectiveTheory<sp/>or<sp/>SetWIMP_NREFT_CPT,<sp/>keeping<sp/>in<sp/>mind<sp/>the<sp/>different<sp/>conventions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Arguments<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>(1)<sp/>the<sp/>WIMP<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>(2)<sp/>The<sp/>operator<sp/>index,<sp/>i.e.<sp/>an<sp/>integer<sp/>specifying<sp/>the<sp/>non-relativistic<sp/>operator,<sp/>e.g.<sp/>6<sp/>for<sp/>O_6,<sp/>using<sp/>the<sp/>following<sp/>numbering<sp/>scheme:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>For<sp/>WIMPs<sp/>initialised<sp/>via<sp/>SetWIMP_NREffectiveTheory:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>1,<sp/>3-15,<sp/>17<sp/>&amp;<sp/>18<sp/>correspond<sp/>to<sp/>the<sp/>standard<sp/>non-relativistic<sp/>operators<sp/>from<sp/>arXiv:1505.03117<sp/>(note<sp/>that<sp/>O_2<sp/>and<sp/>O_16<sp/>are<sp/>not<sp/>included)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>-1:<sp/>q^2<sp/>O_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>-4:<sp/>q^2<sp/>O_4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>For<sp/>WIMPs<sp/>initialisd<sp/>via<sp/>SetWIMP_NREFT_CPT:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>1-12<sp/>correspond<sp/>to<sp/>the<sp/>standard<sp/>non-relativistic<sp/>operators<sp/>from<sp/>arXiv:1203.3542<sp/>(see<sp/>also<sp/>arXiv:1708.02678,<sp/>note<sp/>that<sp/>the<sp/>operator<sp/>O_2<sp/>is<sp/>included)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>13:<sp/>1/(mpi^2<sp/>+<sp/>q^2)<sp/>O_6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>14:<sp/>1/(meta^2<sp/>+<sp/>q^2)<sp/>O_6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>15:<sp/>q^2/(mpi^2<sp/>+<sp/>q^2)<sp/>O_6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>16:<sp/>q^2/(meta^2<sp/>+<sp/>q^2)<sp/>O_6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>17:<sp/>1/(mpi^2<sp/>+<sp/>q^2)<sp/>O_10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>18:<sp/>1/(meta^2<sp/>+<sp/>q^2)<sp/>O_10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>19:<sp/>q^2/(mpi^2<sp/>+<sp/>q^2)<sp/>O_10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>20:<sp/>q^2/(meta^2<sp/>+<sp/>q^2)<sp/>O_10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>21:<sp/>1/q^2<sp/>O_5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>22:<sp/>1/q^2<sp/>O_6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>23:<sp/>1/q^2<sp/>O_11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>100:<sp/>q^2<sp/>O_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>i<sp/>=<sp/>104:<sp/>q^2<sp/>O_4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>(3)<sp/>An<sp/>isospin<sp/>index:<sp/>For<sp/>WIMPs<sp/>initialised<sp/>via<sp/>SetWIMP_NREffectiveTheory<sp/>0<sp/>stands<sp/>for<sp/>the<sp/>isoscalar<sp/>and<sp/>1<sp/>for<sp/>the<sp/>isovector<sp/>component<sp/>of<sp/>the<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>WIMPs<sp/>initialised<sp/>via<sp/>SetWIMP_NREFT_CPT<sp/>0<sp/>stands<sp/>for<sp/>the<sp/>proton<sp/>and<sp/>1<sp/>for<sp/>the<sp/>neutron<sp/>component<sp/>of<sp/>the<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>(4)<sp/>The<sp/>desired<sp/>value<sp/>of<sp/>the<sp/>operator<sp/>coefficient<sp/>in<sp/>units<sp/>GeV^-n,<sp/>where<sp/>n<sp/>=<sp/>2<sp/>for<sp/>the<sp/>standard<sp/>non-relativistic<sp/>operators<sp/>and<sp/>n<sp/>=<sp/>0,<sp/>2<sp/>or<sp/>4<sp/>for<sp/>operators<sp/>with<sp/>explicit<sp/>momentum<sp/>pre-factors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">BE_FUNCTION(DDCalc_SetWIMP_NREffectiveTheory,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_setwimp_nreffectivetheory&quot;,<sp/>&quot;SetWIMP_NREffectiveTheory&quot;)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">BE_FUNCTION(DDCalc_SetWIMP_NREFT_CPT,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_setwimp_nreft_cpt&quot;,<sp/>&quot;SetWIMP_NREFT_CPT&quot;)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">BE_FUNCTION(DDCalc_SetNRCoefficient,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_setnrcoefficient&quot;,<sp/>&quot;SetNRCoefficient&quot;)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>values<sp/>of<sp/>the<sp/>isoscalar<sp/>and<sp/>isovector<sp/>part<sp/>of<sp/>a<sp/>given<sp/>non-relativistic<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arguments<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>(1)<sp/>the<sp/>WIMP<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>(2)<sp/>the<sp/>operator<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>(3)<sp/>gives<sp/>the<sp/>value<sp/>of<sp/>the<sp/>isoscalar<sp/>(for<sp/>WIMP<sp/>type<sp/>&apos;NREffectiveTheory&apos;)<sp/>or<sp/>the<sp/>proton<sp/>(for<sp/>WIMP<sp/>type<sp/>&apos;NREFT_CPT&apos;)<sp/>component<sp/>of<sp/>the<sp/>operator,<sp/>in<sp/>units<sp/>GeV^-n<sp/>(see<sp/>above)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>(4)<sp/>gives<sp/>the<sp/>value<sp/>of<sp/>the<sp/>isovector<sp/>(for<sp/>WIMP<sp/>type<sp/>&apos;NREffectiveTheory&apos;)<sp/>or<sp/>the<sp/>neutron<sp/>(for<sp/>WIMP<sp/>type<sp/>&apos;NREFT_CPT&apos;)<sp/>component<sp/>of<sp/>the<sp/>operator,<sp/>in<sp/>units<sp/>GeV^-n<sp/>(see<sp/>above)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">BE_FUNCTION(DDCalc_GetNRCoefficient,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_getnrcoefficient&quot;,<sp/>&quot;GetNRCoefficient&quot;)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specify<sp/>the<sp/>minimum<sp/>recoil<sp/>energy<sp/>to<sp/>be<sp/>included<sp/>in<sp/>the<sp/>rate<sp/>calculations<sp/>[keV].<sp/><sp/>Note<sp/>the<sp/>efficiency<sp/>curves<sp/>already<sp/>account<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>detector<sp/>and<sp/>analysis<sp/>thresholds<sp/>regardless<sp/>of<sp/>this<sp/>setting,<sp/>so<sp/>setting<sp/>this<sp/>to<sp/>0<sp/>keV<sp/>(the<sp/>default<sp/>behavior<sp/>when<sp/>initialization<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>performed)<sp/>does<sp/>not<sp/>imply<sp/>that<sp/>very<sp/>low<sp/>energy<sp/>recoils<sp/>actually<sp/>contribute<sp/>to<sp/>the<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">BE_FUNCTION(DDCalc_SetDetectorEmin,<sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDCalc_ddcalc_setdetectoremin&quot;,<sp/><sp/>&quot;DD_SetDetectorEmin&quot;)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculation<sp/>function;<sp/>should<sp/>be<sp/>run<sp/>once<sp/>for<sp/>each<sp/>experiment<sp/>and<sp/>model<sp/>prior<sp/>to<sp/>using<sp/>event<sp/>and<sp/>likelihood<sp/>routines<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">BE_FUNCTION(DDCalc_CalcRates,<sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/>&quot;C_DDRates_ddcalc_calcrates&quot;,<sp/><sp/>&quot;DD_CalcRates&quot;)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Observed<sp/>and<sp/>expected<sp/>events,<sp/>likelihoods<sp/>and<sp/>p<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Events:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>observed<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Background:<sp/><sp/><sp/><sp/>average<sp/>background<sp/>expectation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Signal:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average<sp/>signal<sp/>expectation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>LogLikelihood:<sp/>log<sp/>of<sp/>the<sp/>likelihood<sp/>(not<sp/>-2lnL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>LogPValue:<sp/><sp/><sp/><sp/><sp/>log<sp/>of<sp/>the<sp/>p<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Factor<sp/>x<sp/>by<sp/>which<sp/>sigma<sp/>-&gt;<sp/>x*sigma<sp/>would<sp/>yield<sp/>given<sp/>p-value<sp/>(given<sp/>as<sp/>log(p))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">BE_FUNCTION(DDCalc_Events,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;C_DDRates_ddcalc_events&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;DD_Events&quot;)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">BE_FUNCTION(DDCalc_Background,<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;C_DDRates_ddcalc_background&quot;,<sp/><sp/><sp/><sp/>&quot;DD_Background&quot;)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">BE_FUNCTION(DDCalc_Signal,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;C_DDRates_ddcalc_signal&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;DD_Signal&quot;)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">BE_FUNCTION(DDCalc_Bins,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;C_DDRates_ddcalc_bins&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;DD_Bins&quot;)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">BE_FUNCTION(DDCalc_BinEvents,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/><sp/><sp/><sp/>&quot;C_DDRates_ddcalc_binevents&quot;,<sp/><sp/><sp/><sp/><sp/>&quot;DD_BinEvents&quot;)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">BE_FUNCTION(DDCalc_BinBackground,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/><sp/><sp/><sp/>&quot;C_DDRates_ddcalc_binbackground&quot;,<sp/>&quot;DD_BinBackground&quot;)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">BE_FUNCTION(DDCalc_BinSignal,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/><sp/><sp/><sp/>&quot;C_DDRates_ddcalc_binsignal&quot;,<sp/><sp/><sp/><sp/><sp/>&quot;DD_BinSignal&quot;)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">BE_FUNCTION(DDCalc_LogLikelihood,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;C_DDStats_ddcalc_loglikelihood&quot;,<sp/>&quot;DD_LogLikelihood&quot;)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>memory<sp/>cleanup<sp/>(nowhere<sp/>to<sp/>actually<sp/>use<sp/>these<sp/>in<sp/>GAMBIT<sp/>proper,<sp/>but<sp/>they<sp/>could<sp/>be<sp/>useful<sp/>in<sp/>standalones<sp/>that<sp/>hammer<sp/>DDCalc).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">BE_FUNCTION(DDCalc_FreeWIMPs,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDUtils_ddcalc_freewimps&quot;,<sp/><sp/><sp/><sp/><sp/>&quot;FreeWIMPs&quot;)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">BE_FUNCTION(DDCalc_FreeHalos,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDUtils_ddcalc_freehalos&quot;,<sp/><sp/><sp/><sp/><sp/>&quot;FreeHalos&quot;)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">BE_FUNCTION(DDCalc_FreeDetectors,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDUtils_ddcalc_freedetectors&quot;,<sp/>&quot;FreeDetectorss&quot;)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">BE_FUNCTION(DDCalc_FreeAll,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;C_DDUtils_ddcalc_freeall&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;FreeAll&quot;)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DM<sp/>mass,<sp/>spin<sp/>&amp;<sp/>conjugate<sp/>nature,<sp/>plus<sp/>couplings<sp/>and<sp/>fraction<sp/>of<sp/>cosmological<sp/>DM<sp/>that<sp/>is<sp/>accounted<sp/>for<sp/>by<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="backend__macros_8hpp_1aea3b23df19f8b65789823ed8730430db" kindref="member">BE_INI_DEPENDENCY</ref>(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><ref refid="backend__macros_8hpp_1aea3b23df19f8b65789823ed8730430db" kindref="member">BE_INI_DEPENDENCY</ref>(spinwimpx2,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="backend__macros_8hpp_1aea3b23df19f8b65789823ed8730430db" kindref="member">BE_INI_DEPENDENCY</ref>(wimp_sc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="backend__macros_8hpp_1aea3b23df19f8b65789823ed8730430db" kindref="member">BE_INI_DEPENDENCY</ref>(RD_fraction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><ref refid="backend__macros_8hpp_1aea3b23df19f8b65789823ed8730430db" kindref="member">BE_INI_DEPENDENCY</ref>(LocalHalo,<sp/>LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Direct<sp/>detection<sp/>couplings<sp/>---<sp/>see<sp/>backend_types/DDCalc.hpp<sp/>for<sp/>specifics.<sp/>Wraps<sp/>up<sp/>the<sp/>old<sp/>DM_nucleon_couplings<sp/>struct<sp/>with<sp/>the<sp/>new<sp/>Wilson<sp/>Coefficient<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="backend__macros_8hpp_1aea3b23df19f8b65789823ed8730430db" kindref="member">BE_INI_DEPENDENCY</ref>(DDCalc_Couplings,<sp/>DD_coupling_container)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>function<sp/>for<sp/>returning<sp/>detector<sp/>index<sp/>given<sp/>an<sp/>analysis<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">BE_CONV_FUNCTION(DDCalc_Experiment,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(const<sp/>str&amp;),<sp/>&quot;DD_Experiment&quot;)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>function<sp/>for<sp/>calling<sp/>CalcRates<sp/>with<sp/>internally-initialised<sp/>WIMP<sp/>and<sp/>halo<sp/>objects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">BE_CONV_FUNCTION(DDCalc_CalcRates_simple,<sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/>&quot;DD_CalcRates&quot;)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Undefine<sp/>macros<sp/>to<sp/>avoid<sp/>conflict<sp/>with<sp/>other<sp/>backends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Backends/backend_undefs.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/DDCalc_2_1_0.hpp"/>
  </compounddef>
</doxygen>
