<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="plc__3__0_8cpp" kind="file" language="C++">
    <compoundname>plc_3_0.cpp</compoundname>
    <includes refid="frontend__macros_8hpp" local="yes">gambit/Backends/frontend_macros.hpp</includes>
    <includes refid="plc__3__0_8hpp" local="yes">gambit/Backends/frontends/plc_3_0.hpp</includes>
    <includes local="yes">gambit/Utils/util_functions.hpp</includes>
    <incdepgraph>
      <node id="22">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Backends/common_macros.hpp</label>
        <link refid="common__macros_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>boost/preprocessor/seq/transform.hpp</label>
      </node>
      <node id="15">
        <label>gambit/Backends/mathematica_macros.hpp</label>
        <link refid="mathematica__macros_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="6">
        <label>gambit/Elements/types_rollcall.hpp</label>
      </node>
      <node id="31">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="13">
        <label>gambit/Backends/interoperability.hpp</label>
        <link refid="interoperability_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>gambit/Backends/python_macros.hpp</label>
        <link refid="python__macros_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="5">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
      </node>
      <node id="21">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>gambit/Utils/util_functions.hpp</label>
      </node>
      <node id="19">
        <label>gambit/Elements/ini_catch.hpp</label>
      </node>
      <node id="25">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="27">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>plc_3_0.cpp</label>
        <link refid="plc__3__0_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gambit/Backends/interoperability_macros.hpp</label>
        <link refid="interoperability__macros_8hpp"/>
      </node>
      <node id="2">
        <label>gambit/Backends/frontend_macros.hpp</label>
        <link refid="frontend__macros_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>gambit/Backends/frontends/plc_3_0.hpp</label>
        <link refid="plc__3__0_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>boost/preprocessor/control/iif.hpp</label>
      </node>
      <node id="16">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="33">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
      <node id="17">
        <label>gambit/Utils/util_macros.hpp</label>
      </node>
      <node id="24">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
      <node id="10">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="18">
        <label>gambit/Backends/mathematica_function.hpp</label>
        <link refid="mathematica__function_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/Elements/module_macros_inmodule.hpp</label>
      </node>
      <node id="30">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="26">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="29">
        <label>gambit/Backends/python_function.hpp</label>
        <link refid="python__function_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="plc__3__0_8cpp_1aeab5d44c426d953a35368f02a8ab0504" prot="public" static="no" mutable="no">
        <type></type>
        <definition>BE_NAMESPACE</definition>
        <argsstring></argsstring>
        <name>BE_NAMESPACE</name>
        <initializer>{
  
  
  static std::string plc2_location</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="26" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="plc__3__0_8cpp_1afe2ac4bcaf6f68141cb87f43cf5739e9" prot="public" static="yes" mutable="no">
        <type>std::string</type>
        <definition>std::string plc3_location</definition>
        <argsstring></argsstring>
        <name>plc3_location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="32" column="22" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="plc__3__0_8cpp_1a16892aec3e8a2bb2c719d048d0302fa3" prot="public" static="yes" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; clik_object &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;clik_object&gt; &gt; clik_map</definition>
        <argsstring></argsstring>
        <name>clik_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="34" column="19" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="plc__3__0_8cpp_1a41269ca42b2acd565316e3168cc03cf3" prot="public" static="yes" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; clik_lensing_object &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;clik_lensing_object&gt; &gt; clik_lensing_map</definition>
        <argsstring></argsstring>
        <name>clik_lensing_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="35" column="19" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="plc__3__0_8cpp_1a4341e6e221fba398503dd4f18f68a93a" prot="public" static="yes" mutable="no">
        <type>std::array&lt; int, 7 &gt;</type>
        <definition>std::array&lt;int,7&gt; lmax_array</definition>
        <argsstring></argsstring>
        <name>lmax_array</name>
        <initializer>{-1,-1,-1,-1,-1,-1,-1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="38" column="21" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="plc__3__0_8cpp_1a47ab4cb3e1fdabf7e2e25349fd267299" prot="public" static="no" mutable="no">
        <type><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></type>
        <definition>END_BE_NAMESPACE BE_INI_FUNCTION</definition>
        <argsstring></argsstring>
        <name>BE_INI_FUNCTION</name>
        <initializer>{
  
  static bool scan_level = true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="138" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="plc__3__0_8cpp_1a68273ba33309e083fcfbed86404cd952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plc_init</definition>
        <argsstring>(const str &amp;name, const str &amp;location, const int &amp;version, const bool &amp;lensing)</argsstring>
        <name>plc_init</name>
        <param>
          <type>const str &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const str &amp;</type>
          <declname>location</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>version</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>lensing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="41" column="8" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="41" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a1c94ff9e4d49166dffc680342695057a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike</definition>
        <argsstring>(double *cl_and_pars, const str &amp;name, const bool &amp;lensing)</argsstring>
        <name>plc_loglike</name>
        <param>
          <type>double *</type>
          <declname>cl_and_pars</declname>
        </param>
        <param>
          <type>const str &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>lensing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="70" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="70" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a73cf03e1653941302cc450f92e4813dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_highl_TTTEEE_2015</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_highl_TTTEEE_2015</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="104" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a2d0d4d798e5f3aff04de8e154c52414f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_highl_TT_2015</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_highl_TT_2015</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="105" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a74a2d3987560c7a74c83d5040caca881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_highl_TTTEEE_lite_2015</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_highl_TTTEEE_lite_2015</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="106" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1aaead55223376fa05c204ebe5734a1288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_highl_TT_lite_2015</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_highl_TT_lite_2015</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="107" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a093e1df2fd729058a9f0b413530a8805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_lowl_TEB_2015</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_lowl_TEB_2015</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="108" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a990d960969e1e3dea75859c9df6b1dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_lowl_TT_2015</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_lowl_TT_2015</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="109" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a8405badf296f30194e18c06960a080b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_lensing_2015</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_lensing_2015</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="110" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a81f362f3c608e086638f1b8a79e2a5b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_highl_TTTEEE_2018</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_highl_TTTEEE_2018</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="113" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a44d573b2a8b61fbc06b778a287fb6501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_highl_TT_2018</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_highl_TT_2018</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="114" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a841d38207bbbedf73432b5e1e0d0b1b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_highl_TTTEEE_lite_2018</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_highl_TTTEEE_lite_2018</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="115" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a17f8fce494bc51ef032d6a22b5a8f825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_highl_TT_lite_2018</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_highl_TT_lite_2018</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="116" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a04350a86ed64445b88efc66a81ec5903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_lowl_TT_2018</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_lowl_TT_2018</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="117" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a151dd94a5b17a3e1d5a64c6831b9dda7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_lowl_EE_2018</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_lowl_EE_2018</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="118" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a6d20fb08307d8c7c5e426ef24560f4ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_lensing_2018</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_lensing_2018</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="119" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1ac73c3991213ec588c11eb9dcf6f9591b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plc_loglike_lensing_marged_2018</definition>
        <argsstring>(double *x)</argsstring>
        <name>plc_loglike_lensing_marged_2018</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="120" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a64fd74bd0634f1735309ac96d7d3d5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plc_required_Cl</definition>
        <argsstring>(int &amp;lmax, bool &amp;needs_tCl, bool &amp;needs_pCl)</argsstring>
        <name>plc_required_Cl</name>
        <param>
          <type>int &amp;</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>needs_tCl</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>needs_pCl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="122" column="8" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="122" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="plc__3__0_8cpp_1a9d8b760073c710f9361fc1c0d1134b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(scan_level)</argsstring>
        <name>if</name>
        <param>
          <type>scan_level</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" line="142" column="3" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp" bodystart="142" bodyend="191"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Frontend for the plc 3.0 backend</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Patrick Stoecker (<ulink url="mailto:stoecker@physik.rwth-aachen.de">stoecker@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 Aug, Nov </para>
</simplesect>
<simplesect kind="date"><para>2020 Feb</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:pat.scott@uq.edu.au">pat.scott@uq.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 Apr</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frontend__macros_8hpp" kindref="compound">gambit/Backends/frontend_macros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plc__3__0_8hpp" kindref="compound">gambit/Backends/frontends/plc_3_0.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/util_functions.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Static<sp/>varibales<sp/>to<sp/>be<sp/>kept<sp/>alive<sp/>in<sp/>the<sp/>frontend<sp/>for<sp/>the<sp/>scan.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-&gt;<sp/>Prefix<sp/>to<sp/>the<sp/>plc_2.0<sp/>data<sp/>folder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>plc2_location;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-&gt;<sp/>Prefix<sp/>to<sp/>the<sp/>plc_3.0<sp/>data<sp/>folder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>plc3_location;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-&gt;<sp/>Container<sp/>for<sp/>all<sp/>activated<sp/>likelihood<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::shared_ptr&lt;clik_object&gt;<sp/>&gt;<sp/>clik_map;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::shared_ptr&lt;clik_lensing_object&gt;<sp/>&gt;<sp/>clik_lensing_map;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-&gt;<sp/>Array<sp/>containing<sp/>the<sp/>required<sp/>lmax.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>The<sp/>order<sp/>is<sp/>[phiphi<sp/>TT<sp/>EE<sp/>BB<sp/>TE<sp/>TB<sp/>EB]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::array&lt;int,7&gt;<sp/>lmax_array{-1,-1,-1,-1,-1,-1,-1};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>specific<sp/>plc<sp/>likelihood<sp/>(helper<sp/>function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>plc_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>version,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>lensing)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>the<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>likelihood<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>full_path<sp/>=<sp/>(version<sp/>==<sp/>2<sp/>?<sp/>plc2_location<sp/>:<sp/>plc3_location)<sp/>+<sp/>location;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>Utils::file_exists(full_path))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>have<sp/>requested<sp/>a<sp/>plc<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>version<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>likelihood<sp/>but<sp/>it<sp/>cannot<sp/>be<sp/>loaded.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>file<sp/>\&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>full_path<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&apos;<sp/>does<sp/>not<sp/>exist.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>either<sp/>do<sp/>\&apos;make<sp/>plc_data&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(version<sp/>==<sp/>2<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;_2.0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&apos;,<sp/>or<sp/>set<sp/>plc_data_&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>version<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;_path<sp/>in<sp/>the<sp/>Rules<sp/>section<sp/>of<sp/>your<sp/>YAML<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>backend_error().raise(LOCAL_INFO,<sp/>err.str());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>clik_path<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)full_path.c_str();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>clik_error*<sp/>plc_Error<sp/>=<sp/>initError();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lensing)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>destructor<sp/>=<sp/>[](clik_lensing_object*<sp/>clikid){<sp/>clik_lensing_cleanup(&amp;(clikid));<sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clik_lensing_map[name]<sp/>=<sp/>std::shared_ptr&lt;clik_lensing_object&gt;(clik_lensing_init(clik_path,<sp/>&amp;plc_Error),<sp/>destructor);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>destructor<sp/>=<sp/>[](clik_object*<sp/>clikid){<sp/>clik_cleanup(&amp;(clikid));<sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clik_map[name]<sp/>=<sp/>std::shared_ptr&lt;clik_object&gt;(clik_init(clik_path,<sp/>&amp;plc_Error),<sp/>destructor);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>cleanupError(&amp;plc_Error);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>specific<sp/>plc<sp/>likelihood(helper<sp/>function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>cl_and_pars,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>lensing)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calling<sp/>\&quot;plc_loglike_&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map_count<sp/>=<sp/>(lensing<sp/>?<sp/>clik_lensing_map.count(name)<sp/>:<sp/>clik_map.count(name));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map_count<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>mssg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>the<sp/>Likelihood<sp/>object<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssg<sp/>+=<sp/>name;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssg<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>in<sp/>the<sp/>map<sp/>of<sp/>activated<sp/>likelihoods.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>backend_error().raise(LOCAL_INFO,mssg.c_str());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>clik_error*<sp/>plc_Error<sp/>=<sp/>initError();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lensing)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>clik_lensing_compute(clik_lensing_map[name].get(),<sp/>cl_and_pars,<sp/>&amp;plc_Error);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>clik_compute(clik_map[name].get(),<sp/>cl_and_pars,<sp/>&amp;plc_Error);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isError(plc_Error)<sp/>||<sp/>!(std::isfinite(res)))</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>err<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Calling<sp/>\&quot;plc_loglike_&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>was<sp/>not<sp/>successful.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>forwardedErr[4096];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stringError(byVal(forwardedErr),<sp/>plc_Error);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalid_point().raise(err<sp/>+<sp/>forwardedErr);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/>LogTags::debug<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calling<sp/>\&quot;plc_loglike_&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>successfull.<sp/>Got<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>res<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>cleanupError(&amp;plc_Error);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>individual<sp/>likelihood<sp/>functions<sp/>for<sp/>plc2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_highl_TTTEEE_2015<sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;highl_TTTEEE_2015&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_highl_TT_2015<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;highl_TT_2015&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_highl_TTTEEE_lite_2015(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;highl_TTTEEE_lite_2015&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_highl_TT_lite_2015<sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;highl_TT_lite_2015&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_lowl_TEB_2015<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;lowl_TEB_2015&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_lowl_TT_2015<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;lowl_TT_2015&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_lensing_2015<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;lensing_2015&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>individual<sp/>likelihood<sp/>functions<sp/>for<sp/>plc3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_highl_TTTEEE_2018<sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;highl_TTTEEE_2018&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_highl_TT_2018<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;highl_TT_2018&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_highl_TTTEEE_lite_2018(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;highl_TTTEEE_lite_2018&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_highl_TT_lite_2018<sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;highl_TT_lite_2018&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_lowl_TT_2018<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;lowl_TT_2018&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_lowl_EE_2018<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;lowl_EE_2018&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_lensing_2018<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;lensing_2018&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plc_loglike_lensing_marged_2018<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plc_loglike(x,<sp/></highlight><highlight class="stringliteral">&quot;lensing_marged_2018&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>plc_required_Cl(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>lmax,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>needs_tCl,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>needs_pCl)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>lmax<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>it:<sp/>lmax_array)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lmax<sp/>=<sp/>std::max(lmax,<sp/>it);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>needs_tCl<sp/>=<sp/>(lmax_array[1]<sp/>&gt;<sp/>-1);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>begin<sp/>=<sp/>lmax_array.begin()<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>lmax_array.end();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>needs_pCl<sp/>=<sp/>std::any_of(begin,end,[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>i){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>&gt;<sp/>-1;});</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="common__macros_8hpp_1a825694403adda6ccd191cb93020fbe23" kindref="member">BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Most<sp/>of<sp/>the<sp/>Backend<sp/>initialisation<sp/>is<sp/>only<sp/>relevant<sp/>for<sp/>the<sp/>first<sp/>parameter<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scan_level<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan_level)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>&quot;plc_data_2_path&quot;<sp/>and/or<sp/>&quot;plc_data_3_path&quot;<sp/>are<sp/>in<sp/>the<sp/>runOptions.<sp/>If<sp/>not,<sp/>look<sp/>in<sp/>the<sp/>same<sp/>place<sp/>as<sp/>plc<sp/>for<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>plc_default_path<sp/>=<sp/>Backends::backendInfo().path_dir(</highlight><highlight class="stringliteral">&quot;plc&quot;</highlight><highlight class="normal">,<sp/>STRINGIFY(VERSION))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/../../../plc_data/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>plc2_location<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;std::string&gt;(plc_default_path+</highlight><highlight class="stringliteral">&quot;2.0/plc_2.0&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;plc_data_2_path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>plc3_location<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;std::string&gt;(plc_default_path+</highlight><highlight class="stringliteral">&quot;3.0/plc_3.0&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;plc_data_3_path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plc2_location.back()<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>plc2_location.push_back(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plc3_location.back()<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>plc3_location.push_back(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>plc2<sp/>likelihoods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_highl_TT_2015)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;highl_TT_2015&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hi_l/plik/plik_dx11dr2_HM_v18_TT.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_highl_TTTEEE_2015)<sp/><sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;highl_TTTEEE_2015&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hi_l/plik/plik_dx11dr2_HM_v18_TTTEEE.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_highl_TT_lite_2015)<sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;highl_TT_lite_2015&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;hi_l/plik_lite/plik_lite_v18_TT.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_highl_TTTEEE_lite_2015)<sp/>plc_init(</highlight><highlight class="stringliteral">&quot;highl_TTTEEE_lite_2015&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;hi_l/plik_lite/plik_lite_v18_TTTEEE.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>2,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_lowl_TEB_2015)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;lowl_TEB_2015&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;low_l/bflike/lowl_SMW_70_dx11d_2014_10_03_v5c_Ap.clik&quot;</highlight><highlight class="normal">,<sp/>2,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_lowl_TT_2015)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;lowl_TT_2015&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;low_l/commander/commander_rc2_v1.1_l2_29_B.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_lensing_2015)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;lensing_2015&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;lensing/smica_g30_ftl_full_pp.clik_lensing&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>plc3<sp/>likelihoods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_highl_TT_2018)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;highl_TT_2018&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;hi_l/plik/plik_rd12_HM_v22_TT.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_highl_TTTEEE_2018)<sp/><sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;highl_TTTEEE_2018&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;hi_l/plik/plik_rd12_HM_v22b_TTTEEE.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_highl_TT_lite_2018)<sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;highl_TT_lite_2018&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;hi_l/plik_lite/plik_lite_v22_TT.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_highl_TTTEEE_lite_2018)<sp/>plc_init(</highlight><highlight class="stringliteral">&quot;highl_TTTEEE_lite_2018&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;hi_l/plik_lite/plik_lite_v22_TTTEEE.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_lowl_TT_2018)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;lowl_TT_2018&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;low_l/commander/commander_dx12_v3_2_29.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_lowl_EE_2018)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;lowl_EE_2018&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;low_l/simall/simall_100x143_offlike5_EE_Aplanck_B.clik&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_lensing_2018)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;lensing_2018&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;lensing/smicadx12_Dec5_ftl_mv2_ndclpp_p_teb_consext8.clik_lensing&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*InUse::plc_loglike_lensing_marged_2018)<sp/><sp/><sp/><sp/>plc_init(</highlight><highlight class="stringliteral">&quot;lensing_marged_2018&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;lensing/smicadx12_Dec5_ftl_mv2_ndclpp_p_teb_consext8_CMBmarged.clik_lensing&quot;</highlight><highlight class="normal">,3,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>it:<sp/>clik_map)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;int,7&gt;<sp/>tmp{};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clik_get_lmax(it.second.get(),<sp/>tmp.data()+1,<sp/>NULL);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>7;<sp/>++i)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmax_array[i]<sp/>=<sp/>std::max(lmax_array[i],tmp[i]);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>it:<sp/>clik_lensing_map)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;int,7&gt;<sp/>tmp{};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clik_lensing_get_lmaxs(it.second.get(),<sp/>tmp.data(),<sp/>NULL);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>7;<sp/>++i)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmax_array[i]<sp/>=<sp/>std::max(lmax_array[i],tmp[i]);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_level<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="common__macros_8hpp_1a12da9763bf3b37787fa5ae54cf36c779" kindref="member">END_BE_INI_FUNCTION</ref></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/plc_3_0.cpp"/>
  </compounddef>
</doxygen>
