<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classGambit_1_1ColliderBit_1_1P2" kind="class" language="C++" prot="public">
    <compoundname>Gambit::ColliderBit::P2</compoundname>
    <includes refid="PointsAndLines_8hpp" local="no">PointsAndLines.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Storage</header>
      <memberdef kind="variable" id="classGambit_1_1ColliderBit_1_1P2_1a9753063d242ace4c87c7ee1680556203" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gambit::ColliderBit::P2::_x</definition>
        <argsstring></argsstring>
        <name>_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="27" column="16" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1ColliderBit_1_1P2_1a34cc4be1e444b097dbbe5b76150ceaa8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gambit::ColliderBit::P2::_y</definition>
        <argsstring></argsstring>
        <name>_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="27" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a50875fee12976533b1eeb56f5b7c52f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::ColliderBit::P2::P2</definition>
        <argsstring>()</argsstring>
        <name>P2</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="34" column="9" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a76ad6829eeff35f30864f4f28c66466c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::ColliderBit::P2::P2</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>P2</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Coordinate constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="36" column="9" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1af8e37779e0eb3986595af71773ab9ce8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::ColliderBit::P2::P2</definition>
        <argsstring>(const P2 &amp;other)</argsstring>
        <name>P2</name>
        <param>
          <type>const <ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="38" column="9" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a8a690f82ec3de7ebd94bd0ed42719af8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
        <definition>P2&amp; Gambit::ColliderBit::P2::operator=</definition>
        <argsstring>(const P2 &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="40" column="12" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="40" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Coordinate setters</header>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1ab6de60013d84628b4a36e8e26369e20c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
        <definition>P2&amp; Gambit::ColliderBit::P2::setx</definition>
        <argsstring>(double x)</argsstring>
        <name>setx</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="46" column="12" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1afb9ef726606bedf26b53d3a8b9b02486" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
        <definition>P2&amp; Gambit::ColliderBit::P2::sety</definition>
        <argsstring>(double y)</argsstring>
        <name>sety</name>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="47" column="12" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a69e57fcb57814f2792b6f45333af23b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
        <definition>P2&amp; Gambit::ColliderBit::P2::setxy</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>setxy</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="48" column="12" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Coordinate getters</header>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a6cfafc3a2cf12b312c5f4fc9eea9ff2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::ColliderBit::P2::getx</definition>
        <argsstring>() const</argsstring>
        <name>getx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="54" column="16" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a38a14cae2de886cc1964d3f91aa5e72f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::ColliderBit::P2::gety</definition>
        <argsstring>() const</argsstring>
        <name>gety</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="55" column="16" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a3df9b191c67adc974d1f449ad32fde1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::ColliderBit::P2::abs</definition>
        <argsstring>() const</argsstring>
        <name>abs</name>
        <briefdescription>
<para>Get the length of the vector from the origin to this point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="57" column="16" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a0aef456a5b30c89a9624ddc5061407e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::ColliderBit::P2::r</definition>
        <argsstring>() const</argsstring>
        <name>r</name>
        <briefdescription>
<para>Alias for abs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="59" column="16" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Self-modifying operators</header>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1afd2c937c1dcd7aa0a49d9cc066a5ab82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
        <definition>P2&amp; Gambit::ColliderBit::P2::operator+=</definition>
        <argsstring>(const P2 &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="65" column="12" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a6024d0e340f274922df600d248568bbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
        <definition>P2&amp; Gambit::ColliderBit::P2::operator-=</definition>
        <argsstring>(const P2 &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="66" column="12" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a248101a18df1eebccda64928c48bf543" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
        <definition>P2&amp; Gambit::ColliderBit::P2::operator*=</definition>
        <argsstring>(double a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="67" column="12" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1P2_1a3be92c98b4031e479d68ffd166d2932c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1ColliderBit_1_1P2" kindref="compound">P2</ref> &amp;</type>
        <definition>P2&amp; Gambit::ColliderBit::P2::operator/=</definition>
        <argsstring>(double a)</argsstring>
        <name>operator/=</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="68" column="12" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple container for a point on an xy plane. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is largely based upon the structure of the P4 class which is part of HEPUtils <ndash/> <ulink url="https://bitbucket.org/andybuckley/heputils">https://bitbucket.org/andybuckley/heputils</ulink> Copyright (C) 2013-2015 Andy Buckley <ulink url="mailto:andy.buckley@cern.ch">andy.buckley@cern.ch</ulink></para>
<para>Modified to a simple point on a 2d-plane by Abram Krislock <ulink url="mailto:a.m.b.krislock@fys.uio.no">a.m.b.krislock@fys.uio.no</ulink> </para>
    </detaileddescription>
    <location file="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" line="23" column="13" bodyfile="ColliderBit/include/gambit/ColliderBit/limits/PointsAndLines.hpp" bodystart="23" bodyend="70"/>
    <listofallmembers>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a9753063d242ace4c87c7ee1680556203" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>_x</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a34cc4be1e444b097dbbe5b76150ceaa8" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>_y</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a3df9b191c67adc974d1f449ad32fde1b" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>abs</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a6cfafc3a2cf12b312c5f4fc9eea9ff2e" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>getx</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a38a14cae2de886cc1964d3f91aa5e72f" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>gety</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a248101a18df1eebccda64928c48bf543" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>operator*=</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1afd2c937c1dcd7aa0a49d9cc066a5ab82" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>operator+=</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a6024d0e340f274922df600d248568bbb" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>operator-=</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a3be92c98b4031e479d68ffd166d2932c" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>operator/=</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a8a690f82ec3de7ebd94bd0ed42719af8" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>operator=</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a50875fee12976533b1eeb56f5b7c52f6" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>P2</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a76ad6829eeff35f30864f4f28c66466c" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>P2</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1af8e37779e0eb3986595af71773ab9ce8" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>P2</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a0aef456a5b30c89a9624ddc5061407e3" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>r</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1ab6de60013d84628b4a36e8e26369e20c" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>setx</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1a69e57fcb57814f2792b6f45333af23b7" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>setxy</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1P2_1afb9ef726606bedf26b53d3a8b9b02486" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::P2</scope><name>sety</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
