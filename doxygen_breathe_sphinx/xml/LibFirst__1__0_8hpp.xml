<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="LibFirst__1__0_8hpp" kind="file" language="C++">
    <compoundname>LibFirst_1_0.hpp</compoundname>
    <includes refid="include_2gambit_2Backends_2backend__undefs_8hpp" local="yes">gambit/Backends/backend_undefs.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
      <node id="1">
        <label>LibFirst_1_0.hpp</label>
        <link refid="LibFirst__1__0_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="LibFirst__1__0_8hpp_1a7f7848301604c58c8962207acd75ff6e" prot="public" static="no">
        <name>BACKENDNAME</name>
        <initializer>LibFirst</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp" line="24" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFirst__1__0_8hpp_1a339bf682af9659de270251e5d18011be" prot="public" static="no">
        <name>BACKENDLANG</name>
        <initializer>CXX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp" line="25" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFirst__1__0_8hpp_1a1c6d5de492ac61ad29aec7aa9a436bbf" prot="public" static="no">
        <name>VERSION</name>
        <initializer>1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp" line="26" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFirst__1__0_8hpp_1a8d5a383ba38225163529bfcb55b74444" prot="public" static="no">
        <name>SAFE_VERSION</name>
        <initializer>1_0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp" line="27" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFirst__1__0_8hpp_1a62a0f8a0b822f31ff84bc8252b33e7c8" prot="public" static="no">
        <name>REFERENCE</name>
        <initializer>GAMBIT:2017yxo</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp" line="28" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Example of how to use the macros in &apos;<ref refid="backend__macros_8hpp" kindref="compound">backend_macros.hpp</ref>&apos; to set up a frontend for a specific library.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Anders Kvellestad </para>
</simplesect>
<simplesect kind="date"><para>2013 Mar, Apr, Nov</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:patscott@physics.mcgill.ca">patscott@physics.mcgill.ca</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 Apr </para>
</simplesect>
<simplesect kind="date"><para>2014 May</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDNAME<sp/>LibFirst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDLANG<sp/>CXX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAFE_VERSION<sp/>1_0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFERENCE<sp/>GAMBIT:2017yxo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>macro<sp/>loads<sp/>the<sp/>library<sp/>using<sp/>dlopen</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>when<sp/>this<sp/>header<sp/>file<sp/>is<sp/>included<sp/>somewhere.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="backend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Next<sp/>we<sp/>use<sp/>macros<sp/>BE_VARIABLE<sp/>and<sp/>BE_FUNCTION<sp/>to<sp/>load<sp/>pointers</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>(using<sp/>dlsym)<sp/>to<sp/>the<sp/>variables<sp/>and<sp/>functions<sp/>within<sp/>the<sp/>library.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>The<sp/>macros<sp/>also<sp/>create<sp/>functors<sp/>that<sp/>wrap<sp/>the<sp/>library<sp/>variables<sp/>and<sp/>functions.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>These<sp/>are<sp/>used<sp/>by<sp/>the<sp/>Core<sp/>for<sp/>dependency<sp/>resolution<sp/>and<sp/>to<sp/>set<sp/>up<sp/>a<sp/>suitable</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>interface<sp/>to<sp/>the<sp/>library<sp/>functions/variables<sp/>at<sp/>module<sp/>level.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Syntax<sp/>for<sp/>BE_FUNCTION:</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>BE_FUNCTION([choose<sp/>function<sp/>name],<sp/>[type],<sp/>[arguement<sp/>types],<sp/>&quot;[exact<sp/>symbol<sp/>name]&quot;,<sp/>&quot;[choose<sp/>capability<sp/>name]&quot;)</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">BE_FUNCTION(initialize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;_Z10initializei&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;initialize_capability&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">BE_FUNCTION(someFunction,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;_Z12someFunctionv&quot;,<sp/>&quot;someFunction&quot;)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">BE_FUNCTION(returnResult,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;_Z12returnResultv&quot;,&quot;returnResult_capability&quot;)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">BE_FUNCTION(byRefExample,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/>&quot;_Z12byRefExampleRd&quot;,<sp/>&quot;refex&quot;)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">BE_FUNCTION(byRefExample2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;_Z13byRefExample2Rdd&quot;,<sp/>&quot;refex2&quot;)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>now<sp/>created<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>-<sp/>Function<sp/>pointers</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::initialize<sp/><sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>void<sp/>(*)(int)</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::someFunction<sp/><sp/><sp/><sp/><sp/>type:<sp/>void<sp/>(*)()</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::returnResult<sp/><sp/><sp/><sp/><sp/>type:<sp/>double<sp/>(*)()</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>-<sp/>Functors</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::Functown::initialize<sp/><sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>Gambit::backend_functor&lt;void,int&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::Functown::someFunction<sp/><sp/><sp/><sp/><sp/>type:<sp/>Gambit::backend_functor&lt;void&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::Functown::returnResult<sp/><sp/><sp/><sp/><sp/>type:<sp/>Gambit::backend_functor&lt;double&gt;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Syntax<sp/>for<sp/>BE_VARIABLE:</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>BE_VARIABLE([name],<sp/>[type],<sp/>&quot;[exact<sp/>symbol<sp/>name]&quot;,<sp/>&quot;[choose<sp/>capability<sp/>name]&quot;)</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">BE_VARIABLE(SomeInt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>&quot;someInt&quot;,<sp/>&quot;SomeInt&quot;)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">BE_VARIABLE(SomeDouble,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>&quot;someDouble&quot;,<sp/>&quot;SomeDouble&quot;)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>now<sp/>created<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>-<sp/>Pointers</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::SomeInt<sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>int*</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::SomeDouble<sp/><sp/><sp/>type:<sp/>double*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>-<sp/>Functors</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::Functown::SomeInt<sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>Gambit::backend_functor&lt;int&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::Functown::SomeDouble<sp/><sp/><sp/>type:<sp/>Gambit::backend_functor&lt;double&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>point<sp/>we<sp/>have<sp/>a<sp/>minimal<sp/>interface<sp/>to<sp/>the<sp/>loaded<sp/>library.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>Any<sp/>additional<sp/>convenience<sp/>functions<sp/>could<sp/>be<sp/>constructed<sp/>below</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>using<sp/>the<sp/>available<sp/>pointers.<sp/>All<sp/>convenience<sp/>functions<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>registred/wrapped<sp/>via<sp/>the<sp/>macro<sp/>BE_CONV_FUNCTION<sp/>(see<sp/>below).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convenience<sp/>functions<sp/>go<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>awesomenessByAnders(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>logger().send(</highlight><highlight class="stringliteral">&quot;Message<sp/>from<sp/>&apos;awesomenessByAnders&apos;<sp/>backend<sp/>convenience<sp/>function<sp/>in<sp/>LibFirst<sp/>v1.0<sp/>wrapper&quot;</highlight><highlight class="normal">,LogTags::info);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>initialize(a);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>someFunction();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnResult();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>BE_NAMESPACE<sp/>is<sp/>just</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>namespace<sp/>Gambit</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/><sp/>namespace<sp/>Backends</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>namespace<sp/>CAT_3(BACKENDNAME,_,SAFE_VERSION)</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>and<sp/>END_BE_NAMESPACE<sp/>is<sp/>just</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Now<sp/>register<sp/>any<sp/>convenience<sp/>functions<sp/>and<sp/>wrap<sp/>them<sp/>in<sp/>functors.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>Syntax<sp/>for<sp/>BE_CONV_FUNCTION:</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>BE_CONV_FUNCTION([function<sp/>name],<sp/>type,<sp/>(arguments),<sp/>&quot;[choose<sp/>capability<sp/>name]&quot;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">BE_CONV_FUNCTION(awesomenessByAnders,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;awesomeness&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="common__macros_8hpp_1a825694403adda6ccd191cb93020fbe23" kindref="member">BE_INI_FUNCTION</ref><sp/>{}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="common__macros_8hpp_1a12da9763bf3b37787fa5ae54cf36c779" kindref="member">END_BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Undefine<sp/>macros<sp/>to<sp/>avoid<sp/>conflict<sp/>with<sp/>other<sp/>backends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="include_2gambit_2Backends_2backend__undefs_8hpp" kindref="compound">gambit/Backends/backend_undefs.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFirst_1_0.hpp"/>
  </compounddef>
</doxygen>
