<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="DirectDM__2__2__0_8cpp" kind="file" language="C++">
    <compoundname>DirectDM_2_2_0.cpp</compoundname>
    <includes refid="frontend__macros_8hpp" local="yes">gambit/Backends/frontend_macros.hpp</includes>
    <includes refid="DirectDM__2__2__0_8hpp" local="yes">gambit/Backends/frontends/DirectDM_2_2_0.hpp</includes>
    <includes refid="DDCalc_8hpp" local="yes">gambit/Backends/backend_types/DDCalc.hpp</includes>
    <includes local="no">boost/algorithm/string/predicate.hpp</includes>
    <incdepgraph>
      <node id="22">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Backends/common_macros.hpp</label>
        <link refid="common__macros_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>gambit/Backends/frontends/DirectDM_2_2_0.hpp</label>
        <link refid="DirectDM__2__2__0_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>boost/preprocessor/seq/transform.hpp</label>
      </node>
      <node id="15">
        <label>gambit/Backends/mathematica_macros.hpp</label>
        <link refid="mathematica__macros_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="6">
        <label>gambit/Elements/types_rollcall.hpp</label>
      </node>
      <node id="31">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="13">
        <label>gambit/Backends/interoperability.hpp</label>
        <link refid="interoperability_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>gambit/Backends/python_macros.hpp</label>
        <link refid="python__macros_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="5">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
      </node>
      <node id="35">
        <label>boost/algorithm/string/predicate.hpp</label>
      </node>
      <node id="21">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>gambit/Utils/util_functions.hpp</label>
      </node>
      <node id="19">
        <label>gambit/Elements/ini_catch.hpp</label>
      </node>
      <node id="25">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="27">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>DirectDM_2_2_0.cpp</label>
        <link refid="DirectDM__2__2__0_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gambit/Backends/interoperability_macros.hpp</label>
        <link refid="interoperability__macros_8hpp"/>
      </node>
      <node id="2">
        <label>gambit/Backends/frontend_macros.hpp</label>
        <link refid="frontend__macros_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>boost/preprocessor/control/iif.hpp</label>
      </node>
      <node id="16">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="33">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
      <node id="17">
        <label>gambit/Utils/util_macros.hpp</label>
      </node>
      <node id="34">
        <label>gambit/Backends/backend_types/DDCalc.hpp</label>
        <link refid="DDCalc_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
      <node id="10">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="18">
        <label>gambit/Backends/mathematica_function.hpp</label>
        <link refid="mathematica__function_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/Elements/module_macros_inmodule.hpp</label>
      </node>
      <node id="30">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="26">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="29">
        <label>gambit/Backends/python_function.hpp</label>
        <link refid="python__function_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Frontend source for the DirectDM backend.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Sanjay Bloor (<ulink url="mailto:sanjay.bloor12@imperial.ac.uk">sanjay.bloor12@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2018 Sep, Oct 2019 Dec 2020 Mar</para>
</simplesect>
<simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:b.farmer@imperial.ac.uk">b.farmer@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 Jul</para>
</simplesect>
<simplesect kind="author"><para>Felix Kahlhofer (<ulink url="mailto:kahlhoefer@physik.rwth-aachen.de">kahlhoefer@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 May</para>
</simplesect>
<simplesect kind="author"><para>Markus Prim (<ulink url="mailto:markus.prim@cern.ch">markus.prim@cern.ch</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 Dec</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frontend__macros_8hpp" kindref="compound">gambit/Backends/frontend_macros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DirectDM__2__2__0_8hpp" kindref="compound">gambit/Backends/frontends/DirectDM_2_2_0.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DDCalc_8hpp" kindref="compound">gambit/Backends/backend_types/DDCalc.hpp</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>DDCalc<sp/>(frontend)<sp/>container<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string/predicate.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_PYBIND11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;pybind11/stl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simple<sp/>local<sp/>helper<sp/>function<sp/>to<sp/>copy<sp/>map<sp/>of<sp/>coefficients<sp/>into<sp/>GAMBIT<sp/>(DDCalc)<sp/>container<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>NREO_DM_nucleon_couplings<sp/>copy_couplings_to_NREO_container(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>map_str_dbl&amp;<sp/>nonrel_WCs)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>coefficients<sp/>into<sp/>GAMBIT<sp/>container<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>c0<sp/>=<sp/>cp<sp/>and<sp/>c1<sp/>=<sp/>cn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NREO_DM_nucleon_couplings<sp/>NRWCs;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OpCoeffList[]<sp/>=<sp/>{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,100,104};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OpCoeff;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;25;<sp/>i++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpCoeff<sp/>=<sp/>OpCoeffList[i];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>sp;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>sn;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sp&lt;&lt;</highlight><highlight class="stringliteral">&quot;cNR&quot;</highlight><highlight class="normal">&lt;&lt;OpCoeff&lt;&lt;</highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn&lt;&lt;</highlight><highlight class="stringliteral">&quot;cNR&quot;</highlight><highlight class="normal">&lt;&lt;OpCoeff&lt;&lt;</highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>icp<sp/>=<sp/>nonrel_WCs.find(sp.str());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>icn<sp/>=<sp/>nonrel_WCs.find(sn.str());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(icp!=nonrel_WCs.end())</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRWCs.c0[OpCoeff]=(icp-&gt;second);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Operator<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>sp.str()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found<sp/>in<sp/>nonrel_WCs!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(icn!=nonrel_WCs.end())<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRWCs.c1[OpCoeff]=(icn-&gt;second);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Operator<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>sn.str()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found<sp/>in<sp/>nonrel_WCs!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NRWCs.CPTbasis<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NRWCs;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convenience<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>NREO_DM_nucleon_couplings<sp/>get_NR_WCs_flav(map_str_dbl&amp;<sp/>relativistic_WCs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mDM,<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>scheme,<sp/>std::string&amp;<sp/>DM_type,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_str_dbl&amp;<sp/>input_dict)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>only<sp/>load<sp/>up<sp/>3,<sp/>4,<sp/>5<sp/>flavour<sp/>scheme.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scheme<sp/>!=<sp/>3<sp/>&amp;&amp;<sp/>scheme<sp/>!=<sp/>4<sp/>&amp;&amp;<sp/>scheme<sp/>!=<sp/>5)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;DirectDM<sp/>quark<sp/>flavour<sp/>matching<sp/>scheme<sp/>must<sp/>be<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;3,<sp/>4<sp/>or<sp/>5<sp/>quark<sp/>flavors.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>entries<sp/>that<sp/>should<sp/>not<sp/>be<sp/>passed<sp/>to<sp/>DirectDM,<sp/>i.e.<sp/>any<sp/>WC<sp/>referring<sp/>to<sp/>a<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quark<sp/>not<sp/>present<sp/>in<sp/>a<sp/>given<sp/>scheme.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>relativistic_WCs.begin();<sp/>it<sp/>!=<sp/>relativistic_WCs.end();)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>b<sp/>quarks<sp/>for<sp/>schemes<sp/>that<sp/>are<sp/>3<sp/>and<sp/>4..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scheme<sp/>&lt;<sp/>5)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::ends_with(it-&gt;first,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">))<sp/>{<sp/>relativistic_WCs.erase(it++);<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>remove<sp/>c<sp/>for<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scheme<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::ends_with(it-&gt;first,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">))<sp/>{<sp/>relativistic_WCs.erase(it++);<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>++it;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cast<sp/>the<sp/>input<sp/>dict<sp/>to<sp/>a<sp/>Python<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::dict<sp/>inputs<sp/>=<sp/>pybind11::cast(input_dict);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Python<sp/>dictionary<sp/>of<sp/>non-relativistic<sp/>Wilson<sp/>Coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::dict<sp/>cNRs;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>Python<sp/>class<sp/>according<sp/>to<sp/>number<sp/>of<sp/>quark<sp/>flavours<sp/>specified<sp/>from<sp/>module<sp/>DirectDM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>obtain<sp/>a<sp/>dictionary<sp/>of<sp/>non-relativistic<sp/>WCs,<sp/>given<sp/>the<sp/>DM<sp/>mass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scheme<sp/>==<sp/>5)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::object<sp/>WC_5f<sp/>=<sp/>DirectDM.attr(</highlight><highlight class="stringliteral">&quot;WC_5f&quot;</highlight><highlight class="normal">)(relativistic_WCs,<sp/>DM_type,<sp/>inputs);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cNRs<sp/>=<sp/>WC_5f.attr(</highlight><highlight class="stringliteral">&quot;_my_cNR&quot;</highlight><highlight class="normal">)(mDM);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scheme<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::object<sp/>WC_4f<sp/>=<sp/>DirectDM.attr(</highlight><highlight class="stringliteral">&quot;WC_4f&quot;</highlight><highlight class="normal">)(relativistic_WCs,<sp/>DM_type,<sp/>inputs);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cNRs<sp/>=<sp/>WC_4f.attr(</highlight><highlight class="stringliteral">&quot;_my_cNR&quot;</highlight><highlight class="normal">)(mDM);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scheme<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::object<sp/>WC_3f<sp/>=<sp/>DirectDM.attr(</highlight><highlight class="stringliteral">&quot;WC_3f&quot;</highlight><highlight class="normal">)(relativistic_WCs,<sp/>DM_type,<sp/>inputs);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cNRs<sp/>=<sp/>WC_3f.attr(</highlight><highlight class="stringliteral">&quot;_my_cNR&quot;</highlight><highlight class="normal">)(mDM);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cast<sp/>python<sp/>dictionary<sp/>to<sp/>C++<sp/>type<sp/>known<sp/>to<sp/>GAMBIT<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map_str_dbl<sp/>nonrel_WCs<sp/>=<sp/>cNRs.cast&lt;map_str_dbl&gt;();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>coefficients<sp/>into<sp/>GAMBIT<sp/>container<sp/>object<sp/>(converting<sp/>to<sp/>isoscalar/isovector<sp/>basis<sp/>in<sp/>the<sp/>process)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy_couplings_to_NREO_container(nonrel_WCs);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><ref refid="common__macros_8hpp_1a825694403adda6ccd191cb93020fbe23" kindref="member">BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>ini<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="common__macros_8hpp_1a12da9763bf3b37787fa5ae54cf36c779" kindref="member">END_BE_INI_FUNCTION</ref></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DirectDM_2_2_0.cpp"/>
  </compounddef>
</doxygen>
