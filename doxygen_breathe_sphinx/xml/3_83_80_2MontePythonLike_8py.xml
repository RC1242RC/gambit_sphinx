<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="3_83_80_2MontePythonLike_8py" kind="file" language="Python">
    <compoundname>3.3.0/MontePythonLike.py</compoundname>
    <innerclass refid="classMontePythonLike_1_1Likelihood" prot="public">MontePythonLike::Likelihood</innerclass>
    <innerclass refid="classMontePythonLike_1_1Likelihood__prior" prot="public">MontePythonLike::Likelihood_prior</innerclass>
    <innerclass refid="classMontePythonLike_1_1Likelihood__newdat" prot="public">MontePythonLike::Likelihood_newdat</innerclass>
    <innerclass refid="classMontePythonLike_1_1Likelihood__clik" prot="public">MontePythonLike::Likelihood_clik</innerclass>
    <innerclass refid="classMontePythonLike_1_1Likelihood__mock__cmb" prot="public">MontePythonLike::Likelihood_mock_cmb</innerclass>
    <innerclass refid="classMontePythonLike_1_1Likelihood__mpk" prot="public">MontePythonLike::Likelihood_mpk</innerclass>
    <innerclass refid="classMontePythonLike_1_1Likelihood__sn" prot="public">MontePythonLike::Likelihood_sn</innerclass>
    <innerclass refid="classMontePythonLike_1_1Likelihood__clocks" prot="public">MontePythonLike::Likelihood_clocks</innerclass>
    <innerclass refid="classMontePythonLike_1_1Likelihood__isw" prot="public">MontePythonLike::Likelihood_isw</innerclass>
    <innerclass refid="classMontePythonLike_1_1Data" prot="public">MontePythonLike::Data</innerclass>
    <innernamespace refid="namespaceMontePythonLike">MontePythonLike</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceMontePythonLike" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">..<sp/>module::<sp/>likelihood_class<sp/>for<sp/>use<sp/>of<sp/>MontePython<sp/>likelihoods<sp/>with<sp/>gambit<sp/>(or<sp/>any<sp/>external<sp/>sampler)</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"><sp/><sp/><sp/>:synopsis:<sp/>Definition<sp/>of<sp/>the<sp/>major<sp/>likelihoods</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">..<sp/>original<sp/>moduleauthor::<sp/>Julien<sp/>Lesgourgues<sp/>&lt;lesgourg@cern.ch&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">..<sp/>original<sp/>moduleauthor::<sp/>Benjamin<sp/>Audren<sp/>&lt;benjamin.audren@epfl.ch&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">..<sp/>adopted<sp/>to<sp/>use<sp/>with<sp/>gambit::<sp/>Janina<sp/>Renk<sp/>&lt;janina.renk@fysik.su.se&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">Contains<sp/>the<sp/>definition<sp/>of<sp/>the<sp/>base<sp/>likelihood<sp/>class<sp/>:class:`Likelihood`,<sp/>with</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">basic<sp/>functions,<sp/>as<sp/>well<sp/>as<sp/>more<sp/>specific<sp/>likelihood<sp/>classes<sp/>that<sp/>may<sp/>be<sp/>reused</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">to<sp/>implement<sp/>new<sp/>ones.</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>warnings</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>rd</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>sp</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy.constants<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>const</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy.integrate</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy.interpolate</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy.misc</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>io_mp</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(JR)<sp/>to<sp/>get<sp/>a<sp/>way<sp/>of<sp/>testing<sp/>if<sp/>a<sp/>variable<sp/>is<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>a<sp/>string<sp/>working<sp/>with<sp/>python2<sp/>and<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-&gt;<sp/>isinstance(some_variable,<sp/>basestring)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>basestring</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>NameError:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>basestring<sp/>=<sp/>str</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classMontePythonLike_1_1Likelihood" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood" kindref="compound">Likelihood</ref>(object):</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>General<sp/>class<sp/>that<sp/>all<sp/>likelihoods<sp/>will<sp/>inherit<sp/>from.</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood_1a9f7492f4aacddc71d387cd98933a20db" kindref="member">__init__</ref>(self,<sp/>path,<sp/>data,<sp/>command_line):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>copies<sp/>the<sp/>content<sp/>of<sp/>self.path<sp/>from<sp/>the<sp/>initialization<sp/>routine<sp/>of</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>:class:`Data<sp/>&lt;data.Data&gt;`<sp/>class,<sp/>and<sp/>defines<sp/>a<sp/>handful<sp/>of<sp/>useful</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>methods,<sp/>that<sp/>every<sp/>likelihood<sp/>might<sp/>need.</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>nuisance<sp/>parameters<sp/>required<sp/>to<sp/>compute<sp/>this<sp/>likelihood<sp/>are<sp/>not</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined<sp/>(either<sp/>fixed<sp/>or<sp/>varying),<sp/>the<sp/>code<sp/>will<sp/>stop.</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>:<sp/>class</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialized<sp/>instance<sp/>of<sp/>:class:`Data<sp/>&lt;data.Data&gt;`</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_line<sp/>:<sp/>NameSpace</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NameSpace<sp/>containing<sp/>the<sp/>command<sp/>line<sp/>arguments</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Internal<sp/>MP):<sp/>start<sp/>to<sp/>init<sp/>Likelihood&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>=<sp/>self.__class__.__name__</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1affd984f54083d2657a384fd6c2351203" kindref="member">folder</ref><sp/>=<sp/>os.path.abspath(os.path.join(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.path[</highlight><highlight class="stringliteral">&apos;MontePython&apos;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&apos;likelihoods&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>os.path.isfile(os.path.abspath(os.path.join(self.folder,<sp/>self.like_name+&quot;.data&quot;))):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>print(&quot;Data<sp/>file<sp/>&quot;,self.file,&quot;<sp/>exists.&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>print(&quot;Data<sp/>file<sp/>&quot;,self.file,&quot;<sp/>for<sp/>likelihood&quot;,<sp/>self.like_name,<sp/>&quot;<sp/>does<sp/>not<sp/>exists.<sp/>Make<sp/>sure<sp/>it<sp/>is<sp/>in<sp/>&quot;,self.folder,<sp/>&quot;<sp/>and<sp/>try<sp/>again.&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>exit()<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>not<sp/>data.log_flag:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>path<sp/>=<sp/>os.path.join(command_line.folder,<sp/>&apos;log.param&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;About<sp/>to<sp/>read<sp/>from<sp/>data<sp/>file&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>some<sp/>default<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.data_directory<sp/>=<sp/>os.path.abspath(data.path[&apos;data&apos;])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref><sp/>=<sp/>data.path[</highlight><highlight class="stringliteral">&apos;data&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>self.data_directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Store<sp/>all<sp/>the<sp/>default<sp/>fields<sp/>stored,<sp/>for<sp/>the<sp/>method<sp/>read_file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1ae9bf5af937608f0cc8d715aaeab46333" kindref="member">default_values</ref><sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;data_directory&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Recover<sp/>the<sp/>values<sp/>potentially<sp/>read<sp/>in<sp/>the<sp/>input.param<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(data,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="stringliteral">&quot;attributes<sp/>=<sp/>[e<sp/>for<sp/>e<sp/>in<sp/>dir(data.%s)<sp/>if<sp/>e.find(&apos;__&apos;)<sp/>==<sp/>-1]&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>elem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>attributes:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="stringliteral">&quot;setattr(self,<sp/>elem,<sp/>getattr(data.%s,<sp/>elem))&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>values<sp/>from<sp/>the<sp/>data<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a18aba084dc45c091734638bbdee49592" kindref="member">read_from_file</ref>(path,<sp/>data,<sp/>command_line)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Default<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1acf6becb7edae22da01cbbde936c343eb" kindref="member">need_update</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>the<sp/>nuisance<sp/>parameters<sp/>are<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>in<sp/>model<sp/>parameters<sp/>passed<sp/>from<sp/>GAMBIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref><sp/>==<sp/>[]:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" kindref="member">nuisance</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" kindref="member">nuisance</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref>:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>data.mcmc_parameters:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>io_mp.LikelihoodError(</highlight><highlight class="stringliteral">&quot;The<sp/>nuisance<sp/>parameter<sp/>%s<sp/>must<sp/>be<sp/>defined,<sp/>either<sp/>fixed<sp/>or<sp/>varying,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;for<sp/>the<sp/>%s<sp/>likelihood.<sp/>It<sp/>seems<sp/>you<sp/>are<sp/>using<sp/>MontePython<sp/>with<sp/>GAMBIT.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Try<sp/>adding<sp/>the<sp/>model<sp/>cosmo_nuisance_%s<sp/>to<sp/>the<sp/>&apos;Parameters&apos;<sp/>section<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>your<sp/>yaml<sp/>file.<sp/>\nTo<sp/>get<sp/>a<sp/>list<sp/>of<sp/>the<sp/>model<sp/>parmeteters<sp/>type<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;./gambit<sp/>cosmo_nuisance_%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(nuisance,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>)<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood_1a1bd59854b9f84f9bf89641bf981b3493" kindref="member">loglkl</ref>(self,<sp/>cosmo,<sp/>data):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Placeholder<sp/>to<sp/>remind<sp/>that<sp/>this<sp/>function<sp/>needs<sp/>to<sp/>be<sp/>defined<sp/>for<sp/>a</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>likelihood.</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>------</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NotImplementedError</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Must<sp/>implement<sp/>method<sp/>loglkl()<sp/>in<sp/>your<sp/>likelihood&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood_1a06115ca87159872058c023f95791dd30" kindref="member">raise_fiducial_model_err</ref>(self):</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>(JR)<sp/>for<sp/>use<sp/>with<sp/>GAMBIT:<sp/>GAMBIT<sp/>does<sp/>not<sp/>have<sp/>an<sp/>initial<sp/>best-fit<sp/>guess<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>the<sp/>practice<sp/>of<sp/>erasing<sp/>the<sp/>cosmo<sp/>container<sp/>and<sp/>refilling<sp/>it<sp/>does<sp/>not<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>in<sp/>the<sp/>GAMBIT<sp/>interface.<sp/>Hence,<sp/>potential<sp/>fiducial<sp/>model<sp/>parameters</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>likelihoods<sp/>may<sp/>need<sp/>have<sp/>to<sp/>be<sp/>provided.<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>io_mp.LikelihoodError(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>using<sp/>the<sp/>likelihood<sp/>&apos;%s&apos;.<sp/>For<sp/>this<sp/>likelihood,<sp/>spectra<sp/>for<sp/>a<sp/>fiducial<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;have<sp/>to<sp/>be<sp/>computed<sp/>before<sp/>the<sp/>likelihood<sp/>can<sp/>be<sp/>used.<sp/>In<sp/>MontePython<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;this<sp/>happens<sp/>automatically<sp/>before<sp/>the<sp/>computation<sp/>of<sp/>the<sp/>first<sp/>parameter<sp/>point.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;However,<sp/>the<sp/>implementation<sp/>of<sp/>these<sp/>computations<sp/>is<sp/>problematic<sp/>for<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;current<sp/>interface<sp/>with<sp/>GAMBIT.<sp/>If<sp/>you<sp/>want<sp/>to<sp/>use<sp/>this<sp/>likelihood,<sp/>unfortunately<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;at<sp/>the<sp/>moment<sp/>you<sp/>have<sp/>to<sp/>produce<sp/>the<sp/>fiducial<sp/>file<sp/>yourself<sp/>by<sp/>running<sp/>the<sp/>likelihood<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>with<sp/>MontePython<sp/>standalone.<sp/>Copy<sp/>the<sp/>fiducial<sp/>file<sp/>that<sp/>is<sp/>created<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;into<sp/>the<sp/>MontePython<sp/>folder<sp/>in<sp/>&lt;gambit_dir&gt;/Backends/installed/montepythonlike/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;version&gt;/data/&lt;fiducial_file_name&gt;.&quot;</highlight><highlight class="normal">%(self.__class__.__name__,self.__class__.__name__))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood_1a18aba084dc45c091734638bbdee49592" kindref="member">read_from_file</ref>(self,<sp/>path,<sp/>data,<sp/>command_line):</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Extract<sp/>the<sp/>information<sp/>from<sp/>the<sp/>log.param<sp/>concerning<sp/>this<sp/>likelihood.</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>log.param<sp/>is<sp/>used,<sp/>check<sp/>that<sp/>at<sp/>least<sp/>one<sp/>item<sp/>for<sp/>each</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>is<sp/>recovered.<sp/>Otherwise,<sp/>it<sp/>means<sp/>the<sp/>log.param<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contain<sp/>information<sp/>on<sp/>the<sp/>likelihood.<sp/>This<sp/>happens<sp/>when<sp/>the<sp/>first<sp/>run</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fails<sp/>early,<sp/>before<sp/>calling<sp/>the<sp/>likelihoods,<sp/>and<sp/>the<sp/>program<sp/>did<sp/>not</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log<sp/>the<sp/>information.<sp/>This<sp/>check<sp/>might<sp/>not<sp/>be<sp/>completely<sp/>secure,<sp/>but<sp/>it</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>better<sp/>than<sp/>nothing.</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>warning::</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>checks<sp/>relies<sp/>on<sp/>the<sp/>fact<sp/>that<sp/>a<sp/>likelihood<sp/>should<sp/>always<sp/>have</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>least<sp/>**one**<sp/>line<sp/>of<sp/>code<sp/>written<sp/>in<sp/>the<sp/>likelihood.data<sp/>file.</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>should<sp/>be<sp/>always<sp/>true,<sp/>but<sp/>in<sp/>case<sp/>a<sp/>run<sp/>fails<sp/>with<sp/>the<sp/>error</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>described<sp/>below,<sp/>think<sp/>about<sp/>it.</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>warning::</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>As<sp/>of<sp/>version<sp/>2.0.2,<sp/>you<sp/>can<sp/>specify<sp/>likelihood<sp/>options<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameter<sp/>file.<sp/>They<sp/>have<sp/>complete<sp/>priority<sp/>over<sp/>the<sp/>ones<sp/>specified</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>`likelihood.data`<sp/>file,<sp/>and<sp/>it<sp/>will<sp/>be<sp/>reflected<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`log.param`<sp/>file.</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Counting<sp/>how<sp/>many<sp/>lines<sp/>are<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a9b3ab577e3c9ab16a7254579755078ee" kindref="member">path</ref><sp/>=<sp/>path</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1aa6c68f2868da79f600c9a1fdc912e799" kindref="member">dictionary</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(path):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_file<sp/>=<sp/>open(path,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>data_file:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>==<sp/>-1:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line.find(self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>+</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Recover<sp/>the<sp/>name<sp/>and<sp/>value<sp/>from<sp/>the<sp/>.data<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regexp<sp/>=<sp/>re.match(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s.(.*)\s*=\s*(.*)&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>,<sp/>line)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>value<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem.strip()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>elem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>regexp.groups())</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>this<sp/>name<sp/>was<sp/>already<sp/>defined<sp/>in<sp/>the<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>file,<sp/>be<sp/>sure<sp/>to<sp/>take<sp/>this<sp/>value<sp/>instead.<sp/>Beware,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>there<sp/>are<sp/>a<sp/>few<sp/>parameters<sp/>which<sp/>are<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>predefined,<sp/>such<sp/>as<sp/>data_directory,<sp/>which<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ignored<sp/>in<sp/>this<sp/>check.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_ignored<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1ae9bf5af937608f0cc8d715aaeab46333" kindref="member">default_values</ref>:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>getattr(self,<sp/>name)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_ignored<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>is_ignored:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;is_ignored<sp/>is<sp/>True&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(name,<sp/>&quot;<sp/>&quot;,<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="stringliteral">&apos;self.&apos;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&apos;<sp/>=<sp/>&apos;</highlight><highlight class="normal">+value)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>getattr(self,<sp/>name)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1aa6c68f2868da79f600c9a1fdc912e799" kindref="member">dictionary</ref>[name]<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_file.seek(0)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_file.close()</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>io_mp.ConfigurationError(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file<sp/>%s.<sp/>Make<sp/>sure<sp/>it<sp/>exists<sp/>and<sp/>check<sp/>for<sp/>typos!\n<sp/>\t<sp/>(Remember<sp/>to<sp/>pass<sp/>the<sp/>path<sp/>to<sp/>the<sp/>file<sp/>relative<sp/>to<sp/>your<sp/>GAMBIT<sp/>directory)&quot;</highlight><highlight class="normal"><sp/>%<sp/>path)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Checking<sp/>that<sp/>at<sp/>least<sp/>one<sp/>line<sp/>was<sp/>read,<sp/>exiting<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>counter<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>io_mp.ConfigurationError(</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>information<sp/>on<sp/>%s<sp/>likelihood<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>+</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;was<sp/>found<sp/>in<sp/>the<sp/>%s<sp/>file.\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>path<sp/>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood_1ac1ff5b8bdb6b8b48db3fbd216f166bd4" kindref="member">get_cl</ref>(self,<sp/>cosmo,<sp/>l_max=-1):</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>the<sp/>:math:`C_{\ell}`<sp/>from<sp/>the<sp/>cosmological<sp/>code<sp/>in</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`\mu<sp/>{\\rm<sp/>K}^2`</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>C_l^XX<sp/>from<sp/>the<sp/>cosmological<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl<sp/>=<sp/>cosmo.lensed_cl(int(l_max))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>convert<sp/>dimensionless<sp/>C_l&apos;s<sp/>to<sp/>C_l<sp/>in<sp/>muK**2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/>cosmo.T_cmb()</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(JR)<sp/>fix<sp/>python3<sp/>compatibility<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cl.keys():</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>All<sp/>quantities<sp/>need<sp/>to<sp/>be<sp/>multiplied<sp/>by<sp/>this<sp/>factor,<sp/>except<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>phi-phi<sp/>term,<sp/>that<sp/>is<sp/>already<sp/>dimensionless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;pp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;ell&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl[key]<sp/>*=<sp/>(T*1.e6)**2</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood_1ae7c283d2d9fbd1592cbd27e35d5554cb" kindref="member">get_unlensed_cl</ref>(self,<sp/>cosmo,<sp/>l_max=-1):</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>the<sp/>:math:`C_{\ell}`<sp/>from<sp/>the<sp/>cosmological<sp/>code<sp/>in</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`\mu<sp/>{\\rm<sp/>K}^2`</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>C_l^XX<sp/>from<sp/>the<sp/>cosmological<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl<sp/>=<sp/>cosmo.raw_cl(l_max)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>convert<sp/>dimensionless<sp/>C_l&apos;s<sp/>to<sp/>C_l<sp/>in<sp/>muK**2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/>cosmo.T_cmb()</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cl.iterkeys():</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>All<sp/>quantities<sp/>need<sp/>to<sp/>be<sp/>multiplied<sp/>by<sp/>this<sp/>factor,<sp/>except<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>phi-phi<sp/>term,<sp/>that<sp/>is<sp/>already<sp/>dimensionless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;pp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;ell&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl[key]<sp/>*=<sp/>(T*1.e6)**2</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(self,<sp/>data,<sp/>dictionary):</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ensure<sp/>that<sp/>the<sp/>arguments<sp/>of<sp/>dictionary<sp/>are<sp/>defined<sp/>to<sp/>the<sp/>correct</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>in<sp/>the<sp/>cosmological<sp/>code</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>warning::</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>So<sp/>far<sp/>there<sp/>is<sp/>no<sp/>way<sp/>to<sp/>enforce<sp/>a<sp/>parameter<sp/>where<sp/>`smaller<sp/>is</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>better`.<sp/>A<sp/>bigger<sp/>value<sp/>will<sp/>always<sp/>overried<sp/>any<sp/>smaller<sp/>one</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(`cl_max`,<sp/>etc...)</highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>:<sp/>dict</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialized<sp/>instance<sp/>of<sp/>:class:`data`</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary<sp/>:<sp/>dict</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Desired<sp/>precision<sp/>for<sp/>some<sp/>cosmological<sp/>parameters</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_flag<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key,<sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary.items():</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.cosmo_arguments[key]</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(data.cosmo_arguments[key])</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_flag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_flag<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>TypeError:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_flag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_flag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(value)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_flag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.cosmo_arguments[key]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_flag<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.cosmo_arguments[key]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>TypeError:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_flag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_flag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_flag<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data.cosmo_arguments[key].find(value)<sp/>==<sp/>-1:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.cosmo_arguments[key]<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">+value+</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>array_flag<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>float(data.cosmo_arguments[key])<sp/>&lt;<sp/>float(value):</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.cosmo_arguments[key]<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.cosmo_arguments[key]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;%.2g&apos;</highlight><highlight class="normal"><sp/>%<sp/>value[0]</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>len(value)):</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.cosmo_arguments[key]<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;,%.2g&apos;</highlight><highlight class="normal"><sp/>%<sp/>(value[i])</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">read_contamination_spectra(self,<sp/>data):</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref>:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>spectrum<sp/>contamination<sp/>(so<sp/>far,<sp/>assumes<sp/>only<sp/>temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>contamination;<sp/>will<sp/>be<sp/>trivial<sp/>to<sp/>generalize<sp/>to<sp/>polarization<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>such<sp/>templates<sp/>will<sp/>become<sp/>relevant)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,<sp/></highlight><highlight class="stringliteral">&quot;%s_contamination&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.zeros(self.l_max+1,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>File<sp/>=<sp/>open(os.path.join(</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>getattr(self,<sp/></highlight><highlight class="stringliteral">&quot;%s_file&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance)),</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>File:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>int(float(line.split()[0]))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((l<sp/>&gt;=<sp/>2)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(l<sp/>&lt;=<sp/>self.l_max)):</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec<sp/>(</highlight><highlight class="stringliteral">&quot;self.%s_contamination[l]=float(line.split()[1])/(l*(l+1.)/2./math.pi)&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;Warning:<sp/>you<sp/>did<sp/>not<sp/>pass<sp/>a<sp/>file<sp/>name<sp/>containing<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;a<sp/>contamination<sp/>spectrum<sp/>regulated<sp/>by<sp/>the<sp/>nuisance<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;parameter<sp/>&apos;</highlight><highlight class="normal">,nuisance)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>renormalization<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>it<sp/>is<sp/>not<sp/>there,<sp/>assume<sp/>it<sp/>is<sp/>one,<sp/>i.e.<sp/>do<sp/>not<sp/>renormalize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>do<sp/>the<sp/>following<sp/>operation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.nuisance_contamination<sp/>*=<sp/>float(self.nuisance_scale)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,<sp/></highlight><highlight class="stringliteral">&quot;%s_contamination&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getattr(self,<sp/></highlight><highlight class="stringliteral">&quot;%s_contamination&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance)<sp/>*</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(getattr(self,<sp/></highlight><highlight class="stringliteral">&quot;%s_scale&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance)))</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>central<sp/>value<sp/>of<sp/>nuisance<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>it<sp/>is<sp/>not<sp/>there,<sp/>assume<sp/>one<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getattr(self,<sp/></highlight><highlight class="stringliteral">&quot;%s_prior_center&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,<sp/></highlight><highlight class="stringliteral">&quot;%s_prior_center&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance,<sp/>1.)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>variance<sp/>of<sp/>nuisance<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>it<sp/>is<sp/>not<sp/>there,<sp/>assume<sp/>flat<sp/>prior<sp/>(encoded<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>variance=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getattr(self,<sp/></highlight><highlight class="stringliteral">&quot;%s_prior_variance&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,<sp/></highlight><highlight class="stringliteral">&quot;%s_prior_variance&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance,<sp/>0.)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">add_contamination_spectra(self,<sp/>cl,<sp/>data):</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Recover<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>nuisance<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref>:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuisance_value<sp/>=<sp/>float(</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.mcmc_parameters[nuisance][</highlight><highlight class="stringliteral">&apos;current&apos;</highlight><highlight class="normal">]<sp/>*</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.mcmc_parameters[nuisance][</highlight><highlight class="stringliteral">&apos;scale&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>contamination<sp/>spectra<sp/>multiplied<sp/>by<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2,<sp/>self.l_max):</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec<sp/>(</highlight><highlight class="stringliteral">&quot;cl[&apos;tt&apos;][l]<sp/>+=<sp/>nuisance_value*self.%s_contamination[l]&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">add_nuisance_prior(self,<sp/>lkl,<sp/>data):</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(JR)<sp/>what&apos;s<sp/>been<sp/>here<sp/>(commented<sp/>below)<sp/>to<sp/>avoid<sp/>the<sp/>use<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>additional<sp/>likelihoods<sp/>without<sp/>explicitly<sp/>choosing<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warnings.warn(</highlight><highlight class="stringliteral">&quot;\n\n/!\<sp/><sp/>WARNING<sp/>/!\<sp/>\n\nEntered<sp/>the<sp/>Likelihood<sp/>object&apos;s<sp/>attribute<sp/>&apos;add_nuisance_prior&apos;.\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;In<sp/>MontePython,<sp/>this<sp/>routine<sp/>treats<sp/>the<sp/>prior<sp/>as<sp/>a<sp/>likelihood<sp/>and\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;and<sp/>adds<sp/>the<sp/>value<sp/>to<sp/>the<sp/>total<sp/>LogLike.\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>an<sp/>implicit<sp/>addition<sp/>of<sp/>a<sp/>likelihood<sp/>on<sp/>a<sp/>nuisance<sp/>parameter\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;and<sp/>can<sp/>lead<sp/>to<sp/>over-estimated<sp/>constraints<sp/>as<sp/>the<sp/>same<sp/>information\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;enters<sp/>the<sp/>posterior<sp/>and<sp/>the<sp/>prior.\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Therefore,<sp/>we<sp/>skip<sp/>this<sp/>step<sp/>for<sp/>the<sp/>use<sp/>within<sp/>GAMBIT.\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>you<sp/>want<sp/>to<sp/>add<sp/>a<sp/>likelihood<sp/>for<sp/>a<sp/>nuisance<sp/>parameter,<sp/>you.\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can<sp/>do<sp/>this<sp/>by<sp/>implementing<sp/>a<sp/>simple<sp/>Gaussian<sp/>likelihood<sp/>for<sp/>them.\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;See,<sp/>e.g.<sp/>&apos;BK14priors&apos;.\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>relevant<sp/>for<sp/>all<sp/>likelihoods<sp/>deriving<sp/>from<sp/>the<sp/>class<sp/>&apos;Likelihood_newdat&apos;.&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;At<sp/>the<sp/>moment,<sp/>these<sp/>are:\n\t-<sp/>acbar\n\t-<sp/>bicep\n\t&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-<sp/>boomerang\n\t-<sp/>cbi\n\t-<sp/>quad\n\t-<sp/>spt\n\t-<sp/>spt_2500\n\t&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-<sp/>wmap\n\t-<sp/>wmap_9yr&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Recover<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>nuisance<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#for<sp/>nuisance<sp/>in<sp/>self.use_nuisance:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>nuisance_value<sp/>=<sp/>float(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.mcmc_parameters[nuisance][&apos;current&apos;]<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.mcmc_parameters[nuisance][&apos;scale&apos;])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>prior<sp/>on<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>getattr(self,<sp/>&quot;%s_prior_variance&quot;<sp/>%<sp/>nuisance)<sp/>&gt;<sp/>0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>#<sp/>convenience<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>prior_center<sp/>=<sp/>getattr(self,<sp/>&quot;%s_prior_center&quot;<sp/>%<sp/>nuisance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>prior_variance<sp/>=<sp/>getattr(self,<sp/>&quot;%s_prior_variance&quot;<sp/>%<sp/>nuisance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>lkl<sp/>+=<sp/>-0.5*((nuisance_value-prior_center)/prior_variance)**2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lkl</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood_1a71902d23c369807b5f464b1abf418892" kindref="member">computeLikelihood</ref>(self,<sp/>ctx):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Interface<sp/>with<sp/>CosmoHammer</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx<sp/>:<sp/>Context</highlight></codeline>
<codeline lineno="407"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Contains<sp/>several<sp/>dictionaries<sp/>storing<sp/>data<sp/>and<sp/>cosmological</highlight></codeline>
<codeline lineno="408"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>information</highlight></codeline>
<codeline lineno="409"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Recover<sp/>both<sp/>instances<sp/>from<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosmo<sp/>=<sp/>ctx.get(</highlight><highlight class="stringliteral">&quot;cosmo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>ctx.get(</highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loglkl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a1bd59854b9f84f9bf89641bf981b3493" kindref="member">loglkl</ref>(cosmo,<sp/>data)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loglkl</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#def<sp/>compute_loglkl_MPLike():</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="classMontePythonLike_1_1Likelihood__prior" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__prior" kindref="compound">Likelihood_prior</ref>(<ref refid="classMontePythonLike_1_1Likelihood" kindref="compound">Likelihood</ref>):</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">loglkl(self):</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&apos;Must<sp/>implement<sp/>method<sp/>loglkl()<sp/>in<sp/>your<sp/>likelihood&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="classMontePythonLike_1_1Likelihood__newdat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__newdat" kindref="compound">Likelihood_newdat</ref>(<ref refid="classMontePythonLike_1_1Likelihood" kindref="compound">Likelihood</ref>):</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__newdat_1a3e4ad84990e9bf3df24cd0d234d3ec85" kindref="member">__init__</ref>(self,<sp/>path,<sp/>data,<sp/>command_line):</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Likelihood.__init__(self,<sp/>path,<sp/>data,<sp/>command_line)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>{</highlight><highlight class="stringliteral">&apos;lensing&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;output&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;tCl<sp/>lCl<sp/>pCl&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>open<sp/>.newdat<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newdatfile<sp/>=<sp/>open(</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>beginning<sp/>of<sp/>window<sp/>functions<sp/>file<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window_name<sp/>=<sp/>newdatfile.readline().strip(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>initialize<sp/>list<sp/>of<sp/>fist<sp/>and<sp/>last<sp/>band<sp/>for<sp/>each<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_num<sp/>=<sp/>np.zeros(6,<sp/></highlight><highlight class="stringliteral">&apos;int&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_min<sp/>=<sp/>np.zeros(6,<sp/></highlight><highlight class="stringliteral">&apos;int&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_max<sp/>=<sp/>np.zeros(6,<sp/></highlight><highlight class="stringliteral">&apos;int&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>number<sp/>of<sp/>bands<sp/>for<sp/>each<sp/>of<sp/>the<sp/>six<sp/>types<sp/>TT,<sp/>EE,<sp/>BB,<sp/>EB,<sp/>TE,<sp/>TB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>newdatfile.readline()</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(6):</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_num[i]<sp/>=<sp/>int(line.split()[i])</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>string<sp/>equal<sp/>to<sp/>&apos;BAND_SELECTION&apos;<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>str(newdatfile.readline()).strip(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>yes,<sp/>read<sp/>6<sp/>lines<sp/>containing<sp/>&apos;min,<sp/>max&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;BAND_SELECTION&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(6):</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>newdatfile.readline()</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_min[i]<sp/>=<sp/>int(line.split()[0])</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_max[i]<sp/>=<sp/>int(line.split()[1])</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>no,<sp/>set<sp/>min<sp/>to<sp/>1<sp/>and<sp/>max<sp/>to<sp/>band_num<sp/>(=use<sp/>all<sp/>bands)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_min<sp/>=<sp/>[1<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(6)]</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_max<sp/>=<sp/>band_num</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>line<sp/>defining<sp/>calibration<sp/>uncertainty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>contains:<sp/>flag<sp/>(=0<sp/>or<sp/>1),<sp/>calib,<sp/>calib_uncertainty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>newdatfile.readline()</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>=<sp/>float(line.split()[1])</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int(line.split()[0])<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a6c387bad9757edc357d4638de7bf5442" kindref="member">calib_uncertainty</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a6c387bad9757edc357d4638de7bf5442" kindref="member">calib_uncertainty</ref><sp/>=<sp/>float(line.split()[2])</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>line<sp/>defining<sp/>beam<sp/>uncertainty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>contains:<sp/>flag<sp/>(=0,<sp/>1<sp/>or<sp/>2),<sp/>beam_width,<sp/>beam_sigma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>newdatfile.readline()</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam_type<sp/>=<sp/>int(line.split()[0])</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beam_type<sp/>&gt;<sp/>0):</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ad8055d87268553aca745b7639a638a6c" kindref="member">has_beam_uncertainty</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ad8055d87268553aca745b7639a638a6c" kindref="member">has_beam_uncertainty</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam_width<sp/>=<sp/>float(line.split()[1])</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam_sigma<sp/>=<sp/>float(line.split()[2])</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>flag<sp/>(=<sp/>0,<sp/>1<sp/>or<sp/>2)<sp/>for<sp/>lognormal<sp/>distributions<sp/>and<sp/>xfactors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>newdatfile.readline()</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood_type<sp/>=<sp/>int(line.split()[0])</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likelihood_type<sp/>&gt;<sp/>0):</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ac01af80a9559b79191af70af3cdb8b2e" kindref="member">has_xfactors</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ac01af80a9559b79191af70af3cdb8b2e" kindref="member">has_xfactors</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>declare<sp/>array<sp/>of<sp/>quantitites<sp/>describing<sp/>each<sp/>point<sp/>of<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>size<sp/>yet<sp/>unknown,<sp/>it<sp/>will<sp/>be<sp/>found<sp/>later<sp/>and<sp/>stored<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.num_points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref><sp/>=<sp/>np.array([],<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ab4dcfed9c0cdc1a67f3489bb9b4c9079" kindref="member">var</ref><sp/>=<sp/>np.array([],<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref><sp/>=<sp/>np.array([],<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1af81e03a1e428fd718dd7e8fdf6f40226" kindref="member">has_xfactor</ref><sp/>=<sp/>np.array([],<sp/></highlight><highlight class="stringliteral">&apos;bool&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc6a99c00b3e1b80fe7c332a4c2c327e" kindref="member">xfactor</ref><sp/>=<sp/>np.array([],<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>temporary<sp/>array<sp/>to<sp/>know<sp/>which<sp/>bands<sp/>are<sp/>actually<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used_index<sp/>=<sp/>np.array([],<sp/></highlight><highlight class="stringliteral">&apos;int&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scan<sp/>the<sp/>lines<sp/>describing<sp/>each<sp/>point<sp/>of<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cltype<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(6):</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int(band_num[cltype])<sp/>!=<sp/>0):</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>name<sp/>(but<sp/>do<sp/>not<sp/>use<sp/>it)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newdatfile.readline()</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>band<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(int(band_num[cltype])):</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>one<sp/>line<sp/>corresponding<sp/>to<sp/>one<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>newdatfile.readline()</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>we<sp/>wish<sp/>to<sp/>actually<sp/>use<sp/>this<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((band<sp/>&gt;=<sp/>band_min[cltype]-1)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(band<sp/>&lt;=<sp/>band_max[cltype]-1)):</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used_index<sp/>=<sp/>np.append(used_index,<sp/>index)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref><sp/>=<sp/>np.append(</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref>,<sp/>float(line.split()[1])*calib**2)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ab4dcfed9c0cdc1a67f3489bb9b4c9079" kindref="member">var</ref><sp/>=<sp/>np.append(</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ab4dcfed9c0cdc1a67f3489bb9b4c9079" kindref="member">var</ref>,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.5*(float(line.split()[2])<sp/>+</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(line.split()[3]))*calib**2)**2)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc6a99c00b3e1b80fe7c332a4c2c327e" kindref="member">xfactor</ref><sp/>=<sp/>np.append(</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc6a99c00b3e1b80fe7c332a4c2c327e" kindref="member">xfactor</ref>,<sp/>float(line.split()[4])*calib**2)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likelihood_type<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((likelihood_type<sp/>==<sp/>2)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int(line.split()[7])<sp/>==<sp/>0))):</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1af81e03a1e428fd718dd7e8fdf6f40226" kindref="member">has_xfactor</ref><sp/>=<sp/>np.append(</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1af81e03a1e428fd718dd7e8fdf6f40226" kindref="member">has_xfactor</ref>,<sp/>[</highlight><highlight class="keyword">False</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likelihood_type<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((likelihood_type<sp/>==<sp/>2)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int(line.split()[7])<sp/>==<sp/>1))):</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1af81e03a1e428fd718dd7e8fdf6f40226" kindref="member">has_xfactor</ref><sp/>=<sp/>np.append(</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1af81e03a1e428fd718dd7e8fdf6f40226" kindref="member">has_xfactor</ref>,<sp/>[</highlight><highlight class="keyword">True</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beam_type<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref><sp/>=<sp/>np.append(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref>,<sp/>0.)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beam_type<sp/>==<sp/>1):</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_mid<sp/>=<sp/>float(line.split()[5])<sp/>+\</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5*(float(line.split()[5])<sp/>+</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(line.split()[6]))</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref><sp/>=<sp/>np.append(</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref>,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abs(math.exp(</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-l_mid*(l_mid+1)*1.526e-8*2.*beam_sigma<sp/>*</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam_width)-1.))</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beam_type<sp/>==<sp/>2):</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likelihood_type<sp/>==<sp/>2):</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref><sp/>=<sp/>np.append(</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref>,<sp/>float(line.split()[8]))</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref><sp/>=<sp/>np.append(</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref>,<sp/>float(line.split()[7]))</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>now,<sp/>skip<sp/>and<sp/>unused<sp/>part<sp/>of<sp/>the<sp/>file<sp/>(with<sp/>sub-correlation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>matrices)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>band<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(int(band_num[cltype])):</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newdatfile.readline()</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>number<sp/>of<sp/>points<sp/>that<sp/>we<sp/>will<sp/>actually<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref><sp/>=<sp/>np.shape(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref>)[0]</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>total<sp/>number<sp/>of<sp/>points,<sp/>including<sp/>unused<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_num_points<sp/>=<sp/>index+1</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>full<sp/>correlation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_covmat<sp/>=<sp/>np.zeros((full_num_points,<sp/>full_num_points),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>point<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(full_num_points):</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_covmat[point]<sp/>=<sp/>newdatfile.readline().split()</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>extract<sp/>smaller<sp/>correlation<sp/>matrix<sp/>for<sp/>points<sp/>actually<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covmat<sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>point<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covmat[point]<sp/>=<sp/>full_covmat[used_index[point],<sp/>used_index]</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>recalibrate<sp/>this<sp/>correlation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covmat<sp/>*=<sp/>calib**4</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>redefine<sp/>the<sp/>correlation<sp/>matrix,<sp/>the<sp/>observed<sp/>points<sp/>and<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>variance<sp/>in<sp/>case<sp/>of<sp/>lognormal<sp/>likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ac01af80a9559b79191af70af3cdb8b2e" kindref="member">has_xfactors</ref>):</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1af81e03a1e428fd718dd7e8fdf6f40226" kindref="member">has_xfactor</ref>[i]):</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covmat[i,<sp/>j]<sp/>/=<sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref>[i]+self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc6a99c00b3e1b80fe7c332a4c2c327e" kindref="member">xfactor</ref>[i])</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1af81e03a1e428fd718dd7e8fdf6f40226" kindref="member">has_xfactor</ref>[j]):</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covmat[i,<sp/>j]<sp/>/=<sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref>[j]+self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc6a99c00b3e1b80fe7c332a4c2c327e" kindref="member">xfactor</ref>[j])</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1af81e03a1e428fd718dd7e8fdf6f40226" kindref="member">has_xfactor</ref>[i]):</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ab4dcfed9c0cdc1a67f3489bb9b4c9079" kindref="member">var</ref>[i]<sp/>/=<sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref>[i]+self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc6a99c00b3e1b80fe7c332a4c2c327e" kindref="member">xfactor</ref>[i])**2</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref>[i]<sp/>=<sp/>math.log(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref>[i]+self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc6a99c00b3e1b80fe7c332a4c2c327e" kindref="member">xfactor</ref>[i])</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>invert<sp/>correlation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a3235322611668c52c71a6e4419392cba" kindref="member">inv_covmat</ref><sp/>=<sp/>np.linalg.inv(covmat)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>window<sp/>function<sp/>files<sp/>a<sp/>first<sp/>time,<sp/>only<sp/>for<sp/>finding<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>smallest<sp/>and<sp/>largest<sp/>l&apos;s<sp/>for<sp/>each<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a34d030bd85eaaeed4c22da219b741b31" kindref="member">win_min</ref><sp/>=<sp/>np.zeros(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>,<sp/></highlight><highlight class="stringliteral">&apos;int&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a634b062b439a1296105916cea735d57b" kindref="member">win_max</ref><sp/>=<sp/>np.zeros(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>,<sp/></highlight><highlight class="stringliteral">&apos;int&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>point<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>open(os.path.join(</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/></highlight><highlight class="stringliteral">&apos;windows&apos;</highlight><highlight class="normal">,<sp/>window_name)<sp/>+</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str(used_index[point]+1),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>any([float(line.split()[i])<sp/>!=<sp/>0.</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>len(line.split()))]):</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a34d030bd85eaaeed4c22da219b741b31" kindref="member">win_min</ref>[point]<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a34d030bd85eaaeed4c22da219b741b31" kindref="member">win_min</ref>[point]<sp/>=<sp/>int(line.split()[0])</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a634b062b439a1296105916cea735d57b" kindref="member">win_max</ref>[point]<sp/>=<sp/>int(line.split()[0])</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>infer<sp/>from<sp/>format<sp/>of<sp/>window<sp/>function<sp/>files<sp/>whether<sp/>we<sp/>will<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>polarisation<sp/>spectra<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_col<sp/>=<sp/>len(line.split())</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_col<sp/>==<sp/>2):</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a394c470b08d0ddd555b5f4f58cdabad5" kindref="member">has_pol</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_col<sp/>==<sp/>5):</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a394c470b08d0ddd555b5f4f58cdabad5" kindref="member">has_pol</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;In<sp/>likelihood<sp/>%s.<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>+</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Window<sp/>function<sp/>files<sp/>are<sp/>understood<sp/>if<sp/>they<sp/>contain<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2<sp/>columns<sp/>(l<sp/>TT),<sp/>or<sp/>5<sp/>columns<sp/>(l<sp/>TT<sp/>TE<sp/>EE<sp/>BB).&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;In<sp/>this<sp/>case<sp/>the<sp/>number<sp/>of<sp/>columns<sp/>is<sp/>%d&quot;</highlight><highlight class="normal"><sp/>%<sp/>num_col)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>define<sp/>array<sp/>of<sp/>window<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a30b00836ae03c1550464e2a0184f2766" kindref="member">window</ref><sp/>=<sp/>np.zeros(</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>,<sp/>max(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a634b062b439a1296105916cea735d57b" kindref="member">win_max</ref>)+1,<sp/>num_col-1),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>go<sp/>again<sp/>through<sp/>window<sp/>function<sp/>file,<sp/>this<sp/>time<sp/>reading<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>functions;<sp/>that<sp/>are<sp/>distributed<sp/>as:<sp/>l<sp/>TT<sp/>(TE<sp/>EE<sp/>BB)<sp/>where<sp/>the<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>columns<sp/>contaim<sp/>W_l/l,<sp/>not<sp/>W_l<sp/>we<sp/>mutiply<sp/>by<sp/>l<sp/>in<sp/>order<sp/>to<sp/>store<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>actual<sp/>W_l</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>point<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>open(os.path.join(</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/></highlight><highlight class="stringliteral">&apos;windows&apos;</highlight><highlight class="normal">,<sp/>window_name)<sp/>+</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str(used_index[point]+1),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>int(line.split()[0])</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a394c470b08d0ddd555b5f4f58cdabad5" kindref="member">has_pol</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(len(line.split())<sp/>!=<sp/>2))</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>((self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a394c470b08d0ddd555b5f4f58cdabad5" kindref="member">has_pol</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(len(line.split())<sp/>!=<sp/>5))):</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;In<sp/>likelihood<sp/>%s.<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>+</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;for<sp/>a<sp/>given<sp/>experiment,<sp/>all<sp/>window<sp/>functions<sp/>should&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>have<sp/>the<sp/>same<sp/>number<sp/>of<sp/>columns,<sp/>2<sp/>or<sp/>5.<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>not<sp/>the<sp/>case<sp/>here.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((l<sp/>&gt;=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a34d030bd85eaaeed4c22da219b741b31" kindref="member">win_min</ref>[point])<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(l<sp/>&lt;=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a634b062b439a1296105916cea735d57b" kindref="member">win_max</ref>[point])):</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a30b00836ae03c1550464e2a0184f2766" kindref="member">window</ref>[point,<sp/>l,<sp/>:]<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(line.split()[i])</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>len(line.split()))]</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a30b00836ae03c1550464e2a0184f2766" kindref="member">window</ref>[point,<sp/>l,<sp/>:]<sp/>*=<sp/>l</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>eventually,<sp/>initialise<sp/>quantitites<sp/>used<sp/>in<sp/>the<sp/>marginalization<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ac01af80a9559b79191af70af3cdb8b2e" kindref="member">has_xfactors</ref>)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a6c387bad9757edc357d4638de7bf5442" kindref="member">calib_uncertainty</ref><sp/>&gt;<sp/>1.e-4)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ad8055d87268553aca745b7639a638a6c" kindref="member">has_beam_uncertainty</ref>))):</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref><sp/>=<sp/>5</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc1f0a19270d36ad191a9bd4bb88f959" kindref="member">margeweights</ref><sp/>=<sp/>np.zeros(2*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>+1,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(-self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>+1):</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc1f0a19270d36ad191a9bd4bb88f959" kindref="member">margeweights</ref>[i+self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>]<sp/>=<sp/>np.exp(</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(float(i)*3./float(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>))**2/2)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a1b6e533b721d681d7f02a3946ffb3465" kindref="member">margenorm</ref><sp/>=<sp/>sum(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc1f0a19270d36ad191a9bd4bb88f959" kindref="member">margeweights</ref>)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>maximum<sp/>value<sp/>of<sp/>l<sp/>needed<sp/>by<sp/>window<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a33c1061d1503880feb366fcc7e5a1174" kindref="member">l_max</ref><sp/>=<sp/>max(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a634b062b439a1296105916cea735d57b" kindref="member">win_max</ref>)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>impose<sp/>that<sp/>the<sp/>cosmological<sp/>code<sp/>computes<sp/>Cl&apos;s<sp/>up<sp/>to<sp/>maximum<sp/>l</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>needed<sp/>by<sp/>the<sp/>window<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(data,<sp/>{</highlight><highlight class="stringliteral">&apos;l_max_scalars&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a33c1061d1503880feb366fcc7e5a1174" kindref="member">l_max</ref>})</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>deal<sp/>with<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" kindref="member">nuisance</ref><sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" kindref="member">nuisance</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a0bc7beb0fbbeed0d73b5d661f1749c7f" kindref="member">read_contamination_spectra</ref>(data)</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>end<sp/>of<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__newdat_1a0ee47a3063871142b7f5257f4859af56" kindref="member">loglkl</ref>(self,<sp/>cosmo,<sp/>data):</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>Cl&apos;s<sp/>from<sp/>the<sp/>cosmological<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1ac1ff5b8bdb6b8b48db3fbd216f166bd4" kindref="member">get_cl</ref>(cosmo)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>contamination<sp/>spectra<sp/>multiplied<sp/>by<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a97ebff9c54532b18e46bca282e91324f" kindref="member">add_contamination_spectra</ref>(cl,<sp/>data)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lkl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a63b2b921701292f8fe30a74d861c82c0" kindref="member">compute_lkl</ref>(cl,<sp/>cosmo,<sp/>data)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>prior<sp/>on<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lkl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a292608fe142cbc66bcfc5a62c0c8cba5" kindref="member">add_nuisance_prior</ref>(lkl,<sp/>data)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lkl</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">compute_lkl(self,<sp/>cl,<sp/>cosmo,<sp/>data):</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>checks<sp/>that<sp/>Cl&apos;s<sp/>have<sp/>been<sp/>computed<sp/>up<sp/>to<sp/>high<sp/>enough<sp/>l<sp/>given<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>function<sp/>range.<sp/>Normally<sp/>this<sp/>has<sp/>been<sp/>imposed<sp/>before,<sp/>so<sp/>this<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>could<sp/>even<sp/>be<sp/>supressed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(np.shape(cl[</highlight><highlight class="stringliteral">&apos;tt&apos;</highlight><highlight class="normal">])[0]-1<sp/>&lt;<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a33c1061d1503880feb366fcc7e5a1174" kindref="member">l_max</ref>):</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>computed<sp/>Cls<sp/>till<sp/>l=&quot;</highlight><highlight class="normal"><sp/>%<sp/>data.cosmological_module_name<sp/>+</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>(np.shape(cl[</highlight><highlight class="stringliteral">&apos;tt&apos;</highlight><highlight class="normal">])[0]-1)<sp/>+</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;while<sp/>window<sp/>functions<sp/>need<sp/>%d.&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a33c1061d1503880feb366fcc7e5a1174" kindref="member">l_max</ref>)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>theoretical<sp/>bandpowers,<sp/>store<sp/>them<sp/>in<sp/>theo[points]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theo<sp/>=<sp/>np.zeros(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>point<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>bandpowers<sp/>B_l<sp/>by<sp/>convolving<sp/>C_l&apos;s<sp/>with<sp/>[(l+1/2)/2pi<sp/>W_l]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a34d030bd85eaaeed4c22da219b741b31" kindref="member">win_min</ref>[point],<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a634b062b439a1296105916cea735d57b" kindref="member">win_max</ref>[point]):</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theo[point]<sp/>+=<sp/>cl[</highlight><highlight class="stringliteral">&apos;tt&apos;</highlight><highlight class="normal">][l]*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a30b00836ae03c1550464e2a0184f2766" kindref="member">window</ref>[point,<sp/>l,<sp/>0]<sp/>*\</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(l+0.5)/2./math.pi</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a394c470b08d0ddd555b5f4f58cdabad5" kindref="member">has_pol</ref>):</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theo[point]<sp/>+=<sp/>(</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][l]*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a30b00836ae03c1550464e2a0184f2766" kindref="member">window</ref>[point,<sp/>l,<sp/>1]<sp/>+</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl[</highlight><highlight class="stringliteral">&apos;ee&apos;</highlight><highlight class="normal">][l]*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a30b00836ae03c1550464e2a0184f2766" kindref="member">window</ref>[point,<sp/>l,<sp/>2]<sp/>+</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl[</highlight><highlight class="stringliteral">&apos;bb&apos;</highlight><highlight class="normal">][l]*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a30b00836ae03c1550464e2a0184f2766" kindref="member">window</ref>[point,<sp/>l,<sp/>3])<sp/>*\</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(l+0.5)/2./math.pi</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>allocate<sp/>array<sp/>for<sp/>differencve<sp/>between<sp/>observed<sp/>and<sp/>theoretical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>bandpowers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference<sp/>=<sp/>np.zeros(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>depending<sp/>on<sp/>the<sp/>presence<sp/>of<sp/>lognormal<sp/>likelihood,<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>uncertainty<sp/>and<sp/>beam<sp/>uncertainity,<sp/>use<sp/>several<sp/>methods<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>marginalising<sp/>over<sp/>nuisance<sp/>parameters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>first<sp/>method:<sp/>numerical<sp/>integration<sp/>over<sp/>calibration<sp/>uncertainty:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ac01af80a9559b79191af70af3cdb8b2e" kindref="member">has_xfactors</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a6c387bad9757edc357d4638de7bf5442" kindref="member">calib_uncertainty</ref><sp/>&gt;<sp/>1.e-4)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ad8055d87268553aca745b7639a638a6c" kindref="member">has_beam_uncertainty</ref>)):</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq_tmp<sp/>=<sp/>np.zeros(2*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>+1,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisqcalib<sp/>=<sp/>np.zeros(2*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>+1,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam_error<sp/>=<sp/>np.zeros(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>loop<sp/>over<sp/>various<sp/>beam<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ibeam<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>+1):</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>beam<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>point<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ad8055d87268553aca745b7639a638a6c" kindref="member">has_beam_uncertainty</ref>):</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam_error[point]<sp/>=<sp/>1.+self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref>[point]<sp/>*\</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ibeam-self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>)*3/float(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam_error[point]<sp/>=<sp/>1.</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>loop<sp/>over<sp/>various<sp/>calibraion<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>icalib<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>+1):</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>calibration<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib_error<sp/>=<sp/>1+self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a6c387bad9757edc357d4638de7bf5442" kindref="member">calib_uncertainty</ref>*(</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icalib-self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>)*3/float(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>difference<sp/>between<sp/>observed<sp/>and<sp/>theoretical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>points,<sp/>after<sp/>correcting<sp/>the<sp/>later<sp/>for<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>point<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>lognormal<sp/>likelihood,<sp/>use<sp/>log(B_l+X_l)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1af81e03a1e428fd718dd7e8fdf6f40226" kindref="member">has_xfactor</ref>[point]):</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference[point]<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref>[point]<sp/>-\</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>math.log(</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theo[point]*beam_error[point]<sp/>*</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib_error+self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc6a99c00b3e1b80fe7c332a4c2c327e" kindref="member">xfactor</ref>[point])</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>otherwise<sp/>use<sp/>B_l</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference[point]<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref>[point]<sp/>-\</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theo[point]*beam_error[point]*calib_error</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>chisq<sp/>with<sp/>those<sp/>corrections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>chisq_tmp[icalib]<sp/>=<sp/>np.dot(np.transpose(difference),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>np.dot(self.inv_covmat,<sp/>difference))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq_tmp[icalib]<sp/>=<sp/>np.dot(</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference,<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a3235322611668c52c71a6e4419392cba" kindref="member">inv_covmat</ref>,<sp/>difference))</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minchisq<sp/>=<sp/>min(chisq_tmp)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>chisq<sp/>marginalized<sp/>over<sp/>calibration<sp/>uncertainty<sp/>(if<sp/>any)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>icalib<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>+1):</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot<sp/>+=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc1f0a19270d36ad191a9bd4bb88f959" kindref="member">margeweights</ref>[icalib]*math.exp(</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max(-30.,<sp/>-(chisq_tmp[icalib]-minchisq)/2.))</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisqcalib[ibeam]<sp/>=<sp/>-2*math.log(tot/self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a1b6e533b721d681d7f02a3946ffb3465" kindref="member">margenorm</ref>)+minchisq</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>chisq<sp/>marginalized<sp/>over<sp/>beam<sp/>uncertainty<sp/>(if<sp/>any)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ad8055d87268553aca745b7639a638a6c" kindref="member">has_beam_uncertainty</ref>):</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minchisq<sp/>=<sp/>min(chisqcalib)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ibeam<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a9c3b7030f9c9e1faf9795eed3a50f833" kindref="member">halfsteps</ref>+1):</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot<sp/>+=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc1f0a19270d36ad191a9bd4bb88f959" kindref="member">margeweights</ref>[ibeam]*math.exp(</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max(-30.,<sp/>-(chisqcalib[ibeam]-minchisq)/2.))</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq<sp/>=<sp/>-2*math.log(tot/self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a1b6e533b721d681d7f02a3946ffb3465" kindref="member">margenorm</ref>)+minchisq</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq<sp/>=<sp/>chisqcalib[0]</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>second<sp/>method:<sp/>marginalize<sp/>over<sp/>nuisance<sp/>parameters<sp/>(if<sp/>any)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>analytically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>lognormal<sp/>likelihood,<sp/>theo[point]<sp/>should<sp/>contain<sp/>log(B_l+X_l)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ac01af80a9559b79191af70af3cdb8b2e" kindref="member">has_xfactors</ref>):</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>point<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1af81e03a1e428fd718dd7e8fdf6f40226" kindref="member">has_xfactor</ref>[point]):</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theo[point]<sp/>=<sp/>math.log(theo[point]+self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1adc6a99c00b3e1b80fe7c332a4c2c327e" kindref="member">xfactor</ref>[point])</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>vector<sp/>of<sp/>difference<sp/>between<sp/>observed<sp/>and<sp/>theoretical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>bandpowers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a7433cb056482a286e1353e72d43889bb" kindref="member">obs</ref>-theo</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>chisq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq<sp/>=<sp/>np.dot(</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.transpose(difference),<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a3235322611668c52c71a6e4419392cba" kindref="member">inv_covmat</ref>,<sp/>difference))</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>correct<sp/>eventually<sp/>for<sp/>effect<sp/>of<sp/>analytic<sp/>marginalization<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a6c387bad9757edc357d4638de7bf5442" kindref="member">calib_uncertainty</ref><sp/>&gt;<sp/>1.e-4)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ad8055d87268553aca745b7639a638a6c" kindref="member">has_beam_uncertainty</ref>):</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denom<sp/>=<sp/>1.</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpi<sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a3235322611668c52c71a6e4419392cba" kindref="member">inv_covmat</ref>,<sp/>theo)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2op<sp/>=<sp/>np.dot(np.transpose(difference),<sp/>tmp)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2pp<sp/>=<sp/>np.dot(np.transpose(theo),<sp/>tmp)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO<sp/>beam<sp/>is<sp/>not<sp/>defined<sp/>here<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ad8055d87268553aca745b7639a638a6c" kindref="member">has_beam_uncertainty</ref>):</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>points<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a5f98e6549d2c792e7ea97a7948d6b69a" kindref="member">num_points</ref>):</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam[point]<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1add5b9be79fcd9060d572486951207000" kindref="member">beam_error</ref>[point]*theo[point]</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a3235322611668c52c71a6e4419392cba" kindref="member">inv_covmat</ref>,<sp/>beam)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2dd<sp/>=<sp/>np.dot(np.transpose(beam),<sp/>tmp)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2pd<sp/>=<sp/>np.dot(np.transpose(theo),<sp/>tmp)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2od<sp/>=<sp/>np.dot(np.transpose(difference),<sp/>tmp)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a6c387bad9757edc357d4638de7bf5442" kindref="member">calib_uncertainty</ref><sp/>&gt;<sp/>1.e-4):</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpp<sp/>=<sp/>1/(chi2pp+1/self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a6c387bad9757edc357d4638de7bf5442" kindref="member">calib_uncertainty</ref>**2)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq<sp/>=<sp/>chisq-wpp*chi2op**2</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denom<sp/>=<sp/>denom/wpp*self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a6c387bad9757edc357d4638de7bf5442" kindref="member">calib_uncertainty</ref>**2</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpp<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1ad8055d87268553aca745b7639a638a6c" kindref="member">has_beam_uncertainty</ref>):</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wdd<sp/>=<sp/>1/(chi2dd-wpp*chi2pd**2+1)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq<sp/>=<sp/>chisq-wdd*(chi2od-wpp*chi2op*chi2pd)**2</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denom<sp/>=<sp/>denom/wdd</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq<sp/>+=<sp/>math.log(denom)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>finally,<sp/>return<sp/>ln(L)=-chi2/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a1a428332792a7407d3ba05e732682610" kindref="member">lkl</ref><sp/>=<sp/>-0.5<sp/>*<sp/>chisq</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__newdat_1a1a428332792a7407d3ba05e732682610" kindref="member">lkl</ref></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="900" refid="classMontePythonLike_1_1Likelihood__clik" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__clik" kindref="compound">Likelihood_clik</ref>(<ref refid="classMontePythonLike_1_1Likelihood" kindref="compound">Likelihood</ref>):</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__clik_1adb5288dd762e47bc3b63944d2ed02539" kindref="member">__init__</ref>(self,<sp/>path,<sp/>data,<sp/>command_line):</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Likelihood.__init__(self,<sp/>path,<sp/>data,<sp/>command_line)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>{</highlight><highlight class="stringliteral">&apos;lensing&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;output&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;tCl<sp/>lCl<sp/>pCl&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>clik</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.MissingLibraryError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>first<sp/>activate<sp/>the<sp/>binaries<sp/>from<sp/>the<sp/>Clik<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;distribution.<sp/>Please<sp/>run<sp/>:<sp/>\n<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;]$<sp/>source<sp/>/path/to/clik/bin/clik_profile.sh<sp/>\n<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;and<sp/>try<sp/>again.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>lensing,<sp/>some<sp/>routines<sp/>change.<sp/>Intializing<sp/>a<sp/>flag<sp/>for<sp/>easier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>testing<sp/>of<sp/>this<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>self.name<sp/>==<sp/>&apos;Planck_lensing&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;lensing&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;Planck&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>:</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1ac119470a1145c3c51e3fbbcbc97320a3" kindref="member">lensing</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1ac119470a1145c3c51e3fbbcbc97320a3" kindref="member">lensing</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1ac119470a1145c3c51e3fbbcbc97320a3" kindref="member">lensing</ref>:</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref><sp/>=<sp/>clik.clik_lensing(self.path_clik)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a4306183763be3ba8e860a7252dddb6e3" kindref="member">l_max</ref><sp/>=<sp/>max(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax())</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>following<sp/>2<sp/>lines<sp/>for<sp/>compatibility<sp/>with<sp/>lensing<sp/>likelihoods<sp/>of<sp/>2013<sp/>and<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(then,<sp/>clik.get_lmax()<sp/>just<sp/>returns<sp/>an<sp/>integer<sp/>for<sp/>lensing<sp/>likelihoods;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>behavior<sp/>was<sp/>for<sp/>clik<sp/>versions<sp/>&lt;<sp/>10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a4306183763be3ba8e860a7252dddb6e3" kindref="member">l_max</ref><sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax()</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref><sp/>=<sp/>clik.clik(self.path_clik)</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a4306183763be3ba8e860a7252dddb6e3" kindref="member">l_max</ref><sp/>=<sp/>max(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax())</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>clik.lkl.CError:</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>path<sp/>to<sp/>the<sp/>.clik<sp/>file<sp/>for<sp/>the<sp/>likelihood<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>was<sp/>not<sp/>found<sp/>where<sp/>indicated:\n%s\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>,self.path_clik)<sp/>+</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Note<sp/>that<sp/>the<sp/>default<sp/>path<sp/>to<sp/>search<sp/>for<sp/>it<sp/>is&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>one<sp/>directory<sp/>above<sp/>the<sp/>path[&apos;clik&apos;]<sp/>field.<sp/>You&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>can<sp/>change<sp/>this<sp/>behaviour<sp/>in<sp/>all<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Planck_something.data,<sp/>to<sp/>reflect<sp/>your<sp/>local<sp/>configuration,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;or<sp/>alternatively,<sp/>move<sp/>your<sp/>.clik<sp/>files<sp/>to<sp/>this<sp/>place.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;In<sp/>the<sp/>%s.data<sp/>file,<sp/>the<sp/>field<sp/>&apos;clik&apos;<sp/>of<sp/>the<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>+</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;path<sp/>dictionary<sp/>is<sp/>expected<sp/>to<sp/>be<sp/>defined.<sp/>Please<sp/>make<sp/>sure&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>it<sp/>is<sp/>the<sp/>case<sp/>in<sp/>you<sp/>configuration<sp/>file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>{</highlight><highlight class="stringliteral">&apos;l_max_scalars&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a4306183763be3ba8e860a7252dddb6e3" kindref="member">l_max</ref>})</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" kindref="member">nuisance</ref><sp/>=<sp/>list(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.extra_parameter_names)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>line<sp/>added<sp/>to<sp/>deal<sp/>with<sp/>a<sp/>bug<sp/>in<sp/>planck<sp/>likelihood<sp/>release:<sp/>A_planck<sp/>called<sp/>A_Planck<sp/>in<sp/>plik_lite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;Planck_highl_lite&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;Planck_highl_TTTEEE_lite&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(self.<ref refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" kindref="member">nuisance</ref>)):</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" kindref="member">nuisance</ref>[i]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;A_Planck&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" kindref="member">nuisance</ref>[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;A_planck&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>%s,<sp/>MontePython<sp/>corrected<sp/>nuisance<sp/>parameter<sp/>name<sp/>A_Planck<sp/>to<sp/>A_planck&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>testing<sp/>if<sp/>the<sp/>nuisance<sp/>parameters<sp/>are<sp/>defined.<sp/>If<sp/>there<sp/>is<sp/>at<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>one<sp/>non<sp/>defined,<sp/>raise<sp/>an<sp/>exception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit_flag<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuisance_parameter_names<sp/>=<sp/>data.get_mcmc_parameters([</highlight><highlight class="stringliteral">&apos;nuisance&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" kindref="member">nuisance</ref>:</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nuisance_parameter_names:</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit_flag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;%20s\tmust<sp/>be<sp/>a<sp/>fixed<sp/>or<sp/>varying<sp/>nuisance<sp/>parameter&apos;</highlight><highlight class="normal"><sp/>%<sp/>nuisance)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>exit_flag:</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>likelihood<sp/>%s<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>+</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expected<sp/>some<sp/>nuisance<sp/>parameters<sp/>that<sp/>were<sp/>not<sp/>provided&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>deal<sp/>with<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>in<sp/>use_nuisance<sp/>all<sp/>the<sp/>parameters<sp/>that<sp/>have<sp/>non-flat<sp/>prior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" kindref="member">nuisance</ref>:</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(self,<sp/></highlight><highlight class="stringliteral">&apos;%s_prior_center&apos;</highlight><highlight class="normal"><sp/>%<sp/>nuisance):</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" kindref="member">use_nuisance</ref>.append(nuisance)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__clik_1a91692d10242ffe788ee793a550851405" kindref="member">loglkl</ref>(self,<sp/>cosmo,<sp/>data):</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuisance_parameter_names<sp/>=<sp/>data.get_mcmc_parameters([</highlight><highlight class="stringliteral">&apos;nuisance&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>Cl&apos;s<sp/>from<sp/>the<sp/>cosmological<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1ac1ff5b8bdb6b8b48db3fbd216f166bd4" kindref="member">get_cl</ref>(cosmo)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>testing<sp/>for<sp/>lensing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1ac119470a1145c3c51e3fbbcbc97320a3" kindref="member">lensing</ref>:</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>len(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax())</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot<sp/>=<sp/>np.zeros(</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax())<sp/>+<sp/>length<sp/>+</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_extra_parameter_names()))</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>following<sp/>3<sp/>lines<sp/>for<sp/>compatibility<sp/>with<sp/>lensing<sp/>likelihoods<sp/>of<sp/>2013<sp/>and<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(then,<sp/>clik.get_lmax()<sp/>just<sp/>returns<sp/>an<sp/>integer<sp/>for<sp/>lensing<sp/>likelihoods,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>and<sp/>the<sp/>length<sp/>is<sp/>always<sp/>2<sp/>for<sp/>cl[&apos;pp&apos;],<sp/>cl[&apos;tt&apos;])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot<sp/>=<sp/>np.zeros(2*self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a4306183763be3ba8e860a7252dddb6e3" kindref="member">l_max</ref>+length<sp/>+<sp/>len(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_extra_parameter_names()))</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>len(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_has_cl())</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot<sp/>=<sp/>np.zeros(</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax())<sp/>+<sp/>length<sp/>+</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_extra_parameter_names()))</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fill<sp/>with<sp/>Cl&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1ac119470a1145c3c51e3fbbcbc97320a3" kindref="member">lensing</ref>:</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(length):</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax()[i]<sp/>&gt;<sp/>-1):</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax()[i]+1):</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;tt&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1):</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;ee&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>2):</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;bb&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>3):</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>4):</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>0<sp/></highlight><highlight class="comment">#cl[&apos;tb&apos;][j]<sp/>class<sp/>does<sp/>not<sp/>compute<sp/>tb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>5):</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>0<sp/></highlight><highlight class="comment">#cl[&apos;eb&apos;][j]<sp/>class<sp/>does<sp/>not<sp/>compute<sp/>eb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax()[i]+1</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(length):</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax()[i]<sp/>&gt;<sp/>-1):</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax()[i]+1):</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;pp&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1):</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;tt&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>2):</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;ee&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>3):</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;bb&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>4):</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>5):</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>0<sp/></highlight><highlight class="comment">#cl[&apos;tb&apos;][j]<sp/>class<sp/>does<sp/>not<sp/>compute<sp/>tb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>6):</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>0<sp/></highlight><highlight class="comment">#cl[&apos;eb&apos;][j]<sp/>class<sp/>does<sp/>not<sp/>compute<sp/>eb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_lmax()[i]+1</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>following<sp/>8<sp/>lines<sp/>for<sp/>compatibility<sp/>with<sp/>lensing<sp/>likelihoods<sp/>of<sp/>2013<sp/>and<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(then,<sp/>clik.get_lmax()<sp/>just<sp/>returns<sp/>an<sp/>integer<sp/>for<sp/>lensing<sp/>likelihoods,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>and<sp/>the<sp/>length<sp/>is<sp/>always<sp/>2<sp/>for<sp/>cl[&apos;pp&apos;],<sp/>cl[&apos;tt&apos;])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(length):</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a4306183763be3ba8e860a7252dddb6e3" kindref="member">l_max</ref>):</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;pp&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1):</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index+j]<sp/>=<sp/>cl[</highlight><highlight class="stringliteral">&apos;tt&apos;</highlight><highlight class="normal">][j]</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a4306183763be3ba8e860a7252dddb6e3" kindref="member">l_max</ref>+1</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fill<sp/>with<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>.get_extra_parameter_names():</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>line<sp/>added<sp/>to<sp/>deal<sp/>with<sp/>a<sp/>bug<sp/>in<sp/>planck<sp/>likelihood<sp/>release:<sp/>A_planck<sp/>called<sp/>A_Planck<sp/>in<sp/>plik_lite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;Planck_highl_lite&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;Planck_highl_TTTEEE_lite&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nuisance<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;A_Planck&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuisance<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;A_planck&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nuisance_parameter_names:</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuisance_value<sp/>=<sp/>data.mcmc_parameters[nuisance][</highlight><highlight class="stringliteral">&apos;current&apos;</highlight><highlight class="normal">]<sp/>*\</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.mcmc_parameters[nuisance][</highlight><highlight class="stringliteral">&apos;scale&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>likelihood<sp/>needs<sp/>a<sp/>parameter<sp/>%s.<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>nuisance<sp/>+</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>pass<sp/>it<sp/>through<sp/>the<sp/>input<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(as<sp/>a<sp/>free<sp/>nuisance<sp/>parameter<sp/>or<sp/>a<sp/>fixed<sp/>parameter)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>&quot;found<sp/>one<sp/>nuisance<sp/>with<sp/>name&quot;,nuisance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot[index]<sp/>=<sp/>nuisance_value</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>&quot;lkl:&quot;,self.clik(tot)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lkl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clik_1a746f2e4bdd1f72ca1574b0f7ee4a9338" kindref="member">clik</ref>(tot)[0]</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>prior<sp/>on<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lkl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a292608fe142cbc66bcfc5a62c0c8cba5" kindref="member">add_nuisance_prior</ref>(lkl,<sp/>data)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lkl</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110" refid="classMontePythonLike_1_1Likelihood__mock__cmb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__mock__cmb" kindref="compound">Likelihood_mock_cmb</ref>(<ref refid="classMontePythonLike_1_1Likelihood" kindref="compound">Likelihood</ref>):</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a1d2a1eb7dd6e3f84462ad04cb77d62c3" kindref="member">__init__</ref>(self,<sp/>path,<sp/>data,<sp/>command_line):</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Likelihood.__init__(self,<sp/>path,<sp/>data,<sp/>command_line)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>{</highlight><highlight class="stringliteral">&apos;lensing&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;output&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;tCl<sp/>lCl<sp/>pCl&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae5e54ab3cb309b8f0a9c96516ec2baa2" kindref="member">noise_from_file</ref></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae5e54ab3cb309b8f0a9c96516ec2baa2" kindref="member">noise_from_file</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae5e54ab3cb309b8f0a9c96516ec2baa2" kindref="member">noise_from_file</ref>:</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.noise_file</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;For<sp/>reading<sp/>noise<sp/>from<sp/>file,<sp/>you<sp/>must<sp/>provide<sp/>noise_file&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;For<sp/>reading<sp/>noise<sp/>from<sp/>file,<sp/>you<sp/>must<sp/>provide<sp/>noise_file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref><sp/>=<sp/>np.zeros(self.l_max+1,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref><sp/>=<sp/>np.zeros(self.l_max+1,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref>:</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a84862714741f3d47a8f1d55cd48ac4d4" kindref="member">Nldd</ref><sp/>=<sp/>np.zeros(self.l_max+1,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.noise_file)):</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise<sp/>=<sp/>open(os.path.join(</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.noise_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>noise.readline()</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>noise.readline()</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.l_min,<sp/>self.l_max+1):</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>int(float(line.split()[0]))</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>l<sp/>!=<sp/>ll:</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>l_min<sp/>is<sp/>larger<sp/>than<sp/>the<sp/>first<sp/>l<sp/>in<sp/>the<sp/>noise<sp/>file<sp/>we<sp/>can<sp/>skip<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>until<sp/>we<sp/>are<sp/>at<sp/>the<sp/>correct<sp/>l.<sp/>Otherwise<sp/>raise<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>l<sp/>&gt;<sp/>ll:</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>int(float(line.split()[0]))</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>noise<sp/>file&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>noise<sp/>file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>l<sp/>&lt;<sp/>ll:</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>noise<sp/>file&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>noise<sp/>file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>noise<sp/>for<sp/>C_l<sp/>in<sp/>muK**2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref>[l]<sp/>=<sp/>float(line.split()[1])</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l]<sp/>=<sp/>float(line.split()[2])</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref>:</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>noise<sp/>for<sp/>C_l^dd<sp/>=<sp/>l(l+1)<sp/>C_l^pp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a84862714741f3d47a8f1d55cd48ac4d4" kindref="member">Nldd</ref>[l]<sp/>=<sp/>float(line.split()[3])/(l*(l+1)/2./math.pi)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;For<sp/>reading<sp/>lensing<sp/>noise<sp/>from<sp/>file,<sp/>you<sp/>must<sp/>provide<sp/>one<sp/>more<sp/>column&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;For<sp/>reading<sp/>lensing<sp/>noise<sp/>from<sp/>file,<sp/>you<sp/>must<sp/>provide<sp/>one<sp/>more<sp/>column&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>noise.readline()</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;Could<sp/>not<sp/>find<sp/>file<sp/>&quot;,self.noise_file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>file<sp/>&quot;</highlight><highlight class="normal">,self.noise_file)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>convert<sp/>arcmin<sp/>to<sp/>radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.theta_fwhm<sp/>*=<sp/>np.array([math.pi/60/180])</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.sigma_T<sp/>*=<sp/>np.array([math.pi/60/180])</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.sigma_P<sp/>*=<sp/>np.array([math.pi/60/180])</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>noise<sp/>in<sp/>muK**2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref><sp/>=<sp/>np.zeros(self.l_max+1,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref><sp/>=<sp/>np.zeros(self.l_max+1,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.l_min,<sp/>self.l_max+1):</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref>[l]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>channel<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.num_channels):</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref>[l]<sp/>+=<sp/>self.sigma_T[channel]**-2<sp/>*\</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>math.exp(</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-l*(l+1)*self.theta_fwhm[channel]**2/8/math.log(2))</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l]<sp/>+=<sp/>self.sigma_P[channel]**-2<sp/>*\</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>math.exp(</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-l*(l+1)*self.theta_fwhm[channel]**2/8/math.log(2))</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref>[l]<sp/>=<sp/>1/self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref>[l]</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l]<sp/>=<sp/>1/self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l]</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>trick<sp/>to<sp/>remove<sp/>any<sp/>information<sp/>from<sp/>polarisation<sp/>for<sp/>l&lt;30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1adba33e319f138bf15d37ebbdc0b25143" kindref="member">no_small_l_pol</ref></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1adba33e319f138bf15d37ebbdc0b25143" kindref="member">no_small_l_pol</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1adba33e319f138bf15d37ebbdc0b25143" kindref="member">no_small_l_pol</ref>:</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.l_min,30):</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plug<sp/>a<sp/>noise<sp/>level<sp/>of<sp/>100<sp/>muK**2,<sp/>equivalent<sp/>to<sp/>no<sp/>detection<sp/>at<sp/>all<sp/>of<sp/>polarisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l]<sp/>=<sp/>100.</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>trick<sp/>to<sp/>remove<sp/>any<sp/>information<sp/>from<sp/>temperature<sp/>above<sp/>l_max_TT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ac2da8ffca2ffe97d248511a3c41e8d37" kindref="member">l_max_TT</ref></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ac2da8ffca2ffe97d248511a3c41e8d37" kindref="member">l_max_TT</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ac2da8ffca2ffe97d248511a3c41e8d37" kindref="member">l_max_TT</ref>:</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ac2da8ffca2ffe97d248511a3c41e8d37" kindref="member">l_max_TT</ref>+1,l_max+1):</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plug<sp/>a<sp/>noise<sp/>level<sp/>of<sp/>100<sp/>muK**2,<sp/>equivalent<sp/>to<sp/>no<sp/>detection<sp/>at<sp/>all<sp/>of<sp/>temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref>[l]<sp/>=<sp/>100.</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>impose<sp/>that<sp/>the<sp/>cosmological<sp/>code<sp/>computes<sp/>Cl&apos;s<sp/>up<sp/>to<sp/>maximum<sp/>l</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>needed<sp/>by<sp/>the<sp/>window<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(data,<sp/>{</highlight><highlight class="stringliteral">&apos;l_max_scalars&apos;</highlight><highlight class="normal">:<sp/>self.l_max})</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>you<sp/>want<sp/>to<sp/>print<sp/>the<sp/>noise<sp/>spectra:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#test<sp/>=<sp/>open(&apos;noise_T_P&apos;,&apos;w&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#for<sp/>l<sp/>in<sp/>range(self.l_min,<sp/>self.l_max+1):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>test.write(&apos;%d<sp/><sp/>%e<sp/><sp/>%e\n&apos;%(l,self.noise_T[l],self.noise_P[l]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>ignore<sp/>B<sp/>modes<sp/>by<sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1afde3829df28aea246b43767efdf43bb5" kindref="member">Bmodes</ref></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1afde3829df28aea246b43767efdf43bb5" kindref="member">Bmodes</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>do<sp/>not<sp/>use<sp/>delensing<sp/>by<sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae9bf3f1be0f012721d7f46a0cdf99244" kindref="member">delensing</ref></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae9bf3f1be0f012721d7f46a0cdf99244" kindref="member">delensing</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>do<sp/>not<sp/>include<sp/>lensing<sp/>extraction<sp/>by<sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>neglect<sp/>TD<sp/>correlation<sp/>by<sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1aa27147644b47bd1cddf8f6c9e81ceb4f" kindref="member">neglect_TD</ref></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1aa27147644b47bd1cddf8f6c9e81ceb4f" kindref="member">neglect_TD</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>use<sp/>lthe<sp/>lensed<sp/>TT,<sp/>TE,<sp/>EE<sp/>by<sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2a470794147ec032ef69131672958125" kindref="member">unlensed_clTTTEEE</ref></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2a470794147ec032ef69131672958125" kindref="member">unlensed_clTTTEEE</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>do<sp/>not<sp/>exclude<sp/>TTEE<sp/>by<sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a911ff0837ba2410d578f47d3e9b6c94d" kindref="member">ExcludeTTTEEE</ref></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a911ff0837ba2410d578f47d3e9b6c94d" kindref="member">ExcludeTTTEEE</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref>:</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;Mock<sp/>CMB<sp/>likelihoods<sp/>where<sp/>TTTEEE<sp/>is<sp/>not<sp/>used<sp/>have<sp/>only<sp/>been<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Mock<sp/>CMB<sp/>likelihoods<sp/>where<sp/>TTTEEE<sp/>is<sp/>not<sp/>used<sp/>have<sp/>only<sp/>been<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;implemented<sp/>for<sp/>the<sp/>deflection<sp/>spectrum<sp/>(i.e.<sp/>not<sp/>for<sp/>B-modes),<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;but<sp/>you<sp/>do<sp/>not<sp/>seem<sp/>to<sp/>have<sp/>lensing<sp/>extraction<sp/>enabled&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a911ff0837ba2410d578f47d3e9b6c94d" kindref="member">ExcludeTTTEEE</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae9bf3f1be0f012721d7f46a0cdf99244" kindref="member">delensing</ref>:</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.delensing_file</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;For<sp/>delensing,<sp/>you<sp/>must<sp/>provide<sp/>delensing_file&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;For<sp/>delensing,<sp/>you<sp/>must<sp/>provide<sp/>delensing_file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a105661937aaa2a3d174c297e2970d2b8" kindref="member">noise_delensing</ref><sp/>=<sp/>np.zeros(self.l_max+1)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.delensing_file)):</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delensing_file<sp/>=<sp/>open(os.path.join(</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.delensing_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>delensing_file.readline()</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>delensing_file.readline()</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.l_min,<sp/>self.l_max+1):</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>int(float(line.split()[0]))</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>l<sp/>!=<sp/>ll:</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>l_min<sp/>is<sp/>larger<sp/>than<sp/>the<sp/>first<sp/>l<sp/>in<sp/>the<sp/>delensing<sp/>file<sp/>we<sp/>can<sp/>skip<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>until<sp/>we<sp/>are<sp/>at<sp/>the<sp/>correct<sp/>l.<sp/>Otherwise<sp/>raise<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>l<sp/>&gt;<sp/>ll:</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>int(float(line.split()[0]))</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>delensing<sp/>file&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>delensing<sp/>file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>l<sp/>&lt;<sp/>ll:</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>delensing<sp/>file&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>delensing<sp/>file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a105661937aaa2a3d174c297e2970d2b8" kindref="member">noise_delensing</ref>[ll]<sp/>=<sp/>float(line.split()[2])/(ll*(ll+1)/2./math.pi)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>change<sp/>3<sp/>to<sp/>4<sp/>in<sp/>the<sp/>above<sp/>line<sp/>for<sp/>CMBxCIB<sp/>delensing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>delensing_file.readline()</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;Could<sp/>not<sp/>find<sp/>file<sp/>&quot;,self.delensing_file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>file<sp/>&quot;</highlight><highlight class="normal">,self.delensing_file)</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a911ff0837ba2410d578f47d3e9b6c94d" kindref="member">ExcludeTTTEEE</ref>:</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCls<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>default<sp/>0<sp/>if<sp/>excluding<sp/>TT<sp/>EE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCls<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>deal<sp/>with<sp/>BB:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1afde3829df28aea246b43767efdf43bb5" kindref="member">Bmodes</ref>:</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ac235d662b9a5046e958c1a4275e89751" kindref="member">index_B</ref><sp/>=<sp/>numCls</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCls<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>deal<sp/>with<sp/>pp,<sp/>pT<sp/>(p<sp/>=<sp/>CMB<sp/>lensing<sp/>potential):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref>:</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a9d8452db53cdb5d6527f6c19c75b4895" kindref="member">index_pp</ref><sp/>=<sp/>numCls</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCls<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a911ff0837ba2410d578f47d3e9b6c94d" kindref="member">ExcludeTTTEEE</ref>:</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2abe35971997e2757f42965b976579b0" kindref="member">index_tp</ref><sp/>=<sp/>numCls</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCls<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae5e54ab3cb309b8f0a9c96516ec2baa2" kindref="member">noise_from_file</ref>:</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>provide<sp/>a<sp/>file<sp/>containing<sp/>NlDD<sp/>(noise<sp/>for<sp/>the<sp/>extracted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>deflection<sp/>field<sp/>spectrum)<sp/>This<sp/>option<sp/>is<sp/>temporary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>because<sp/>at<sp/>some<sp/>point<sp/>this<sp/>module<sp/>will<sp/>compute<sp/>NlDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>itself,<sp/>when<sp/>logging<sp/>the<sp/>fiducial<sp/>model<sp/>spectrum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.temporary_Nldd_file</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;For<sp/>lensing<sp/>extraction,<sp/>you<sp/>must<sp/>provide<sp/>a<sp/>temporary_Nldd_file&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;For<sp/>lensing<sp/>extraction,<sp/>you<sp/>must<sp/>provide<sp/>a<sp/>temporary_Nldd_file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>the<sp/>NlDD<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a84862714741f3d47a8f1d55cd48ac4d4" kindref="member">Nldd</ref><sp/>=<sp/>np.zeros(self.l_max+1,<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.temporary_Nldd_file)):</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file<sp/>=<sp/>open(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.temporary_Nldd_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>1):</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.l_min,<sp/>self.l_max+1):</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>int(float(line.split()[0]))</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>l<sp/>!=<sp/>ll:</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>l_min<sp/>is<sp/>larger<sp/>than<sp/>the<sp/>first<sp/>l<sp/>in<sp/>the<sp/>delensing<sp/>file<sp/>we<sp/>can<sp/>skip<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>until<sp/>we<sp/>are<sp/>at<sp/>the<sp/>correct<sp/>l.<sp/>Otherwise<sp/>raise<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>l<sp/>&gt;<sp/>ll:</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>int(float(line.split()[0]))</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>delensing<sp/>file&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>delensing<sp/>file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>l<sp/>&lt;<sp/>ll:</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>delensing<sp/>file&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>between<sp/>required<sp/>values<sp/>of<sp/>l<sp/>in<sp/>the<sp/>code<sp/>and<sp/>in<sp/>the<sp/>delensing<sp/>file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>lines<sp/>assumes<sp/>that<sp/>Nldd<sp/>is<sp/>stored<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>4th<sp/>column<sp/>(can<sp/>be<sp/>customised)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a84862714741f3d47a8f1d55cd48ac4d4" kindref="member">Nldd</ref>[ll]<sp/>=<sp/>float(line.split()[3])/(l*(l+1.)/2./math.pi)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;Could<sp/>not<sp/>find<sp/>file<sp/>&quot;,self.temporary_Nldd_file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>file<sp/>&quot;</highlight><highlight class="normal">,self.temporary_Nldd_file)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>deal<sp/>with<sp/>fiducial<sp/>model:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>the<sp/>file<sp/>exists,<sp/>initialize<sp/>the<sp/>fiducial<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref><sp/>=<sp/>np.zeros((numCls,<sp/>self.l_max+1),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2b88ad054ebf134839773f2c808334dd" kindref="member">fid_values_exist</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(os.path.join(</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.fiducial_file)):</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2b88ad054ebf134839773f2c808334dd" kindref="member">fid_values_exist</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file<sp/>=<sp/>open(os.path.join(</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.fiducial_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>1):</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.l_min,<sp/>self.l_max+1):</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>int(line.split()[0])</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a911ff0837ba2410d578f47d3e9b6c94d" kindref="member">ExcludeTTTEEE</ref>:</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[0,<sp/>ll]<sp/>=<sp/>float(line.split()[1])</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[1,<sp/>ll]<sp/>=<sp/>float(line.split()[2])</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[2,<sp/>ll]<sp/>=<sp/>float(line.split()[3])</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>BB:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1afde3829df28aea246b43767efdf43bb5" kindref="member">Bmodes</ref>:</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ac235d662b9a5046e958c1a4275e89751" kindref="member">index_B</ref>,<sp/>ll]<sp/>=<sp/>float(line.split()[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ac235d662b9a5046e958c1a4275e89751" kindref="member">index_B</ref>+1])</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>fiducial<sp/>model<sp/>does<sp/>not<sp/>have<sp/>enough<sp/>columns.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>DD,<sp/>TD<sp/>(D<sp/>=<sp/>deflection<sp/>field):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref>:</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a9d8452db53cdb5d6527f6c19c75b4895" kindref="member">index_pp</ref>,<sp/>ll]<sp/>=<sp/>float(line.split()[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a9d8452db53cdb5d6527f6c19c75b4895" kindref="member">index_pp</ref>+1])</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a911ff0837ba2410d578f47d3e9b6c94d" kindref="member">ExcludeTTTEEE</ref>:</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2abe35971997e2757f42965b976579b0" kindref="member">index_tp</ref>,<sp/>ll]<sp/>=<sp/>float(line.split()[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2abe35971997e2757f42965b976579b0" kindref="member">index_tp</ref>+1])</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>fiducial<sp/>model<sp/>does<sp/>not<sp/>have<sp/>enough<sp/>columns.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>fid_file.readline()</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Else<sp/>the<sp/>file<sp/>will<sp/>be<sp/>created<sp/>in<sp/>the<sp/>loglkl()<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Explicitly<sp/>display<sp/>the<sp/>flags<sp/>to<sp/>be<sp/>sure<sp/>that<sp/>likelihood<sp/>does<sp/>what<sp/>you<sp/>expect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Initialised<sp/>likelihood_mock_cmb<sp/>with<sp/>following<sp/>options:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2a470794147ec032ef69131672958125" kindref="member">unlensed_clTTTEEE</ref>:</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>unlensed_clTTTEEE<sp/>is<sp/>True&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>unlensed_clTTTEEE<sp/>is<sp/>False&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1afde3829df28aea246b43767efdf43bb5" kindref="member">Bmodes</ref>:</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Bmodes<sp/>is<sp/>True&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Bmodes<sp/>is<sp/>False&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae9bf3f1be0f012721d7f46a0cdf99244" kindref="member">delensing</ref>:</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>delensing<sp/>is<sp/>True&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>delensing<sp/>is<sp/>False&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref>:</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>LensingExtraction<sp/>is<sp/>True&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>LensingExtraction<sp/>is<sp/>False&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1aa27147644b47bd1cddf8f6c9e81ceb4f" kindref="member">neglect_TD</ref>:</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>neglect_TD<sp/>is<sp/>True&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>neglect_TD<sp/>is<sp/>False&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a911ff0837ba2410d578f47d3e9b6c94d" kindref="member">ExcludeTTTEEE</ref>:</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>ExcludeTTTEEE<sp/>is<sp/>True&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>ExcludeTTTEEE<sp/>is<sp/>False&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>end<sp/>of<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a581ceae56227e19bbaf22c9cde582f4f" kindref="member">loglkl</ref>(self,<sp/>cosmo,<sp/>data):</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>Cl&apos;s<sp/>from<sp/>the<sp/>cosmological<sp/>code<sp/>(returned<sp/>in<sp/>muK**2<sp/>units)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>we<sp/>want<sp/>unlensed<sp/>Cl&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2a470794147ec032ef69131672958125" kindref="member">unlensed_clTTTEEE</ref>:</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1ae7c283d2d9fbd1592cbd27e35d5554cb" kindref="member">get_unlensed_cl</ref>(cosmo)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>exception:<sp/>for<sp/>non-delensed<sp/>B<sp/>modes<sp/>we<sp/>need<sp/>the<sp/>lensed<sp/>BB<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(this<sp/>case<sp/>is<sp/>usually<sp/>not<sp/>useful/relevant)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1afde3829df28aea246b43767efdf43bb5" kindref="member">Bmodes</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae9bf3f1be0f012721d7f46a0cdf99244" kindref="member">delensing</ref>):</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_lensed<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1ac1ff5b8bdb6b8b48db3fbd216f166bd4" kindref="member">get_cl</ref>(cosmo)</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.lmax+1):</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl[l][</highlight><highlight class="stringliteral">&apos;bb&apos;</highlight><highlight class="normal">]=cl_lensed[l][</highlight><highlight class="stringliteral">&apos;bb&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>we<sp/>want<sp/>lensed<sp/>Cl&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1ac1ff5b8bdb6b8b48db3fbd216f166bd4" kindref="member">get_cl</ref>(cosmo)</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>exception:<sp/>for<sp/>delensed<sp/>B<sp/>modes<sp/>we<sp/>need<sp/>the<sp/>unlensed<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1afde3829df28aea246b43767efdf43bb5" kindref="member">Bmodes</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae9bf3f1be0f012721d7f46a0cdf99244" kindref="member">delensing</ref>:</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_unlensed<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1ae7c283d2d9fbd1592cbd27e35d5554cb" kindref="member">get_unlensed_cl</ref>(cosmo)</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.lmax+1):</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl[l][</highlight><highlight class="stringliteral">&apos;bb&apos;</highlight><highlight class="normal">]=cl_unlensed[l][</highlight><highlight class="stringliteral">&apos;bb&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lkl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a626e7381788eb676e0978c72cf0eae78" kindref="member">compute_lkl</ref>(cl,<sp/>cosmo,<sp/>data)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lkl</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">compute_lkl(self,<sp/>cl,<sp/>cosmo,<sp/>data):</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Write<sp/>fiducial<sp/>model<sp/>spectra<sp/>if<sp/>needed<sp/>(return<sp/>an<sp/>imaginary<sp/>number<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>that<sp/>case)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2b88ad054ebf134839773f2c808334dd" kindref="member">fid_values_exist</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(<sp/>(JR)<sp/>throw<sp/>error<sp/>as<sp/>creation<sp/>of<sp/>fiducial<sp/>file<sp/>does<sp/>not<sp/>work<sp/>with<sp/>GAMBIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a06115ca87159872058c023f95791dd30" kindref="member">raise_fiducial_model_err</ref>()</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;#<sp/>Store<sp/>the<sp/>values<sp/>now.</highlight></codeline>
<codeline lineno="1495"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file<sp/>=<sp/>open(os.path.join(</highlight></codeline>
<codeline lineno="1496"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.data_directory,<sp/>self.fiducial_file),<sp/>&apos;w&apos;)</highlight></codeline>
<codeline lineno="1497"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&apos;#<sp/>Fiducial<sp/>parameters&apos;)</highlight></codeline>
<codeline lineno="1498"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>key,<sp/>value<sp/>in<sp/>data.mcmc_parameters.items():</highlight></codeline>
<codeline lineno="1499"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&apos;,<sp/>%s<sp/>=<sp/>%.5g&apos;<sp/>%<sp/>(</highlight></codeline>
<codeline lineno="1500"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key,<sp/>value[&apos;current&apos;]*value[&apos;scale&apos;]))</highlight></codeline>
<codeline lineno="1501"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&apos;\n&apos;)</highlight></codeline>
<codeline lineno="1502"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>l<sp/>in<sp/>range(self.l_min,<sp/>self.l_max+1):</highlight></codeline>
<codeline lineno="1503"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&quot;%5d<sp/><sp/>&quot;<sp/>%<sp/>l)</highlight></codeline>
<codeline lineno="1504"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>self.ExcludeTTTEEE:</highlight></codeline>
<codeline lineno="1505"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&quot;%.8g<sp/><sp/>&quot;<sp/>%<sp/>(cl[&apos;tt&apos;][l]+self.noise_T[l]))</highlight></codeline>
<codeline lineno="1506"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&quot;%.8g<sp/><sp/>&quot;<sp/>%<sp/>(cl[&apos;ee&apos;][l]+self.noise_P[l]))</highlight></codeline>
<codeline lineno="1507"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&quot;%.8g<sp/><sp/>&quot;<sp/>%<sp/>cl[&apos;te&apos;][l])</highlight></codeline>
<codeline lineno="1508"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.Bmodes:</highlight></codeline>
<codeline lineno="1509"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>next<sp/>three<sp/>lines<sp/>added<sp/>by<sp/>S.<sp/>Clesse<sp/>for<sp/>delensing</highlight></codeline>
<codeline lineno="1510"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.delensing:</highlight></codeline>
<codeline lineno="1511"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&quot;%.8g<sp/><sp/>&quot;<sp/>%<sp/>(cl[&apos;bb&apos;][l]+self.noise_P[l]+self.noise_delensing[l]))</highlight></codeline>
<codeline lineno="1512"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1513"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&quot;%.8g<sp/><sp/>&quot;<sp/>%<sp/>(cl[&apos;bb&apos;][l]+self.noise_P[l]))</highlight></codeline>
<codeline lineno="1514"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.LensingExtraction:</highlight></codeline>
<codeline lineno="1515"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>we<sp/>want<sp/>to<sp/>store<sp/>clDD<sp/>=<sp/>l(l+1)<sp/>clpp</highlight></codeline>
<codeline lineno="1516"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>and<sp/>ClTD<sp/>=<sp/>sqrt(l(l+1))<sp/>Cltp</highlight></codeline>
<codeline lineno="1517"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&quot;%.8g<sp/><sp/>&quot;<sp/>%<sp/>(l*(l+1.)*cl[&apos;pp&apos;][l]<sp/>+<sp/>self.Nldd[l]))</highlight></codeline>
<codeline lineno="1518"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>self.ExcludeTTTEEE:</highlight></codeline>
<codeline lineno="1519"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&quot;%.8g<sp/><sp/>&quot;<sp/>%<sp/>(math.sqrt(l*(l+1.))*cl[&apos;tp&apos;][l]))</highlight></codeline>
<codeline lineno="1520"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid_file.write(&quot;\n&quot;)</highlight></codeline>
<codeline lineno="1521"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(<sp/>&apos;\n&apos;)</highlight></codeline>
<codeline lineno="1522"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warnings.warn(</highlight></codeline>
<codeline lineno="1523"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Writing<sp/>fiducial<sp/>model<sp/>in<sp/>%s,<sp/>for<sp/>%s<sp/>likelihood\n&quot;<sp/>%<sp/>(</highlight></codeline>
<codeline lineno="1524"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.data_directory+&apos;/&apos;+self.fiducial_file,<sp/>self.name))&apos;&apos;&apos;</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>count<sp/>number<sp/>of<sp/>modes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>number<sp/>of<sp/>modes<sp/>is<sp/>different<sp/>form<sp/>number<sp/>of<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>modes<sp/>=<sp/>T,E,[B],[D=deflection]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>spectra<sp/>=<sp/>TT,EE,TE,[BB],[DD,TD]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a911ff0837ba2410d578f47d3e9b6c94d" kindref="member">ExcludeTTTEEE</ref>:</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_modes=2</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>default<sp/>0<sp/>if<sp/>excluding<sp/>TT<sp/>EE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_modes=0</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>B<sp/>mode:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1afde3829df28aea246b43767efdf43bb5" kindref="member">Bmodes</ref>:</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_modes<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>D<sp/>mode:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref>:</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_modes<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_obs<sp/>=<sp/>np.zeros((num_modes,<sp/>num_modes),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_the<sp/>=<sp/>np.zeros((num_modes,<sp/>num_modes),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_mix<sp/>=<sp/>np.zeros((num_modes,<sp/>num_modes),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.l_min,<sp/>self.l_max+1):</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1afde3829df28aea246b43767efdf43bb5" kindref="member">Bmodes</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref>:</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(&quot;We<sp/>have<sp/>implemented<sp/>a<sp/>version<sp/>of<sp/>the<sp/>likelihood<sp/>with<sp/>B<sp/>modes,<sp/>a<sp/>version<sp/>with<sp/>lensing<sp/>extraction,<sp/>but<sp/>not<sp/>yet<sp/>a<sp/>version<sp/>with<sp/>both<sp/>at<sp/>the<sp/>same<sp/>time.<sp/>You<sp/>can<sp/>implement<sp/>it.&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;We<sp/>have<sp/>implemented<sp/>a<sp/>version<sp/>of<sp/>the<sp/>likelihood<sp/>with<sp/>B<sp/>modes,<sp/>a<sp/>version<sp/>with<sp/>lensing<sp/>extraction,<sp/>but<sp/>not<sp/>yet<sp/>a<sp/>version<sp/>with<sp/>both<sp/>at<sp/>the<sp/>same<sp/>time.<sp/>You<sp/>can<sp/>implement<sp/>it.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>case<sp/>with<sp/>B<sp/>modes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1afde3829df28aea246b43767efdf43bb5" kindref="member">Bmodes</ref>:</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_obs<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[0,<sp/>l],<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[2,<sp/>l],<sp/>0],</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[2,<sp/>l],<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[1,<sp/>l],<sp/>0],</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0,<sp/>0,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[3,<sp/>l]]])</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>next<sp/>5<sp/>lines<sp/>added<sp/>by<sp/>S.<sp/>Clesse<sp/>for<sp/>delensing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1ae9bf3f1be0f012721d7f46a0cdf99244" kindref="member">delensing</ref>:</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_the<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cl[</highlight><highlight class="stringliteral">&apos;tt&apos;</highlight><highlight class="normal">][l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref>[l],<sp/>cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][l],<sp/>0],</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][l],<sp/>cl[</highlight><highlight class="stringliteral">&apos;ee&apos;</highlight><highlight class="normal">][l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l],<sp/>0],</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0,<sp/>0,<sp/>cl[</highlight><highlight class="stringliteral">&apos;bb&apos;</highlight><highlight class="normal">][l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a105661937aaa2a3d174c297e2970d2b8" kindref="member">noise_delensing</ref>[l]]])</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_the<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cl[</highlight><highlight class="stringliteral">&apos;tt&apos;</highlight><highlight class="normal">][l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref>[l],<sp/>cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][l],<sp/>0],</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][l],<sp/>cl[</highlight><highlight class="stringliteral">&apos;ee&apos;</highlight><highlight class="normal">][l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l],<sp/>0],</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0,<sp/>0,<sp/>cl[</highlight><highlight class="stringliteral">&apos;bb&apos;</highlight><highlight class="normal">][l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l]]])</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>case<sp/>with<sp/>lensing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>note<sp/>that<sp/>the<sp/>likelihood<sp/>is<sp/>based<sp/>on<sp/>ClDD<sp/>(deflection<sp/>spectrum)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>rather<sp/>than<sp/>Clpp<sp/>(lensing<sp/>potential<sp/>spectrum)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>But<sp/>the<sp/>Bolztmann<sp/>code<sp/>input<sp/>is<sp/>Clpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>So<sp/>we<sp/>make<sp/>the<sp/>conversion<sp/>using<sp/>ClDD<sp/>=<sp/>l*(l+1.)*Clpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>So<sp/>we<sp/>make<sp/>the<sp/>conversion<sp/>using<sp/>ClTD<sp/>=<sp/>sqrt(l*(l+1.))*Cltp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>just<sp/>DD,<sp/>i.e.<sp/>no<sp/>TT<sp/>or<sp/>EE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a911ff0837ba2410d578f47d3e9b6c94d" kindref="member">ExcludeTTTEEE</ref>:</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cldd_fid<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a9d8452db53cdb5d6527f6c19c75b4895" kindref="member">index_pp</ref>,<sp/>l]</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cldd<sp/>=<sp/>l*(l+1.)*cl[</highlight><highlight class="stringliteral">&apos;pp&apos;</highlight><highlight class="normal">][l]</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_obs<sp/>=<sp/>np.array([[cldd_fid]])</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_the<sp/>=<sp/>np.array([[cldd+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a84862714741f3d47a8f1d55cd48ac4d4" kindref="member">Nldd</ref>[l]]])</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Usual<sp/>TTTEEE<sp/>plus<sp/>DD<sp/>and<sp/>TD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a8ef071a0206bfbe81269866d7f053c59" kindref="member">LensingExtraction</ref>:</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cldd_fid<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a9d8452db53cdb5d6527f6c19c75b4895" kindref="member">index_pp</ref>,<sp/>l]</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cldd<sp/>=<sp/>l*(l+1.)*cl[</highlight><highlight class="stringliteral">&apos;pp&apos;</highlight><highlight class="normal">][l]</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1aa27147644b47bd1cddf8f6c9e81ceb4f" kindref="member">neglect_TD</ref>:</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cltd_fid<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cltd<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cltd_fid<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2abe35971997e2757f42965b976579b0" kindref="member">index_tp</ref>,<sp/>l]</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cltd<sp/>=<sp/>math.sqrt(l*(l+1.))*cl[</highlight><highlight class="stringliteral">&apos;tp&apos;</highlight><highlight class="normal">][l]</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_obs<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[0,<sp/>l],<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[2,<sp/>l],<sp/>0.*self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a2abe35971997e2757f42965b976579b0" kindref="member">index_tp</ref>,<sp/>l]],</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[2,<sp/>l],<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[1,<sp/>l],<sp/>0],</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cltd_fid,<sp/>0,<sp/>cldd_fid]])</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_the<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cl[</highlight><highlight class="stringliteral">&apos;tt&apos;</highlight><highlight class="normal">][l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref>[l],<sp/>cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][l],<sp/>0.*math.sqrt(l*(l+1.))*cl[</highlight><highlight class="stringliteral">&apos;tp&apos;</highlight><highlight class="normal">][l]],</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][l],<sp/>cl[</highlight><highlight class="stringliteral">&apos;ee&apos;</highlight><highlight class="normal">][l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l],<sp/>0],</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cltd,<sp/>0,<sp/>cldd+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a84862714741f3d47a8f1d55cd48ac4d4" kindref="member">Nldd</ref>[l]]])</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>case<sp/>without<sp/>B<sp/>modes<sp/>nor<sp/>lensing:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_obs<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[0,<sp/>l],<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[2,<sp/>l]],</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[2,<sp/>l],<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a805795a10205d871bbef7260fa393c5b" kindref="member">Cl_fid</ref>[1,<sp/>l]]])</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_the<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cl[</highlight><highlight class="stringliteral">&apos;tt&apos;</highlight><highlight class="normal">][l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a79c7c456d3726fc8c3658446239d39b6" kindref="member">noise_T</ref>[l],<sp/>cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][l]],</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cl[</highlight><highlight class="stringliteral">&apos;te&apos;</highlight><highlight class="normal">][l],<sp/>cl[</highlight><highlight class="stringliteral">&apos;ee&apos;</highlight><highlight class="normal">][l]+self.<ref refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a57d581ae64767e3cdab26901b5919e07" kindref="member">noise_P</ref>[l]]])</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>determinant<sp/>of<sp/>observational<sp/>and<sp/>theoretical<sp/>covariance<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det_obs<sp/>=<sp/>np.linalg.det(Cov_obs)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det_the<sp/>=<sp/>np.linalg.det(Cov_the)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>determinant<sp/>of<sp/>mixed<sp/>matrix<sp/>(=<sp/>sum<sp/>of<sp/>N<sp/>theoretical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>matrices<sp/>with,<sp/>in<sp/>each<sp/>of<sp/>them,<sp/>the<sp/>nth<sp/>column<sp/>replaced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>by<sp/>that<sp/>of<sp/>the<sp/>observational<sp/>matrix)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det_mix<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_modes):</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_mix<sp/>=<sp/>np.copy(Cov_the)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cov_mix[:,<sp/>i]<sp/>=<sp/>Cov_obs[:,<sp/>i]</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det_mix<sp/>+=<sp/>np.linalg.det(Cov_mix)</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2<sp/>+=<sp/>(2.*l+1.)*self.f_sky<sp/>*\</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(det_mix/det_the<sp/>+<sp/>math.log(det_the/det_obs)<sp/>-<sp/>num_modes)</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-chi2/2</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641" refid="classMontePythonLike_1_1Likelihood__mpk" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__mpk" kindref="compound">Likelihood_mpk</ref>(<ref refid="classMontePythonLike_1_1Likelihood" kindref="compound">Likelihood</ref>):</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>path,<sp/>data,<sp/>command_line,<sp/>common=False,<sp/>common_dict={}):</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Likelihood.__init__(self,<sp/>path,<sp/>data,<sp/>command_line)</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>require<sp/>P(k)<sp/>from<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(data,<sp/>{</highlight><highlight class="stringliteral">&apos;output&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;mPk&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>common:</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a3ceee0471a895583715c04998e59fdfc" kindref="member">add_common_knowledge</ref>(common_dict)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a80ba5e711b8f93ba3a9df60291dc9664" kindref="member">use_halofit</ref></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a80ba5e711b8f93ba3a9df60291dc9664" kindref="member">use_halofit</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a80ba5e711b8f93ba3a9df60291dc9664" kindref="member">use_halofit</ref>:</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(data,<sp/>{</highlight><highlight class="stringliteral">&apos;non<sp/>linear&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;halofit&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sdssDR7<sp/>by<sp/>T.<sp/>Brinckmann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Based<sp/>on<sp/>Reid<sp/>et<sp/>al.<sp/>2010<sp/>arXiv:0907.1659<sp/>-<sp/>Note:<sp/>arXiv<sp/>version<sp/>not<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ceefbf33b78168c5f1c1276be390583" kindref="member">use_sdssDR7</ref></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ceefbf33b78168c5f1c1276be390583" kindref="member">use_sdssDR7</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>values<sp/>of<sp/>k<sp/>(in<sp/>h/Mpc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afafdfc27eca2fe7adeb44f5901f7bb0e" kindref="member">k_size</ref><sp/>=<sp/>self.max_mpk_kbands_use-self.min_mpk_kbands_use+1</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a16fe9be2e8a62f041f19a85b17e7e873" kindref="member">mu_size</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ebc1f0f7213a401d5d150ae1e5b7204" kindref="member">k</ref><sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afafdfc27eca2fe7adeb44f5901f7bb0e" kindref="member">k_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a072ad3f444107a28c895c1ac32c0cc43" kindref="member">kh</ref><sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afafdfc27eca2fe7adeb44f5901f7bb0e" kindref="member">k_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(JR)<sp/>changed<sp/>reading<sp/>in<sp/>of<sp/>files<sp/>to<sp/>work<sp/>with<sp/>GAMBI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile<sp/>=<sp/>open(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.kbands_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.num_mpk_kbands_full):</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i+2<sp/>&gt;<sp/>self.min_mpk_kbands_use<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>self.max_mpk_kbands_use:</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a072ad3f444107a28c895c1ac32c0cc43" kindref="member">kh</ref>[i-self.min_mpk_kbands_use+1]<sp/>=<sp/>float(line.split()[0])</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile.close()</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>khmax<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a072ad3f444107a28c895c1ac32c0cc43" kindref="member">kh</ref>[-1]</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check<sp/>if<sp/>need<sp/>hight<sp/>value<sp/>of<sp/>k<sp/>for<sp/>giggleZ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aae42a909e794753f3d3045ba2164f537" kindref="member">use_giggleZ</ref></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aae42a909e794753f3d3045ba2164f537" kindref="member">use_giggleZ</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Try<sp/>a<sp/>new<sp/>model,<sp/>with<sp/>an<sp/>additional<sp/>nuisance<sp/>parameter.<sp/>Note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>that<sp/>the<sp/>flag<sp/>use_giggleZPP0<sp/>being<sp/>True<sp/>requires<sp/>use_giggleZ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>be<sp/>True<sp/>as<sp/>well.<sp/>Note<sp/>also<sp/>that<sp/>it<sp/>is<sp/>defined<sp/>globally,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>and<sp/>not<sp/>for<sp/>every<sp/>redshift<sp/>bin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aae42a909e794753f3d3045ba2164f537" kindref="member">use_giggleZ</ref>:</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a1d185514c3da0190c49d8a2acc2d681c" kindref="member">use_giggleZPP0</ref></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a1d185514c3da0190c49d8a2acc2d681c" kindref="member">use_giggleZPP0</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a1d185514c3da0190c49d8a2acc2d681c" kindref="member">use_giggleZPP0</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>the<sp/>flag<sp/>use_giggleZPP0<sp/>is<sp/>set<sp/>to<sp/>True,<sp/>the<sp/>nuisance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>P0_a,<sp/>P0_b,<sp/>P0_c<sp/>and<sp/>P0_d<sp/>are<sp/>expected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a1d185514c3da0190c49d8a2acc2d681c" kindref="member">use_giggleZPP0</ref>:</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;P0_a&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>data.get_mcmc_parameters([</highlight><highlight class="stringliteral">&apos;nuisance&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;In<sp/>likelihood<sp/>%s.<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>+</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;P0_a<sp/>is<sp/>not<sp/>defined<sp/>in<sp/>the<sp/>.param<sp/>file,<sp/>whereas<sp/>this<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nuisance<sp/>parameter<sp/>is<sp/>required<sp/>when<sp/>the<sp/>flag<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;use_giggleZPP0&apos;<sp/>is<sp/>set<sp/>to<sp/>true<sp/>for<sp/>WiggleZ&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aae42a909e794753f3d3045ba2164f537" kindref="member">use_giggleZ</ref>:</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile<sp/>=<sp/>open(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,self.giggleZ_fidpk_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>float(line.split()[0])</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_number<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a072ad3f444107a28c895c1ac32c0cc43" kindref="member">kh</ref>[0]):</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>float(line.split()[0])</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_number<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifid_discard<sp/>=<sp/>line_number-2</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>khmax):</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>float(line.split()[0])</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_number<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile.close()</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af65fdf8c86ef8e3515c778954788a236" kindref="member">k_fid_size</ref><sp/>=<sp/>line_number-ifid_discard+1</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>khmax<sp/>=<sp/>k</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a80ba5e711b8f93ba3a9df60291dc9664" kindref="member">use_halofit</ref>:</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>khmax<sp/>*=<sp/>2</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>require<sp/>k_max<sp/>and<sp/>z_max<sp/>from<sp/>the<sp/>cosmological<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ceefbf33b78168c5f1c1276be390583" kindref="member">use_sdssDR7</ref>:</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(data,<sp/>{</highlight><highlight class="stringliteral">&apos;z_max_pk&apos;</highlight><highlight class="normal">:<sp/>self.zmax})</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(data,<sp/>{</highlight><highlight class="stringliteral">&apos;P_k_max_h/Mpc&apos;</highlight><highlight class="normal">:<sp/>7.5*self.kmax})</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(JR)<sp/>Modifications<sp/>for<sp/>use<sp/>with<sp/>GAMBIT:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>init<sp/>members<sp/>storing<sp/>the<sp/>spectra<sp/>of<sp/>the<sp/>fiducial<sp/>cosmology</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>don&apos;t<sp/>read<sp/>them<sp/>in<sp/>here<sp/>though,<sp/>as<sp/>at<sp/>the<sp/>stage<sp/>of<sp/>initialising</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>likelihood<sp/>objects,<sp/>MP<sp/>does<sp/>not<sp/>know<sp/>the<sp/>path<sp/>to<sp/>the<sp/>CLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>backend,<sp/>yet.<sp/>The<sp/>CLASS<sp/>backend<sp/>folder<sp/>is<sp/>where<sp/>the<sp/>version-de-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pdendent<sp/>fiducial<sp/>spectra<sp/>are<sp/>stored.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Keep<sp/>the<sp/>data<sp/>as<sp/>members<sp/>of<sp/>the<sp/>likelihood<sp/>object<sp/>though,<sp/>such<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>they<sp/>can<sp/>only<sp/>be<sp/>read<sp/>in<sp/>once<sp/>to<sp/>avoid<sp/>problems<sp/>when<sp/>several<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>MPI<sp/>processes<sp/>try<sp/>to<sp/>access<sp/>this<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a12ead9678605d92e8b2b27e998ad6a7d" kindref="member">fiducial_SDSSDR7</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aa853c3fc7d3b674ffc7dc21a9cb8911b" kindref="member">fiducial_SDSSDR7_nlratio</ref><sp/>=<sp/>[],[]</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>{</highlight><highlight class="stringliteral">&apos;P_k_max_h/Mpc&apos;</highlight><highlight class="normal">:<sp/>khmax,<sp/></highlight><highlight class="stringliteral">&apos;z_max_pk&apos;</highlight><highlight class="normal">:<sp/>self.redshift})</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>information<sp/>on<sp/>different<sp/>regions<sp/>in<sp/>the<sp/>sky</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a18bc88724de0fdadbc7f2515406ef6df" kindref="member">has_regions</ref></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a18bc88724de0fdadbc7f2515406ef6df" kindref="member">has_regions</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a18bc88724de0fdadbc7f2515406ef6df" kindref="member">has_regions</ref>):</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref><sp/>=<sp/>len(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aeecaf66bea053db4a7e4b59e9291bf96" kindref="member">used_region</ref>)</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a696ca2e03f233c98e6880826b483f8e2" kindref="member">num_regions_used</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref>):</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aeecaf66bea053db4a7e4b59e9291bf96" kindref="member">used_region</ref>[i]):</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a696ca2e03f233c98e6880826b483f8e2" kindref="member">num_regions_used</ref><sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a696ca2e03f233c98e6880826b483f8e2" kindref="member">num_regions_used</ref><sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;In<sp/>likelihood<sp/>%s.<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref><sp/>+</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mpk:<sp/>no<sp/>regions<sp/>begin<sp/>used<sp/>in<sp/>this<sp/>data<sp/>set&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a696ca2e03f233c98e6880826b483f8e2" kindref="member">num_regions_used</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aeecaf66bea053db4a7e4b59e9291bf96" kindref="member">used_region</ref><sp/>=<sp/>[</highlight><highlight class="keyword">True</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>window<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref><sp/>=<sp/>self.max_mpk_points_use-self.min_mpk_points_use+1</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a7fd2e4b4dd21daa4da5c49ecf1cc1440" kindref="member">window</ref><sp/>=<sp/>np.zeros(</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afafdfc27eca2fe7adeb44f5901f7bb0e" kindref="member">k_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(JR)<sp/>changed<sp/>reading<sp/>in<sp/>of<sp/>files<sp/>to<sp/>work<sp/>with<sp/>GAMBI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile<sp/>=<sp/>open(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.windows_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i_region<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref>):</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.num_mpk_points_full):</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i+2<sp/>&gt;<sp/>self.min_mpk_points_use<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>self.max_mpk_points_use):</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afafdfc27eca2fe7adeb44f5901f7bb0e" kindref="member">k_size</ref>):</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a7fd2e4b4dd21daa4da5c49ecf1cc1440" kindref="member">window</ref>[i_region,<sp/>i-self.min_mpk_points_use+1,<sp/>j]<sp/>=<sp/>float(line.split()[j+self.min_mpk_kbands_use-1])</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile.close()</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>measurements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a05059112c2599a01d555f7ec0370b0c7" kindref="member">P_obs</ref><sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ab46613c1008dc6d6eca1a3c712349dd5" kindref="member">P_err</ref><sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(JR)<sp/>changed<sp/>reading<sp/>in<sp/>of<sp/>files<sp/>to<sp/>work<sp/>with<sp/>GAMBI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile<sp/>=<sp/>open(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.measurements_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i_region<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref>):</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.num_mpk_points_full):</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i+2<sp/>&gt;<sp/>self.min_mpk_points_use<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>self.max_mpk_points_use):</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a05059112c2599a01d555f7ec0370b0c7" kindref="member">P_obs</ref>[i_region,<sp/>i-self.min_mpk_points_use+1]<sp/>=<sp/>float(line.split()[3])</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ab46613c1008dc6d6eca1a3c712349dd5" kindref="member">P_err</ref>[i_region,<sp/>i-self.min_mpk_points_use+1]<sp/>=<sp/>float(line.split()[4])</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile.close()</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>covariance<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.covmat_file</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a159e54947fb069bd8cbda56bcdaf7b4f" kindref="member">use_covmat</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a159e54947fb069bd8cbda56bcdaf7b4f" kindref="member">use_covmat</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a6620991cfddbfde0fd9f1267a3e1576e" kindref="member">use_invcov</ref></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a6620991cfddbfde0fd9f1267a3e1576e" kindref="member">use_invcov</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af498902d97298a51a1b781c57d3b48b3" kindref="member">invcov</ref><sp/>=<sp/>np.zeros(</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a159e54947fb069bd8cbda56bcdaf7b4f" kindref="member">use_covmat</ref>:</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov<sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invcov_tmp<sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile<sp/>=<sp/>open(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.covmat_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i_region<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref>):</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.num_mpk_points_full):</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i+2<sp/>&gt;<sp/>self.min_mpk_points_use<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>self.max_mpk_points_use):</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.num_mpk_points_full):</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j+2<sp/>&gt;<sp/>self.min_mpk_points_use<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>j<sp/>&lt;<sp/>self.max_mpk_points_use):</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov[i-self.min_mpk_points_use+1,j-self.min_mpk_points_use+1]<sp/>=<sp/>float(line.split()[j])</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a6620991cfddbfde0fd9f1267a3e1576e" kindref="member">use_invcov</ref>:</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invcov_tmp<sp/>=<sp/>cov</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invcov_tmp<sp/>=<sp/>np.linalg.inv(cov)</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>):</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>):</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af498902d97298a51a1b781c57d3b48b3" kindref="member">invcov</ref>[i_region,<sp/>i,<sp/>j]<sp/>=<sp/>invcov_tmp[i,<sp/>j]</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile.close()</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i_region<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref>):</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>):</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af498902d97298a51a1b781c57d3b48b3" kindref="member">invcov</ref>[i_region,<sp/>j,<sp/>j]<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1./(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ab46613c1008dc6d6eca1a3c712349dd5" kindref="member">P_err</ref>[i_region,<sp/>j]**2)</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>fiducial<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aae42a909e794753f3d3045ba2164f537" kindref="member">use_giggleZ</ref>:</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a097534b053aea3dbca577f8a516e6d8f" kindref="member">P_fid</ref><sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af65fdf8c86ef8e3515c778954788a236" kindref="member">k_fid_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9f187f0549659c06f323db9ac82aa80a" kindref="member">k_fid</ref><sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af65fdf8c86ef8e3515c778954788a236" kindref="member">k_fid_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile<sp/>=<sp/>open(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,self.giggleZ_fidpk_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(ifid_discard):</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af65fdf8c86ef8e3515c778954788a236" kindref="member">k_fid_size</ref>):</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9f187f0549659c06f323db9ac82aa80a" kindref="member">k_fid</ref>[i]<sp/>=<sp/>float(line.split()[0])</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a097534b053aea3dbca577f8a516e6d8f" kindref="member">P_fid</ref>[i]<sp/>=<sp/>float(line.split()[1])</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile.close()</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>integral<sp/>constraint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ceefbf33b78168c5f1c1276be390583" kindref="member">use_sdssDR7</ref>:</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ac7901391be0757ef721ab932fded6791" kindref="member">zerowindowfxn</ref><sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afafdfc27eca2fe7adeb44f5901f7bb0e" kindref="member">k_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile<sp/>=<sp/>open(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,self.zerowindowfxn_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afafdfc27eca2fe7adeb44f5901f7bb0e" kindref="member">k_size</ref>):</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ac7901391be0757ef721ab932fded6791" kindref="member">zerowindowfxn</ref>[i]<sp/>=<sp/>float(line.split()[0])</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile.close()</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9820458fe0df13758eb2c449c0daee40" kindref="member">zerowindowfxnsubtractdat</ref><sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile<sp/>=<sp/>open(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,self.zerowindowfxnsubtractdat_file),<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a5c98401e44ddadcddf5bb4c50339ccbf" kindref="member">zerowindowfxnsubtractdatnorm</ref><sp/>=<sp/>float(line.split()[0])</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>):</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>datafile.readline()</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9820458fe0df13758eb2c449c0daee40" kindref="member">zerowindowfxnsubtractdat</ref>[i]<sp/>=<sp/>float(line.split()[0])</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datafile.close()</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>initialize<sp/>array<sp/>of<sp/>values<sp/>for<sp/>the<sp/>nuisance<sp/>parameters<sp/>a1,a2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ceefbf33b78168c5f1c1276be390583" kindref="member">use_sdssDR7</ref>:</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nptsa1=self.nptsa1</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nptsa2=self.nptsa2</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a1maxval=self.a1maxval</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1acd5783edc448b9b54067096bfc3dacf8" kindref="member">a1list</ref>=np.zeros(self.nptstot)</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af2b0352d215a9cd5c114553d322e1464" kindref="member">a2list</ref>=np.zeros(self.nptstot)</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da1<sp/>=<sp/>a1maxval/(nptsa1//2)</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da2<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb409cfe31a12153b6fb4d8a8c6b777e" kindref="member">a2maxpos</ref>(-a1maxval)<sp/>/<sp/>(nptsa2//2)</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count=0</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(-nptsa1//2,<sp/>nptsa1//2+1):</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(-nptsa2//2,<sp/>nptsa2//2+1):</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a1val<sp/>=<sp/>da1*i</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2val<sp/>=<sp/>da2*j</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a2val<sp/>&gt;=<sp/>0.0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a2val<sp/>&lt;=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb409cfe31a12153b6fb4d8a8c6b777e" kindref="member">a2maxpos</ref>(a1val)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a2val<sp/>&gt;=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ab7e9354e80951b4a0c71305d1eb926b2" kindref="member">a2minfinalpos</ref>(a1val))<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(a2val<sp/>&lt;=<sp/>0.0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a2val<sp/>&lt;=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a4006feeeeb52ffbab2b4d5ca5dbf57d9" kindref="member">a2maxfinalneg</ref>(a1val)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a2val<sp/>&gt;=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afc6dbc15ea43bcce6aa41fba8e931537" kindref="member">a2minneg</ref>(a1val))):</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9b26ff7f1f113f00871017ee8ffdfc82" kindref="member">testa1a2</ref>(a1val,a2val)<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Error<sp/>in<sp/>likelihood<sp/>%s<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Nuisance<sp/>parameter<sp/>values<sp/>not<sp/>valid:<sp/>%s<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(a1,a2)<sp/>)</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(count<sp/>&gt;=<sp/>self.nptstot):</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Error<sp/>in<sp/>likelihood<sp/>%s<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;count<sp/>&gt;<sp/>nptstot<sp/>failure&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1acd5783edc448b9b54067096bfc3dacf8" kindref="member">a1list</ref>[count]=a1val</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af2b0352d215a9cd5c114553d322e1464" kindref="member">a2list</ref>[count]=a2val</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count=count+1</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>functions<sp/>added<sp/>for<sp/>nuisance<sp/>parameter<sp/>space<sp/>checks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">a2maxpos(self,a1val):</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2max<sp/>=<sp/>-1.0</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a1val<sp/>&lt;=<sp/>min(self.s1/self.k1,self.s2/self.k2)):</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2max<sp/>=<sp/>min(self.s1/self.k1**2<sp/>-<sp/>a1val/self.k1,<sp/>self.s2/self.k2**2<sp/>-<sp/>a1val/self.k2)</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a2max</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">a2min1pos(self,a1val):</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2min1<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(a1val<sp/>&lt;=<sp/>0.0):</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2min1<sp/>=<sp/>max(-self.s1/self.k1**2<sp/>-<sp/>a1val/self.k1,<sp/>-self.s2/self.k2**2<sp/>-<sp/>a1val/self.k2,<sp/>0.0)</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a2min1</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">a2min2pos(self,a1val):</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2min2<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(abs(a1val)<sp/>&gt;=<sp/>2.0*self.s1/self.k1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a1val<sp/>&lt;=<sp/>0.0):</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2min2<sp/>=<sp/>a1val**2/self.s1*0.25</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a2min2</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">a2min3pos(self,a1val):</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2min3<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(abs(a1val)<sp/>&gt;=<sp/>2.0*self.s2/self.k2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a1val<sp/>&lt;=<sp/>0.0):</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2min3<sp/>=<sp/>a1val**2/self.s2*0.25</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a2min3</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">a2minfinalpos(self,a1val):</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2minpos<sp/>=<sp/>max(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ad7cd829174cb9daf5f65f64317138d4d" kindref="member">a2min1pos</ref>(a1val),self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a127096fdfad3d8de212d752edfcc7c77" kindref="member">a2min2pos</ref>(a1val),self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a546b888252f19a14885e5aeebdc00728" kindref="member">a2min3pos</ref>(a1val))</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a2minpos</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">a2minneg(self,a1val):</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a1val<sp/>&gt;=<sp/>max(-self.s1/self.k1,-self.s2/self.k2)):</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2min<sp/>=<sp/>max(-self.s1/self.k1**2<sp/>-<sp/>a1val/self.k1,<sp/>-self.s2/self.k2**2<sp/>-<sp/>a1val/self.k2)</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2min<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a2min</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">a2max1neg(self,a1val):</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(a1val<sp/>&gt;=<sp/>0.0):</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2max1<sp/>=<sp/>min(self.s1/self.k1**2<sp/>-<sp/>a1val/self.k1,<sp/>self.s2/self.k2**2<sp/>-<sp/>a1val/self.k2,<sp/>0.0)</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2max1<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a2max1</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">a2max2neg(self,a1val):</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2max2<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(abs(a1val)<sp/>&gt;=<sp/>2.0*self.s1/self.k1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a1val<sp/>&gt;=<sp/>0.0):</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2max2<sp/>=<sp/>-a1val**2/self.s1*0.25</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a2max2</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">a2max3neg(self,a1val):</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2max3<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(abs(a1val)<sp/>&gt;=<sp/>2.0*self.s2/self.k2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a1val<sp/>&gt;=<sp/>0.0):</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2max3<sp/>=<sp/>-a1val**2/self.s2*0.25</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a2max3</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">a2maxfinalneg(self,a1val):</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2maxneg<sp/>=<sp/>min(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1acdd65c93c7abd3a5e7771667a5be4c4b" kindref="member">a2max1neg</ref>(a1val),self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aded0b1e9f832239ed8903d07147a7446" kindref="member">a2max2neg</ref>(a1val),self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aed72e46c458f5e091d929175f7bc4047" kindref="member">a2max3neg</ref>(a1val))</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a2maxneg</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">testa1a2(self,a1val,<sp/>a2val):</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testresult<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check<sp/>if<sp/>there&apos;s<sp/>an<sp/>extremum;<sp/>either<sp/>a1val<sp/>or<sp/>a2val<sp/>has<sp/>to<sp/>be<sp/>negative,<sp/>not<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a2val==0.):</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>testresult<sp/></highlight><highlight class="comment">#not<sp/>in<sp/>the<sp/>original<sp/>code,<sp/>but<sp/>since<sp/>a2val=0<sp/>returns<sp/>True<sp/>this<sp/>way<sp/>I<sp/>avoid<sp/>zerodivisionerror</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kext<sp/>=<sp/>-a1val/2.0/a2val</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffval<sp/>=<sp/>abs(a1val*kext<sp/>+<sp/>a2val*kext**2)</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(kext<sp/>&gt;<sp/>0.0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>kext<sp/>&lt;=<sp/>self.k1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>diffval<sp/>&gt;<sp/>self.s1):</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testresult<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(kext<sp/>&gt;<sp/>0.0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>kext<sp/>&lt;=<sp/>self.k2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>diffval<sp/>&gt;<sp/>self.s2):</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testresult<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(a1val*self.k1<sp/>+<sp/>a2val*self.k1**2)<sp/>&gt;<sp/>self.s1):</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testresult<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(a1val*self.k2<sp/>+<sp/>a2val*self.k2**2)<sp/>&gt;<sp/>self.s2):</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testresult<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>testresult</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__mpk_1a3ceee0471a895583715c04998e59fdfc" kindref="member">add_common_knowledge</ref>(self,<sp/>common_dictionary):</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2003"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add<sp/>to<sp/>a<sp/>class<sp/>the<sp/>content<sp/>of<sp/>a<sp/>shared<sp/>dictionary<sp/>of<sp/>attributes</highlight></codeline>
<codeline lineno="2004"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2005"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>purpose<sp/>of<sp/>this<sp/>method<sp/>is<sp/>to<sp/>set<sp/>some<sp/>attributes<sp/>globally<sp/>for<sp/>a<sp/>Pk</highlight></codeline>
<codeline lineno="2006"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood,<sp/>that<sp/>are<sp/>shared<sp/>amongst<sp/>all<sp/>the<sp/>redshift<sp/>bins<sp/>(in</highlight></codeline>
<codeline lineno="2007"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WiggleZ.data<sp/>for<sp/>instance,<sp/>a<sp/>few<sp/>flags<sp/>and<sp/>numbers<sp/>are<sp/>defined<sp/>that</highlight></codeline>
<codeline lineno="2008"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be<sp/>transfered<sp/>to<sp/>wigglez_a,<sp/>b,<sp/>c<sp/>and<sp/>d</highlight></codeline>
<codeline lineno="2009"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2010"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key,<sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>common_dictionary.items():</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>First,<sp/>check<sp/>if<sp/>the<sp/>parameter<sp/>exists<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="stringliteral">&quot;self.%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>key)</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warnings.warn(</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;parameter<sp/>%s<sp/>from<sp/>likelihood<sp/>%s<sp/>will<sp/>be<sp/>replaced<sp/>by<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>common<sp/>knowledge<sp/>routine&quot;</highlight><highlight class="normal"><sp/>%<sp/>(key,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>))</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(JR)<sp/>had<sp/>to<sp/>adopt<sp/>these<sp/>check<sp/>to<sp/>work<sp/>properly<sp/>with<sp/>ascii<sp/>&amp;<sp/>unicode<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>original<sp/>line<sp/>was<sp/>-&gt;<sp/>&apos;if<sp/>type(value)<sp/>!=<sp/>type(&apos;foo&apos;)&apos;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>which<sp/>crashed<sp/>if<sp/>one<sp/>of<sp/>the<sp/>strings<sp/>was<sp/>unicode<sp/>formated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(value,<sp/>basestring)):</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>non<sp/>string<sp/>type&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="stringliteral">&quot;self.%s<sp/>=<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(key,<sp/>value))</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>string<sp/>type&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="stringliteral">&quot;self.%s<sp/>=<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal"><sp/>%<sp/>(key,<sp/>value.replace(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__mpk_1aa24e6767b1d59fc6bb081056dff92697" kindref="member">loglkl</ref>(self,<sp/>cosmo,<sp/>data):</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>reduced<sp/>Hubble<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>cosmo.h()</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>WiggleZ<sp/>and<sp/>sdssDR7<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.use_scaling:</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>angular<sp/>diameter<sp/>distance<sp/>at<sp/>this<sp/>redshift,<sp/>in<sp/>Mpc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_angular<sp/>=<sp/>cosmo.angular_distance(self.redshift)</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>radial<sp/>distance<sp/>at<sp/>this<sp/>redshift,<sp/>in<sp/>Mpc,<sp/>is<sp/>simply<sp/>1/H<sp/>(itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>in<sp/>Mpc^-1).<sp/>Hz<sp/>is<sp/>an<sp/>array,<sp/>with<sp/>only<sp/>one<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r,<sp/>Hz<sp/>=<sp/>cosmo.z_of_r([self.redshift])</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_radial<sp/>=<sp/>1/Hz[0]</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scaling<sp/>factor<sp/>=<sp/>(d_angular**2<sp/>*<sp/>d_radial)^(1/3)<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fiducial<sp/>cosmology<sp/>used<sp/>in<sp/>the<sp/>data<sp/>files<sp/>of<sp/>the<sp/>observations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>divided<sp/>by<sp/>the<sp/>same<sp/>quantity<sp/>for<sp/>the<sp/>cosmology<sp/>we<sp/>are<sp/>comparing<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>fiducial<sp/>values<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>.data<sp/>files<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>each<sp/>experiment,<sp/>and<sp/>are<sp/>truly<sp/>in<sp/>Mpc.<sp/>Beware<sp/>for<sp/>a<sp/>potential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>difference<sp/>with<sp/>CAMB<sp/>conventions<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaling<sp/>=<sp/>pow(</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.d_angular_fid/d_angular)**2<sp/>*</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.d_radial_fid/d_radial),<sp/>1./3.)</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaling<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>rescaled<sp/>values<sp/>of<sp/>k<sp/>in<sp/>1/Mpc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ebc1f0f7213a401d5d150ae1e5b7204" kindref="member">k</ref><sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a072ad3f444107a28c895c1ac32c0cc43" kindref="member">kh</ref>*h*scaling</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>P(k)<sp/>at<sp/>right<sp/>values<sp/>of<sp/>k,<sp/>convert<sp/>it<sp/>to<sp/>(Mpc/h)^3<sp/>and<sp/>rescale<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_lin<sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afafdfc27eca2fe7adeb44f5901f7bb0e" kindref="member">k_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>the<sp/>flag<sp/>use_giggleZ<sp/>is<sp/>set<sp/>to<sp/>True,<sp/>the<sp/>power<sp/>spectrum<sp/>retrieved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>from<sp/>Class<sp/>will<sp/>get<sp/>rescaled<sp/>by<sp/>the<sp/>fiducial<sp/>power<sp/>spectrum<sp/>given<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>GiggleZ<sp/>N-body<sp/>simulations<sp/>CITE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aae42a909e794753f3d3045ba2164f537" kindref="member">use_giggleZ</ref>:</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af65fdf8c86ef8e3515c778954788a236" kindref="member">k_fid_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af65fdf8c86ef8e3515c778954788a236" kindref="member">k_fid_size</ref>):</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P[i]<sp/>=<sp/>cosmo.pk(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9f187f0549659c06f323db9ac82aa80a" kindref="member">k_fid</ref>[i]*h,<sp/>self.redshift)</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>following<sp/>create<sp/>a<sp/>polynome<sp/>in<sp/>k,<sp/>which<sp/>coefficients<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>stored<sp/>in<sp/>the<sp/>.data<sp/>files<sp/>of<sp/>the<sp/>experiments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(6):</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power<sp/>+=<sp/>self.giggleZ_fidpoly[j]*self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9f187f0549659c06f323db9ac82aa80a" kindref="member">k_fid</ref>[i]**j</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>rescale<sp/>P<sp/>by<sp/>fiducial<sp/>model<sp/>and<sp/>get<sp/>it<sp/>in<sp/>(Mpc/h)**3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P[i]<sp/>*=<sp/>pow(10,<sp/>power)*(h/scaling)**3/self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a097534b053aea3dbca577f8a516e6d8f" kindref="member">P_fid</ref>[i]</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a1d185514c3da0190c49d8a2acc2d681c" kindref="member">use_giggleZPP0</ref>:</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Shot<sp/>noise<sp/>parameter<sp/>addition<sp/>to<sp/>GiggleZ<sp/>model.<sp/>It<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>recover<sp/>the<sp/>proper<sp/>nuisance<sp/>parameter,<sp/>depending<sp/>on<sp/>the<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>I.e.,<sp/>Wigglez_A<sp/>should<sp/>recover<sp/>P0_a,<sp/>etc...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>[-2:]<sp/><sp/></highlight><highlight class="comment">#<sp/>circle<sp/>over<sp/>&quot;_a&quot;,<sp/>&quot;_b&quot;,<sp/>etc...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P0_value<sp/>=<sp/>data.mcmc_parameters[</highlight><highlight class="stringliteral">&apos;P0&apos;</highlight><highlight class="normal">+tag][</highlight><highlight class="stringliteral">&apos;current&apos;</highlight><highlight class="normal">]<sp/>*\</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.mcmc_parameters[</highlight><highlight class="stringliteral">&apos;P0&apos;</highlight><highlight class="normal">+tag][</highlight><highlight class="stringliteral">&apos;scale&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_lin<sp/>=<sp/>np.interp(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a072ad3f444107a28c895c1ac32c0cc43" kindref="member">kh</ref>,self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9f187f0549659c06f323db9ac82aa80a" kindref="member">k_fid</ref>,P+P0_value)</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>P_lin<sp/>by<sp/>interpolation.<sp/>It<sp/>is<sp/>still<sp/>in<sp/>(Mpc/h)**3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_lin<sp/>=<sp/>np.interp(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a072ad3f444107a28c895c1ac32c0cc43" kindref="member">kh</ref>,<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9f187f0549659c06f323db9ac82aa80a" kindref="member">k_fid</ref>,<sp/>P)</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ceefbf33b78168c5f1c1276be390583" kindref="member">use_sdssDR7</ref>:</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>update<sp/>in<sp/>numpy&apos;s<sp/>logspace<sp/>function<sp/>breaks<sp/>python3<sp/>compatibility,<sp/>fixed<sp/>by<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>goemspace<sp/>function,<sp/>giving<sp/>same<sp/>result<sp/>as<sp/>old<sp/>logspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.version_info[0]<sp/>&lt;<sp/>3:</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kh<sp/>=<sp/>np.logspace(math.log(1e-3),math.log(1.0),num=(math.log(1.0)-math.log(1e-3))/0.01+1,base=math.exp(1.0))</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kh<sp/>=<sp/>np.geomspace(1e-3,1,num=int((math.log(1.0)-math.log(1e-3))/0.01)+1)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Rescale<sp/>the<sp/>scaling<sp/>factor<sp/>by<sp/>the<sp/>fiducial<sp/>value<sp/>for<sp/>h<sp/>divided<sp/>by<sp/>the<sp/>sampled<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>h=0.701<sp/>was<sp/>used<sp/>for<sp/>the<sp/>N-body<sp/>calibration<sp/>simulations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaling<sp/>=<sp/>scaling<sp/>*<sp/>(0.701/h)</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>kh*h<sp/></highlight><highlight class="comment">#<sp/>k<sp/>in<sp/>1/Mpc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>redshift<sp/>bins<sp/>and<sp/>associated<sp/>bao<sp/>2<sp/>sigma<sp/>value<sp/>[NEAR,<sp/>MID,<sp/>FAR]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>np.array([0.235,<sp/>0.342,<sp/>0.421])</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma2bao<sp/>=<sp/>np.array([86.9988,<sp/>85.1374,<sp/>84.5958])</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Analytical<sp/>growth<sp/>factor<sp/>for<sp/>each<sp/>redshift<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_growth<sp/>=<sp/>np.zeros(len(z))</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>P(k)<sp/>*with*<sp/>wiggles,<sp/>both<sp/>linear<sp/>and<sp/>nonlinear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Plin<sp/>=<sp/>np.zeros(len(k),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pnl<sp/>=<sp/>np.zeros(len(k),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>P(k)<sp/>*without*<sp/>wiggles,<sp/>both<sp/>linear<sp/>and<sp/>nonlinear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Psmooth<sp/>=<sp/>np.zeros(len(k),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Psmooth_nl<sp/>=<sp/>np.zeros(len(k),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Damping<sp/>function<sp/>and<sp/>smeared<sp/>P(k)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdamp<sp/>=<sp/>np.zeros([len(k),<sp/>len(z)],<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Psmear<sp/>=<sp/>np.zeros([len(k),<sp/>len(z)],<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ratio<sp/>of<sp/>smoothened<sp/>non-linear<sp/>to<sp/>linear<sp/>P(k)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlratio<sp/>=<sp/>np.zeros([len(k),<sp/>len(z)],<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Loop<sp/>over<sp/>each<sp/>redshift<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(z)):</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>growth<sp/>factor<sp/>at<sp/>each<sp/>redshift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>growth<sp/>factor<sp/>is<sp/>normalized<sp/>by<sp/>the<sp/>growth<sp/>factor<sp/>today</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_growth[j]<sp/>=<sp/>cosmo.scale_independent_growth_factor(z[j])</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>Pk<sp/>*with*<sp/>wiggles,<sp/>both<sp/>linear<sp/>and<sp/>nonlinear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>P(k)<sp/>at<sp/>right<sp/>values<sp/>of<sp/>k<sp/>in<sp/>Mpc**3,<sp/>convert<sp/>it<sp/>to<sp/>(Mpc/h)^3<sp/>and<sp/>rescale<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>values<sp/>of<sp/>P(k)<sp/>in<sp/>Mpc**3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(k)):</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Plin[i]<sp/>=<sp/>cosmo.pk_lin(k[i],<sp/>z[j])</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pnl[i]<sp/>=<sp/>cosmo.pk(k[i],<sp/>z[j])</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>rescaled<sp/>values<sp/>of<sp/>P(k)<sp/>in<sp/>(Mpc/h)**3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Plin<sp/>*=<sp/>h**3<sp/></highlight><highlight class="comment">#(h/scaling)**3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pnl<sp/>*=<sp/>h**3<sp/></highlight><highlight class="comment">#(h/scaling)**3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>Pk<sp/>*without*<sp/>wiggles,<sp/>both<sp/>linear<sp/>and<sp/>nonlinear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Psmooth<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ae867f673795dd2bfc35da887083f6eab" kindref="member">remove_bao</ref>(kh,Plin)</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Psmooth_nl<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ae867f673795dd2bfc35da887083f6eab" kindref="member">remove_bao</ref>(kh,Pnl)</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Apply<sp/>Gaussian<sp/>damping<sp/>due<sp/>to<sp/>non-linearities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdamp[:,j]<sp/>=<sp/>np.exp(-0.5*sigma2bao[j]*kh**2)</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Psmear[:,j]<sp/>=<sp/>Plin*fdamp[:,j]+Psmooth*(1.0-fdamp[:,j])</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Take<sp/>ratio<sp/>of<sp/>smoothened<sp/>non-linear<sp/>to<sp/>linear<sp/>P(k)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlratio[:,j]<sp/>=<sp/>Psmooth_nl/Psmooth</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Save<sp/>fiducial<sp/>model<sp/>for<sp/>non-linear<sp/>corrections<sp/>using<sp/>the<sp/>flat<sp/>fiducial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Omega_m<sp/>=<sp/>0.25,<sp/>Omega_L<sp/>=<sp/>0.75,<sp/>h<sp/>=<sp/>0.701</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Re-run<sp/>if<sp/>changes<sp/>are<sp/>made<sp/>to<sp/>how<sp/>non-linear<sp/>corrections<sp/>are<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>e.g.<sp/>the<sp/>halofit<sp/>implementation<sp/>in<sp/>CLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>re-run<sp/>fiducial,<sp/>set<sp/>&lt;experiment&gt;.create_fid<sp/>=<sp/>True<sp/>in<sp/>.data<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Can<sp/>leave<sp/>option<sp/>enabled,<sp/>as<sp/>it<sp/>will<sp/>only<sp/>compute<sp/>once<sp/>at<sp/>the<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(JR)<sp/>changed<sp/>the<sp/>above<sp/>described<sp/>behaviour<sp/>for<sp/>use<sp/>within<sp/>GAMBIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>make<sp/>sure<sp/>you<sp/>never<sp/>get<sp/>inconsistent<sp/>results<sp/>because<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>use<sp/>of<sp/>different<sp/>CLASS<sp/>versions.<sp/>The<sp/>file<sp/>containing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>fiducial<sp/>spectra<sp/>is<sp/>created<sp/>after<sp/>CLASS<sp/>is<sp/>build<sp/>wit<sp/>GAMBIT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Here,<sp/>we<sp/>just<sp/>have<sp/>to<sp/>read<sp/>it<sp/>in,<sp/>pointing<sp/>MP<sp/>to<sp/>the<sp/>CLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>that<sp/>is<sp/>used<sp/>in<sp/>the<sp/>current<sp/>run.<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>in<sp/>fiducial<sp/>spectra<sp/>when<sp/>executing<sp/>the<sp/>first<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a12ead9678605d92e8b2b27e998ad6a7d" kindref="member">fiducial_SDSSDR7</ref>)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fiducial<sp/>=<sp/>np.loadtxt(data.path[</highlight><highlight class="stringliteral">&quot;cosmo&quot;</highlight><highlight class="normal">]+</highlight><highlight class="stringliteral">&apos;/../sdss_lrgDR7_fiducialmodel.dat&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a12ead9678605d92e8b2b27e998ad6a7d" kindref="member">fiducial_SDSSDR7</ref><sp/>=<sp/>fiducial[:,1:4]</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aa853c3fc7d3b674ffc7dc21a9cb8911b" kindref="member">fiducial_SDSSDR7_nlratio</ref><sp/>=<sp/>fiducial[:,1:7]</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>fiducial<sp/>model<sp/>(loaded<sp/>data<sp/>in<sp/>likelihood<sp/>initialisation<sp/>to<sp/>save<sp/>time<sp/>and<sp/>avoid<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>problems<sp/>when<sp/>several<sp/>MPI<sp/>processes<sp/>try<sp/>to<sp/>access<sp/>one<sp/>file<sp/>multiple<sp/>times<sp/>during<sp/>a<sp/>scan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fid<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a12ead9678605d92e8b2b27e998ad6a7d" kindref="member">fiducial_SDSSDR7</ref></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fidnlratio<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aa853c3fc7d3b674ffc7dc21a9cb8911b" kindref="member">fiducial_SDSSDR7_nlratio</ref></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Put<sp/>all<sp/>factors<sp/>together<sp/>to<sp/>obtain<sp/>the<sp/>P(k)<sp/>for<sp/>each<sp/>redshift<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pnear=np.interp(kh,kh,Psmear[:,0]*(nlratio[:,0]/fidnlratio[:,0])*fid[:,0]*D_growth[0]**(-2.))</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pmid<sp/>=np.interp(kh,kh,Psmear[:,1]*(nlratio[:,1]/fidnlratio[:,1])*fid[:,1]*D_growth[1]**(-2.))</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pfar<sp/>=np.interp(kh,kh,Psmear[:,2]*(nlratio[:,2]/fidnlratio[:,2])*fid[:,2]*D_growth[2]**(-2.))</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>and<sp/>rescale<sp/>k</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ebc1f0f7213a401d5d150ae1e5b7204" kindref="member">k</ref>=self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a072ad3f444107a28c895c1ac32c0cc43" kindref="member">kh</ref>*h*scaling</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Weighted<sp/>mean<sp/>of<sp/>the<sp/>P(k)<sp/>for<sp/>each<sp/>redshift<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_lin=(0.395*Pnear+0.355*Pmid+0.250*Pfar)</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_lin=np.interp(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ebc1f0f7213a401d5d150ae1e5b7204" kindref="member">k</ref>,kh*h,P_lin)*(1./scaling)**3<sp/></highlight><highlight class="comment">#<sp/>remember<sp/>self.k<sp/>is<sp/>scaled<sp/>but<sp/>self.kh<sp/>isn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>rescaled<sp/>values<sp/>of<sp/>k<sp/>in<sp/>1/Mpc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ebc1f0f7213a401d5d150ae1e5b7204" kindref="member">k</ref><sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a072ad3f444107a28c895c1ac32c0cc43" kindref="member">kh</ref>*h*scaling</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>values<sp/>of<sp/>P(k)<sp/>in<sp/>Mpc**3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afafdfc27eca2fe7adeb44f5901f7bb0e" kindref="member">k_size</ref>):</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_lin[i]<sp/>=<sp/>cosmo.pk(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ebc1f0f7213a401d5d150ae1e5b7204" kindref="member">k</ref>[i],<sp/>self.redshift)</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>rescaled<sp/>values<sp/>of<sp/>P(k)<sp/>in<sp/>(Mpc/h)**3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_lin<sp/>*=<sp/>(h/scaling)**3</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>infer<sp/>P_th<sp/>from<sp/>P_lin.<sp/>It<sp/>is<sp/>still<sp/>in<sp/>(Mpc/h)**3.<sp/>TODO<sp/>why<sp/>was<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>called<sp/>P_lin<sp/>in<sp/>the<sp/>first<sp/>place<sp/>?<sp/>Couldn&apos;t<sp/>we<sp/>use<sp/>now<sp/>P_th<sp/>all<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>way<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_th<sp/>=<sp/>P_lin</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ceefbf33b78168c5f1c1276be390583" kindref="member">use_sdssDR7</ref>:</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq<sp/>=np.zeros(self.nptstot)</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisqmarg<sp/>=<sp/>np.zeros(self.nptstot)</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pth<sp/>=<sp/>P_th</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pth_k<sp/>=<sp/>P_th*(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ebc1f0f7213a401d5d150ae1e5b7204" kindref="member">k</ref>/h)<sp/></highlight><highlight class="comment">#<sp/>self.k<sp/>has<sp/>the<sp/>scaling<sp/>included,<sp/>so<sp/>self.k/h<sp/>!=<sp/>self.kh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pth_k2<sp/>=<sp/>P_th*(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9ebc1f0f7213a401d5d150ae1e5b7204" kindref="member">k</ref>/h)**2</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WPth<sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a7fd2e4b4dd21daa4da5c49ecf1cc1440" kindref="member">window</ref>[0,:],<sp/>Pth)</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WPth_k<sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a7fd2e4b4dd21daa4da5c49ecf1cc1440" kindref="member">window</ref>[0,:],<sp/>Pth_k)</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WPth_k2<sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a7fd2e4b4dd21daa4da5c49ecf1cc1440" kindref="member">window</ref>[0,:],<sp/>Pth_k2)</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumzerow_Pth<sp/>=<sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ac7901391be0757ef721ab932fded6791" kindref="member">zerowindowfxn</ref>*Pth)/self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a5c98401e44ddadcddf5bb4c50339ccbf" kindref="member">zerowindowfxnsubtractdatnorm</ref></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumzerow_Pth_k<sp/>=<sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ac7901391be0757ef721ab932fded6791" kindref="member">zerowindowfxn</ref>*Pth_k)/self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a5c98401e44ddadcddf5bb4c50339ccbf" kindref="member">zerowindowfxnsubtractdatnorm</ref></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumzerow_Pth_k2<sp/>=<sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1ac7901391be0757ef721ab932fded6791" kindref="member">zerowindowfxn</ref>*Pth_k2)/self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a5c98401e44ddadcddf5bb4c50339ccbf" kindref="member">zerowindowfxnsubtractdatnorm</ref></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covdat<sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af498902d97298a51a1b781c57d3b48b3" kindref="member">invcov</ref>[0,:,:],self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a05059112c2599a01d555f7ec0370b0c7" kindref="member">P_obs</ref>[0,:])</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covth<sp/><sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af498902d97298a51a1b781c57d3b48b3" kindref="member">invcov</ref>[0,:,:],WPth)</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covth_k<sp/><sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af498902d97298a51a1b781c57d3b48b3" kindref="member">invcov</ref>[0,:,:],WPth_k)</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covth_k2<sp/><sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af498902d97298a51a1b781c57d3b48b3" kindref="member">invcov</ref>[0,:,:],WPth_k2)</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covth_zerowin<sp/><sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af498902d97298a51a1b781c57d3b48b3" kindref="member">invcov</ref>[0,:,:],self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9820458fe0df13758eb2c449c0daee40" kindref="member">zerowindowfxnsubtractdat</ref>)</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumDD<sp/>=<sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a05059112c2599a01d555f7ec0370b0c7" kindref="member">P_obs</ref>[0,:]<sp/>*<sp/>covdat)</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumDT<sp/>=<sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a05059112c2599a01d555f7ec0370b0c7" kindref="member">P_obs</ref>[0,:]<sp/>*<sp/>covth)</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumDT_k<sp/>=<sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a05059112c2599a01d555f7ec0370b0c7" kindref="member">P_obs</ref>[0,:]<sp/>*<sp/>covth_k)</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumDT_k2<sp/>=<sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a05059112c2599a01d555f7ec0370b0c7" kindref="member">P_obs</ref>[0,:]<sp/>*<sp/>covth_k2)</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumDT_zerowin<sp/>=<sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a05059112c2599a01d555f7ec0370b0c7" kindref="member">P_obs</ref>[0,:]<sp/>*<sp/>covth_zerowin)</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT<sp/>=<sp/>np.sum(WPth*covth)</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT_k<sp/>=<sp/>np.sum(WPth*covth_k)</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT_k2<sp/>=<sp/>np.sum(WPth*covth_k2)</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT_k_k<sp/>=<sp/>np.sum(WPth_k*covth_k)</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT_k_k2<sp/>=<sp/>np.sum(WPth_k*covth_k2)</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT_k2_k2<sp/>=<sp/>np.sum(WPth_k2*covth_k2)</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT_zerowin<sp/>=<sp/>np.sum(WPth*covth_zerowin)</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT_k_zerowin<sp/>=<sp/>np.sum(WPth_k*covth_zerowin)</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT_k2_zerowin<sp/>=<sp/>np.sum(WPth_k2*covth_zerowin)</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT_zerowin_zerowin<sp/>=<sp/>np.sum(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a9820458fe0df13758eb2c449c0daee40" kindref="member">zerowindowfxnsubtractdat</ref>*covth_zerowin)</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currminchisq<sp/>=<sp/>1000.0</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>analytic<sp/>marginalization<sp/>over<sp/>a1,a2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.nptstot):</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a1val<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1acd5783edc448b9b54067096bfc3dacf8" kindref="member">a1list</ref>[i]</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2val<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af2b0352d215a9cd5c114553d322e1464" kindref="member">a2list</ref>[i]</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerowinsub<sp/>=<sp/>-(sumzerow_Pth<sp/>+<sp/>a1val*sumzerow_Pth_k<sp/>+<sp/>a2val*sumzerow_Pth_k2)</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumDT_tot<sp/>=<sp/>sumDT<sp/>+<sp/>a1val*sumDT_k<sp/>+<sp/>a2val*sumDT_k2<sp/>+<sp/>zerowinsub*sumDT_zerowin</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumTT_tot<sp/>=<sp/>sumTT<sp/>+<sp/>a1val**2.0*sumTT_k_k<sp/>+<sp/>a2val**2.0*sumTT_k2_k2<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerowinsub**2.0*sumTT_zerowin_zerowin<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0*a1val*sumTT_k<sp/>+<sp/>2.0*a2val*sumTT_k2<sp/>+<sp/>2.0*a1val*a2val*sumTT_k_k2<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0*zerowinsub*sumTT_zerowin<sp/>+<sp/>2.0*zerowinsub*a1val*sumTT_k_zerowin<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0*zerowinsub*a2val*sumTT_k2_zerowin</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minchisqtheoryamp<sp/>=<sp/>sumDT_tot/sumTT_tot</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq[i]<sp/>=<sp/>sumDD<sp/>-<sp/>2.0*minchisqtheoryamp*sumDT_tot<sp/>+<sp/>minchisqtheoryamp**2.0*sumTT_tot</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisqmarg[i]<sp/>=<sp/>sumDD<sp/>-<sp/>sumDT_tot**2.0/sumTT_tot<sp/>+<sp/>math.log(sumTT_tot)<sp/>-<sp/>\</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0*math.log(1.0<sp/>+<sp/>math.erf(sumDT_tot/2.0/math.sqrt(sumTT_tot)))</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(i<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>chisq[i]<sp/>&lt;<sp/>currminchisq):</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myminchisqindx<sp/>=<sp/>i</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currminchisq<sp/>=<sp/>chisq[i]</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currminchisqmarg<sp/>=<sp/>chisqmarg[i]</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minchisqtheoryampminnuis<sp/>=<sp/>minchisqtheoryamp</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(i<sp/>==<sp/>int(self.nptstot/2)):</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisqnonuis<sp/>=<sp/>chisq[i]</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minchisqtheoryampnonuis<sp/>=<sp/>minchisqtheoryamp</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(abs(a1val)<sp/>&gt;<sp/>0.001<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>abs(a2val)<sp/>&gt;<sp/>0.001):</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;sdss_lrgDR7:<sp/>ahhhh!<sp/>violation!!&apos;</highlight><highlight class="normal">,<sp/>a1val,<sp/>a2val)</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>numerically<sp/>marginalize<sp/>over<sp/>a1,a2<sp/>now<sp/>using<sp/>values<sp/>stored<sp/>in<sp/>chisq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minchisq<sp/>=<sp/>np.min(chisqmarg)</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxchisq<sp/>=<sp/>np.max(chisqmarg)</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LnLike<sp/>=<sp/>np.sum(np.exp(-(chisqmarg-minchisq)/2.0)/(self.nptstot*1.0))</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(LnLike<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Error<sp/>in<sp/>likelihood<sp/>%s<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>)<sp/>+</highlight><highlight class="stringliteral">&apos;LRG<sp/>LnLike<sp/>LogZero<sp/>error.&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>&apos;LRG<sp/>LnLike<sp/>LogZero<sp/>error.&apos;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#LnLike<sp/>=<sp/>LogZero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(<sp/><sp/>#<sp/>(JR)<sp/>commented<sp/>to<sp/>avoid<sp/>io_mp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>&apos;Error<sp/>in<sp/>likelihood<sp/>%s<sp/>&apos;<sp/>%<sp/>(self.name)<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>&apos;LRG<sp/>LnLike<sp/>LogZero<sp/>error.&apos;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq<sp/>=<sp/>-2.*math.log(LnLike)<sp/>+<sp/>minchisq</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>&apos;DR7<sp/>chi2/2=&apos;,chisq/2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>we<sp/>are<sp/>not<sp/>using<sp/>DR7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W_P_th<sp/>=<sp/>np.zeros((self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>starting<sp/>analytic<sp/>marginalisation<sp/>over<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>quantities<sp/>living<sp/>in<sp/>all<sp/>the<sp/>regions<sp/>possible.<sp/>If<sp/>only<sp/>a<sp/>few</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>regions<sp/>are<sp/>selected<sp/>in<sp/>the<sp/>.data<sp/>file,<sp/>many<sp/>elements<sp/>from<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>arrays<sp/>will<sp/>stay<sp/>at<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_data_large<sp/>=<sp/>np.zeros(</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>*self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a696ca2e03f233c98e6880826b483f8e2" kindref="member">num_regions_used</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W_P_th_large<sp/>=<sp/>np.zeros(</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>*self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a696ca2e03f233c98e6880826b483f8e2" kindref="member">num_regions_used</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov_dat_large<sp/>=<sp/>np.zeros(</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>*self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a696ca2e03f233c98e6880826b483f8e2" kindref="member">num_regions_used</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov_th_large<sp/>=<sp/>np.zeros(</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>*self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a696ca2e03f233c98e6880826b483f8e2" kindref="member">num_regions_used</ref>),<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normV<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Loop<sp/>over<sp/>all<sp/>the<sp/>available<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i_region<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a32dabce78cd984f72d978056cd82f83c" kindref="member">num_regions</ref>):</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>each<sp/>region<sp/>that<sp/>was<sp/>selected<sp/>with<sp/>the<sp/>array<sp/>of<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.used_region,<sp/>define<sp/>boundaries<sp/>indices,<sp/>and<sp/>fill<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>corresponding<sp/>windowed<sp/>power<sp/>spectrum.<sp/>All<sp/>the<sp/>unused<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>will<sp/>still<sp/>be<sp/>set<sp/>to<sp/>zero<sp/>as<sp/>from<sp/>the<sp/>initialization,<sp/>which<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>not<sp/>contribute<sp/>anything<sp/>in<sp/>the<sp/>final<sp/>sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1aeecaf66bea053db4a7e4b59e9291bf96" kindref="member">used_region</ref>[i_region]:</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imin<sp/>=<sp/>i_region*self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imax<sp/>=<sp/>(i_region+1)*self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>-1</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W_P_th<sp/>=<sp/>np.dot(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a7fd2e4b4dd21daa4da5c49ecf1cc1440" kindref="member">window</ref>[i_region,<sp/>:],<sp/>P_th)</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>W_P_th</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1afb8df45c194f026658f933b918554377" kindref="member">n_size</ref>):</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_data_large[imin+i]<sp/>=<sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a05059112c2599a01d555f7ec0370b0c7" kindref="member">P_obs</ref>[i_region,<sp/>i]</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W_P_th_large[imin+i]<sp/>=<sp/>W_P_th[i]</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov_dat_large[imin+i]<sp/>=<sp/>np.dot(</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af498902d97298a51a1b781c57d3b48b3" kindref="member">invcov</ref>[i_region,<sp/>i,<sp/>:],</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1a05059112c2599a01d555f7ec0370b0c7" kindref="member">P_obs</ref>[i_region,<sp/>:])</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov_th_large[imin+i]<sp/>=<sp/>np.dot(</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__mpk_1af498902d97298a51a1b781c57d3b48b3" kindref="member">invcov</ref>[i_region,<sp/>i,<sp/>:],</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W_P_th[:])</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Explain<sp/>what<sp/>it<sp/>is<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normV<sp/>+=<sp/>np.dot(W_P_th_large,<sp/>cov_th_large)</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sort<sp/>of<sp/>bias<sp/>TODO<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_out<sp/>=<sp/>np.sum(W_P_th_large*cov_dat_large)<sp/>/<sp/>\</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.sum(W_P_th_large*cov_th_large)</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Explain<sp/>this<sp/>formula<sp/>better,<sp/>link<sp/>to<sp/>article<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chisq<sp/>=<sp/>np.dot(P_data_large,<sp/>cov_dat_large)<sp/>-<sp/>\</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.dot(W_P_th_large,<sp/>cov_dat_large)**2/normV</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>&apos;WiggleZ<sp/>chi2=&apos;,chisq/2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-chisq/2</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">remove_bao(self,k_in,pk_in):</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>De-wiggling<sp/>routine<sp/>by<sp/>Mario<sp/>Ballardini</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>k<sp/>range<sp/>has<sp/>to<sp/>contain<sp/>the<sp/>BAO<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_ref=[2.8e-2,<sp/>4.5e-1]</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>interpolating<sp/>function<sp/>for<sp/>input<sp/>P(k)<sp/>in<sp/>log-log<sp/>space:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_interp_pk<sp/>=<sp/>scipy.interpolate.interp1d(<sp/>np.log(k_in),<sp/>np.log(pk_in),</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kind=</highlight><highlight class="stringliteral">&apos;quadratic&apos;</highlight><highlight class="normal">,<sp/>bounds_error=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interp_pk<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>np.exp(_interp_pk(np.log(x)))</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Spline<sp/>all<sp/>(log-log)<sp/>points<sp/>outside<sp/>k_ref<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idxs<sp/>=<sp/>np.where(np.logical_or(k_in<sp/>&lt;=<sp/>k_ref[0],<sp/>k_in<sp/>&gt;=<sp/>k_ref[1]))</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pk_smooth<sp/>=<sp/>scipy.interpolate.UnivariateSpline(<sp/>np.log(k_in[idxs]),</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.log(pk_in[idxs]),<sp/>k=3,<sp/>s=0<sp/>)</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pk_smooth<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>np.exp(_pk_smooth(np.log(x)))</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>second<sp/>derivative<sp/>of<sp/>each<sp/>spline:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwiggle<sp/>=<sp/>scipy.interpolate.UnivariateSpline(k_in,<sp/>pk_in<sp/>/<sp/>pk_smooth(k_in),<sp/>k=3,<sp/>s=0)</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>derivs<sp/>=<sp/>np.array([fwiggle.derivatives(_k)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>k_in]).T</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2<sp/>=<sp/>scipy.interpolate.UnivariateSpline(k_in,<sp/>derivs[2],<sp/>k=3,<sp/>s=1.0)</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>maxima<sp/>and<sp/>minima<sp/>of<sp/>the<sp/>gradient<sp/>(zeros<sp/>of<sp/>2nd<sp/>deriv.),<sp/>then<sp/>put<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>low-order<sp/>spline<sp/>through<sp/>zeros<sp/>to<sp/>subtract<sp/>smooth<sp/>trend<sp/>from<sp/>wiggles<sp/>fn.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wzeros<sp/>=<sp/>d2.roots()</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wzeros<sp/>=<sp/>wzeros[np.where(np.logical_and(wzeros<sp/>&gt;=<sp/>k_ref[0],<sp/>wzeros<sp/>&lt;=<sp/>k_ref[1]))]</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wzeros<sp/>=<sp/>np.concatenate((wzeros,<sp/>[k_ref[1],]))</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtrend<sp/>=<sp/>scipy.interpolate.UnivariateSpline(wzeros,<sp/>fwiggle(wzeros),<sp/>k=3,<sp/>s=0)</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Construct<sp/>smooth<sp/>no-BAO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idxs<sp/>=<sp/>np.where(np.logical_and(k_in<sp/>&gt;<sp/>k_ref[0],<sp/>k_in<sp/>&lt;<sp/>k_ref[1]))</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pk_nobao<sp/>=<sp/>pk_smooth(k_in)</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pk_nobao[idxs]<sp/>*=<sp/>wtrend(k_in[idxs])</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Construct<sp/>interpolating<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipk<sp/>=<sp/>scipy.interpolate.interp1d(<sp/>k_in,<sp/>pk_nobao,<sp/>kind=</highlight><highlight class="stringliteral">&apos;linear&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds_error=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>fill_value=0.<sp/>)</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pk_nobao<sp/>=<sp/>ipk(k_in)</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pk_nobao</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2376" refid="classMontePythonLike_1_1Likelihood__sn" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__sn" kindref="compound">Likelihood_sn</ref>(<ref refid="classMontePythonLike_1_1Likelihood" kindref="compound">Likelihood</ref>):</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__sn_1a5a2856ebe1dfd5e0b3d83a5a132d142f" kindref="member">__init__</ref>(self,<sp/>path,<sp/>data,<sp/>command_line):</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Likelihood.__init__(self,<sp/>path,<sp/>data,<sp/>command_line)</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>try<sp/>and<sp/>import<sp/>pandas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.MissingLibraryError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>likelihood<sp/>has<sp/>a<sp/>lot<sp/>of<sp/>IO<sp/>manipulation.<sp/>You<sp/>have<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;to<sp/>install<sp/>the<sp/>&apos;pandas&apos;<sp/>library<sp/>to<sp/>use<sp/>it.<sp/>Please<sp/>type:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;`(sudo)<sp/>pip<sp/>install<sp/>pandas<sp/>--user`&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check<sp/>that<sp/>every<sp/>conflicting<sp/>experiments<sp/>is<sp/>not<sp/>present<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>of<sp/>tested<sp/>experiments,<sp/>in<sp/>which<sp/>case,<sp/>complain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(self,<sp/></highlight><highlight class="stringliteral">&apos;conflicting_experiments&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>conflict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.conflicting_experiments:</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conflict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>data.experiments:</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raise<sp/>io_mp.LikelihoodError(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;conflicting<sp/>%s<sp/>measurements,<sp/>you<sp/>can<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>conflict<sp/>+</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;<sp/>have<sp/>either<sp/>%s<sp/>or<sp/>%s<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" kindref="member">name</ref>,<sp/>conflict)<sp/>+</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;as<sp/>an<sp/>experiment,<sp/>not<sp/>both&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>the<sp/>configuration<sp/>file,<sp/>supposed<sp/>to<sp/>be<sp/>called<sp/>self.settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note<sp/>that<sp/>we<sp/>unfortunately<sp/>can<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>immediatly<sp/>execute<sp/>the<sp/>file,<sp/>as<sp/>it<sp/>is<sp/>not<sp/>formatted<sp/>as<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>hasattr(self,<sp/></highlight><highlight class="stringliteral">&apos;settings&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>(</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>need<sp/>to<sp/>provide<sp/>a<sp/>settings<sp/>file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__sn_1ab08142f26535706be36e2f55faad9993" kindref="member">read_configuration_file</ref>()</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__sn_1ab08142f26535706be36e2f55faad9993" kindref="member">read_configuration_file</ref>(self):</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2412"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Extract<sp/>Python<sp/>variables<sp/>from<sp/>the<sp/>configuration<sp/>file</highlight></codeline>
<codeline lineno="2413"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2414"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>performs<sp/>the<sp/>equivalent<sp/>to<sp/>the<sp/>program<sp/>&quot;inih&quot;<sp/>used<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="2415"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original<sp/>c++<sp/>library.</highlight></codeline>
<codeline lineno="2416"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings_path<sp/>=<sp/>os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.settings)</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(settings_path,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>config:</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>config:</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Dismiss<sp/>empty<sp/>lines<sp/>and<sp/>commented<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>==<sp/>-1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\r\n&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs,<sp/>rhs<sp/>=<sp/>[elem.strip()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>elem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>line.split(</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>lhs<sp/>will<sp/>always<sp/>be<sp/>a<sp/>string,<sp/>so<sp/>set<sp/>the<sp/>attribute<sp/>to<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>likelihood.<sp/>The<sp/>right<sp/>hand<sp/>side<sp/>requires<sp/>more<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>First<sp/>case,<sp/>if<sp/>set<sp/>to<sp/>T<sp/>or<sp/>F<sp/>for<sp/>True<sp/>or<sp/>False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>str(rhs)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;T&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;F&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>str(rhs)<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;T&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>It<sp/>can<sp/>also<sp/>be<sp/>a<sp/>path,<sp/>starting<sp/>with<sp/>&apos;data/&apos;.<sp/>We<sp/>remove</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>leading<sp/>folder<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>str(rhs).find(</highlight><highlight class="stringliteral">&apos;data/&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/>=<sp/>rhs.replace(</highlight><highlight class="stringliteral">&apos;data/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Try<sp/><sp/>to<sp/>convert<sp/>it<sp/>to<sp/>a<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/>=<sp/>float(rhs)</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>it<sp/>fails,<sp/>it<sp/>is<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/>=<sp/>str(rhs)</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>finally<sp/>rhs<sp/>to<sp/>be<sp/>a<sp/>parameter<sp/>of<sp/>the<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,<sp/>lhs,<sp/>rhs)</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__sn_1aa9ef19b05807fed0b029262c92e612de" kindref="member">read_matrix</ref>(self,<sp/>path):</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2444"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extract<sp/>the<sp/>matrix<sp/>from<sp/>the<sp/>path</highlight></codeline>
<codeline lineno="2445"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2446"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>uses<sp/>the<sp/>blazing<sp/>fast<sp/>pandas<sp/>library<sp/>(0.10<sp/>seconds<sp/>to<sp/>load</highlight></codeline>
<codeline lineno="2447"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>740x740<sp/>matrix).<sp/>If<sp/>not<sp/>installed,<sp/>it<sp/>uses<sp/>a<sp/>custom<sp/>routine<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="2448"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twice<sp/>as<sp/>slow<sp/>(but<sp/>still<sp/>4<sp/>times<sp/>faster<sp/>than<sp/>the<sp/>straightforward</highlight></codeline>
<codeline lineno="2449"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numpy.loadtxt<sp/>method)</highlight></codeline>
<codeline lineno="2450"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2451"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="2452"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>length<sp/>of<sp/>the<sp/>matrix<sp/>is<sp/>stored<sp/>on<sp/>the<sp/>first<sp/>line...<sp/>then<sp/>it<sp/>has</highlight></codeline>
<codeline lineno="2454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>be<sp/>unwrapped.<sp/>The<sp/>pandas<sp/>routine<sp/>read_csv<sp/>understands<sp/>this</highlight></codeline>
<codeline lineno="2455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>immediatly,<sp/>though.</highlight></codeline>
<codeline lineno="2456"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2457"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>read_csv</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>path)</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>first<sp/>line<sp/>should<sp/>contain<sp/>the<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(path,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>text:</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>int(text.readline())</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note<sp/>that<sp/>this<sp/>function<sp/>does<sp/>not<sp/>require<sp/>to<sp/>skiprows,<sp/>as<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>understands<sp/>the<sp/>convention<sp/>of<sp/>writing<sp/>the<sp/>length<sp/>in<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>=<sp/>read_csv(path).values.reshape((length,<sp/>length))</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matrix</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__sn_1a422a7bd2d3dd4e8e81aa0f132f28ac99" kindref="member">read_light_curve_parameters</ref>(self):</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2473"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read<sp/>the<sp/>file<sp/>jla_lcparams.txt<sp/>containing<sp/>the<sp/>SN<sp/>data</highlight></codeline>
<codeline lineno="2474"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2475"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="2476"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2477"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>length<sp/>of<sp/>the<sp/>resulting<sp/>array<sp/>should<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>length<sp/>of</highlight></codeline>
<codeline lineno="2478"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>covariance<sp/>matrices<sp/>stored<sp/>in<sp/>C00,<sp/>etc...</highlight></codeline>
<codeline lineno="2479"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2480"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>read_csv</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.data_file)</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Recover<sp/>the<sp/>names<sp/>of<sp/>the<sp/>columns.<sp/>The<sp/>names<sp/>&apos;3rdvar&apos;<sp/>and<sp/>&apos;d3rdvar&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>will<sp/>be<sp/>changed,<sp/>because<sp/>3rdvar<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>variable<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(path,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>text:</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_first_line<sp/>=<sp/>text.readline()[1:].strip()</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names<sp/>=<sp/>[e.strip().replace(</highlight><highlight class="stringliteral">&apos;3rd&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;third&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>e<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>clean_first_line.split()]</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc_parameters<sp/>=<sp/>read_csv(</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/>sep=</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>names=names,<sp/>header=0,<sp/>index_col=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lc_parameters</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495" refid="classMontePythonLike_1_1Likelihood__clocks" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__clocks" kindref="compound">Likelihood_clocks</ref>(<ref refid="classMontePythonLike_1_1Likelihood" kindref="compound">Likelihood</ref>):</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Base<sp/>implementation<sp/>of<sp/>H(z)<sp/>measurements&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__clocks_1a4b547140b3a3d1839380f675ca89172c" kindref="member">__init__</ref>(self,<sp/>path,<sp/>data,<sp/>command_line):</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Likelihood.__init__(self,<sp/>path,<sp/>data,<sp/>command_line)</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>the<sp/>content<sp/>of<sp/>the<sp/>data<sp/>file,<sp/>containing<sp/>z,<sp/>Hz<sp/>and<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>=<sp/>np.loadtxt(</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,<sp/>self.data_file))</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Store<sp/>the<sp/>columns<sp/>separately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clocks_1aa6a203c16c561f321aa70da8c2e4978d" kindref="member">z</ref><sp/>=<sp/>total[:,<sp/>0]</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clocks_1ae2e3e2ca7394ee460261343f77d70e29" kindref="member">Hz</ref><sp/>=<sp/>total[:,<sp/>1]</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__clocks_1a5117f62b88534ba91c200e47667cd8b3" kindref="member">err</ref><sp/>=<sp/>total[:,<sp/>2]</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__clocks_1a689ff446e16d03a7d24f97437dd7bc59" kindref="member">loglkl</ref>(self,<sp/>cosmo,<sp/>data):</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Store<sp/>the<sp/>speed<sp/>of<sp/>light<sp/>in<sp/>km/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_light_km_per_sec<sp/>=<sp/>const.c/1000.</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Loop<sp/>over<sp/>the<sp/>redshifts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>z<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classMontePythonLike_1_1Likelihood__clocks_1aa6a203c16c561f321aa70da8c2e4978d" kindref="member">z</ref>):</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Query<sp/>the<sp/>cosmo<sp/>module<sp/>for<sp/>the<sp/>Hubble<sp/>rate<sp/>(in<sp/>1/Mpc),<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>convert<sp/>it<sp/>to<sp/>km/s/Mpc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_cosmo<sp/>=<sp/>cosmo.Hubble(z)*c_light_km_per_sec</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>to<sp/>the<sp/>tota<sp/>chi2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2<sp/>+=<sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__clocks_1ae2e3e2ca7394ee460261343f77d70e29" kindref="member">Hz</ref>[index]-H_cosmo)**2/self.<ref refid="classMontePythonLike_1_1Likelihood__clocks_1a5117f62b88534ba91c200e47667cd8b3" kindref="member">err</ref>[index]**2</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-0.5<sp/>*<sp/>chi2</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531" refid="classMontePythonLike_1_1Likelihood__isw" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__isw" kindref="compound">Likelihood_isw</ref>(<ref refid="classMontePythonLike_1_1Likelihood" kindref="compound">Likelihood</ref>):</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Likelihood__isw_1a525b36e44eb86f63040c6f77f2077ebf" kindref="member">__init__</ref>(self,<sp/>path,<sp/>data,<sp/>command_line):</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Likelihood.__init__(self,<sp/>path,<sp/>data,<sp/>command_line)</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" kindref="member">need_cosmo_arguments</ref>(data,<sp/>{</highlight><highlight class="stringliteral">&apos;output&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;mPk&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;P_k_max_h/Mpc&apos;</highlight><highlight class="normal"><sp/>:<sp/>300,</highlight><highlight class="stringliteral">&apos;z_max_pk&apos;</highlight><highlight class="normal"><sp/>:<sp/>5.1})</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>l,C_l,<sp/>and<sp/>the<sp/>covariance<sp/>matrix<sp/>of<sp/>the<sp/>autocorrelation<sp/>of<sp/>the<sp/>survey<sp/>and<sp/>the<sp/>crosscorrelation<sp/>of<sp/>the<sp/>survey<sp/>with<sp/>the<sp/>CMB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a836caef6624674fe8dc637dafb447b1a" kindref="member">l_cross</ref>,cl_cross=np.loadtxt(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,self.cl_cross_file),unpack=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,usecols=(0,1))</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a07b32e0ea57b4e94932046bb6e351382" kindref="member">l_auto</ref>,cl_auto=np.loadtxt(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,self.cl_auto_file),unpack=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,usecols=(0,1))</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov_cross=np.loadtxt(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,self.cov_cross_file))</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov_auto=np.loadtxt(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,self.cov_auto_file))</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>data<sp/>in<sp/>the<sp/>specified<sp/>range<sp/>in<sp/>l.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a836caef6624674fe8dc637dafb447b1a" kindref="member">l_cross</ref>=self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a836caef6624674fe8dc637dafb447b1a" kindref="member">l_cross</ref>[self.l_min_cross:self.l_max_cross+1]</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_cross=cl_cross[self.l_min_cross:self.l_max_cross+1]</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a07b32e0ea57b4e94932046bb6e351382" kindref="member">l_auto</ref>=self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a07b32e0ea57b4e94932046bb6e351382" kindref="member">l_auto</ref>[self.l_min_auto:self.l_max_auto+1]</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_auto=cl_auto[self.l_min_auto:self.l_max_auto+1]</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov_cross=cov_cross[self.l_min_cross:self.l_max_cross+1,self.l_min_cross:self.l_max_cross+1]</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov_auto=cov_auto[self.l_min_auto:self.l_max_auto+1,self.l_min_auto:self.l_max_auto+1]</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>logarithically<sp/>spaced<sp/>bins<sp/>in<sp/>l.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1ac712ee5168f5c0d7d8adf5a9937e66ea" kindref="member">bins_cross</ref>=np.ceil(np.logspace(np.log10(self.l_min_cross),np.log10(self.l_max_cross),self.n_bins_cross+1))</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1ac524335604a682268ae4a941b4b98421" kindref="member">bins_auto</ref>=np.ceil(np.logspace(np.log10(self.l_min_auto),np.log10(self.l_max_auto),self.n_bins_auto+1))</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Bin<sp/>l,C_l,<sp/>and<sp/>covariance<sp/>matrix<sp/>in<sp/>the<sp/>previously<sp/>defined<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.l_binned_cross,self.cl_binned_cross,self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a1a88798804a99a803bf95fb0640fcbae" kindref="member">cov_binned_cross</ref>=self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a523d9472a78cf576cd841d44f2f40e66" kindref="member">bin_cl</ref>(self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a836caef6624674fe8dc637dafb447b1a" kindref="member">l_cross</ref>,cl_cross,self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1ac712ee5168f5c0d7d8adf5a9937e66ea" kindref="member">bins_cross</ref>,cov_cross)</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.l_binned_auto,self.cl_binned_auto,self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1ab5c81be6977b20799a203f19bf790999" kindref="member">cov_binned_auto</ref>=self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a523d9472a78cf576cd841d44f2f40e66" kindref="member">bin_cl</ref>(self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a07b32e0ea57b4e94932046bb6e351382" kindref="member">l_auto</ref>,cl_auto,self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1ac524335604a682268ae4a941b4b98421" kindref="member">bins_auto</ref>,cov_auto)</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>the<sp/>redshift<sp/>distribution<sp/>of<sp/>objects<sp/>in<sp/>the<sp/>survey,<sp/>perform<sp/>an<sp/>interpolation<sp/>of<sp/>dN/dz(z),<sp/>and<sp/>calculate<sp/>the<sp/>normalization<sp/>in<sp/>this<sp/>redshift<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zz,dndz=np.loadtxt(os.path.join(self.<ref refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" kindref="member">data_directory</ref>,self.dndz_file),unpack=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,usecols=(0,1))</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a09ebe4d78f2a5885b45325b6b05da117" kindref="member">dndz</ref>=scipy.interpolate.interp1d(zz,dndz,kind=</highlight><highlight class="stringliteral">&apos;cubic&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1aaf4d36d9a13634d7b83238489d310010" kindref="member">norm</ref>=scipy.integrate.quad(self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a09ebe4d78f2a5885b45325b6b05da117" kindref="member">dndz</ref>,self.z_min,self.z_max)[0]</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">bin_cl(self,l,cl,bins,cov=None):</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>function<sp/>bins<sp/>l,C_l,<sp/>and<sp/>the<sp/>covariance<sp/>matrix<sp/>in<sp/>given<sp/>bins<sp/>in<sp/>l</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B=[]</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,len(bins)):</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i!=len(bins)-1:</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=np.where((l&lt;bins[i])&amp;(l&gt;=bins[i-1]))[0]</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=np.where((l&lt;=bins[i])&amp;(l&gt;=bins[i-1]))[0]</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=np.zeros(len(l))</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[a]=1./len(a)</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B.append(c)</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_binned=np.dot(B,l)</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_binned=np.dot(B,cl)</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cov<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov_binned=np.dot(B,np.dot(cov,np.transpose(B)))</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l_binned,cl_binned,cov_binned</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l_binned,cl_binned</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">integrand_cross(self,z,cosmo,l):</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>function<sp/>will<sp/>be<sp/>integrated<sp/>to<sp/>calculate<sp/>the<sp/>exspected<sp/>crosscorrelation<sp/>between<sp/>the<sp/>survey<sp/>and<sp/>the<sp/>CMB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=<sp/>const.c/1000.</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H0=cosmo.h()*100</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Om=cosmo.Omega0_m()</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>z:(l+0.5)/(cosmo.angular_distance(z)*(1+z))</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(3*Om*H0**2)/((c**2)*(l+0.5)**2)*self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a09ebe4d78f2a5885b45325b6b05da117" kindref="member">dndz</ref>(z)*cosmo.Hubble(z)*cosmo.scale_independent_growth_factor(z)*scipy.misc.derivative(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>z:cosmo.scale_independent_growth_factor(z)*(1+z),x0=z,dx=1e-4)*cosmo.pk(k(z),0)/self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1aaf4d36d9a13634d7b83238489d310010" kindref="member">norm</ref></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">integrand_auto(self,z,cosmo,l):</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>function<sp/>will<sp/>be<sp/>integrated<sp/>to<sp/>calculate<sp/>the<sp/>expected<sp/>autocorrelation<sp/>of<sp/>the<sp/>survey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=<sp/>const.c/1000.</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H0=cosmo.h()*100</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>z:(l+0.5)/(cosmo.angular_distance(z)*(1+z))</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a09ebe4d78f2a5885b45325b6b05da117" kindref="member">dndz</ref>(z))**2*(cosmo.scale_independent_growth_factor(z))**2*cosmo.pk(k(z),0)*cosmo.Hubble(z)/(cosmo.angular_distance(z)*(1+z))**2/self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1aaf4d36d9a13634d7b83238489d310010" kindref="member">norm</ref>**2</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">compute_loglkl(self,<sp/>cosmo,<sp/>data,b):</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Retrieve<sp/>sampled<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A=data.mcmc_parameters[</highlight><highlight class="stringliteral">&apos;A_ISW&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;current&apos;</highlight><highlight class="normal">]*data.mcmc_parameters[</highlight><highlight class="stringliteral">&apos;A_ISW&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;scale&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>the<sp/>expected<sp/>auto-<sp/>and<sp/>crosscorrelation<sp/>by<sp/>integrating<sp/>over<sp/>the<sp/>redshift.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_binned_cross_theory=np.array([(scipy.integrate.quad(self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a39745e3cb2d123309eea02163a801316" kindref="member">integrand_cross</ref>,self.z_min,self.z_max,args=(cosmo,self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1ac712ee5168f5c0d7d8adf5a9937e66ea" kindref="member">bins_cross</ref>[ll]))[0]+scipy.integrate.quad(self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a39745e3cb2d123309eea02163a801316" kindref="member">integrand_cross</ref>,self.z_min,self.z_max,args=(cosmo,self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1ac712ee5168f5c0d7d8adf5a9937e66ea" kindref="member">bins_cross</ref>[ll+1]))[0]+scipy.integrate.quad(self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a39745e3cb2d123309eea02163a801316" kindref="member">integrand_cross</ref>,self.z_min,self.z_max,args=(cosmo,self.l_binned_cross[ll]))[0])/3<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ll<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.n_bins_cross)])</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_binned_auto_theory=np.array([scipy.integrate.quad(self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a79695ed54c5dc18f0960af2a227324a9" kindref="member">integrand_auto</ref>,self.z_min,self.z_max,args=(cosmo,ll),epsrel=1e-8)[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ll<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.l_binned_auto])</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>the<sp/>chi-square<sp/>of<sp/>auto-<sp/>and<sp/>crosscorrelation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2_cross=np.asscalar(np.dot(self.cl_binned_cross-A*b*cl_binned_cross_theory,np.dot(np.linalg.inv(self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1a1a88798804a99a803bf95fb0640fcbae" kindref="member">cov_binned_cross</ref>),self.cl_binned_cross-A*b*cl_binned_cross_theory)))</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2_auto=np.asscalar(np.dot(self.cl_binned_auto-b**2*cl_binned_auto_theory,np.dot(np.linalg.inv(self.<ref refid="classMontePythonLike_1_1Likelihood__isw_1ab5c81be6977b20799a203f19bf790999" kindref="member">cov_binned_auto</ref>),self.cl_binned_auto-b**2*cl_binned_auto_theory)))</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-0.5*(chi2_cross+chi2_auto)</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight></codeline>
<codeline lineno="2613" refid="classMontePythonLike_1_1Data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Data" kindref="compound">Data</ref>(object):</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2615"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Store<sp/>all<sp/>relevant<sp/>data<sp/>to<sp/>communicate<sp/>between<sp/>the<sp/>different<sp/>modules.</highlight></codeline>
<codeline lineno="2616"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(JR)<sp/>added<sp/>input:</highlight></codeline>
<codeline lineno="2617"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>data_file:<sp/>string<sp/>with<sp/>path<sp/>to<sp/>datafile<sp/>(folder<sp/>containing<sp/>data)</highlight></codeline>
<codeline lineno="2618"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>arr<sp/>experiments:<sp/>array<sp/>with<sp/>string<sp/>off<sp/>all<sp/>experiments<sp/>used<sp/>in<sp/>scan<sp/></highlight></codeline>
<codeline lineno="2619"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2620"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Data_1a507ce4841c55ea3592ebb781910b5a59" kindref="member">__init__</ref>(self,<sp/>command_line,<sp/>path,<sp/>experiments):<sp/><sp/></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2624"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>Data<sp/>class<sp/>holds<sp/>the<sp/>cosmological<sp/>information,<sp/>the<sp/>parameters<sp/>from</highlight></codeline>
<codeline lineno="2625"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>MCMC<sp/>run,<sp/>the<sp/>information<sp/>coming<sp/>from<sp/>the<sp/>likelihoods.<sp/>It<sp/>is<sp/>a<sp/>wide</highlight></codeline>
<codeline lineno="2626"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collections<sp/>of<sp/>information,<sp/>with<sp/>in<sp/>particular<sp/>two<sp/>main<sp/>dictionaries:</highlight></codeline>
<codeline lineno="2627"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosmo_arguments<sp/>and<sp/>mcmc_parameters.</highlight></codeline>
<codeline lineno="2628"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2629"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>defines<sp/>several<sp/>useful<sp/>**methods**.<sp/>The<sp/>following<sp/>ones<sp/>are<sp/>called</highlight></codeline>
<codeline lineno="2630"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>just<sp/>once,<sp/>at<sp/>initialization:</highlight></codeline>
<codeline lineno="2631"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2632"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:func:`fill_mcmc_parameters`</highlight></codeline>
<codeline lineno="2633"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:func:`read_file`</highlight></codeline>
<codeline lineno="2634"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:func:`read_version`</highlight></codeline>
<codeline lineno="2635"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:func:`group_parameters_in_blocks`</highlight></codeline>
<codeline lineno="2636"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2637"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>these<sp/>two<sp/>following<sp/>functions<sp/>are<sp/>called<sp/>every<sp/>step.</highlight></codeline>
<codeline lineno="2638"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2639"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:func:`check_for_slow_step`</highlight></codeline>
<codeline lineno="2640"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:func:`update_cosmo_arguments`</highlight></codeline>
<codeline lineno="2641"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2642"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Finally,<sp/>the<sp/>convenient<sp/>method<sp/>:func:`get_mcmc_parameters`<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="2643"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>called<sp/>in<sp/>many<sp/>places,<sp/>to<sp/>return<sp/>the<sp/>proper<sp/>list<sp/>of<sp/>desired<sp/>parameters.</highlight></codeline>
<codeline lineno="2644"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2645"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>has<sp/>a<sp/>number<sp/>of<sp/>different<sp/>**attributes**,<sp/>and<sp/>the<sp/>more<sp/>important</highlight></codeline>
<codeline lineno="2646"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ones<sp/>are<sp/>listed<sp/>here:</highlight></codeline>
<codeline lineno="2647"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2648"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:attr:`boundary_loglike`</highlight></codeline>
<codeline lineno="2649"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:attr:`cosmo_arguments`</highlight></codeline>
<codeline lineno="2650"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:attr:`mcmc_parameters`</highlight></codeline>
<codeline lineno="2651"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:attr:`need_cosmo_update`</highlight></codeline>
<codeline lineno="2652"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>:attr:`log_flag`</highlight></codeline>
<codeline lineno="2653"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2654"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="2655"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2656"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>`experiments`<sp/>attribute<sp/>is<sp/>extracted<sp/>from<sp/>the<sp/>parameter<sp/>file,</highlight></codeline>
<codeline lineno="2657"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>contains<sp/>the<sp/>list<sp/>of<sp/>likelihoods<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="2658"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2659"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="2660"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2661"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>path<sp/>argument<sp/>will<sp/>be<sp/>used<sp/>in<sp/>case<sp/>it<sp/>is<sp/>a<sp/>first<sp/>run,<sp/>and<sp/>hence</highlight></codeline>
<codeline lineno="2662"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>new<sp/>folder<sp/>is<sp/>created.<sp/>If<sp/>starting<sp/>from<sp/>an<sp/>existing<sp/>folder,<sp/>this</highlight></codeline>
<codeline lineno="2663"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary<sp/>will<sp/>be<sp/>compared<sp/>with<sp/>the<sp/>one<sp/>extracted<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="2664"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log.param,<sp/>and<sp/>will<sp/>use<sp/>the<sp/>latter<sp/>while<sp/>warning<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="2665"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2666"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>warning::</highlight></codeline>
<codeline lineno="2667"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2668"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>New<sp/>in<sp/>version<sp/>2.0.0,<sp/>you<sp/>can<sp/>now<sp/>specify<sp/>an<sp/>oversampling<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2669"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuisance<sp/>parameters,<sp/>to<sp/>hasten<sp/>the<sp/>execution<sp/>of<sp/>a<sp/>run<sp/>with</highlight></codeline>
<codeline lineno="2670"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihoods<sp/>that<sp/>have<sp/>many<sp/>of<sp/>them.<sp/>You<sp/>should<sp/>specify<sp/>a<sp/>new<sp/>field</highlight></codeline>
<codeline lineno="2671"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>parameter<sp/>file,<sp/>`data.over_sampling<sp/>=<sp/>[1,<sp/>...]`,<sp/>that</highlight></codeline>
<codeline lineno="2672"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contains<sp/>a<sp/>1<sp/>on<sp/>the<sp/>first<sp/>element,<sp/>and<sp/>then<sp/>the<sp/>over<sp/>sampling<sp/>of</highlight></codeline>
<codeline lineno="2673"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>desired<sp/>likelihoods.<sp/>This<sp/>array<sp/>must<sp/>have<sp/>the<sp/>same<sp/>size<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="2674"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>blocks<sp/>(1<sp/>for<sp/>the<sp/>cosmo<sp/>+<sp/>1<sp/>for<sp/>each<sp/>likelihood<sp/>with</highlight></codeline>
<codeline lineno="2675"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>varying<sp/>nuisance<sp/>parameters).<sp/>You<sp/>need<sp/>to<sp/>call<sp/>the<sp/>code<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="2676"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>`-j<sp/>jast`<sp/>for<sp/>it<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="2677"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2678"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>To<sp/>create<sp/>an<sp/>instance<sp/>of<sp/>this<sp/>class,<sp/>one<sp/>must<sp/>feed<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="2679"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters<sp/>and<sp/>keyword<sp/>arguments:</highlight></codeline>
<codeline lineno="2680"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2681"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="2682"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="2683"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_line<sp/>:<sp/>NameSpace</highlight></codeline>
<codeline lineno="2684"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NameSpace<sp/>containing<sp/>the<sp/>input<sp/>from<sp/>the<sp/>:mod:`parser_mp`.<sp/>It</highlight></codeline>
<codeline lineno="2685"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stores<sp/>the<sp/>input<sp/>parameter<sp/>file,<sp/>the<sp/>jumping<sp/>methods,<sp/>the<sp/>output</highlight></codeline>
<codeline lineno="2686"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>folder,<sp/>etc...<sp/><sp/>Most<sp/>of<sp/>the<sp/>information<sp/>extracted<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="2687"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_file<sp/>will<sp/>be<sp/>transformed<sp/>into<sp/>:class:`Data`<sp/>attributes,</highlight></codeline>
<codeline lineno="2688"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whenever<sp/>it<sp/>felt<sp/>meaningful<sp/>to<sp/>do<sp/>so.</highlight></codeline>
<codeline lineno="2689"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>:<sp/>dict</highlight></codeline>
<codeline lineno="2690"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Contains<sp/>a<sp/>dictionary<sp/>of<sp/>important<sp/>local<sp/>paths.<sp/>It<sp/>is<sp/>used<sp/>here<sp/>to</highlight></codeline>
<codeline lineno="2691"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find<sp/>the<sp/>cosmological<sp/>module<sp/>location.</highlight></codeline>
<codeline lineno="2692"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2693"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialisation<sp/>of<sp/>the<sp/>random<sp/>seed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rd.seed()</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dictionary<sp/>mapping<sp/>likelihood<sp/>name<sp/>to<sp/>likelihood<sp/>object.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Will<sp/>be<sp/>filled<sp/>by<sp/>gambit<sp/>in<sp/>python2:<sp/>dict()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a2c00d796dbeb1b0e1d60b3a5330cb9e1" kindref="member">lkl</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Store<sp/>the<sp/>parameter<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.param<sp/>=<sp/>command_line.param</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.param<sp/>=<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Recover<sp/>jumping<sp/>method<sp/>from<sp/>command_line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a68c041d2c64a0ab4f1b6fce648a1cfb7" kindref="member">jumping</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1ae8c993f1335dbb908acf5747de6cae1b" kindref="member">jumping_factor</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Store<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>command<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a34bcd41e0a0eae0f7204d4c04696f2b8" kindref="member">command_line</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialise<sp/>the<sp/>path<sp/>dictionnary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aa063873e78ffd5cc21b9a78c4c5b71d6" kindref="member">path</ref><sp/>=<sp/>path</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aae5e81eaf03e6ae4553da0d2d4960ea9" kindref="member">boundary_loglike</ref><sp/>=<sp/>-1e30</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2718"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Define<sp/>the<sp/>boundary<sp/>loglike,<sp/>the<sp/>value<sp/>used<sp/>to<sp/>defined<sp/>a<sp/>loglike</highlight></codeline>
<codeline lineno="2719"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>is<sp/>out<sp/>of<sp/>bounds.<sp/>If<sp/>a<sp/>point<sp/>in<sp/>the<sp/>parameter<sp/>space<sp/>is<sp/>affected<sp/>to</highlight></codeline>
<codeline lineno="2720"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>value,<sp/>it<sp/>will<sp/>be<sp/>automatically<sp/>rejected,<sp/>hence<sp/>increasing<sp/>the</highlight></codeline>
<codeline lineno="2721"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity<sp/>of<sp/>the<sp/>last<sp/>accepted<sp/>point.</highlight></codeline>
<codeline lineno="2722"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Creation<sp/>of<sp/>the<sp/>two<sp/>main<sp/>dictionnaries:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1ae460108882f14b0f07689f36f3c497c2" kindref="member">cosmo_arguments</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2727"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Simple<sp/>dictionary<sp/>that<sp/>will<sp/>serve<sp/>as<sp/>a<sp/>communication<sp/>interface<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="2728"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosmological<sp/>code.<sp/>It<sp/>contains<sp/>all<sp/>the<sp/>parameters<sp/>for<sp/>the<sp/>code<sp/>that</highlight></codeline>
<codeline lineno="2729"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>not<sp/>be<sp/>set<sp/>to<sp/>their<sp/>default<sp/>values.<sp/><sp/>It<sp/>is<sp/>updated<sp/>from</highlight></codeline>
<codeline lineno="2730"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:attr:`mcmc_parameters`.</highlight></codeline>
<codeline lineno="2731"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2732"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/><sp/><sp/>dict</highlight></codeline>
<codeline lineno="2733"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aba865dfe77e0114aa7ce13dd63b376b7" kindref="member">mcmc_parameters</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.mcmc_parameters<sp/>=<sp/>mcmc_parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2737"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ordered<sp/>dictionary<sp/>of<sp/>dictionaries,<sp/>it<sp/>contains<sp/>everything<sp/>needed<sp/>by</highlight></codeline>
<codeline lineno="2738"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>:mod:`mcmc`<sp/>module<sp/>for<sp/>the<sp/>MCMC<sp/>procedure.<sp/><sp/>Every<sp/>parameter<sp/>name</highlight></codeline>
<codeline lineno="2739"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be<sp/>the<sp/>key<sp/>of<sp/>a<sp/>dictionary,<sp/>containing<sp/>the<sp/>initial<sp/>configuration,</highlight></codeline>
<codeline lineno="2740"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>role,<sp/>status,<sp/>last<sp/>accepted<sp/>point<sp/>and<sp/>current<sp/>point.</highlight></codeline>
<codeline lineno="2741"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2742"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>ordereddict</highlight></codeline>
<codeline lineno="2743"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Arguments<sp/>for<sp/>PyMultiNest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aa0dbc630877c317150c2ca8a92b1b47d" kindref="member">NS_param_names</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a55d2475edd3b2fe9b9ef186c2cc2ce01" kindref="member">NS_arguments</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2749"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>containing<sp/>the<sp/>parameters<sp/>needed<sp/>by<sp/>the<sp/>PyMultiNest<sp/>sampler.</highlight></codeline>
<codeline lineno="2750"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>is<sp/>filled<sp/>just<sp/>before<sp/>the<sp/>run<sp/>of<sp/>the<sp/>sampler.<sp/><sp/>Those<sp/>parameters<sp/>not</highlight></codeline>
<codeline lineno="2751"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined<sp/>will<sp/>be<sp/>set<sp/>to<sp/>the<sp/>default<sp/>value<sp/>of<sp/>PyMultiNest.</highlight></codeline>
<codeline lineno="2752"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2753"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>dict</highlight></codeline>
<codeline lineno="2754"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Arguments<sp/>for<sp/>PyPolyChord<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aec86d4fbcf7dac742b12a49b7e5b561f" kindref="member">PC_param_names</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a65c84909645b80bacffc43a2b950bef6" kindref="member">PC_arguments</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2760"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>containing<sp/>the<sp/>parameters<sp/>needed<sp/>by<sp/>the<sp/>PyPolyChord<sp/>sampler.</highlight></codeline>
<codeline lineno="2761"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>is<sp/>filled<sp/>just<sp/>before<sp/>the<sp/>run<sp/>of<sp/>the<sp/>sampler.<sp/><sp/>Those<sp/>parameters<sp/>not</highlight></codeline>
<codeline lineno="2762"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined<sp/>will<sp/>be<sp/>set<sp/>to<sp/>the<sp/>default<sp/>value<sp/>of<sp/>PyPolyChord.</highlight></codeline>
<codeline lineno="2763"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2764"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>dict</highlight></codeline>
<codeline lineno="2765"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialise<sp/>the<sp/>experiments<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1af59b85b2aff15c16131e0adad3d532b8" kindref="member">experiments</ref><sp/>=<sp/>experiments</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialise<sp/>the<sp/>oversampling<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aaebcb8481fdb131556a540b22cb4a930" kindref="member">over_sampling</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2773"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>storing<sp/>the<sp/>respective<sp/>over<sp/>sampling<sp/>of<sp/>the<sp/>parameters.<sp/>The<sp/>first</highlight></codeline>
<codeline lineno="2774"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry,<sp/>applied<sp/>to<sp/>the<sp/>cosmological<sp/>parameters,<sp/>will<sp/>always<sp/>be<sp/>1.</highlight></codeline>
<codeline lineno="2775"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Setting<sp/>it<sp/>to<sp/>anything<sp/>else<sp/>would<sp/>simply<sp/>rescale<sp/>the<sp/>whole<sp/>process.<sp/>If</highlight></codeline>
<codeline lineno="2776"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>specified<sp/>otherwise<sp/>in<sp/>the<sp/>parameter<sp/>file,<sp/>all<sp/>other<sp/>numbers<sp/>will</highlight></codeline>
<codeline lineno="2777"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>set<sp/>to<sp/>1<sp/>as<sp/>well.</highlight></codeline>
<codeline lineno="2778"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2779"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>list</highlight></codeline>
<codeline lineno="2780"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Default<sp/>value<sp/>for<sp/>the<sp/>number<sp/>of<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a01dd411378f7d069e72409a81aa33a52" kindref="member">N</ref><sp/>=<sp/>10</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>variable<sp/>out,<sp/>and<sp/>out_name,<sp/>which<sp/>will<sp/>be<sp/>initialised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>later<sp/>by<sp/>the<sp/>:mod:`io_mp`<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a07113a17765b3059742200743e919fd8" kindref="member">out</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aeafde02b1b44a6cd6ad89934ce40a7d4" kindref="member">out_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>the<sp/>parameter<sp/>file<sp/>is<sp/>not<sp/>a<sp/>log.param,<sp/>the<sp/>path<sp/>will<sp/>be<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>before<sp/>reading<sp/>the<sp/>parameter<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>self.param.find(&apos;log.param&apos;)<sp/>==<sp/>-1:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>self.path.update(path)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>from<sp/>the<sp/>parameter<sp/>file<sp/>to<sp/>fill<sp/>properly<sp/>the<sp/>mcmc_parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dictionary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.fill_mcmc_parameters()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Test<sp/>if<sp/>the<sp/>recovered<sp/>path<sp/>agrees<sp/>with<sp/>the<sp/>one<sp/>extracted<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>configuration<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aa063873e78ffd5cc21b9a78c4c5b71d6" kindref="member">path</ref><sp/>!=<sp/>{}:</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;root&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aa063873e78ffd5cc21b9a78c4c5b71d6" kindref="member">path</ref>:</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aa063873e78ffd5cc21b9a78c4c5b71d6" kindref="member">path</ref>.update({</highlight><highlight class="stringliteral">&apos;root&apos;</highlight><highlight class="normal">:<sp/>path[</highlight><highlight class="stringliteral">&apos;root&apos;</highlight><highlight class="normal">]})</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aa063873e78ffd5cc21b9a78c4c5b71d6" kindref="member">path</ref><sp/>!=<sp/>path:</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warnings.warn(</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>code<sp/>location<sp/>in<sp/>the<sp/>log.param<sp/>file<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>contradiction<sp/>with<sp/>your<sp/>.conf<sp/>file.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;I<sp/>will<sp/>use<sp/>the<sp/>one<sp/>from<sp/>log.param.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Determine<sp/>which<sp/>cosmological<sp/>code<sp/>is<sp/>in<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aa063873e78ffd5cc21b9a78c4c5b71d6" kindref="member">path</ref>[</highlight><highlight class="stringliteral">&apos;cosmo&apos;</highlight><highlight class="normal">].find(</highlight><highlight class="stringliteral">&apos;class&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a337fc5ef63ab1c05229c7f752faa9ec8" kindref="member">cosmological_module_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;CLASS&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a337fc5ef63ab1c05229c7f752faa9ec8" kindref="member">cosmological_module_name</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check<sp/>for<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#try:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>from<sp/>mpi4py<sp/>import<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>comm<sp/>=<sp/>MPI.COMM_WORLD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>rank<sp/>=<sp/>comm.Get_rank()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#except<sp/>ImportError:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>#<sp/>set<sp/>all<sp/>chains<sp/>to<sp/>master<sp/>if<sp/>no<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>rank<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aec4e336c05473fe62d0ed13ffe7bec3b" kindref="member">log_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2828"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stores<sp/>the<sp/>information<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>likelihood<sp/>data<sp/>files<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="2829"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>written<sp/>down<sp/>in<sp/>the<sp/>log.param<sp/>file.<sp/>Initially<sp/>at<sp/>False.</highlight></codeline>
<codeline lineno="2830"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2831"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>bool</highlight></codeline>
<codeline lineno="2832"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1ad83b5e34aa45059859ebf8d921bb92ad" kindref="member">need_cosmo_update</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Data_1a1756d5a0a67cb3bcf79919145c5a3a82" kindref="member">set_class_version</ref>(self,class_path):</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>(JR)<sp/>Add<sp/>path<sp/>to<sp/>CLASS<sp/>version<sp/>in<sp/>use<sp/>and<sp/>the<sp/>safe<sp/>version<sp/>number<sp/>(e.g.<sp/>2_6_3)</highlight></codeline>
<codeline lineno="2838"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>path<sp/>dictionary.<sp/>Needed<sp/>for<sp/>use<sp/>with<sp/>GAMBIT,<sp/>so<sp/>MP<sp/>knows<sp/>where<sp/>to</highlight></codeline>
<codeline lineno="2839"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find<sp/>CLASS<sp/>version<sp/>dependent<sp/>files</highlight></codeline>
<codeline lineno="2840"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aa063873e78ffd5cc21b9a78c4c5b71d6" kindref="member">path</ref>[</highlight><highlight class="stringliteral">&apos;cosmo&apos;</highlight><highlight class="normal">]<sp/>=<sp/>class_path</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Data_1a3f9d791ff797ce914428f8c723de2f4e" kindref="member">read_file</ref>(self,<sp/>param,<sp/>structure,<sp/>field=&apos;&apos;,<sp/>separate=False):</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2845"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Execute<sp/>all<sp/>lines<sp/>concerning<sp/>the<sp/>Data<sp/>class<sp/>from<sp/>a<sp/>parameter<sp/>file</highlight></codeline>
<codeline lineno="2846"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2847"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>lines<sp/>starting<sp/>with<sp/>`data.`<sp/>will<sp/>be<sp/>replaced<sp/>by<sp/>`self.`,<sp/>so<sp/>the</highlight></codeline>
<codeline lineno="2848"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>instance<sp/>of<sp/>the<sp/>class<sp/>will<sp/>contain<sp/>all<sp/>the<sp/>information.</highlight></codeline>
<codeline lineno="2849"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2850"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="2851"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2852"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>rstrip()<sp/>was<sp/>added<sp/>at<sp/>the<sp/>end,<sp/>because<sp/>of<sp/>an<sp/>incomprehensible<sp/>bug</highlight></codeline>
<codeline lineno="2853"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>some<sp/>systems<sp/>that<sp/>imagined<sp/>some<sp/>inexistent<sp/>characters<sp/>at<sp/>the<sp/>end</highlight></codeline>
<codeline lineno="2854"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>line...<sp/>Now<sp/>should<sp/>work</highlight></codeline>
<codeline lineno="2855"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2856"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="2857"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2858"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>security<sp/>should<sp/>be<sp/>added<sp/>to<sp/>protect<sp/>from<sp/>obvious<sp/>attacks.</highlight></codeline>
<codeline lineno="2859"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2860"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="2861"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="2862"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="2863"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name<sp/>of<sp/>the<sp/>parameter<sp/>file</highlight></codeline>
<codeline lineno="2864"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>structure<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="2865"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name<sp/>of<sp/>the<sp/>class<sp/>entries<sp/>we<sp/>want<sp/>to<sp/>execute<sp/>(mainly,<sp/>data,<sp/>or<sp/>any</highlight></codeline>
<codeline lineno="2866"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other<sp/>likelihood)</highlight></codeline>
<codeline lineno="2867"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2868"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Keyword<sp/>Arguments</highlight></codeline>
<codeline lineno="2869"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------------</highlight></codeline>
<codeline lineno="2870"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="2871"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>nothing<sp/>is<sp/>specified,<sp/>this<sp/>routine<sp/>will<sp/>execute<sp/>all<sp/>the<sp/>lines</highlight></codeline>
<codeline lineno="2872"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corresponding<sp/>to<sp/>the<sp/>`structure`<sp/>parameters.<sp/>If<sp/>you<sp/>specify<sp/>a</highlight></codeline>
<codeline lineno="2873"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specific<sp/>field,<sp/>like<sp/>`path`,<sp/>only<sp/>this<sp/>field<sp/>will<sp/>be<sp/>read<sp/>and</highlight></codeline>
<codeline lineno="2874"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>executed.</highlight></codeline>
<codeline lineno="2875"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separate<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="2876"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>this<sp/>flag<sp/>is<sp/>set<sp/>to<sp/>True,<sp/>a<sp/>container<sp/>class<sp/>will<sp/>be<sp/>created<sp/>for</highlight></codeline>
<codeline lineno="2877"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>structure<sp/>field,<sp/>so<sp/>instead<sp/>of<sp/>appending<sp/>to<sp/>the<sp/>namespace<sp/>of</highlight></codeline>
<codeline lineno="2878"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>data<sp/>instance,<sp/>it<sp/>will<sp/>append<sp/>to<sp/>a<sp/>sub-namespace<sp/>named<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="2879"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same<sp/>way<sp/>that<sp/>the<sp/>desired<sp/>structure.<sp/>This<sp/>is<sp/>used<sp/>to<sp/>extract<sp/>custom</highlight></codeline>
<codeline lineno="2880"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>from<sp/>the<sp/>likelihoods,<sp/>allowing<sp/>to<sp/>specify<sp/>values<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="2881"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>directly<sp/>in<sp/>the<sp/>parameter<sp/>file.</highlight></codeline>
<codeline lineno="2882"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2883"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>separate:</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="stringliteral">&quot;self.%s<sp/>=<sp/>Container()&quot;</highlight><highlight class="normal"><sp/>%<sp/>structure)</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(param,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>param_file:</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>param_file:</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line.find(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>==<sp/>-1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>line:</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs<sp/>=<sp/>line.split(</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal">)[0]</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lhs.find(structure+</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>field:</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>field<sp/>is<sp/>not<sp/>an<sp/>empty<sp/>string,<sp/>you<sp/>want<sp/>to<sp/>skip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>line<sp/>(exec<sp/>statement)<sp/>if<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>do<sp/>not<sp/>find<sp/>the<sp/>exact<sp/>searched<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lhs.find(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">.join([structure,<sp/>field]))<sp/>==<sp/>-1:</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>separate:</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec(line.replace(structure+</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;self.&apos;</highlight><highlight class="normal">).rstrip())</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec(line.replace(</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>structure+</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;self.&apos;</highlight><highlight class="normal">+structure+</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">).rstrip())</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Data_1a41e15f7f4fe8829ee46a1cbb7f0805c2" kindref="member">read_version</ref>(self,<sp/>param_file):</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2905"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Extract<sp/>version<sp/>and<sp/>subversion<sp/>from<sp/>an<sp/>existing<sp/>log.param</highlight></codeline>
<codeline lineno="2906"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>the<sp/>first<sp/>line<sp/>(cosmological<sp/>code<sp/>version)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_line<sp/>=<sp/>param_file.readline()</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_file.seek(0)</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regexp<sp/>=<sp/>re.match(</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.*\(branch:<sp/>(.*),<sp/>hash:<sp/>(.*)\).*&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_line)</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>first_line.split()[1]</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>git_branch,<sp/>git_version<sp/>=<sp/>regexp.groups()</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>version,<sp/>git_version,<sp/>git_branch</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Data_1a9c6daff9d609a92ea4a46fcdafab930f" kindref="member">get_mcmc_parameters</ref>(self,<sp/>table_of_strings):</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2919"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>an<sp/>ordered<sp/>array<sp/>of<sp/>parameter<sp/>names<sp/>filtered<sp/>by</highlight></codeline>
<codeline lineno="2920"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`table_of_strings`.</highlight></codeline>
<codeline lineno="2921"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2922"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="2923"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="2924"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_of_strings<sp/>:<sp/>list</highlight></codeline>
<codeline lineno="2925"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>strings<sp/>whose<sp/>role<sp/>and<sp/>status<sp/>must<sp/>be<sp/>matched<sp/>by<sp/>a</highlight></codeline>
<codeline lineno="2926"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameter.<sp/>For<sp/>instance,</highlight></codeline>
<codeline lineno="2927"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2928"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>data.get_mcmc_parameters([&apos;varying&apos;])</highlight></codeline>
<codeline lineno="2929"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&apos;omega_b&apos;,<sp/>&apos;h&apos;,<sp/>&apos;amplitude&apos;,<sp/>&apos;other&apos;]</highlight></codeline>
<codeline lineno="2930"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2931"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>return<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>varying<sp/>parameters,<sp/>both</highlight></codeline>
<codeline lineno="2932"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosmological<sp/>and<sp/>nuisance<sp/>ones<sp/>(derived<sp/>parameters<sp/>being<sp/>`fixed`,</highlight></codeline>
<codeline lineno="2933"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>they<sp/>wont<sp/>be<sp/>part<sp/>of<sp/>this<sp/>list).<sp/>Instead,</highlight></codeline>
<codeline lineno="2934"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2935"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>data.get_mcmc_parameters([&apos;nuisance&apos;,<sp/>&apos;varying&apos;])</highlight></codeline>
<codeline lineno="2936"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&apos;amplitude&apos;,<sp/>&apos;other&apos;]</highlight></codeline>
<codeline lineno="2937"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2938"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>only<sp/>return<sp/>the<sp/>nuisance<sp/>parameters<sp/>that<sp/>are<sp/>being<sp/>varied.</highlight></codeline>
<codeline lineno="2939"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2940"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key,<sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aba865dfe77e0114aa7ce13dd63b376b7" kindref="member">mcmc_parameters</ref>.items():</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>subvalue<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>value.itervalues():</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>string<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>table_of_strings:</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>subvalue<sp/>==<sp/>string:</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>number<sp/>==<sp/>len(table_of_strings):</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table.append(key)</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Data_1a5d12064a3a60960cf12d1d1335a5fa89" kindref="member">add_experiment</ref>(self,<sp/>experiment_name,<sp/>experiment_object):</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;<sp/>When<sp/>using<sp/>MP<sp/>with<sp/>GAMBIT,<sp/>this<sp/>function<sp/>is<sp/>used<sp/>to<sp/>simply<sp/>create<sp/>a<sp/>dictionary<sp/>mapping</highlight></codeline>
<codeline lineno="2955"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>name<sp/>to<sp/>likelihood<sp/>object.<sp/>It<sp/>is<sp/>used<sp/>in<sp/>the<sp/>function<sp/>&apos;check_nuisance_params&apos;</highlight></codeline>
<codeline lineno="2956"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>make<sp/>sure<sp/>no<sp/>nuisance<sp/>parameter<sp/>that<sp/>is<sp/>not<sp/>needed<sp/>is<sp/>scanned<sp/>over.<sp/></highlight></codeline>
<codeline lineno="2957"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2958"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a2c00d796dbeb1b0e1d60b3a5330cb9e1" kindref="member">lkl</ref>[experiment_name]<sp/>=<sp/>experiment_object</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classMontePythonLike_1_1Data_1abff3bb33265a507bf7d9aedb7e3dd5d2" kindref="member">check_nuisance_params</ref>(self):</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;<sp/>Added<sp/>routine<sp/>to<sp/>make<sp/>sure<sp/>no<sp/>nuisance<sp/>parameter<sp/>that<sp/>is<sp/>not<sp/>required<sp/>by<sp/>any<sp/>MP<sp/>likelihood<sp/>in<sp/></highlight></codeline>
<codeline lineno="2964"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use<sp/>is<sp/>scanned<sp/>over.<sp/>When<sp/>using<sp/>MP<sp/>as<sp/>standalone,<sp/>this<sp/>is<sp/>done<sp/>in<sp/>the<sp/>function<sp/>&apos;group_parameters_in_blocks&apos;</highlight></codeline>
<codeline lineno="2965"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>latter<sp/>function<sp/>is<sp/>only<sp/>called<sp/>if<sp/>MP<sp/>is<sp/>used<sp/>for<sp/>sampling<sp/>which<sp/>is<sp/>not<sp/>the<sp/>case<sp/>when<sp/></highlight></codeline>
<codeline lineno="2966"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>with<sp/>GAMBIT.<sp/>Therefore,<sp/>we<sp/>have<sp/>to<sp/>define<sp/>an<sp/>additional<sp/>function<sp/>for<sp/>this<sp/>check.<sp/></highlight></codeline>
<codeline lineno="2967"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>create<sp/>list<sp/>containing<sp/>all<sp/>nuisance<sp/>parameters<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>that<sp/>are<sp/>used<sp/>by<sp/>all<sp/>active<sp/>likelihoods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuisance_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>exp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a2c00d796dbeb1b0e1d60b3a5330cb9e1" kindref="member">lkl</ref>:</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;likelihood<sp/>use<sp/>nuisance<sp/>&quot;,<sp/>self.lkl[exp].use_nuisance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>elem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Data_1a2c00d796dbeb1b0e1d60b3a5330cb9e1" kindref="member">lkl</ref>[exp].use_nuisance:</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;adding<sp/>nuisance<sp/>parameter<sp/>&quot;,<sp/>elem,&quot;<sp/>for<sp/>logLIke<sp/>&quot;,<sp/>exp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuisance_list.append(elem)</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check<sp/>if<sp/>a<sp/>parameter<sp/>is<sp/>scanned<sp/>over<sp/>(element<sp/>of<sp/>&apos;mcmc_parameters&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>but<sp/>not<sp/>required<sp/>by<sp/>any<sp/>likelihood.<sp/>If<sp/>so<sp/>raise<sp/>an<sp/>error<sp/>--<sp/>don&apos;t<sp/>wanna</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>waste<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classMontePythonLike_1_1Data_1aba865dfe77e0114aa7ce13dd63b376b7" kindref="member">mcmc_parameters</ref>:</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nuisance<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nuisance_list:</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>io_mp.LikelihoodError(</highlight><highlight class="stringliteral">&quot;The<sp/>nuisance<sp/>parameter<sp/>%s<sp/>is<sp/>included<sp/>in<sp/>the<sp/>scan<sp/>but<sp/>not<sp/>required<sp/>by<sp/>any<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;likelihood<sp/>in<sp/>use.<sp/>It<sp/>seems<sp/>you<sp/>are<sp/>using<sp/>MontePython<sp/>with<sp/>GAMBIT.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Remove<sp/>the<sp/>&apos;cosmo_nuisance_..&apos;<sp/>model<sp/>in<sp/>the<sp/>&apos;Parameters&apos;<sp/>section<sp/>of<sp/>the<sp/>yaml<sp/>file<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;that<sp/>contains<sp/>the<sp/>parameter<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(nuisance,<sp/>nuisance))</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceMontePythonLike_1a801cbf1ad9b0e20db499eb49c1d394b6" kindref="member">get_available_likelihoods</ref>(backendDir):</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;<sp/>Function<sp/>that<sp/>reads<sp/>and<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>all<sp/>folder<sp/>names<sp/>in<sp/>the<sp/>MontePython/montepython/likelihoods<sp/>folder.</highlight></codeline>
<codeline lineno="2991"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>output<sp/>is<sp/>used<sp/>in<sp/>GAMBIT<sp/>to<sp/>check<sp/>if<sp/>the<sp/>user<sp/>requested<sp/>to<sp/>use<sp/>a<sp/>likelihood<sp/>which<sp/>is<sp/>actually<sp/>not<sp/>availible</highlight></codeline>
<codeline lineno="2992"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>installed<sp/>version<sp/>of<sp/>MontePython.<sp/></highlight></codeline>
<codeline lineno="2993"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2994"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Input:</highlight></codeline>
<codeline lineno="2995"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>------</highlight></codeline>
<codeline lineno="2996"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>backendDir:<sp/>string<sp/>containing<sp/>backend<sp/>directory<sp/>of<sp/>MontePython</highlight></codeline>
<codeline lineno="2997"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2998"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output:</highlight></codeline>
<codeline lineno="2999"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="3000"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>output:<sp/>list<sp/>of<sp/>strings<sp/>containing<sp/>the<sp/>names<sp/>of<sp/>available<sp/>likelihoods</highlight></codeline>
<codeline lineno="3001"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>[dI<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dI<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.listdir(backendDir+</highlight><highlight class="stringliteral">&quot;/likelihoods/&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isdir(os.path.join(backendDir+</highlight><highlight class="stringliteral">&apos;/likelihoods/&apos;</highlight><highlight class="normal">,dI))]</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py"/>
  </compounddef>
</doxygen>
