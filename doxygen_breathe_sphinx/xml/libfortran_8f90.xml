<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="libfortran_8f90" kind="file" language="Fortran">
    <compoundname>libfortran.f90</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="libfortran_8f90_1a75dcf064440e07385e01225f43c46e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine testme</definition>
        <argsstring>()</argsstring>
        <name>testme</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" line="8" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="libfortran_8f90_1a616e62e113357cb528c86c611d90f0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine runme</definition>
        <argsstring>(f, i)</argsstring>
        <name>runme</name>
        <param>
          <type>f</type>
          <defname>f</defname>
        </param>
        <param>
          <type>i</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" line="13" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" bodystart="14" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="libfortran_8f90_1a5a323b4a7af61328c24b3031dbda4959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine externalroutine</definition>
        <argsstring>(i)</argsstring>
        <name>externalroutine</name>
        <param>
          <type>i</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" line="27" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="libfortran_8f90_1a8a748c70fbf050e9999439458e1fa1df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real *8 function</type>
        <definition>real*8 function externalfunction</definition>
        <argsstring>(i)</argsstring>
        <name>externalfunction</name>
        <param>
          <type>i</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" line="32" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="libfortran_8f90_1a8271f3b3f9587225fd3b314772fa4199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real *8 function</type>
        <definition>real*8 function externalfunction2</definition>
        <argsstring>(i, j)</argsstring>
        <name>externalfunction2</name>
        <param>
          <type>i</type>
          <defname>i</defname>
        </param>
        <param>
          <type>j</type>
          <defname>j</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" line="38" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="libfortran_8f90_1a0de30082d11a1b514c10387977bd6b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real *8 function</type>
        <definition>real*8 function average</definition>
        <argsstring>(f, n)</argsstring>
        <name>average</name>
        <param>
          <type>f</type>
          <defname>f</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" line="51" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" bodystart="52" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="libfortran_8f90_1afadd9a04bb2abb7a69e9084b8a5a5198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real *8 function</type>
        <definition>real*8 function funcgauss</definition>
        <argsstring>(x)</argsstring>
        <name>funcgauss</name>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" line="72" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="libfortran_8f90_1ad1f9411b9b145f5938d03af75454fbc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real *8 function</type>
        <definition>real*8 function funcbe</definition>
        <argsstring>(x)</argsstring>
        <name>funcbe</name>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" line="81" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90" bodystart="82" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">!<sp/>Dummy-code<sp/>used<sp/>as<sp/>an<sp/>example<sp/>of<sp/>an<sp/>external<sp/>Fortran<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">!<sp/>that<sp/>can<sp/>be<sp/>accessed<sp/>in<sp/>GAMBIT<sp/>via<sp/>a<sp/>C++<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">!<sp/>Author:<sp/>Anders<sp/>Kvellestad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">testme()</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(*,*)<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>testMe.<sp/>Not<sp/>much<sp/>happens<sp/>here.&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal">testme</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">runme(f,<sp/>i)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">external</highlight><highlight class="normal"><sp/>f</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>real*8<sp/>f,f_res</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/>i</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(*,*)<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>runMe.<sp/>Calling<sp/>externalRoutine<sp/>with<sp/>arguments:&quot;</highlight><highlight class="normal">,i</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>f_res<sp/>=<sp/>f(i)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(*,*)<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>runMe.<sp/>Got<sp/>result<sp/>by<sp/>reference:&quot;</highlight><highlight class="normal">,f_res</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>f_res<sp/>=<sp/>f(10)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(*,*)<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>runMe.<sp/>Got<sp/>literal<sp/>result:&quot;</highlight><highlight class="normal">,f_res</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal">runme</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">externalroutine(i)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(*,*)<sp/></highlight><highlight class="stringliteral">&quot;<sp/>This<sp/>is<sp/>externalRoutine<sp/>called<sp/>with<sp/>arguments:&quot;</highlight><highlight class="normal">,i</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal">externalroutine</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">real*8<sp/></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">externalfunction(i)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(*,*)<sp/></highlight><highlight class="stringliteral">&quot;<sp/>This<sp/>is<sp/>externalFunction<sp/>called<sp/>with<sp/>arguments:&quot;</highlight><highlight class="normal">,i</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>externalfunction<sp/>=<sp/>i*3.14</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">real*8<sp/></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">externalfunction2(i,j)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/>i</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>real*8<sp/>j</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(*,*)<sp/></highlight><highlight class="stringliteral">&quot;<sp/>This<sp/>is<sp/>externalFunction2<sp/>called<sp/>with<sp/>arguments:&quot;</highlight><highlight class="normal">,i,j</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>externalfunction2<sp/>=<sp/>i*3.14<sp/>+<sp/>j</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">!<sp/>Tests<sp/>for<sp/>Torsten</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">!...<sp/>this<sp/>is<sp/>the<sp/>backend<sp/>library<sp/>for<sp/>libav.a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">!...determine<sp/>&quot;average&quot;<sp/>of<sp/>f<sp/>(over<sp/>interval<sp/>[0,1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">real*8<sp/></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">average(f,n)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>real*8<sp/>f</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">external</highlight><highlight class="normal"><sp/>f</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/>i,n</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>real*8<sp/>x</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>average=0d0</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,n</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">random_number(x)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>average=average+f(x)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>average=average/(1.*n)<sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">!...<sp/>These<sp/>are<sp/>some<sp/>example<sp/>functions<sp/>that<sp/>could<sp/>of<sp/>course<sp/>also<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">!...<sp/>provided<sp/>by<sp/>either<sp/>another<sp/>backend<sp/>or<sp/>some<sp/>c++<sp/>function<sp/>internal<sp/>to<sp/>GAMBIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">real*8<sp/></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">funcgauss(x)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>real*8<sp/>x</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>funcgauss=exp(-x**2)/sqrt(3.141592654)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">real*8<sp/></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">funcbe(x)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>real*8<sp/>x</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>funcbe=0d0</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.le.0d0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>funcbe=1./(1.+exp(x))/log(2.)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/examples/libfortran.f90"/>
  </compounddef>
</doxygen>
