<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="DarkSUSY__MSSM__6__2__5_8cpp" kind="file" language="C++">
    <compoundname>DarkSUSY_MSSM_6_2_5.cpp</compoundname>
    <includes refid="frontend__macros_8hpp" local="yes">gambit/Backends/frontend_macros.hpp</includes>
    <includes refid="DarkSUSY__MSSM__6__2__5_8hpp" local="yes">gambit/Backends/frontends/DarkSUSY_MSSM_6_2_5.hpp</includes>
    <includes local="yes">gambit/Utils/file_lock.hpp</includes>
    <includes local="yes">gambit/Utils/mpiwrapper.hpp</includes>
    <incdepgraph>
      <node id="22">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Backends/common_macros.hpp</label>
        <link refid="common__macros_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>boost/preprocessor/seq/transform.hpp</label>
      </node>
      <node id="15">
        <label>gambit/Backends/mathematica_macros.hpp</label>
        <link refid="mathematica__macros_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="6">
        <label>gambit/Elements/types_rollcall.hpp</label>
      </node>
      <node id="31">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>gambit/Backends/frontends/shared_includes/DarkSUSY_6.hpp</label>
        <link refid="DarkSUSY__6_8hpp"/>
      </node>
      <node id="11">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="13">
        <label>gambit/Backends/interoperability.hpp</label>
        <link refid="interoperability_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>gambit/Backends/python_macros.hpp</label>
        <link refid="python__macros_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="5">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
      </node>
      <node id="32">
        <label>gambit/Backends/frontends/DarkSUSY_MSSM_6_2_5.hpp</label>
        <link refid="DarkSUSY__MSSM__6__2__5_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>gambit/Utils/util_functions.hpp</label>
      </node>
      <node id="19">
        <label>gambit/Elements/ini_catch.hpp</label>
      </node>
      <node id="25">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="36">
        <label>gambit/Utils/mpiwrapper.hpp</label>
      </node>
      <node id="27">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gambit/Backends/interoperability_macros.hpp</label>
        <link refid="interoperability__macros_8hpp"/>
      </node>
      <node id="2">
        <label>gambit/Backends/frontend_macros.hpp</label>
        <link refid="frontend__macros_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>gambit/Utils/file_lock.hpp</label>
      </node>
      <node id="7">
        <label>boost/preprocessor/control/iif.hpp</label>
      </node>
      <node id="16">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="34">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
      <node id="17">
        <label>gambit/Utils/util_macros.hpp</label>
      </node>
      <node id="1">
        <label>DarkSUSY_MSSM_6_2_5.cpp</label>
        <link refid="DarkSUSY__MSSM__6__2__5_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
      <node id="10">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="18">
        <label>gambit/Backends/mathematica_function.hpp</label>
        <link refid="mathematica__function_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/Elements/module_macros_inmodule.hpp</label>
      </node>
      <node id="30">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="26">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="29">
        <label>gambit/Backends/python_function.hpp</label>
        <link refid="python__function_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="DarkSUSY__MSSM__6__2__5_8cpp_1aeab5d44c426d953a35368f02a8ab0504" prot="public" static="no" mutable="no">
        <type></type>
        <definition>BE_NAMESPACE</definition>
        <argsstring></argsstring>
        <name>BE_NAMESPACE</name>
        <initializer>{
  const double min_DS_rwidth = 5.e-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="34" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkSUSY__MSSM__6__2__5_8cpp_1a7985b8de047721ac660bbda77e513da1" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; DSparticle_mass</definition>
        <argsstring></argsstring>
        <name>DSparticle_mass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="37" column="15" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkSUSY__MSSM__6__2__5_8cpp_1aa2ab8713ab1af90e75321137f9cdae58" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; GAMBITparticle_mass</definition>
        <argsstring></argsstring>
        <name>GAMBITparticle_mass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="38" column="15" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkSUSY__MSSM__6__2__5_8cpp_1af95073653ce4a094bd51f706f348b546" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; DSanbr</definition>
        <argsstring></argsstring>
        <name>DSanbr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="39" column="15" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkSUSY__MSSM__6__2__5_8cpp_1a351a8838e51bcec7416298608ff11521" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double anmwimp</definition>
        <argsstring></argsstring>
        <name>anmwimp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="40" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkSUSY__MSSM__6__2__5_8cpp_1aa2f3fb821848cc63c8cd65160f77cd7b" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; DSanpdg1</definition>
        <argsstring></argsstring>
        <name>DSanpdg1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="41" column="15" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkSUSY__MSSM__6__2__5_8cpp_1a980aa7c2696ab910ab3cfdb323870ead" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; DSanpdg2</definition>
        <argsstring></argsstring>
        <name>DSanpdg2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="42" column="15" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkSUSY__MSSM__6__2__5_8cpp_1a47ab4cb3e1fdabf7e2e25349fd267299" prot="public" static="no" mutable="no">
        <type><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></type>
        <definition>END_BE_NAMESPACE BE_INI_FUNCTION</definition>
        <argsstring></argsstring>
        <name>BE_INI_FUNCTION</name>
        <initializer>{
  
  bool static scan_level = true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="47" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkSUSY__MSSM__6__2__5_8cpp_1a6ddfe7a32223f7e037c16a969625bf09" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mssm_result</definition>
        <argsstring></argsstring>
        <name>mssm_result</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="83" column="8" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="DarkSUSY__MSSM__6__2__5_8cpp_1a9d8b760073c710f9361fc1c0d1134b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(scan_level)</argsstring>
        <name>if</name>
        <param>
          <type>scan_level</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="52" column="3" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="52" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="DarkSUSY__MSSM__6__2__5_8cpp_1ac14181e7e6812b67ea4c6cc9c5b1871d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(runOptions-&gt;hasKey(&quot;debug_SLHA_filenames&quot;))</argsstring>
        <name>if</name>
        <param>
          <type>runOptions-&gt;</type>
          <declname>hasKey</declname>
          <array>&quot;debug_SLHA_filenames&quot;</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option debug_SLHA_filenames&lt;std::vector&lt;std::string&gt;&gt;: Optional override list of SLHA filenames used for backend initialization default</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="87" column="3" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="87" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="DarkSUSY__MSSM__6__2__5_8cpp_1a5a9be4e9ca3cce080b1c272d3af5e4a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>else</type>
        <definition>else if</definition>
        <argsstring>(ModelInUse(&quot;CMSSM&quot;) and runOptions-&gt;getValueOrDef&lt; bool &gt;(false, &quot;use_DS_isasugra&quot;))</argsstring>
        <name>if</name>
        <param>
          <type>ModelInUse(&quot;CMSSM&quot;) and runOptions-&gt;getValueOrDef&lt; bool &gt;(false, &quot;use_DS_isasugra&quot;)</type>
        </param>
        <briefdescription>
<para>Option use_DS_isasugra&lt;bool&gt;: Use DS internal isasugra for parameter running (false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="134" column="8" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="134" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="DarkSUSY__MSSM__6__2__5_8cpp_1a4cc6f5317481c4b2f46fb215ba938f45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>else</type>
        <definition>else if</definition>
        <argsstring>(ModelInUse(&quot;MSSM63atQ&quot;)||ModelInUse(&quot;CMSSM&quot;))</argsstring>
        <name>if</name>
        <param>
          <type>ModelInUse(&quot;MSSM63atQ&quot;)||ModelInUse(&quot;CMSSM&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option use_dsSLHAread&lt;bool&gt;: Use DS internal SLHA reader to initialize backend (false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="177" column="8" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="177" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="DarkSUSY__MSSM__6__2__5_8cpp_1a6b092a8c225b7e2907c59dce0bf6b3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>((ModelInUse(&quot;MSSM63atQ&quot;)||ModelInUse(&quot;CMSSM&quot;)) &amp;&amp;!mssm_result)</argsstring>
        <name>if</name>
        <param>
          <type>(ModelInUse(&quot;MSSM63atQ&quot;)||ModelInUse(&quot;CMSSM&quot;)) &amp;&amp;!</type>
          <declname>mssm_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" line="301" column="3" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp" bodystart="301" bodyend="306"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Frontend for DarkSUSY_MSSM_6.2.5 backend (adapted from <ref refid="DarkSUSY__MSSM__6__2__2_8cpp" kindref="compound">DarkSUSY_MSSM_6_2_2.cpp</ref>)</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Torsten Bringmann (<ulink url="mailto:torsten.bringmann@fys.uio.no">torsten.bringmann@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2018 2019 2021</para>
</simplesect>
<simplesect kind="author"><para>Joakim Edsjo (<ulink url="mailto:edsjo@fysik.su.se">edsjo@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2018 September</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:pat.scott@uq.edu.au">pat.scott@uq.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 September</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frontend__macros_8hpp" kindref="compound">gambit/Backends/frontend_macros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DarkSUSY__MSSM__6__2__5_8hpp" kindref="compound">gambit/Backends/frontends/DarkSUSY_MSSM_6_2_5.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/file_lock.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/mpiwrapper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DARKSUSY_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Some<sp/>ad-hoc<sp/>DarkSUSY<sp/>global<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_DS_rwidth<sp/>=<sp/>5.e-3;<sp/></highlight><highlight class="comment">//<sp/>0.5%<sp/><sp/>to<sp/>avoid<sp/>numerical<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>DSparticle_mass;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>GAMBITparticle_mass;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>DSanbr;<sp/></highlight><highlight class="comment">//<sp/>to<sp/>have<sp/>BR<sp/>available<sp/>to<sp/>neutrino_yield</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>anmwimp;<sp/></highlight><highlight class="comment">//<sp/>to<sp/>have<sp/>WIMP<sp/>mass<sp/>available<sp/>to<sp/>neutrino_yield</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>DSanpdg1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>DSanpdg2;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialisation<sp/>function<sp/>(definition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="common__macros_8hpp_1a825694403adda6ccd191cb93020fbe23" kindref="member">BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>DarkSUSY<sp/>(only)<sp/>if<sp/>run<sp/>for<sp/>the<sp/>first<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>scan_level<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan_level)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>call<sp/>to<sp/>dsinit<sp/>one-by-one<sp/>for<sp/>each<sp/>MPI<sp/>process,<sp/>as<sp/>DarkSUSY<sp/>loads<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HiggsBounds,<sp/>which<sp/>writes<sp/>files<sp/>at<sp/>init<sp/>then<sp/>reads<sp/>them<sp/>back<sp/>in<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Utils::ProcessLock<sp/>mylock(</highlight><highlight class="stringliteral">&quot;DarkSUSY_&quot;</highlight><highlight class="normal"><sp/>STRINGIFY(SAFE_VERSION)<sp/></highlight><highlight class="stringliteral">&quot;_init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>mylock.get_lock();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>dsinit();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>mylock.release_lock();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>makes<sp/>sure<sp/>that<sp/>different<sp/>processes<sp/>later<sp/>don&apos;t<sp/>read<sp/>the<sp/>yield<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>disk<sp/>simultaneously</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>istat=0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mdm=100.0,<sp/>egev=10.0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdg=5,<sp/>yieldpdg,<sp/>diff=1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*hel<sp/>=<sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>22;</highlight><highlight class="comment">//<sp/>gamma<sp/>rays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>dsanyield_sim(mdm,egev,pdg,hel,yieldpdg,diff,istat);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>-2212;<sp/></highlight><highlight class="comment">//antiprotons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>dsanyield_sim(mdm,egev,pdg,hel,yieldpdg,diff,istat);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>-11;<sp/></highlight><highlight class="comment">//positrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>dsanyield_sim(mdm,egev,pdg,hel,yieldpdg,diff,istat);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>-1000010020;<sp/></highlight><highlight class="comment">//anti-deuteron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>dsanyield_sim(mdm,egev,pdg,hel,yieldpdg,diff,istat);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_level<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialization<sp/>function<sp/>for<sp/>a<sp/>given<sp/>MSSM<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(previous<sp/>capability<sp/>DarkSUSY_PointInit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>user<sp/>provides<sp/>a<sp/>file<sp/>list,<sp/>just<sp/>read<sp/>in<sp/>SLHA<sp/>files<sp/>for<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>ignore<sp/>the<sp/>MSSM_spectrum<sp/>dependency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runOptions-&gt;hasKey(</highlight><highlight class="stringliteral">&quot;debug_SLHA_filenames&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/>LogTags::debug<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>DarkSUSY<sp/>via<sp/>debug_SLHA_filenames<sp/>option.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;str&gt;<sp/>filenames<sp/>=<sp/>runOptions-&gt;getValue&lt;std::vector&lt;str&gt;<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;debug_SLHA_filenames&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>filename<sp/>=<sp/>filenames[counter].c_str();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>dsSLHAread(byVal(filename),byVal(flag));<sp/></highlight><highlight class="comment">//<sp/>dsgive_model_SLHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unphys,<sp/>warning;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>dsmodelsetup(unphys,warning);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unphys<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Model<sp/>point<sp/>is<sp/>theoretically<sp/>inconsistent<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalid_point().raise(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Model<sp/>point<sp/>is<sp/>theoretically<sp/>inconsistent<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unphys<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Neutralino<sp/>is<sp/>not<sp/>the<sp/>LSP<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalid_point().raise(</highlight><highlight class="stringliteral">&quot;Neutralino<sp/>is<sp/>not<sp/>the<sp/>LSP<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warning<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Radiative<sp/>corrections<sp/>in<sp/>Higgs<sp/>sector<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;outside<sp/>range<sp/>of<sp/>validity<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter<sp/>&gt;=<sp/>filenames.size())<sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CMSSM<sp/>with<sp/>DS-internal<sp/>ISASUGRA<sp/>(should<sp/>be<sp/>avoided,<sp/>only<sp/>for<sp/>debugging)</highlight></codeline>
<codeline lineno="134"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ModelInUse(</highlight><highlight class="stringliteral">&quot;CMSSM&quot;</highlight><highlight class="normal">)<sp/>and<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;use_DS_isasugra&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>mSUGRA<sp/>model<sp/>from<sp/>CMSSM<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>am0<sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;M0&quot;</highlight><highlight class="normal">];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amhf<sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;M12&quot;</highlight><highlight class="normal">];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_1/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aa0<sp/><sp/><sp/><sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>asgnmu<sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;SignMu&quot;</highlight><highlight class="normal">];<sp/><sp/></highlight><highlight class="comment">//<sp/>sign(mu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atanbe<sp/>=<sp/>*Param[</highlight><highlight class="stringliteral">&quot;TanBeta&quot;</highlight><highlight class="normal">];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tan(beta)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>DarkSUSY<sp/>via<sp/>dsgive_model_isasugra:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>m0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>am0<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>m_1/2<sp/><sp/><sp/><sp/><sp/>=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>amhf<sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>A0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>aa0<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>sign(mu)<sp/><sp/>=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>asgnmu<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>tan(beta)<sp/>=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>atanbe<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>dsgive_model_isasugra(am0,<sp/>amhf,<sp/>aa0,<sp/>asgnmu,<sp/>atanbe);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unphys,<sp/>warning;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>dsmodelsetup(unphys,<sp/>warning);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unphys<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Model<sp/>point<sp/>is<sp/>theoretically<sp/>inconsistent<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalid_point().raise(</highlight><highlight class="stringliteral">&quot;Model<sp/>point<sp/>is<sp/>theoretically<sp/>inconsistent<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unphys<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Neutralino<sp/>is<sp/>not<sp/>the<sp/>LSP<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalid_point().raise(</highlight><highlight class="stringliteral">&quot;Neutralino<sp/>is<sp/>not<sp/>the<sp/>LSP<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warning<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Radiative<sp/>corrections<sp/>in<sp/>Higgs<sp/>sector<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;outside<sp/>range<sp/>of<sp/>validity<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ModelInUse(</highlight><highlight class="stringliteral">&quot;MSSM63atQ&quot;</highlight><highlight class="normal">)<sp/>||<sp/>ModelInUse(</highlight><highlight class="stringliteral">&quot;CMSSM&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>SLHAstruct<sp/>mySLHA;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_dsSLHAread<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;use_dsSLHAread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slha_version<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>mySpec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mySLHA<sp/>=<sp/>mySpec.getSLHAea(2);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(Gambit::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slha_version<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mySLHA<sp/>=<sp/>mySpec.getSLHAea(1);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_dsSLHAread<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>an<sp/>actual<sp/>SLHA<sp/>file.<sp/><sp/>DarkSUSY<sp/>is<sp/>on<sp/>its<sp/>own<sp/>wrt<sp/>(s)particle<sp/>widths<sp/>this<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_dsSLHAread<sp/>||<sp/>slha_version<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!use_dsSLHAread)<sp/>{backend_error().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>SLHA1<sp/>spectrum<sp/>requires<sp/>use<sp/>of<sp/>the<sp/>DarkSUSY<sp/>SLHA<sp/>reader<sp/>rather<sp/>than<sp/>the<sp/>diskless\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GAMBIT<sp/>DarkSUSY<sp/>initialization.<sp/>To<sp/>enable<sp/>the<sp/>DarkSUSY<sp/>SLHA<sp/>reader,<sp/>set<sp/>the<sp/>option\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;use_dsSLHAread<sp/>for<sp/>the<sp/>function<sp/>DarkSUSY_PointInit_MSSM<sp/>to<sp/>true.&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WITH_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GMPI::Is_initialized())</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMPI::Comm<sp/>comm;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank<sp/>=<sp/>comm.Get_rank();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>model<sp/>select<sp/>block<sp/>to<sp/>inform<sp/>DS<sp/>about<sp/>6x6<sp/>mixing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slha_version<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SLHAea::Block<sp/>modsel_block(</highlight><highlight class="stringliteral">&quot;MODSEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modsel_block.push_back(</highlight><highlight class="stringliteral">&quot;BLOCK<sp/>MODSEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modsel_block.push_back(</highlight><highlight class="stringliteral">&quot;6<sp/>3<sp/>#<sp/>FV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mySLHA.push_back(modsel_block);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fstr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DarkBit_temp_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fstr<sp/>+=<sp/>std::to_string(rank)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.slha&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>SLHA<sp/>onto<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>ofs(fstr);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/>mySLHA;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ofs.close();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>SUSY<sp/>spectrum<sp/>from<sp/>SLHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>filename<sp/>=<sp/>fstr.c_str();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/>LogTags::debug<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>DarkSUSY<sp/>via<sp/>SLHA.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dsSLHAread(byVal(filename),flag);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unphys,warning;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dsmodelsetup(unphys,warning);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unphys<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Model<sp/>point<sp/>is<sp/>theoretically<sp/>inconsistent<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_point().raise(</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Model<sp/>point<sp/>is<sp/>theoretically<sp/>inconsistent<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unphys<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Neutralino<sp/>is<sp/>not<sp/>the<sp/>LSP<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_point().raise(</highlight><highlight class="stringliteral">&quot;Neutralino<sp/>is<sp/>not<sp/>the<sp/>LSP<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warning<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Radiative<sp/>corrections<sp/>in<sp/>Higgs<sp/>sector<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;outside<sp/>range<sp/>of<sp/>validity<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>pure<sp/>diskless<sp/>SLHA<sp/>initialisation,<sp/>including<sp/>(s)particle<sp/>widths<sp/>from<sp/>GAMBIT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init_diskless(mySLHA,<sp/>*Dep::decay_rates)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/>LogTags::debug<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>diskless<sp/>SLHA<sp/>interface<sp/>to<sp/>DarkSUSY.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unphys,warning;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsmodelsetup(unphys,warning);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unphys<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Model<sp/>point<sp/>is<sp/>theoretically<sp/>inconsistent<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_point().raise(</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Model<sp/>point<sp/>is<sp/>theoretically<sp/>inconsistent<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unphys<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Neutralino<sp/>is<sp/>not<sp/>the<sp/>LSP<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_point().raise(</highlight><highlight class="stringliteral">&quot;Neutralino<sp/>is<sp/>not<sp/>the<sp/>LSP<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warning<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Radiative<sp/>corrections<sp/>in<sp/>Higgs<sp/>sector<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;outside<sp/>range<sp/>of<sp/>validity<sp/>(DarkSUSY).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssm_result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(ModelInUse(</highlight><highlight class="stringliteral">&quot;MSSM63atQ&quot;</highlight><highlight class="normal">)<sp/>||<sp/>ModelInUse(</highlight><highlight class="stringliteral">&quot;CMSSM&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>!mssm_result<sp/>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>backend_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DarkSUSY<sp/>point<sp/>initialization<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>invalid_point().raise(</highlight><highlight class="stringliteral">&quot;DarkSUSY<sp/>point<sp/>initialization<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><ref refid="common__macros_8hpp_1a12da9763bf3b37787fa5ae54cf36c779" kindref="member">END_BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>functions<sp/>(definitions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><ref refid="common__macros_8hpp_1a4d46c8276b5c657141ff960c177bfe5a" kindref="member">BE_NAMESPACE</ref></highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>required_block(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SLHAea::Coll&amp;<sp/>slha)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slha.find(name)<sp/>!=<sp/>slha.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Sorry,<sp/>DarkSUSY<sp/>needs<sp/>SLHA<sp/>block:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>you<sp/>tried<sp/>to<sp/>read<sp/>in<sp/>a<sp/>debug<sp/>SLHA<sp/>file<sp/>with<sp/>missing<sp/>entries,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;then<sp/>sort<sp/>out<sp/>your<sp/>SLHA<sp/>file<sp/>so<sp/>that<sp/>it<sp/>is<sp/>readable<sp/>by<sp/>DarkSUSY!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dsgenericwimp_nusetup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(&amp;annihilation_bf)[29],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(&amp;Higgs_decay_BFs_neutral)[29][3],</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(&amp;Higgs_decay_BFs_charged)[15],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(&amp;Higgs_masses_neutral)[3],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;Higgs_mass_charged,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;mwimp)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transfer<sp/>WIMP<sp/>mass<sp/>common<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>anmwimp<sp/>=<sp/>mwimp;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transfer<sp/>branching<sp/>fractions<sp/>to<sp/>WIMP<sp/>annihilation<sp/>common<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>channel<sp/>indices,<sp/>see<sp/>dswayieldone.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanbr.clear();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanbr.push_back(0.0);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DSanbr[0]=0.0;<sp/>//<sp/>not<sp/>used,<sp/>keep<sp/>Fortran<sp/>numbering<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=29;<sp/>i++)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DSanbr.push_back(annihilation_bf[i-1]);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>PDG<sp/>common<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.clear();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.clear();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(10000);<sp/></highlight><highlight class="comment">//<sp/>not<sp/>used,<sp/>as<sp/>we<sp/>keep<sp/>the<sp/>same<sp/>numbering<sp/>as<sp/>for<sp/>Fortran</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(10000);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(35);<sp/><sp/></highlight><highlight class="comment">//<sp/>H<sp/>H,<sp/>channel<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(35);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(25);<sp/><sp/></highlight><highlight class="comment">//<sp/>h<sp/>H,<sp/>channel<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(35);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(25);<sp/><sp/></highlight><highlight class="comment">//<sp/>h<sp/>h,<sp/>channel<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(25);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(36);<sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>A,<sp/>channel<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(36);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(35);<sp/><sp/></highlight><highlight class="comment">//<sp/>H<sp/>A,<sp/>channel<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(36);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(25);<sp/><sp/></highlight><highlight class="comment">//<sp/>h<sp/>A,<sp/>channel<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(36);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(37);<sp/><sp/></highlight><highlight class="comment">//<sp/>H+<sp/>H-,<sp/>channel<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-37);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(23);<sp/><sp/></highlight><highlight class="comment">//<sp/>Z<sp/>H,<sp/>channel<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(35);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(23);<sp/><sp/></highlight><highlight class="comment">//<sp/>Z<sp/>h,<sp/>channel<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(25);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(23);<sp/><sp/></highlight><highlight class="comment">//<sp/>Z<sp/>A,<sp/>channel<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(36);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(24);<sp/><sp/></highlight><highlight class="comment">//<sp/>W+<sp/>H-,<sp/>channel<sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-37);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(23);<sp/><sp/></highlight><highlight class="comment">//<sp/>Z<sp/>Z,<sp/>channel<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(23);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(24);<sp/><sp/></highlight><highlight class="comment">//<sp/>W+<sp/>W-,<sp/>channel<sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-24);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(12);<sp/><sp/></highlight><highlight class="comment">//<sp/>nue<sp/>nuebar,<sp/>channel<sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-12);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(11);<sp/><sp/></highlight><highlight class="comment">//<sp/>e-<sp/>e+,<sp/>channel<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-11);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(14);<sp/><sp/></highlight><highlight class="comment">//<sp/>numu<sp/>numubar,<sp/>channel<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-14);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(13);<sp/><sp/></highlight><highlight class="comment">//<sp/>mu-<sp/>mu+,<sp/>channel<sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-13);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(16);<sp/><sp/></highlight><highlight class="comment">//<sp/>nutau<sp/>nutaubar,<sp/>channel<sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-16);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(15);<sp/><sp/></highlight><highlight class="comment">//<sp/>tau-<sp/>tau+,<sp/>channel<sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-15);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(2);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>u<sp/>ubar,<sp/>channel<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-2);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>d<sp/>dbar,<sp/>channel<sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-1);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(4);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>c<sp/>cbar,<sp/>channel<sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-4);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(3);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>sbar,<sp/>channel<sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-3);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(6);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>t<sp/>tbar,<sp/>channel<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-6);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(5);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>b<sp/>bbar,<sp/>channel<sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(-5);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(21);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gluon<sp/>gluon,<sp/>channel<sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(21);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(10000);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(not<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(10000);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(22);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gamma<sp/>gamma,<sp/>channel<sp/>28</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(22);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg1.push_back(22);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gamma<sp/>Z,<sp/>channel<sp/>29</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>DSanpdg2.push_back(23);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transfer<sp/>Higgs<sp/>decay<sp/>branching<sp/>fractions<sp/>(not<sp/>widths)<sp/>to<sp/>Higgs<sp/>decay<sp/>common<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>total<sp/>width<sp/>is<sp/>not<sp/>relevant,<sp/>as<sp/>all<sp/>Higgs<sp/>decay<sp/>in<sp/>flight<sp/>eventually,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>the<sp/>BFs<sp/>are<sp/>needed<sp/>to<sp/>calculate<sp/>the<sp/>yields<sp/>into<sp/>neutrinos<sp/>from<sp/>decays<sp/>in<sp/>flight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=3;<sp/>i++)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>neutral<sp/>Higgses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=29;<sp/>j++)<sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>known<sp/>decay<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anbranch-&gt;ans0br(j,i)<sp/>=<sp/>Higgs_decay_BFs_neutral[j-1][i-1];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=15;<sp/>i++)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>known<sp/>charged<sp/>Higgs<sp/>decay<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>anbranch-&gt;anscbr(i)<sp/>=<sp/>Higgs_decay_BFs_charged[i-1];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transfer<sp/>Higgs<sp/>masses<sp/>to<sp/>common<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=3;<sp/>i++)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>neutral<sp/>Higgses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>anbranch-&gt;ans0m(i)<sp/>=<sp/>Higgs_masses_neutral[i-1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Neutral<sp/>Higgses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>anbranch-&gt;anscm<sp/>=<sp/>Higgs_mass_charged;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Charged<sp/>Higgses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>neutrino_yield(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>log10E,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ptype,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&amp;)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>istat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iistat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t1=3;<sp/></highlight><highlight class="comment">//<sp/>nu<sp/>mu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t2=4;<sp/></highlight><highlight class="comment">//<sp/>nu_mu-bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;su&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmp=0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>twoj=0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>twos=0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>twol=0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp=-1;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result=0.0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=29;<sp/>i++)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DSanbr[i]&gt;0)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i==13)<sp/></highlight><highlight class="comment">//<sp/>W+<sp/>W-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twos=2;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twol=2;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twos=0;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twol=0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iistat=0;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptype<sp/>==<sp/>1)<sp/>or<sp/>(ptype<sp/>==<sp/>3))<sp/></highlight><highlight class="comment">//<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=dsseyield_sim_ls(anmwimp,<ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(10.0,log10E),10.0,DSanpdg1[i],DSanpdg2[i],twoj,cp,twol,twos,</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,3,t1,iistat);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((iistat<sp/>bitand<sp/>8)<sp/>==<sp/>8)<sp/></highlight><highlight class="comment">//<sp/>not<sp/>simulated<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=dsseyield_ch(anmwimp,<ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(10.0,log10E),10.0,DSanpdg1[i],DSanpdg2[i],</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,3,t1,iistat);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>1e-30<sp/>*<sp/>DSanbr[i]<sp/>*<sp/>tmp;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>is<sp/>just<sp/>a<sp/>warning,<sp/>not<sp/>an<sp/>error:<sp/>unpolarized<sp/>yields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>used<sp/>even<sp/>if<sp/>polarized<sp/>yields<sp/>are<sp/>asked<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((iistat<sp/>bitand<sp/>16)<sp/>==<sp/>16)<sp/>iistat<sp/>-=<sp/>16;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istat=(istat<sp/>bitor<sp/>iistat);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptype<sp/>==<sp/>2)<sp/>or<sp/>(ptype<sp/>==<sp/>3))<sp/></highlight><highlight class="comment">//<sp/>anti-particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=dsseyield_sim_ls(anmwimp,<ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(10.0,log10E),10.0,DSanpdg1[i],DSanpdg2[i],twoj,cp,twol,twos,</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,3,t2,iistat);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((iistat<sp/>bitand<sp/>8)<sp/>==<sp/>8)<sp/></highlight><highlight class="comment">//<sp/>not<sp/>simulated<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=dsseyield_ch(anmwimp,<ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(10.0,log10E),10.0,DSanpdg1[i],DSanpdg2[i],</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,3,t2,iistat);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>1e-30<sp/>*<sp/>DSanbr[i]<sp/>*<sp/>tmp;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>is<sp/>just<sp/>a<sp/>warning,<sp/>not<sp/>an<sp/>error:<sp/>unpolarized<sp/>yields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>used<sp/>even<sp/>if<sp/>polarized<sp/>yields<sp/>are<sp/>asked<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((iistat<sp/>bitand<sp/>16)<sp/>==<sp/>16)<sp/>iistat<sp/>-=<sp/>16;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istat=(istat<sp/>bitor<sp/>iistat);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>if<sp/>DSanbr&gt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((istat<sp/>bitand<sp/>1)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>piped_warnings.inquire())<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>bother<sp/>re-raising<sp/>a<sp/>warning<sp/>if<sp/>it&apos;s<sp/>already<sp/>been<sp/>done<sp/>since<sp/>the<sp/>last<sp/>.check().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>piped_warnings.request(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Neutrino<sp/>yield<sp/>from<sp/>Sun<sp/>is<sp/>lower<sp/>bound;<sp/>likelihood<sp/>will<sp/>be<sp/>conservative.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((istat<sp/>bitand<sp/>4)<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>piped_warnings.inquire())<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>bother<sp/>re-raising<sp/>a<sp/>warning<sp/>if<sp/>it&apos;s<sp/>already<sp/>been<sp/>done<sp/>since<sp/>the<sp/>last<sp/>.check().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>piped_warnings.request(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;DarkSUSY&apos;s<sp/>dsseyield_int<sp/>didn&apos;t<sp/>converge.<sp/>This<sp/>occasionally<sp/>happens<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;due<sp/>to<sp/>finite<sp/>statistics<sp/>in<sp/>the<sp/>nu<sp/>yield<sp/>tables<sp/>from<sp/>Pythia.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>benign<sp/>(the<sp/>missing<sp/>integrals<sp/>are<sp/>always<sp/>negligible).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(istat<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>from<sp/>DarkSUSY::dsseyield<sp/>functions<sp/>in<sp/>neutrino<sp/>flux<sp/>calculation.<sp/><sp/>istat<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>istat;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>piped_errors.request(LOCAL_INFO,<sp/>err.str());</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>DD_couplings()</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ierr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>Farray&lt;Fcomplex16,1,27,1,2&gt;<sp/>gg;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>dsddgpgn(gg,ierr);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ierr<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>from<sp/>DarkSUSY::dsddgpgn<sp/>function<sp/>when<sp/>calling<sp/>DD_couplings().<sp/><sp/>ierr<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ierr;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>piped_errors.request(LOCAL_INFO,<sp/>err.str());</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>couplings;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>couplings.clear();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>couplings.push_back((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)gg(1,1).re);<sp/></highlight><highlight class="comment">//<sp/>gps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>couplings.push_back((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)gg(1,2).re);<sp/></highlight><highlight class="comment">//<sp/>gns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>couplings.push_back((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)gg(4,1).re);<sp/></highlight><highlight class="comment">//<sp/>gpa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>couplings.push_back((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)gg(4,2).re);<sp/></highlight><highlight class="comment">//<sp/>gna</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>couplings;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>DarkSUSY<sp/>use<sp/>the<sp/>opposite<sp/>convention<sp/>on<sp/>h1_0<sp/>and<sp/>h2_0.<sp/>The<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>here<sp/>are<sp/>the<sp/>gambit<sp/>names<sp/>where<sp/>h1_0<sp/>hence<sp/>refers<sp/>to<sp/>what<sp/>DarkSUSY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calls<sp/>H2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSparticle_code(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>particleID)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kpart;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;nubar_e&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=1;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;e-_1&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=2;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;nubar_mu&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=3;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;e-_2&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;e+_2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=4;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;nubar_tau&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=5;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;e-_3&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;e+_3&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=6;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;u_1&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;ubar_1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=7;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;d_1&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;dbar_1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=8;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;u_2&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;ubar_2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=9;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;d_2&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;dbar_2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=10;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;u_3&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;ubar_3&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=11;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;d_3&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;dbar_3&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=12;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=13;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=14;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=15;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=16;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=18;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=17;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=19;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;H+&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;H-&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=20;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~nu_1&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~nubar_1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=21;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~e-_1&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~e+_1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=22;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~e-_4&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~e+_4&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=23;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~nu_2&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~nubar_2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=24;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~e-_2&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~e+_2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=25;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~e-_5&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~e+_5&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=26;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~nu_3&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~nubar_3&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=27;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~e-_3&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~e+_3&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=28;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~e-_6&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~e+_6&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=29;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~u_1&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~ubar_1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=30;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~u_4&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~ubar_4&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=31;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~d_1&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~dbar_1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=32;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~d_4&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~dbar_4&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=33;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~u_2&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~ubar_2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=34;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~u_5&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~ubar_5&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=35;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~d_2&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~dbar_2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=36;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~d_5&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~dbar_5&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=37;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~u_3&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~ubar_3&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=38;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~u_6&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~ubar_6&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=39;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~d_3&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~dbar_3&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=40;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~d_6&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~dbar_6&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=41;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=42;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=43;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=44;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=45;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~chi-_1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=46;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal"><sp/>or<sp/>particleID==</highlight><highlight class="stringliteral">&quot;~chi-_2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=47;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particleID==</highlight><highlight class="stringliteral">&quot;~g&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=48;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>translation<sp/>into<sp/>DS<sp/>particle<sp/>code<sp/>not<sp/>implemented<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>string<sp/>identifier<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>particleID;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>backend_error().raise(LOCAL_INFO,<sp/>err.str());</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kpart=-100;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kpart;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init_diskless(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SLHAstruct<sp/>&amp;mySLHA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable<sp/>&amp;myDecays)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>SLHAea::to;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>DS_PACODES_MSSM<sp/>*DSpart<sp/>=<sp/>&amp;(*pacodes_mssm);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>required<sp/>blocks<sp/>and<sp/>raise<sp/>an<sp/>error<sp/>if<sp/>a<sp/>block<sp/>is<sp/>missing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>mySLHA);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;VCKMIN&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;VMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;UMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;ALPHA&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;HMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;YU&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;YD&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;YE&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;MSL2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;MSE2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;MSQ2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;MSD2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;MSU2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;TD&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;TU&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;TE&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;USQMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;DSQMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;SELMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>required_block(</highlight><highlight class="stringliteral">&quot;SNUMIX&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>mySLHA);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>b<sp/>pole<sp/>mass<sp/>is<sp/>present<sp/>in<sp/>the<sp/>MASS<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).find(initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;5&quot;</highlight><highlight class="normal">))<sp/>==<sp/>mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).end())</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>backend_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;DarkSUSY<sp/>init_diskless<sp/>needs<sp/>b<sp/>pole<sp/>mass<sp/>entry<sp/>(5)<sp/>in<sp/>SLHA(ea)<sp/>MASS<sp/>block.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>some<sp/>initial<sp/>DarkSUSY<sp/>housekeeping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>dsmssmzero();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>all<sp/>the<sp/>MSSM<sp/>parameters<sp/>and<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmtype-&gt;modeltype<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>tell<sp/>DarkSUSY<sp/>that<sp/>we<sp/>are<sp/>working<sp/>in<sp/>the<sp/>general<sp/>MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>match<sp/>the<sp/>DarkSUSY<sp/>SLHAreader,<sp/>you<sp/>would<sp/>need<sp/>to<sp/>also<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mssmswitch-&gt;higwid<sp/>=<sp/>1;<sp/><sp/>//<sp/>tell<sp/>DarkSUSY<sp/>not<sp/>to<sp/>use<sp/>FeynHiggs<sp/>for<sp/>Higgs<sp/>widths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>SMINPUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>smcoupling-&gt;alphem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1./to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(1).at(1));<sp/></highlight><highlight class="comment">//<sp/>1/alpha_{QED}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>smcoupling-&gt;alph3mz<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(3).at(1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alpha_s<sp/>@<sp/>MZ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>smcoupling-&gt;gfermi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(2).at(1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fermi<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">))<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(4).at(1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Z<sp/>boson<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>set<sp/>the<sp/>masses<sp/>to<sp/>be<sp/>used<sp/>in<sp/>DarkSUSY.<sp/><sp/>Note<sp/>that<sp/>all<sp/>masses<sp/>in<sp/>the<sp/>pmasses-&gt;mass<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>match<sp/>those<sp/>in<sp/>the<sp/>ProcessCatalog<sp/>in<sp/>DarkBit,<sp/>as<sp/>these<sp/>are<sp/>used<sp/>to<sp/>define<sp/>the<sp/>kinematic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edges<sp/>used<sp/>in<sp/>relic<sp/>density<sp/>integrations<sp/>and<sp/>similar<sp/>within<sp/>DarkSUSY.<sp/><sp/>Mostly<sp/>these<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pole<sp/>masses,<sp/>except<sp/>in<sp/>cases<sp/>where<sp/>that<sp/>is<sp/>not<sp/>possible<sp/>(i.e.<sp/>light<sp/>quarks).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lepton<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kl(1))<sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(11).at(1));<sp/><sp/></highlight><highlight class="comment">//<sp/>electron<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kl(2))<sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(13).at(1));<sp/><sp/></highlight><highlight class="comment">//<sp/>muon<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kl(3))<sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(7).at(1));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tau<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;knu(1))<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(12).at(1));<sp/><sp/></highlight><highlight class="comment">//<sp/>nu_1<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;knu(2))<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(14).at(1));<sp/><sp/></highlight><highlight class="comment">//<sp/>nu_2<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;knu(3))<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(8).at(1));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nu_3<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quark<sp/>masses<sp/>as<sp/>defined<sp/>in<sp/>SLHA2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>smquarkmasses-&gt;mu2gev<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(22).at(1));<sp/></highlight><highlight class="comment">//<sp/>up<sp/>quark<sp/>mass<sp/>@<sp/>2<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>smquarkmasses-&gt;md2gev<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(21).at(1));<sp/></highlight><highlight class="comment">//<sp/>down<sp/>quark<sp/>mass<sp/>@<sp/>2<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>smquarkmasses-&gt;ms2gev<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(23).at(1));<sp/></highlight><highlight class="comment">//<sp/>strange<sp/>mass<sp/>@<sp/>2<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>smquarkmasses-&gt;mcmc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(24).at(1));<sp/></highlight><highlight class="comment">//<sp/>charm<sp/>mass<sp/>at<sp/>m_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>smquarkmasses-&gt;mbmb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(5).at(1));<sp/><sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>mass<sp/>at<sp/>m_b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kqu(3))<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">).at(6).at(1));<sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>DarkSUSY-style<sp/>sin^2<sp/>theta_W<sp/>calculation<sp/>(will<sp/>be<sp/>overwritten<sp/>later).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>smcoupling-&gt;s2thw=dsgf2s2thw(smcoupling-&gt;gfermi,<sp/>smcoupling-&gt;alphem,<sp/>pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">)),<sp/>pmasses-&gt;mass(DSpart-&gt;kqu(3)),1);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>other<sp/>internal<sp/>quark<sp/>masses<sp/>for<sp/>DarkSUSY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>dsfindmtmt();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>mass<sp/>at<sp/>mt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kqu(1))<sp/>=<sp/>smquarkmasses-&gt;mu2gev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>2GeV<sp/>u<sp/>mass<sp/>as<sp/>proxy<sp/>for<sp/>pole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kqd(1))<sp/>=<sp/>smquarkmasses-&gt;md2gev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>2GeV<sp/>d<sp/>mass<sp/>as<sp/>proxy<sp/>for<sp/>pole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kqd(2))<sp/>=<sp/>smquarkmasses-&gt;ms2gev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>2GeV<sp/>s<sp/>mass<sp/>as<sp/>proxy<sp/>for<sp/>pole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kqu(2))<sp/>=<sp/>dsmqpole4loop(DSpart-&gt;kqu(2),smquarkmasses-&gt;mcmc);<sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>DarkSUSY<sp/>internal<sp/>routine<sp/>to<sp/>get<sp/>mc<sp/>pole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kqd(3))<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(5).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>GAMBIT<sp/>way<sp/>to<sp/>get<sp/>the<sp/>bottom<sp/>pole<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pmasses-&gt;mass(DSpart-&gt;kqd(3))<sp/>=<sp/>dsmqpole4loop(DSpart-&gt;kqd(3),smquarkmasses-&gt;mbmb);//<sp/>the<sp/>DarkSUSY<sp/>SLHAreader<sp/>way<sp/>to<sp/>get<sp/>mb<sp/>pole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>MINPAR<sp/>we<sp/>skip,<sp/>it<sp/>is<sp/>not<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>MSOFT<sp/>(this<sp/>comes<sp/>later<sp/>in<sp/>DS,<sp/>but<sp/>this<sp/>has<sp/>no<sp/>effect<sp/>on<sp/>DS<sp/>calls)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;m1<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(1).at(1));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;m2<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(2).at(1));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;m3<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(3).at(1));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2l(1)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(31).at(1)),2);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2l(2)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(32).at(1)),2);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2l(3)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(33).at(1)),2);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2e(1)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(34).at(1)),2);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2e(2)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(35).at(1)),2);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2e(3)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(36).at(1)),2);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2q(1)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(41).at(1)),2);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2q(2)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(42).at(1)),2);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2q(3)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(43).at(1)),2);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2u(1)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(44).at(1)),2);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2u(2)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(45).at(1)),2);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2u(3)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(46).at(1)),2);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2d(1)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(47).at(1)),2);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2d(2)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(48).at(1)),2);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2d(3)<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">).at(49).at(1)),2);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>HMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;mu<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;HMIX&quot;</highlight><highlight class="normal">).at(1).at(1));</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;tanbe<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;HMIX&quot;</highlight><highlight class="normal">).at(2).at(1));</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>boson<sp/>mass<sp/>(h3<sp/>in<sp/>DarkSUSY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">))<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(36).at(1));</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmpar-&gt;ma<sp/>=<sp/>pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>set<sp/>up<sp/>some<sp/>defaults<sp/>(part<sp/>of<sp/>it<sp/>will<sp/>be<sp/>overwritten<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(this<sp/>does<sp/>not<sp/>require<sp/>ckm<sp/>matrices,<sp/>which<sp/>are<sp/>set<sp/>up<sp/>earlier<sp/>in<sp/>DS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>dssuconst_yukawa();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>dssuconst_higgs();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmiuseful-&gt;lsp<sp/>=<sp/>DSpart-&gt;kn(1);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmiuseful-&gt;kln<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>match<sp/>the<sp/>DS<sp/>SLHAreader,<sp/>you<sp/>would<sp/>then<sp/>need<sp/>to<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>unphys,<sp/>hwarning;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dsspectrum(unphys,<sp/>hwarning);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKM<sp/>matrix<sp/>read<sp/>from<sp/>VCKMIN<sp/>-<sp/>Wolfenstein<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="MSSM__H_8hpp_1a21318c67be94f159cd3a21d7def0b1ca" kindref="member">lambda</ref><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;VCKMIN&quot;</highlight><highlight class="normal">).at(1).at(1));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wolfenstein<sp/>lambda</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;VCKMIN&quot;</highlight><highlight class="normal">).at(2).at(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wolfenstein<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rhobar<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;VCKMIN&quot;</highlight><highlight class="normal">).at(3).at(1));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wolfenstein<sp/>rhobar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>etabar<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;VCKMIN&quot;</highlight><highlight class="normal">).at(4).at(1));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wolfenstein<sp/>etabar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Wolfenstein<sp/>converter<sp/>to<sp/>get<sp/>the<sp/>VCKM<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>mixing-&gt;ckm(1,1)<sp/>=<sp/>Spectrum::Wolf2V_ud(lambda,A,rhobar,etabar);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>mixing-&gt;ckm(1,2)<sp/>=<sp/>Spectrum::Wolf2V_us(lambda,A,rhobar,etabar);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>mixing-&gt;ckm(1,3)<sp/>=<sp/>Spectrum::Wolf2V_ub(lambda,A,rhobar,etabar);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>mixing-&gt;ckm(2,1)<sp/>=<sp/>Spectrum::Wolf2V_cd(lambda,A,rhobar,etabar);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>mixing-&gt;ckm(2,2)<sp/>=<sp/>Spectrum::Wolf2V_cs(lambda,A,rhobar,etabar);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>mixing-&gt;ckm(2,3)<sp/>=<sp/>Spectrum::Wolf2V_cb(lambda,A,rhobar,etabar);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>mixing-&gt;ckm(3,1)<sp/>=<sp/>Spectrum::Wolf2V_td(lambda,A,rhobar,etabar);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>mixing-&gt;ckm(3,2)<sp/>=<sp/>Spectrum::Wolf2V_ts(lambda,A,rhobar,etabar);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>mixing-&gt;ckm(3,3)<sp/>=<sp/>Spectrum::Wolf2V_tb(lambda,A,rhobar,etabar);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>lower-order<sp/>DarkSUSY<sp/>SLHAreader<sp/>way<sp/>of<sp/>doing<sp/>it;<sp/>not<sp/>as<sp/>good,<sp/>but<sp/>this<sp/>is<sp/>what<sp/>you&apos;d<sp/>need<sp/>to<sp/>use<sp/>to<sp/>match<sp/>DS<sp/>exactly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sckm-&gt;ckms12<sp/>=<sp/>lambda;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sckm-&gt;ckms23<sp/>=<sp/>A*pow(sckm-&gt;ckms12,2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::complex&lt;double&gt;<sp/>aux(rhobar,<sp/>etabar);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//aux<sp/>=<sp/>aux<sp/>*<sp/>(sckm-&gt;ckms23/pow(sckm-&gt;ckms12,2))<sp/>*<sp/>pow(sckm-&gt;ckms12,3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sckm-&gt;ckms13<sp/>=<sp/>std::norm(aux);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sckm-&gt;ckmdelta<sp/>=<sp/>std::arg(aux);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dssuconst_ckm();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>principle,<sp/>we<sp/>might<sp/>want<sp/>to<sp/>change<sp/>to<sp/>VCKM<sp/>instead<sp/>of<sp/>VCKMIN,<sp/>if<sp/>VCKM<sp/>is<sp/>present.<sp/>Like<sp/>this:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sckm-&gt;ckms12<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(&quot;VCKM&quot;).at(1).at(1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sckm-&gt;ckms23<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(&quot;VCKM&quot;).at(2).at(1))*sckm.ckms12**2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sckm-&gt;ckmdelta<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>i=1;<sp/>i&lt;=3;<sp/>i++)<sp/>for<sp/>(int<sp/>j=1;<sp/>j&lt;=3;<sp/>j++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>mixing-&gt;ckm(i,j)<sp/>=<sp/>to&lt;double_complex&gt;(mySLHA.at(&quot;VCKM&quot;).at(i,j).at(2));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>we<sp/>now<sp/>have<sp/>to<sp/>enforce<sp/>the<sp/>tree-level<sp/>condition<sp/>for<sp/>unitarity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>then<sp/>have<sp/>a<sp/>choice<sp/>of<sp/>calculating<sp/>both<sp/>sin^2<sp/>theta_W<sp/>and<sp/>MW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>alpha,<sp/>MZ<sp/>and<sp/>GF<sp/>as<sp/>we<sp/>normally<sp/>do<sp/>in<sp/>DarkSUSY.<sp/>This<sp/>line<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enforce<sp/>that:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>pmasses-&gt;mass(DSparticle_code(&quot;W+&quot;))=pmasses-&gt;mass(DSparticle_code(&quot;Z0&quot;))*sqrt(1.0-smcoupling-&gt;s2thw);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>it<sp/>is<sp/>more<sp/>prudent<sp/>to<sp/>take<sp/>the<sp/>value<sp/>of<sp/>MW<sp/>from<sp/>the<sp/>SLHA<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>given<sp/>(read<sp/>in<sp/>earlier),<sp/>and<sp/>instead<sp/>enforce<sp/>the<sp/>tree-level<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>redefining<sp/>sin^2<sp/>theta_W.<sp/>That<sp/>we<sp/>do<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">))<sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(24).at(1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>W<sp/>boson<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>smcoupling-&gt;s2thw=1.0-<ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">))/pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">)),2);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Higgs<sp/>masses.<sp/>Note<sp/>h0_1<sp/>is<sp/>the<sp/>lightest<sp/>CP-even<sp/>neutral<sp/>higgs,<sp/>and<sp/>h2_0<sp/>the<sp/>heavier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">))<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(25).at(1));</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">))<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(35).at(1));</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;H+&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(37).at(1));</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(36).at(1));</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SUSY<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksnu(1))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000012).at(1));</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksnu(2))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000014).at(1));</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksnu(3))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000016).at(1));</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksl(1))<sp/><sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000011).at(1));</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksl(2))<sp/><sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000013).at(1));</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksl(3))<sp/><sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000015).at(1));</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksl(4))<sp/><sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000011).at(1));</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksl(5))<sp/><sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000013).at(1));</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksl(6))<sp/><sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000015).at(1));</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqu(1))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000002).at(1));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqu(2))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000004).at(1));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqu(3))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000006).at(1));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqu(4))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000002).at(1));</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqu(5))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000004).at(1));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqu(6))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000006).at(1));</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqd(1))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000001).at(1));</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqd(2))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000003).at(1));</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqd(3))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000005).at(1));</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqd(4))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000001).at(1));</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqd(5))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000003).at(1));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;ksqd(6))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(2000005).at(1));</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Neutralinos<sp/>carry<sp/>the<sp/>sign<sp/>of<sp/>the<sp/>eigenvalue,<sp/>as<sp/>we<sp/>need<sp/>it<sp/>for<sp/>NMIX<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kn(1))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000022).at(1));</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kn(2))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000023).at(1));</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kn(3))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000025).at(1));</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kn(4))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000035).at(1));</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Charginos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kcha(1))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000024).at(1));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kcha(2))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000037).at(1));</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gluino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSparticle_code(</highlight><highlight class="stringliteral">&quot;~g&quot;</highlight><highlight class="normal">))<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">).at(1000021).at(1));</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gravitino<sp/>(not<sp/>implemented<sp/>in<sp/>DarkSUSY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pmasses-&gt;mass(DSpart-&gt;k...)<sp/>=<sp/><sp/>to&lt;double&gt;(mySLHA.at(&quot;MASS&quot;).at(1000039).at(1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>NMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=4;<sp/>i++)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=4;<sp/>j++)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;neunmx(i,j)=to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;NMIX&quot;</highlight><highlight class="normal">).at(i,j).at(2));</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>NMIX<sp/>imaginary<sp/>if<sp/>mass<sp/>eigenvalue<sp/>is<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=4;<sp/>i++)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=4;<sp/>j++)</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pmasses-&gt;mass(DSpart-&gt;kn(i))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;neunmx(i,j).im<sp/>=<sp/>mssmmixing-&gt;neunmx(i,j).re;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;neunmx(i,j).re<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pmasses-&gt;mass(DSpart-&gt;kn(i))<sp/>=<sp/>std::abs(pmasses-&gt;mass(DSpart-&gt;kn(i)));</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>UMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=2;<sp/>i++)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=2;<sp/>j++)</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;chaumx(i,j)=to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;UMIX&quot;</highlight><highlight class="normal">).at(i,j).at(2));</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>VMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=2;<sp/>i++)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=2;<sp/>j++)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;chavmx(i,j)=to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;VMIX&quot;</highlight><highlight class="normal">).at(i,j).at(2));</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>mssmmixing-&gt;alpha<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;ALPHA&quot;</highlight><highlight class="normal">).back().at(0));<sp/><sp/></highlight><highlight class="comment">//<sp/>Higgs<sp/>mixing<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>you<sp/>want<sp/>to<sp/>exactly<sp/>match<sp/>the<sp/>DarkSUSY<sp/>SLHAreader,<sp/>you<sp/>should<sp/>also<sp/>now<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dssuconst_yukawa_running();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>settings<sp/>will<sp/>be<sp/>overwritten<sp/>later,<sp/>however</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>YE,<sp/>YU,<sp/>YD<sp/>-<sp/>Yukawas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=3;<sp/>i++)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>couplingconstants-&gt;yukawa(DSpart-&gt;kl(i))=to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;YE&quot;</highlight><highlight class="normal">).at(i,i).at(2));</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>couplingconstants-&gt;yukawa(DSpart-&gt;kqu(i))=to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;YU&quot;</highlight><highlight class="normal">).at(i,i).at(2));</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>couplingconstants-&gt;yukawa(DSpart-&gt;kqd(i))=to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;YD&quot;</highlight><highlight class="normal">).at(i,i).at(2));</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>MSL2,<sp/>MSE2,<sp/>MSQ2,<sp/>MSU2,<sp/>MSD2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=3;<sp/>i++)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2l(i)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSL2&quot;</highlight><highlight class="normal">).at(i,i).at(2));</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2e(i)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSE2&quot;</highlight><highlight class="normal">).at(i,i).at(2));</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2q(i)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSQ2&quot;</highlight><highlight class="normal">).at(i,i).at(2));</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2u(i)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSU2&quot;</highlight><highlight class="normal">).at(i,i).at(2));</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmpar-&gt;mass2d(i)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;MSD2&quot;</highlight><highlight class="normal">).at(i,i).at(2));</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BLOCK<sp/>TE,<sp/>TU<sp/>and<sp/>TD.<sp/>I<sp/>read<sp/>these<sp/>instead<sp/>of<sp/>AE,<sp/>AU,<sp/>AD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=3;<sp/>i++)</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmpar-&gt;asofte(i)=to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;TE&quot;</highlight><highlight class="normal">).at(i,i).at(2))/couplingconstants-&gt;yukawa(DSpart-&gt;kl(i));</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmpar-&gt;asoftu(i)=to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;TU&quot;</highlight><highlight class="normal">).at(i,i).at(2))/couplingconstants-&gt;yukawa(DSpart-&gt;kqu(i));</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmpar-&gt;asoftd(i)=to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;TD&quot;</highlight><highlight class="normal">).at(i,i).at(2))/couplingconstants-&gt;yukawa(DSpart-&gt;kqd(i));</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>SNUMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=3;<sp/>i++)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=3;<sp/>j++)</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;slulmx(i,j)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SNUMIX&quot;</highlight><highlight class="normal">).at(i,j).at(2));</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>SELMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=6;<sp/>i++)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=3;<sp/>j++)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;sldlmx(i,j)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SELMIX&quot;</highlight><highlight class="normal">).at(i,j).at(2));</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;sldrmx(i,j)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;SELMIX&quot;</highlight><highlight class="normal">).at(i,j+3).at(2));</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>USQMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=6;<sp/>i++)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=3;<sp/>j++)</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;squlmx(i,j)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;USQMIX&quot;</highlight><highlight class="normal">).at(i,j).at(2));</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;squrmx(i,j)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;USQMIX&quot;</highlight><highlight class="normal">).at(i,j+3).at(2));</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>DSQMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=6;<sp/>i++)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=3;<sp/>j++)</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;sqdlmx(i,j)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;DSQMIX&quot;</highlight><highlight class="normal">).at(i,j).at(2));</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmmixing-&gt;sqdrmx(i,j)<sp/>=<sp/>to&lt;double&gt;(mySLHA.at(</highlight><highlight class="stringliteral">&quot;DSQMIX&quot;</highlight><highlight class="normal">).at(i,j+3).at(2));</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>flavour<sp/>reordering<sp/>for<sp/>SLHA2<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>This<sp/>does<sp/>*not*<sp/>have<sp/>to<sp/>go<sp/>after<sp/>the<sp/>widths<sp/>are<sp/>read,<sp/>as<sp/>indicated<sp/>by<sp/>the<sp/>comment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>DS<sp/>6.1.1<sp/>frontend,<sp/>becasuse<sp/>dsorder_flavour<sp/>no<sp/>longer<sp/>actually<sp/>orders<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>standard<sp/>mass<sp/>and<sp/>width<sp/>arrays<sp/>(and<sp/>instead<sp/>provides<sp/>new,<sp/>&apos;ordered&apos;<sp/>particle<sp/>codes).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>dsorder_flavour();</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>SUSY<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>dsvertx();</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>point,<sp/>if<sp/>you<sp/>wanted<sp/>to<sp/>match<sp/>the<sp/>DarkSUSY<sp/>SLHAreader,<sp/>you<sp/>would<sp/>also<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dshigwid();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dsspwid();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>just<sp/>fudge<sp/>a<sp/>few<sp/>widths...but<sp/>we<sp/>won&apos;t<sp/>do<sp/>that,<sp/>because<sp/>we<sp/>can<sp/>get<sp/>real<sp/>decay<sp/>widths<sp/>from<sp/>DecayBit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>Higgs<sp/>widths.<sp/><sp/>h1_0<sp/>is<sp/>the<sp/>lightest<sp/>CP<sp/>even<sp/>Higgs<sp/>in<sp/>GAMBIT<sp/>(opposite<sp/>to<sp/>DS).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(25,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(35,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(36,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;H+&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(37,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>Higgs<sp/>partial<sp/>widths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/>charged_channels<sp/>=<sp/>DS_charged_h_decay_channels();</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/>neutral_channels<sp/>=<sp/>DS_neutral_h_decay_channels();</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;str&gt;<sp/>sister_chan<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;H-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;str&gt;<sp/>missing_chan<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;H+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable::Entry&amp;<sp/>h01<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(25,0));</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable::Entry&amp;<sp/>h02<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(35,0));</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable::Entry&amp;<sp/>A0<sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(36,0));</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable::Entry&amp;<sp/>Hpm<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(37,0));</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>neutral_channels.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;str&gt;&amp;<sp/>chan<sp/>=<sp/>neutral_channels[i];</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmwidths-&gt;hdwidth(i+1,2)<sp/>=<sp/>(h01.has_channel(chan)<sp/>?<sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">))<sp/>*<sp/>h01.BF(chan)<sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmwidths-&gt;hdwidth(i+1,1)<sp/>=<sp/>(h02.has_channel(chan)<sp/>?<sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">))<sp/>*<sp/>h02.BF(chan)<sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmwidths-&gt;hdwidth(i+1,3)<sp/>=<sp/>(A0.has_channel(chan)<sp/><sp/>?<sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/>*<sp/>A0.BF(chan)<sp/><sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neutral_channels[i]<sp/>==<sp/>sister_chan)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>missing<sp/>W-H+<sp/>contributions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmwidths-&gt;hdwidth(i+1,2)<sp/>=<sp/>(h01.has_channel(missing_chan)<sp/>?<sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">))<sp/>*<sp/>h01.BF(missing_chan)<sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmwidths-&gt;hdwidth(i+1,1)<sp/>=<sp/>(h02.has_channel(missing_chan)<sp/>?<sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">))<sp/>*<sp/>h02.BF(missing_chan)<sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mssmwidths-&gt;hdwidth(i+1,3)<sp/>=<sp/>(A0.has_channel(missing_chan)<sp/><sp/>?<sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/>*<sp/>A0.BF(missing_chan)<sp/><sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>charged_channels.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mssmwidths-&gt;hdwidth(i+1,4)<sp/>=<sp/>(Hpm.has_channel(charged_channels[i])<sp/>?<sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;H+&quot;</highlight><highlight class="normal">))<sp/>*<sp/>Hpm.BF(charged_channels[i])<sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>SM<sp/>fermion<sp/>widths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;u_3&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(6,1)).width_in_GeV;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;e-_2&quot;</highlight><highlight class="normal">))<sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(13,1)).width_in_GeV;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;e-_3&quot;</highlight><highlight class="normal">))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(15,1)).width_in_GeV;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>SM<sp/>gauge<sp/>boson<sp/>widths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(24,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(23,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>sfermion<sp/>widths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksnu(1))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000012,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksnu(2))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000014,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksnu(3))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000016,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksl(1))<sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000011,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksl(2))<sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000013,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksl(3))<sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000015,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksl(4))<sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(2000011,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksl(5))<sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(2000013,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksl(6))<sp/><sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(2000015,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqu(1))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000002,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqu(2))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000004,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqu(3))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000006,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqu(4))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(2000002,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqu(5))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(2000004,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqu(6))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(2000006,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqd(1))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000001,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqd(2))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000003,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqd(3))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000005,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqd(4))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(2000001,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqd(5))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(2000003,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;ksqd(6))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(2000005,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>neutralino<sp/>widths.<sp/><sp/>Note<sp/>that<sp/>the<sp/>zero<sp/>neutralino<sp/>width<sp/>is<sp/>taken<sp/>care<sp/>of<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;kn(1))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000022,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;kn(2))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000023,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;kn(3))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000025,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;kn(4))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000035,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>chargino<sp/>widths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;kcha(1))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000024,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSpart-&gt;kcha(2))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000037,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gluino<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>pwidths-&gt;width(DSparticle_code(</highlight><highlight class="stringliteral">&quot;~g&quot;</highlight><highlight class="normal">))<sp/>=<sp/>myDecays.at(std::pair&lt;int,int&gt;(1000021,0)).width_in_GeV;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gravitino<sp/>width<sp/>(not<sp/>implemented<sp/>in<sp/>DS).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pwidths-&gt;width(DSparticle_code(&quot;~G&quot;))<sp/>=<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integration<sp/>routines<sp/>in<sp/>DS<sp/>cannot<sp/>handle<sp/>very<sp/>small<sp/>sparticle<sp/>widths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>not<sp/>to<sp/>fall<sp/>below<sp/>minimal<sp/>value<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>numerical<sp/>issues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i=21;<sp/>i&lt;49;<sp/>i++)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwidths-&gt;width(i)&lt;min_DS_rwidth<sp/>*pmasses-&gt;mass(i))</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwidths-&gt;width(i)=min_DS_rwidth<sp/>*pmasses-&gt;mass(i);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKSUSY_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Spit<sp/>out<sp/>spectrum<sp/>and<sp/>width<sp/>files<sp/>for<sp/>debug<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u1<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u2<sp/>=<sp/>100050;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WITH_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>GMPI::Comm().Get_rank();</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u1<sp/>+=<sp/>rank;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u2<sp/>+=<sp/>rank;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dswspectrum(u1);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dswwidth(u2);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>everything<sp/>OK<sp/>(hah.<sp/>maybe.<sp/>sure.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/>DS_neutral_h_decay_channels()</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initVector&lt;<sp/>std::vector&lt;str&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;H+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;H-&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>supposed<sp/>to<sp/>be<sp/>W+H-<sp/>and<sp/>W-H+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;H-&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_e&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-_1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_mu&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;e+_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-_2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_tau&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;e+_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-_3&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar_1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;d_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar_2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;d_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar_3&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;d_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_3&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>qqg<sp/>(not<sp/>implemented<sp/>in<sp/>DS<sp/>though)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;d_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/>DS_charged_h_decay_channels()</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initVector&lt;<sp/>std::vector&lt;str&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_3&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_3&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;u_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar_3&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;e+_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;e+_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><ref refid="common__macros_8hpp_1ab9f05bcb458a039e9c1d4060dc04639c" kindref="member">END_BE_NAMESPACE</ref></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/src/frontends/DarkSUSY_MSSM_6_2_5.cpp"/>
  </compounddef>
</doxygen>
