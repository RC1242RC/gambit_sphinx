<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Core_2src_2ini__functions_8cpp" kind="file" language="C++">
    <compoundname>Core/src/ini_functions.cpp</compoundname>
    <includes refid="Core_2include_2gambit_2Core_2ini__functions_8hpp" local="yes">gambit/Core/ini_functions.hpp</includes>
    <includes refid="core__singleton_8hpp" local="yes">gambit/Core/core_singleton.hpp</includes>
    <includes local="yes">gambit/Elements/ini_catch.hpp</includes>
    <incdepgraph>
      <node id="8">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>gambit/Models/models.hpp</label>
      </node>
      <node id="16">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
      </node>
      <node id="11">
        <label>gambit/Core/yaml_description_database.hpp</label>
        <link refid="yaml__description__database_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/Utils/variadic_functions.hpp</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="14">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
      </node>
      <node id="17">
        <label>gambit/Elements/functors.hpp</label>
      </node>
      <node id="19">
        <label>gambit/Elements/ini_catch.hpp</label>
      </node>
      <node id="10">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="2">
        <label>gambit/Core/ini_functions.hpp</label>
        <link refid="Core_2include_2gambit_2Core_2ini__functions_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Core/core_singleton.hpp</label>
        <link refid="core__singleton_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="1">
        <label>ini_functions.cpp</label>
        <link refid="Core_2src_2ini__functions_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="9">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="5">
        <label>gambit/Core/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Core-only functions for triggering initialisation code.</para>
<para><hruler/>
</para>
<sect1 id="Core_2src_2ini__functions_8cpp_1autotoc_md6">
<title>Authors</title>
<para>(add name and date if you modify)</para>
<para><simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Feb</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:gonzalo@physik.rwth-aachen.de">gonzalo@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2021 Sep</para>
</simplesect>
<hruler/>
 </para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Core_2include_2gambit_2Core_2ini__functions_8hpp" kindref="compound">gambit/Core/ini_functions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core__singleton_8hpp" kindref="compound">gambit/Core/core_singleton.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Elements/ini_catch.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a2a718d03d940d605e25b106eb35e6650" kindref="member">register_module</ref>(str<sp/>module,<sp/>str<sp/>ref)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab339e52a152de706593c6e1758140b35" kindref="member">Core</ref>().<ref refid="classGambit_1_1gambit__core_1a0720d248572cb823c6128d77c096949d" kindref="member">registerModule</ref>(module,<sp/>ref);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/>ini_catch(e);<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aa6c42e9faf734495e78c0c67b0e9e0f1" kindref="member">register_module_functor_core</ref>(module_functor_common&amp;<sp/>f)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab339e52a152de706593c6e1758140b35" kindref="member">Core</ref>().<ref refid="classGambit_1_1gambit__core_1ab442083e00214eb2fd855a3076625167" kindref="member">registerModuleFunctor</ref>(f);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/>ini_catch(e);<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1af4bd16bc37b902883763eaa237792fc5" kindref="member">register_model_functor_core</ref>(primary_model_functor&amp;<sp/>primary_parameters)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab339e52a152de706593c6e1758140b35" kindref="member">Core</ref>().<ref refid="classGambit_1_1gambit__core_1a978036143df8c1d06733fbeba84a3d6a" kindref="member">registerPrimaryModelFunctor</ref>(primary_parameters);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/>ini_catch(e);<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aec88c34fe6927edc3d750fcdd488f55f" kindref="member">register_backend</ref>(str<sp/>be,<sp/>str<sp/>ver,<sp/>str<sp/>ref)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab339e52a152de706593c6e1758140b35" kindref="member">Core</ref>().<ref refid="classGambit_1_1gambit__core_1aa8d4edafab459c47a493eda6a92af0b4" kindref="member">registerBackend</ref>(be,<sp/>ver,<sp/>ref);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/>ini_catch(e);<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a0e822ebd27ea0a32fdea6cabcc2045e1" kindref="member">register_backend_functor</ref>(functor&amp;<sp/>f)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab339e52a152de706593c6e1758140b35" kindref="member">Core</ref>().<ref refid="classGambit_1_1gambit__core_1a5e95090d4ef8218ebfbc0ec33bc1c761" kindref="member">registerBackendFunctor</ref>(f);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/>ini_catch(e);<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a1fd7879b3844fef54128ccef38973734" kindref="member">register_management_req</ref>(module_functor_common&amp;<sp/>f)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab339e52a152de706593c6e1758140b35" kindref="member">Core</ref>().<ref refid="classGambit_1_1gambit__core_1ab5c415ea364f8e48337adb095903041b" kindref="member">registerNestedModuleFunctor</ref>(f);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/>ini_catch(e);<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Core/src/ini_functions.cpp"/>
  </compounddef>
</doxygen>
