<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="LibFarrayTest__1__0_8hpp" kind="file" language="C++">
    <compoundname>LibFarrayTest_1_0.hpp</compoundname>
    <includes refid="include_2gambit_2Backends_2backend__undefs_8hpp" local="yes">gambit/Backends/backend_undefs.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>LibFarrayTest_1_0.hpp</label>
        <link refid="LibFarrayTest__1__0_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="LibFarrayTest__1__0_8hpp_1a7f7848301604c58c8962207acd75ff6e" prot="public" static="no">
        <name>BACKENDNAME</name>
        <initializer>LibFarrayTest</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" line="18" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFarrayTest__1__0_8hpp_1a339bf682af9659de270251e5d18011be" prot="public" static="no">
        <name>BACKENDLANG</name>
        <initializer>FORTRAN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" line="19" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFarrayTest__1__0_8hpp_1a1c6d5de492ac61ad29aec7aa9a436bbf" prot="public" static="no">
        <name>VERSION</name>
        <initializer>1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" line="20" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFarrayTest__1__0_8hpp_1a8d5a383ba38225163529bfcb55b74444" prot="public" static="no">
        <name>SAFE_VERSION</name>
        <initializer>1_0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" line="21" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibFarrayTest__1__0_8hpp_1a62a0f8a0b822f31ff84bc8252b33e7c8" prot="public" static="no">
        <name>REFERENCE</name>
        <initializer>GAMBIT:2017yxo</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" line="22" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="LibFarrayTest__1__0_8hpp_1aaa4a3f3594ba8529d7fe5562d52b8f16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></type>
        <definition>LOAD_LIBRARY BE_FUNCTION</definition>
        <argsstring>(fptrRoutine, void,(Farray&lt; Fdouble, 1, 3 &gt; &amp;, Finteger &amp;, Fdouble(*)(Farray&lt; Fdouble, 1, 3 &gt; &amp;)), &quot;fptrroutine_&quot;, &quot;libFarrayTest_fptrRoutine&quot;) namespace Gambit</argsstring>
        <name>BE_FUNCTION</name>
        <param>
          <type>fptrRoutine</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>(Farray&lt; Fdouble, 1, 3 &gt; &amp;, Finteger &amp;, Fdouble(*)(Farray&lt; Fdouble, 1, 3 &gt; &amp;))</type>
        </param>
        <param>
          <type>&quot;fptrroutine_&quot;</type>
        </param>
        <param>
          <type>&quot;libFarrayTest_fptrRoutine&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" line="34" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp" bodystart="34" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A fortran backend-frontend example, showing how to use the special GAMBIT fortran variable types, in particular fortran arrays.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Lars A. Dal</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDNAME<sp/>LibFarrayTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDLANG<sp/>FORTRAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAFE_VERSION<sp/>1_0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFERENCE<sp/>GAMBIT:2017yxo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="backend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">BE_VARIABLE(commonBlock,<sp/>libFarrayTest_CB_type,<sp/></highlight><highlight class="stringliteral">&quot;commonblock_&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;libFarrayTestCommonBlock&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">BE_VARIABLE(commonBlock2,<sp/>libFarrayTest_CB2_type,<sp/>&quot;commonblock2_&quot;,<sp/>&quot;libFarrayTestCommonBlock2&quot;)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">BE_VARIABLE(commonBlock3,<sp/>libFarrayTest_CB3_type,<sp/>&quot;commonblock3_&quot;,<sp/>&quot;libFarrayTestCommonBlock3&quot;)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">BE_FUNCTION(printStuff,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;printstuff_&quot;,<sp/>&quot;libFarrayTest_printStuff&quot;)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">BE_FUNCTION(fillArrays,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;fillarrays_&quot;,<sp/>&quot;libFarrayTest_fillArrays&quot;)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">BE_FUNCTION(fptrRoutine,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(Farray&lt;<sp/>Fdouble,1,3&gt;&amp;,<sp/>Finteger&amp;,<sp/>Fdouble(*)(Farray&lt;<sp/>Fdouble,1,3&gt;&amp;)<sp/>),<sp/>&quot;fptrroutine_&quot;,<sp/>&quot;libFarrayTest_fptrRoutine&quot;)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">BE_FUNCTION(doubleFuncArray,<sp/>Fdouble,<sp/>(Farray&lt;<sp/>Fdouble,1,3&gt;&amp;),<sp/>&quot;doublefuncarray_&quot;,<sp/>&quot;libFarrayTest_doubleFuncArray&quot;)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>doubleFuncArray2<sp/>function<sp/>is<sp/>identical<sp/>to<sp/>doubleFuncArray.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>alternative<sp/>way<sp/>to<sp/>declare<sp/>and<sp/>use<sp/>the<sp/>function<sp/>(see<sp/>ExampleBit<sp/>A).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>version<sp/>should<sp/>only<sp/>be<sp/>used<sp/>in<sp/>very<sp/>special<sp/>cases,<sp/>where<sp/>you<sp/>need<sp/>to<sp/>pass<sp/>arrays<sp/>with<sp/>different<sp/>index<sp/>ranges<sp/>than<sp/>those<sp/>specified<sp/>in<sp/>the<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(But<sp/>you<sp/>should<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">BE_FUNCTION(doubleFuncArray2,<sp/>Fdouble,<sp/>(Fdouble*),<sp/>&quot;doublefuncarray2_&quot;,<sp/>&quot;libFarrayTest_doubleFuncArray2&quot;)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">BE_FUNCTION(doubleFuncArray3,<sp/>Fdouble,<sp/>(Farray&lt;Fdouble,<sp/>1,2,<sp/>2,3&gt;&amp;),<sp/>&quot;doublefuncarray3_&quot;,<sp/>&quot;libFarrayTest_doubleFuncArray3&quot;)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">BE_FUNCTION(testcomplex,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(Fcomplex16&amp;,<sp/>Freal8&amp;,<sp/>Freal8&amp;),<sp/>&quot;testcomplex_&quot;,<sp/>&quot;libFarrayTest_testcomplex&quot;)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">namespace<sp/><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Backends</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CAT_3(BACKENDNAME,_,SAFE_VERSION)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convenience<sp/>functions<sp/>go<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>BACKENDNAME_SAFE_VERSION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>Backends<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>Gambit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="common__macros_8hpp_1a825694403adda6ccd191cb93020fbe23" kindref="member">BE_INI_FUNCTION</ref>{}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="common__macros_8hpp_1a12da9763bf3b37787fa5ae54cf36c779" kindref="member">END_BE_INI_FUNCTION</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Undefine<sp/>macros<sp/>to<sp/>avoid<sp/>conflict<sp/>with<sp/>other<sp/>backends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="include_2gambit_2Backends_2backend__undefs_8hpp" kindref="compound">gambit/Backends/backend_undefs.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibFarrayTest_1_0.hpp"/>
  </compounddef>
</doxygen>
