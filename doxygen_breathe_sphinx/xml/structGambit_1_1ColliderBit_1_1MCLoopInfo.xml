<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structGambit_1_1ColliderBit_1_1MCLoopInfo" kind="struct" language="C++" prot="public">
    <compoundname>Gambit::ColliderBit::MCLoopInfo</compoundname>
    <includes refid="MCLoopInfo_8hpp" local="no">MCLoopInfo.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a90b674a480b99305bde5ba21ab46f37b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::MCLoopInfo::event_gen_BYPASS</definition>
        <argsstring></argsstring>
        <name>event_gen_BYPASS</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="35" column="12" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a86fc3523ef0ec22cfd17b21bc1c51c17" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::MCLoopInfo::event_generation_began</definition>
        <argsstring></argsstring>
        <name>event_generation_began</name>
        <briefdescription>
<para>Event generation has started. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="38" column="12" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aef66091196ba1fa30f4392ed05db48b1" prot="public" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::MCLoopInfo::exceeded_maxFailedEvents</definition>
        <argsstring></argsstring>
        <name>exceeded_maxFailedEvents</name>
        <briefdescription>
<para>Maximum allowed number of failed events has been reached. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="41" column="20" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a13a2decfcc5cdfb73d22fb819ab757e9" prot="public" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::MCLoopInfo::end_of_event_file</definition>
        <argsstring></argsstring>
        <name>end_of_event_file</name>
        <briefdescription>
<para>Maximum allowed number of failed events has been reached and MC loop terminated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="44" column="20" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1abb7ffbc1231c843bb858e8470e3e4f1e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; str &gt;</type>
        <definition>std::vector&lt;str&gt; Gambit::ColliderBit::MCLoopInfo::collider_names</definition>
        <argsstring></argsstring>
        <name>collider_names</name>
        <briefdescription>
<para>The names of all colliders. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="47" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a62e2a183470c96e9c6b0a651a8318c4a" prot="public" static="no" mutable="no">
        <type>std::map&lt; str, int &gt;</type>
        <definition>std::map&lt;str,int&gt; Gambit::ColliderBit::MCLoopInfo::maxFailedEvents</definition>
        <argsstring></argsstring>
        <name>maxFailedEvents</name>
        <briefdescription>
<para>Maximum allowable number of failed events before MC loop is terminated for each collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="50" column="16" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1abab9f14e9f7d2c39ec9c4a00cb52f788" prot="public" static="no" mutable="no">
        <type>std::map&lt; str, bool &gt;</type>
        <definition>std::map&lt;str,bool&gt; Gambit::ColliderBit::MCLoopInfo::invalidate_failed_points</definition>
        <argsstring></argsstring>
        <name>invalidate_failed_points</name>
        <briefdescription>
<para>Invalidate points where number of failed events &gt; maxFailedEvents? One bool for each collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="53" column="16" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a84e89c7e58fe734446499a0fb1cd325f" prot="public" static="no" mutable="yes">
        <type>std::map&lt; str, int &gt;</type>
        <definition>std::map&lt;str,int&gt; Gambit::ColliderBit::MCLoopInfo::event_count</definition>
        <argsstring></argsstring>
        <name>event_count</name>
        <briefdescription>
<para>Number of events generated for each collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="56" column="24" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a818bc16a50d3653d7e586bb867258a31" prot="public" static="no" mutable="no">
        <type>std::map&lt; str, <ref refid="structGambit_1_1ColliderBit_1_1convergence__settings" kindref="compound">convergence_settings</ref> &gt;</type>
        <definition>std::map&lt;str,convergence_settings&gt; Gambit::ColliderBit::MCLoopInfo::convergence_options</definition>
        <argsstring></argsstring>
        <name>convergence_options</name>
        <briefdescription>
<para>Convergence options for each collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="59" column="16" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a6f024bfb1181bc749de04ff62a20ab70" prot="public" static="no" mutable="no">
        <type>std::map&lt; str, std::vector&lt; str &gt; &gt;</type>
        <definition>std::map&lt;str,std::vector&lt;str&gt; &gt; Gambit::ColliderBit::MCLoopInfo::analyses</definition>
        <argsstring></argsstring>
        <name>analyses</name>
        <briefdescription>
<para><ref refid="classGambit_1_1ColliderBit_1_1Analysis" kindref="compound">Analysis</ref> list for each collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="62" column="16" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aa841fe1447d50d56f5b8e49a67f23309" prot="public" static="no" mutable="no">
        <type>std::map&lt; str, std::map&lt; str, std::vector&lt; str &gt; &gt; &gt;</type>
        <definition>std::map&lt;str,std::map&lt;str,std::vector&lt;str&gt; &gt; &gt; Gambit::ColliderBit::MCLoopInfo::detector_analyses</definition>
        <argsstring></argsstring>
        <name>detector_analyses</name>
        <briefdescription>
<para><ref refid="classGambit_1_1ColliderBit_1_1Analysis" kindref="compound">Analysis</ref> list for each detector of each collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="65" column="16" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1ada1951bcaa97cae6828d39a3862b442f" prot="private" static="no" mutable="no">
        <type>str</type>
        <definition>str Gambit::ColliderBit::MCLoopInfo::_current_collider</definition>
        <argsstring></argsstring>
        <name>_current_collider</name>
        <briefdescription>
<para>The name of the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="118" column="13" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1ae6adcc454cdb09436b0f1cfcdc56fc06" prot="private" static="no" mutable="no">
        <type>std::map&lt; str, int &gt;::iterator</type>
        <definition>std::map&lt;str,int&gt;::iterator Gambit::ColliderBit::MCLoopInfo::_current_maxFailedEvents_it</definition>
        <argsstring></argsstring>
        <name>_current_maxFailedEvents_it</name>
        <briefdescription>
<para>Iterator to the current maxFailedEvents. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="121" column="29" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a2691f1353d7c969dc236a0fb8e61275d" prot="private" static="no" mutable="no">
        <type>std::map&lt; str, bool &gt;::iterator</type>
        <definition>std::map&lt;str,bool&gt;::iterator Gambit::ColliderBit::MCLoopInfo::_current_invalidate_failed_points_it</definition>
        <argsstring></argsstring>
        <name>_current_invalidate_failed_points_it</name>
        <briefdescription>
<para>Iterator to the current invalidate_failed_points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="124" column="29" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a8272d481da273b9984d5e199c70937a3" prot="private" static="no" mutable="no">
        <type>std::map&lt; str, int &gt;::iterator</type>
        <definition>std::map&lt;str,int&gt;::iterator Gambit::ColliderBit::MCLoopInfo::_current_event_count_it</definition>
        <argsstring></argsstring>
        <name>_current_event_count_it</name>
        <briefdescription>
<para>Iterator to the current event count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="127" column="29" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aff8fec3e28039eb724b07ab421cedec9" prot="private" static="no" mutable="no">
        <type>std::map&lt; str, <ref refid="structGambit_1_1ColliderBit_1_1convergence__settings" kindref="compound">convergence_settings</ref> &gt;::iterator</type>
        <definition>std::map&lt;str,convergence_settings&gt;::iterator Gambit::ColliderBit::MCLoopInfo::_current_convergence_options_it</definition>
        <argsstring></argsstring>
        <name>_current_convergence_options_it</name>
        <briefdescription>
<para>Iterator to the current set of convergence options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="130" column="29" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a65da8070b99595f9c9a27693bf651ae3" prot="private" static="no" mutable="no">
        <type>std::map&lt; str, std::vector&lt; str &gt; &gt;::iterator</type>
        <definition>std::map&lt;str,std::vector&lt;str&gt; &gt;::iterator Gambit::ColliderBit::MCLoopInfo::_current_analyses_it</definition>
        <argsstring></argsstring>
        <name>_current_analyses_it</name>
        <briefdescription>
<para>Iterator to the current set of analyses. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="133" column="29" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1ad26aea33586b38afb0201b9c4cac6602" prot="private" static="no" mutable="no">
        <type>std::map&lt; str, std::map&lt; str, std::vector&lt; str &gt; &gt; &gt;::iterator</type>
        <definition>std::map&lt;str,std::map&lt;str,std::vector&lt;str&gt; &gt; &gt;::iterator Gambit::ColliderBit::MCLoopInfo::_current_detector_analyses_it</definition>
        <argsstring></argsstring>
        <name>_current_detector_analyses_it</name>
        <briefdescription>
<para>Iterator to the current set of analyses sorted by detector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="136" column="29" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a4c7159f6a7075bfafbe28d242e7cd5b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::MCLoopInfo::set_current_collider</definition>
        <argsstring>(str &amp;)</argsstring>
        <name>set_current_collider</name>
        <param>
          <type>str &amp;</type>
          <defname>col</defname>
        </param>
        <briefdescription>
<para>Set the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="68" column="12" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="59" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a797872c3bb7c015c519866ab32e7b353" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const str &amp;</type>
        <definition>const str &amp; Gambit::ColliderBit::MCLoopInfo::current_collider</definition>
        <argsstring>() const</argsstring>
        <name>current_collider</name>
        <briefdescription>
<para>Get the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="71" column="17" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a79d4344da65671c3a9bd88a927b8aba8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int &amp;</type>
        <definition>int &amp; Gambit::ColliderBit::MCLoopInfo::current_maxFailedEvents</definition>
        <argsstring>() const</argsstring>
        <name>current_maxFailedEvents</name>
        <briefdescription>
<para>Get maximum allowable number of failed events before MC loop is terminated for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="74" column="17" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1af639b4df983b982a184af3f2a258fec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; Gambit::ColliderBit::MCLoopInfo::current_maxFailedEvents</definition>
        <argsstring>()</argsstring>
        <name>current_maxFailedEvents</name>
        <briefdescription>
<para>Get/set maximum allowable number of failed events before MC loop is terminated for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="76" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a0b903cb11fd3d1130009e56afb8fe9d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const bool &amp;</type>
        <definition>bool &amp; Gambit::ColliderBit::MCLoopInfo::current_invalidate_failed_points</definition>
        <argsstring>() const</argsstring>
        <name>current_invalidate_failed_points</name>
        <briefdescription>
<para>Get invalidate_failed_points bool for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="79" column="18" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a16704c8f8d8b1139c06ff6f69a4cbaa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; Gambit::ColliderBit::MCLoopInfo::current_invalidate_failed_points</definition>
        <argsstring>()</argsstring>
        <name>current_invalidate_failed_points</name>
        <briefdescription>
<para>Get/set invalidate_failed_points for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="81" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aa93e47f59ebde1aa6797da3d0a5563f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int &amp;</type>
        <definition>int &amp; Gambit::ColliderBit::MCLoopInfo::current_event_count</definition>
        <argsstring>() const</argsstring>
        <name>current_event_count</name>
        <briefdescription>
<para>Get the number of events generated for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="84" column="17" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a362e7e4114c03d46844b7b8fbfa43d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; Gambit::ColliderBit::MCLoopInfo::current_event_count</definition>
        <argsstring>()</argsstring>
        <name>current_event_count</name>
        <briefdescription>
<para>Get/set the number of events generated for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="86" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aa25c519fc2a97b38fe79536db74390d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structGambit_1_1ColliderBit_1_1convergence__settings" kindref="compound">convergence_settings</ref> &amp;</type>
        <definition>convergence_settings &amp; Gambit::ColliderBit::MCLoopInfo::current_convergence_options</definition>
        <argsstring>() const</argsstring>
        <name>current_convergence_options</name>
        <briefdescription>
<para>Get the set of convergence options for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="89" column="34" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a294878fded79c252935ae7b1b48bbd7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structGambit_1_1ColliderBit_1_1convergence__settings" kindref="compound">convergence_settings</ref> &amp;</type>
        <definition>convergence_settings&amp; Gambit::ColliderBit::MCLoopInfo::current_convergence_options</definition>
        <argsstring>()</argsstring>
        <name>current_convergence_options</name>
        <briefdescription>
<para>Get/set the set of convergence options for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="91" column="28"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aa9b8f1b8f2647bff0aa9802dc3100e63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; str &gt; &amp;</type>
        <definition>std::vector&lt; str &gt; &amp; Gambit::ColliderBit::MCLoopInfo::current_analyses</definition>
        <argsstring>() const</argsstring>
        <name>current_analyses</name>
        <briefdescription>
<para>Get the set of analyses for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="94" column="25" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a971e99874f8257d50e906f5c33d82702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; str &gt; &amp;</type>
        <definition>std::vector&lt;str&gt;&amp; Gambit::ColliderBit::MCLoopInfo::current_analyses</definition>
        <argsstring>()</argsstring>
        <name>current_analyses</name>
        <briefdescription>
<para>Get/set the set of analyses for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="96" column="19"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a6294f3efb133b279f66be4fd1c725b1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; str &gt; &amp;</type>
        <definition>const std::vector&lt; str &gt; &amp; Gambit::ColliderBit::MCLoopInfo::current_analyses_for</definition>
        <argsstring>(const str &amp;) const</argsstring>
        <name>current_analyses_for</name>
        <param>
          <type>const str &amp;</type>
          <defname>detname</defname>
        </param>
        <briefdescription>
<para>Get the set of analyses for the current collider and a given detector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="99" column="25" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a1e7355494f72b4aefa394186419207d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; str &gt; &amp;</type>
        <definition>std::vector&lt; str &gt; &amp; Gambit::ColliderBit::MCLoopInfo::current_analyses_for</definition>
        <argsstring>(const str &amp;)</argsstring>
        <name>current_analyses_for</name>
        <param>
          <type>const str &amp;</type>
          <defname>detname</defname>
        </param>
        <briefdescription>
<para>Get/set the set of analyses for the current collider and a given detector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="101" column="19" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a5e065555e9fb561a9105173e2f1a1ff6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::MCLoopInfo::current_analyses_exist_for</definition>
        <argsstring>(const str &amp;) const</argsstring>
        <name>current_analyses_exist_for</name>
        <param>
          <type>const str &amp;</type>
          <defname>detname</defname>
        </param>
        <briefdescription>
<para>Query whether any analyses exist for a given detector for the current collider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="104" column="12" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a4a3512bd3e45fcc26cba88ae8dfff3bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::MCLoopInfo::report_exceeded_maxFailedEvents</definition>
        <argsstring>() const</argsstring>
        <name>report_exceeded_maxFailedEvents</name>
        <briefdescription>
<para>Set exceeded_maxFailedEvents = true and decrement event counter by 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="107" column="12" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1acfb0f61a817362efa512120bebd3f8a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::MCLoopInfo::report_end_of_event_file</definition>
        <argsstring>() const</argsstring>
        <name>report_end_of_event_file</name>
        <briefdescription>
<para>Set end_of_event_file = true and decrement event counter by 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="110" column="12" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a90f1dab2975fa2246c9e3cb2987da312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::MCLoopInfo::reset_flags</definition>
        <argsstring>()</argsstring>
        <name>reset_flags</name>
        <briefdescription>
<para>Reset flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="113" column="12" bodyfile="ColliderBit/src/MCLoopInfo.cpp" bodystart="51" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Container for event loop status data and settings. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" line="32" column="1" bodyfile="ColliderBit/include/gambit/ColliderBit/MCLoopInfo.hpp" bodystart="31" bodyend="138"/>
    <listofallmembers>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a65da8070b99595f9c9a27693bf651ae3" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>_current_analyses_it</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1ada1951bcaa97cae6828d39a3862b442f" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>_current_collider</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aff8fec3e28039eb724b07ab421cedec9" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>_current_convergence_options_it</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1ad26aea33586b38afb0201b9c4cac6602" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>_current_detector_analyses_it</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a8272d481da273b9984d5e199c70937a3" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>_current_event_count_it</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a2691f1353d7c969dc236a0fb8e61275d" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>_current_invalidate_failed_points_it</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1ae6adcc454cdb09436b0f1cfcdc56fc06" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>_current_maxFailedEvents_it</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a6f024bfb1181bc749de04ff62a20ab70" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>analyses</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1abb7ffbc1231c843bb858e8470e3e4f1e" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>collider_names</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a818bc16a50d3653d7e586bb867258a31" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>convergence_options</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aa9b8f1b8f2647bff0aa9802dc3100e63" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_analyses</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a971e99874f8257d50e906f5c33d82702" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_analyses</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a5e065555e9fb561a9105173e2f1a1ff6" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_analyses_exist_for</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a6294f3efb133b279f66be4fd1c725b1d" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_analyses_for</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a1e7355494f72b4aefa394186419207d8" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_analyses_for</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a797872c3bb7c015c519866ab32e7b353" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_collider</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aa25c519fc2a97b38fe79536db74390d3" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_convergence_options</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a294878fded79c252935ae7b1b48bbd7a" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_convergence_options</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aa93e47f59ebde1aa6797da3d0a5563f3" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_event_count</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a362e7e4114c03d46844b7b8fbfa43d09" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_event_count</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a0b903cb11fd3d1130009e56afb8fe9d3" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_invalidate_failed_points</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a16704c8f8d8b1139c06ff6f69a4cbaa3" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_invalidate_failed_points</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a79d4344da65671c3a9bd88a927b8aba8" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_maxFailedEvents</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1af639b4df983b982a184af3f2a258fec7" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>current_maxFailedEvents</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aa841fe1447d50d56f5b8e49a67f23309" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>detector_analyses</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a13a2decfcc5cdfb73d22fb819ab757e9" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>end_of_event_file</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a84e89c7e58fe734446499a0fb1cd325f" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>event_count</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a90b674a480b99305bde5ba21ab46f37b" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>event_gen_BYPASS</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a86fc3523ef0ec22cfd17b21bc1c51c17" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>event_generation_began</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1aef66091196ba1fa30f4392ed05db48b1" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>exceeded_maxFailedEvents</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1abab9f14e9f7d2c39ec9c4a00cb52f788" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>invalidate_failed_points</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a62e2a183470c96e9c6b0a651a8318c4a" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>maxFailedEvents</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1acfb0f61a817362efa512120bebd3f8a5" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>report_end_of_event_file</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a4a3512bd3e45fcc26cba88ae8dfff3bd" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>report_exceeded_maxFailedEvents</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a90f1dab2975fa2246c9e3cb2987da312" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>reset_flags</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1MCLoopInfo_1a4c7159f6a7075bfafbe28d242e7cd5b4" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MCLoopInfo</scope><name>set_current_collider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
