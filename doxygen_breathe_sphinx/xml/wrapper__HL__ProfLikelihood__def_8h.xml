<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="wrapper__HL__ProfLikelihood__def_8h" kind="file" language="C++">
    <compoundname>wrapper_HL_ProfLikelihood_def.h</compoundname>
    <includes local="no">string</includes>
    <includes refid="include_2gambit_2Backends_2backend__types_2HepLike__1__2_2identification_8hpp" local="yes">identification.hpp</includes>
    <includes refid="include_2gambit_2Backends_2backend__undefs_8hpp" local="yes">gambit/Backends/backend_undefs.hpp</includes>
    <includedby refid="wrapper__HL__ProfLikelihood_8h" local="yes">wrapper_HL_ProfLikelihood.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>wrapper_HL_ProfLikelihood_def.h</label>
        <link refid="wrapper__HL__ProfLikelihood__def_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="3">
        <label>identification.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__types_2HepLike__1__2_2identification_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
      <node id="4">
        <label>gambit/Utils/cats.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>wrapper_HL_ProfLikelihood.h</label>
        <link refid="wrapper__HL__ProfLikelihood_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>wrapper_HL_ProfLikelihood_def.h</label>
        <link refid="wrapper__HL__ProfLikelihood__def_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>loaded_types.hpp</label>
        <link refid="HepLike__1__2_2loaded__types_8hpp_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="wrapper__HL__ProfLikelihood__def_8h_1aec4e4dcf01a3187078ec15e0685ec386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>namespace</type>
        <definition>namespace CAT_3</definition>
        <argsstring>(BACKENDNAME, _, SAFE_VERSION)</argsstring>
        <name>CAT_3</name>
        <param>
          <type>BACKENDNAME</type>
        </param>
        <param>
          <type>_</type>
        </param>
        <param>
          <type>SAFE_VERSION</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/backend_types/HepLike_1_2/wrapper_HL_ProfLikelihood_def.h" line="1" column="0" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/backend_types/HepLike_1_2/wrapper_HL_ProfLikelihood_def.h" bodystart="8" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__wrapper_HL_ProfLikelihood_def_HepLike_1_2_h__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__wrapper_HL_ProfLikelihood_def_HepLike_1_2_h__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;identification.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CAT_3(BACKENDNAME,_,SAFE_VERSION)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Member<sp/>functions:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::Read()</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;Read();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::GetChi2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theory)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_BEptr()-&gt;GetChi2(theory);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::GetChi2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theory,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theory_err)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_BEptr()-&gt;GetChi2(theory,<sp/>theory_err);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::GetLogLikelihood(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theory)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_BEptr()-&gt;GetLogLikelihood(theory);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::GetLogLikelihood(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theory,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theory_err)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_BEptr()-&gt;GetLogLikelihood(theory,<sp/>theory_err);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::GetLikelihood(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theory)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_BEptr()-&gt;GetLikelihood(theory);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::GetLikelihood(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theory,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theory_err)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_BEptr()-&gt;GetLikelihood(theory,<sp/>theory_err);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrappers<sp/>for<sp/>original<sp/>constructors:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::HL_ProfLikelihood()<sp/>:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HL_Data(__factory0())</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;set_wptr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;set_delete_wrapper(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::HL_ProfLikelihood(::std::basic_string&lt;char&gt;<sp/>s)<sp/>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HL_Data(__factory1(s))</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;set_wptr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;set_delete_wrapper(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>pointer-based<sp/>constructor:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::HL_ProfLikelihood(Abstract_HL_ProfLikelihood*<sp/>in)<sp/>:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HL_Data(in)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;set_wptr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;set_delete_wrapper(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>constructor:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::HL_ProfLikelihood(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HL_ProfLikelihood&amp;<sp/>in)<sp/>:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HL_Data(in.get_BEptr()-&gt;pointer_copy__BOSS())</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;set_wptr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;set_delete_wrapper(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assignment<sp/>operator:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>HL_ProfLikelihood&amp;<sp/>HL_ProfLikelihood::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HL_ProfLikelihood&amp;<sp/>in)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;in)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;pointer_assign__BOSS(in.get_BEptr());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>HL_ProfLikelihood::~HL_ProfLikelihood()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_BEptr()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_BEptr()-&gt;set_delete_wrapper(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(can_delete_BEptr())</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>BEptr;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BEptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_delete_BEptr(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>correctly<sp/>casted<sp/>pointer<sp/>to<sp/>Abstract<sp/>class:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Abstract_HL_ProfLikelihood*<sp/>HL_ProfLikelihood::get_BEptr()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">Abstract_HL_ProfLikelihood*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(BEptr);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="include_2gambit_2Backends_2backend__undefs_8hpp" kindref="compound">gambit/Backends/backend_undefs.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__wrapper_HL_ProfLikelihood_def_HepLike_1_2_h__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/backend_types/HepLike_1_2/wrapper_HL_ProfLikelihood_def.h"/>
  </compounddef>
</doxygen>
