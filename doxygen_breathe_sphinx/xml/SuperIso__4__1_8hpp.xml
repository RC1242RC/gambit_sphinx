<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="SuperIso__4__1_8hpp" kind="file" language="C++">
    <compoundname>SuperIso_4_1.hpp</compoundname>
    <includes refid="include_2gambit_2Backends_2backend__undefs_8hpp" local="yes">gambit/Backends/backend_undefs.hpp</includes>
    <includedby refid="SuperIso__4__1_8cpp" local="yes">SuperIso_4_1.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>SuperIso_4_1.hpp</label>
        <link refid="SuperIso__4__1_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>SuperIso_4_1.cpp</label>
        <link refid="SuperIso__4__1_8cpp"/>
      </node>
      <node id="1">
        <label>SuperIso_4_1.hpp</label>
        <link refid="SuperIso__4__1_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="SuperIso__4__1_8hpp_1a7f7848301604c58c8962207acd75ff6e" prot="public" static="no">
        <name>BACKENDNAME</name>
        <initializer>SuperIso</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="23" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SuperIso__4__1_8hpp_1a339bf682af9659de270251e5d18011be" prot="public" static="no">
        <name>BACKENDLANG</name>
        <initializer>CC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="24" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SuperIso__4__1_8hpp_1a1c6d5de492ac61ad29aec7aa9a436bbf" prot="public" static="no">
        <name>VERSION</name>
        <initializer>4.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="25" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SuperIso__4__1_8hpp_1a8d5a383ba38225163529bfcb55b74444" prot="public" static="no">
        <name>SAFE_VERSION</name>
        <initializer>4_1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="26" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SuperIso__4__1_8hpp_1a62a0f8a0b822f31ff84bc8252b33e7c8" prot="public" static="no">
        <name>REFERENCE</name>
        <initializer>Mahmoudi:2007vz,Mahmoudi:2008tp,Mahmoudi:2009zz</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="27" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="SuperIso__4__1_8hpp_1a7f66fbd24194b3ab861b789da5329de7" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></type>
        <definition>LOAD_LIBRARY const parameters WC const parameters WC double</definition>
        <argsstring></argsstring>
        <name>double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="94" column="2" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SuperIso__4__1_8hpp_1a5c9089316f753b06e06f80c4cf9d4808" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> const parameters</type>
        <definition>LOAD_LIBRARY const parameters BRBXstautau_highq2</definition>
        <argsstring></argsstring>
        <name>BRBXstautau_highq2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="94" column="26" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SuperIso__4__1_8hpp_1a9aad1cb0ab0aa36c10c3d64c23a63770" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> const parameters</type>
        <definition>LOAD_LIBRARY const parameters WC const parameters WC const parameters MSSM63atQ</definition>
        <argsstring></argsstring>
        <name>MSSM63atQ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="94" column="45" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SuperIso__4__1_8hpp_1a8757ee8fed0c1fc4144bae91c3fb7fec" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> const parameters</type>
        <definition>LOAD_LIBRARY const parameters WC const parameters WC const parameters MSSM63atMGUT</definition>
        <argsstring></argsstring>
        <name>MSSM63atMGUT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="94" column="55" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SuperIso__4__1_8hpp_1af1388fbcd63257260c98157cf8222aef" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> const parameters WC const parameters</type>
        <definition>LOAD_LIBRARY const parameters WC const parameters modified_AI_BKstarmumu</definition>
        <argsstring></argsstring>
        <name>modified_AI_BKstarmumu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="96" column="26" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SuperIso__4__1_8hpp_1a95213ea3a9af91a632820711674e902d" prot="public" static="no" mutable="no">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> const parameters WC const parameters WC const parameters</type>
        <definition>LOAD_LIBRARY const parameters WC const parameters WC const parameters modified_delta0</definition>
        <argsstring></argsstring>
        <name>modified_delta0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="98" column="26" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="SuperIso__4__1_8hpp_1a6832f289c6ef62fb23a13518bd5e188f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></type>
        <definition>LOAD_LIBRARY BE_CONV_FUNCTION</definition>
        <argsstring>(A_BXsmumu_zero, double,(const parameters *), &quot;A_BXsmumu_zero&quot;,(MSSM63atQ, MSSM63atMGUT, WC)) BE_CONV_FUNCTION(BRBXstautau_highq2</argsstring>
        <name>BE_CONV_FUNCTION</name>
        <param>
          <type>A_BXsmumu_zero</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(const parameters *)</type>
        </param>
        <param>
          <type>&quot;A_BXsmumu_zero&quot;</type>
        </param>
        <param>
          <type>(MSSM63atQ, MSSM63atMGUT, WC)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SuperIso__4__1_8hpp_1ab0026fab4927694020dc74144c523e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> const parameters WC</type>
        <definition>LOAD_LIBRARY const parameters WC BE_CONV_FUNCTION</definition>
        <argsstring>(A_BXstautau_highq2, double,(const parameters *), &quot;A_BXstautau_highq2&quot;,(MSSM63atQ, MSSM63atMGUT, WC)) BE_CONV_FUNCTION(modified_AI_BKstarmumu</argsstring>
        <name>BE_CONV_FUNCTION</name>
        <param>
          <type>A_BXstautau_highq2</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(const parameters *)</type>
        </param>
        <param>
          <type>&quot;A_BXstautau_highq2&quot;</type>
        </param>
        <param>
          <type>(MSSM63atQ, MSSM63atMGUT, WC)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SuperIso__4__1_8hpp_1a38b3aec133868819a49cad66fb2a1a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="frontend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref> const parameters WC const parameters WC</type>
        <definition>LOAD_LIBRARY const parameters WC const parameters WC BE_CONV_FUNCTION</definition>
        <argsstring>(modified_AI_BKstarmumu_zero, double,(const parameters *), &quot;modified_AI_BKstarmumu_zero&quot;,(MSSM63atQ, MSSM63atMGUT, WC)) BE_CONV_FUNCTION(modified_delta0</argsstring>
        <name>BE_CONV_FUNCTION</name>
        <param>
          <type>modified_AI_BKstarmumu_zero</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(const parameters *)</type>
        </param>
        <param>
          <type>&quot;modified_AI_BKstarmumu_zero&quot;</type>
        </param>
        <param>
          <type>(MSSM63atQ, MSSM63atMGUT, WC)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp" line="97" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Frontend for SuperIso backend v4.1</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Nazila Mahmoudi </para>
</simplesect>
<simplesect kind="date"><para>2016 Jul </para>
</simplesect>
<simplesect kind="date"><para>2018 Jan </para>
</simplesect>
<simplesect kind="date"><para>2019 Aug</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott </para>
</simplesect>
<simplesect kind="date"><para>2015 May</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDNAME<sp/>SuperIso</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDLANG<sp/>CC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION<sp/>4.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAFE_VERSION<sp/>4_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFERENCE<sp/>Mahmoudi:2007vz,Mahmoudi:2008tp,Mahmoudi:2009zz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="backend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>do<sp/>anything<sp/>non-MSSM/2HDM<sp/>with<sp/>SuperIso<sp/>yet,<sp/>besides<sp/>Wilson<sp/>coefficients.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>want<sp/>to<sp/>expand<sp/>this<sp/>to<sp/>work<sp/>in<sp/>the<sp/>2HDM,<sp/>it<sp/>should<sp/>all<sp/>just<sp/>work<sp/>out<sp/>of<sp/>the<sp/>box<sp/>if<sp/>you<sp/>set<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parameters<sp/>object<sp/>up<sp/>correctly<sp/>in<sp/>FlavBit<sp/>and<sp/>specify<sp/>the<sp/>model(s)<sp/>as<sp/>allowed<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="common__macros_8hpp_1a4236f3c5c82e25ac792c299085d80d0c" kindref="member">BE_ALLOW_MODELS</ref>(MSSM63atQ,<sp/>MSSM63atMGUT,<sp/>WC,<sp/>WC_LUV,<sp/>WC_LR)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">BE_FUNCTION(Init_param,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(parameters*),<sp/></highlight><highlight class="stringliteral">&quot;Init_param&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Init_param&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">BE_FUNCTION(slha_adjust,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(parameters*),<sp/>&quot;slha_adjust&quot;,<sp/>&quot;slha_adjust&quot;)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">BE_FUNCTION(mcmc_from_pole,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>parameters*),<sp/>&quot;mcmc_from_pole&quot;,<sp/>&quot;mcmc_from_pole&quot;)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">BE_FUNCTION(CW_calculator,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>const<sp/>parameters*),<sp/>&quot;CW_calculator&quot;,<sp/>&quot;CW_calculator&quot;)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">BE_FUNCTION(C_calculator_base1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>const<sp/>parameters*),<sp/>&quot;C_calculator_base1&quot;,<sp/>&quot;C_calculator_base1&quot;)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">BE_FUNCTION(C_calculator_base2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>const<sp/>parameters*),<sp/>&quot;C_calculator_base2&quot;,<sp/>&quot;C_calculator_base2&quot;)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">BE_FUNCTION(Cprime_calculator,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>const<sp/>parameters*),<sp/>&quot;Cprime_calculator&quot;,<sp/>&quot;Cprime_calculator&quot;)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">BE_FUNCTION(CQ_calculator,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>const<sp/>parameters*),<sp/>&quot;CQ_calculator&quot;,<sp/>&quot;CQ_calculator&quot;)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">BE_FUNCTION(alphas_running,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>const<sp/>parameters*),<sp/>&quot;alphas_running&quot;,<sp/>&quot;alphas_running&quot;)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">BE_FUNCTION(bsgamma,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>const<sp/>parameters*),<sp/>&quot;bsgamma&quot;,<sp/>&quot;bsgamma&quot;)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">BE_FUNCTION(bsgamma_Ecut,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>const<sp/>parameters*),<sp/>&quot;bsgamma_Ecut&quot;,<sp/>&quot;bsgamma_Ecut&quot;)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">BE_FUNCTION(Bsmumu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;Bsmumu&quot;,<sp/>&quot;Bsmumu&quot;)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">BE_FUNCTION(Bsmumu_untag,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;Bsmumu_untag&quot;,<sp/>&quot;Bsmumu_untag&quot;)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">BE_FUNCTION(Bsll_untag,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;Bsll_untag&quot;,<sp/>&quot;Bsll_untag&quot;)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">BE_FUNCTION(Bmumu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;Bdmumu&quot;,<sp/>&quot;Bmumu&quot;)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">BE_FUNCTION(Btaunu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;Btaunu&quot;,<sp/>&quot;Btaunu&quot;)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">BE_FUNCTION(BDtaunu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;BDtaunu&quot;,<sp/>&quot;BDtaunu&quot;)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">BE_FUNCTION(BDtaunu_BDenu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;BDtaunu_BDenu&quot;,<sp/>&quot;BDtaunu_BDenu&quot;)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">BE_FUNCTION(BDstartaunu_BDstarenu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;BDstartaunu_BDstarenu&quot;,<sp/>&quot;BDstartaunu_BDstarenu&quot;)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">BE_FUNCTION(Blnu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>const<sp/>parameters*),<sp/>&quot;Blnu&quot;,<sp/>&quot;Blnu&quot;)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">BE_FUNCTION(Kmunu_pimunu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;Kmunu_pimunu&quot;,<sp/>&quot;Kmunu_pimunu&quot;)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">BE_FUNCTION(Rmu23,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;Rmu23&quot;,<sp/>&quot;Rmu23&quot;)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">BE_FUNCTION(Dstaunu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;Dstaunu&quot;,<sp/>&quot;Dstaunu&quot;)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">BE_FUNCTION(Dsmunu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;Dsmunu&quot;,<sp/>&quot;Dsmunu&quot;)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">BE_FUNCTION(Dmunu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;Dmunu&quot;,<sp/>&quot;Dmunu&quot;)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">BE_FUNCTION(muon_gm2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;muon_gm2&quot;,<sp/>&quot;muon_gm2&quot;)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">BE_FUNCTION(delta0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;delta0&quot;,<sp/>&quot;delta0&quot;)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">BE_FUNCTION(BRBXsll_lowq2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;BRBXsll_lowq2&quot;,<sp/>&quot;BRBXsll_lowq2&quot;)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">BE_FUNCTION(BRBXsll_highq2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;BRBXsll_highq2&quot;,<sp/>&quot;BRBXsll_highq2&quot;)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">BE_FUNCTION(A_BXsll_lowq2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;A_BXsll_lowq2&quot;,<sp/>&quot;A_BXsll_lowq2&quot;)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">BE_FUNCTION(A_BXsll_highq2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;A_BXsll_highq2&quot;,<sp/>&quot;A_BXsll_highq2&quot;)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">BE_FUNCTION(A_BXsll_zero,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;A_BXsll_zero&quot;,<sp/>&quot;A_BXsll_zero&quot;)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">BE_FUNCTION(BRBKstarll,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;BRBKstarll&quot;,<sp/>&quot;BRBKstarll&quot;)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">BE_FUNCTION(BRBKll,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;BRBKll&quot;,<sp/>&quot;BRBKll&quot;)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">BE_FUNCTION(BRBsphill,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;BRBsphill&quot;,<sp/>&quot;BRBsphill&quot;)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">BE_FUNCTION(AI_BKstarmumu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;AI_BKstarmumu&quot;,<sp/>&quot;AI_BKstarmumu&quot;)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">BE_FUNCTION(AI_BKstarmumu_zero,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;AI_BKstarmumu_zero&quot;,<sp/>&quot;AI_BKstarmumu_zero&quot;)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">BE_FUNCTION(Bll,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>std::complex&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;*,<sp/>const<sp/>parameters*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>&quot;Bdll&quot;,<sp/>&quot;Bll&quot;)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">BE_FUNCTION(BRBDlnu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/>const<sp/>parameters*),<sp/>&quot;BRBDlnu&quot;,<sp/>&quot;BRBDlnu&quot;)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">BE_FUNCTION(BRBDstarlnu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/>const<sp/>parameters*),<sp/>&quot;BRBDstarlnu&quot;,<sp/>&quot;BRBDstarlnu&quot;)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">BE_FUNCTION(mb_1S,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>,<sp/>(const<sp/>parameters*),<sp/>&quot;mb_1S&quot;,<sp/>&quot;mb_1S&quot;)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SuperIso<sp/>functions<sp/>related<sp/>to<sp/>theory<sp/>correlations:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">BE_FUNCTION(set_nuisance,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(nuisance*),<sp/>&quot;set_nuisance&quot;,<sp/>&quot;set_nuisance&quot;)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">BE_FUNCTION(set_nuisance_value_from_param,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(nuisance*,<sp/>const<sp/>parameters*),<sp/>&quot;set_nuisance_value_from_param&quot;,<sp/>&quot;set_nuisance_value_from_param&quot;)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">BE_FUNCTION(make_obslist,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**,<sp/>obsname*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*),<sp/>&quot;make_obslist&quot;,<sp/>&quot;make_obslist&quot;)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">BE_FUNCTION(get_predictions_nuisance,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">**,<sp/>const<sp/>parameters*,<sp/>const<sp/>nuisance*),<sp/>&quot;get_predictions_nuisance&quot;,<sp/>&quot;get_predictions_nuisance&quot;)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">BE_FUNCTION(observables,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>obsname*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/>const<sp/>nuisance*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**,<sp/>const<sp/>parameters*),<sp/>&quot;observables&quot;,<sp/>&quot;observables&quot;)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">BE_FUNCTION(convert_correlation,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(nuiscorr*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">**,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>&quot;convert_correlation&quot;,<sp/>&quot;convert_correlation&quot;)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">BE_FUNCTION(get_th_covariance_nuisance,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">***,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*,<sp/>const<sp/>parameters*,<sp/>const<sp/>nuisance*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">**),<sp/>&quot;get_th_covariance_nuisance&quot;,<sp/>&quot;get_th_covariance_nuisance&quot;)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">BE_CONV_FUNCTION(A_BXsmumu_zero,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;A_BXsmumu_zero&quot;,(MSSM63atQ,<sp/>MSSM63atMGUT,<sp/>WC))</highlight></codeline>
<codeline lineno="94"><highlight class="normal">BE_CONV_FUNCTION(BRBXstautau_highq2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;BRBXstautau_highq2&quot;,<sp/>(MSSM63atQ,<sp/>MSSM63atMGUT,<sp/>WC))</highlight></codeline>
<codeline lineno="95"><highlight class="normal">BE_CONV_FUNCTION(A_BXstautau_highq2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;A_BXstautau_highq2&quot;,<sp/>(MSSM63atQ,<sp/>MSSM63atMGUT,<sp/>WC))</highlight></codeline>
<codeline lineno="96"><highlight class="normal">BE_CONV_FUNCTION(modified_AI_BKstarmumu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;modified_AI_BKstarmumu&quot;,<sp/>(MSSM63atQ,<sp/>MSSM63atMGUT,<sp/>WC))</highlight></codeline>
<codeline lineno="97"><highlight class="normal">BE_CONV_FUNCTION(modified_AI_BKstarmumu_zero,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;modified_AI_BKstarmumu_zero&quot;,<sp/>(MSSM63atQ,<sp/>MSSM63atMGUT,<sp/>WC))</highlight></codeline>
<codeline lineno="98"><highlight class="normal">BE_CONV_FUNCTION(modified_delta0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(const<sp/>parameters*),<sp/>&quot;modified_delta0&quot;,<sp/>(MSSM63atQ,<sp/>MSSM63atMGUT,<sp/>WC))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Undefine<sp/>macros<sp/>to<sp/>avoid<sp/>conflict<sp/>with<sp/>other<sp/>backends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Backends/backend_undefs.hpp&quot;</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/SuperIso_4_1.hpp"/>
  </compounddef>
</doxygen>
