<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classparse_8py" kind="file" language="Python">
    <compoundname>classparse.py</compoundname>
    <innernamespace refid="namespacemodules_1_1classparse">modules::classparse</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>collections<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OrderedDict</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacemodules_1_1active__cfg" kindref="compound">modules.active_cfg</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>active_cfg</highlight></codeline>
<codeline lineno="12"><highlight class="normal">exec(</highlight><highlight class="stringliteral">&quot;import<sp/>configs.&quot;</highlight><highlight class="normal"><sp/>+<sp/>active_cfg.module_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>as<sp/>cfg&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacemodules_1_1gb" kindref="compound">modules.gb</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>gb</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacemodules_1_1utils" kindref="compound">modules.utils</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>utils</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacemodules_1_1classutils" kindref="compound">modules.classutils</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>classutils</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacemodules_1_1funcutils" kindref="compound">modules.funcutils</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>funcutils</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacemodules_1_1infomsg" kindref="compound">modules.infomsg</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>infomsg</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Module-level<sp/>globals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">template_done<sp/><sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="24"><highlight class="normal">templ_spec_done<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="25"><highlight class="normal">added_parent<sp/><sp/><sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">includes<sp/>=<sp/>OrderedDict()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>run<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Main<sp/>function<sp/>for<sp/>parsing<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run():</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Clear<sp/>the<sp/>module-level<sp/>dict<sp/>that<sp/>keeps<sp/>track<sp/>of<sp/>include<sp/>statements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>includes.clear()</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Loop<sp/>over<sp/>all<sp/>classes<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>class_name_long,<sp/>class_el<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.loaded_classes_in_xml.items():</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Clear<sp/>all<sp/>info<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infomsg.clearInfoMessages()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>dicts<sp/>with<sp/>different<sp/>variations<sp/>of<sp/>the<sp/>class<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_name<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>classutils.getClassNameDict(class_el)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abstr_class_name<sp/>=<sp/>classutils.getClassNameDict(class_el,<sp/>abstract=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Print<sp/>current<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>utils.modifyText(</highlight><highlight class="stringliteral">&apos;Class:&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;underline&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>class_name[</highlight><highlight class="stringliteral">&apos;long_templ&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>a<sp/>template<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_template<sp/>=<sp/>utils.isTemplateClass(class_el)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>list<sp/>of<sp/>all<sp/>types<sp/>used<sp/>in<sp/>this<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_types_in_class<sp/>=<sp/>utils.getAllTypesInClass(class_el,<sp/>include_parents=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>a<sp/>bunch<sp/>of<sp/>generally<sp/>useful<sp/>variables<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_class_file_el<sp/><sp/><sp/>=<sp/>gb.id_dict[class_el.get(</highlight><highlight class="stringliteral">&apos;file&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_file_name<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>original_class_file_el.get(</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_file_name_base<sp/><sp/>=<sp/>os.path.basename(original_file_name)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_class_file_dir<sp/><sp/>=<sp/>os.path.split(original_file_name)[0]</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extras_src_file_name<sp/><sp/><sp/><sp/><sp/>=<sp/>os.path.join(gb.boss_output_dir,<sp/>gb.general_src_file_prefix<sp/>+<sp/>class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">]<sp/>+<sp/>cfg.source_extension)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>short_abstr_class_fname<sp/><sp/>=<sp/>gb.new_header_files[class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]][</highlight><highlight class="stringliteral">&apos;abstract&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abstr_class_fname<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>os.path.join(gb.boss_output_dir,<sp/>short_abstr_class_fname)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>namespaces<sp/><sp/><sp/><sp/>=<sp/>class_name[&apos;long&apos;].split(&apos;::&apos;)[:-1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaces<sp/><sp/><sp/><sp/>=<sp/>utils.getNamespaces(class_el,<sp/>include_self=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_namespace<sp/>=<sp/>bool(len(namespaces))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_copy_constructor,<sp/>copy_constructor_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>classutils.checkCopyConstructor(class_el,<sp/>return_id=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_assignment_operator,<sp/>assignment_is_artificial<sp/>=<sp/>classutils.checkAssignmentOperator(class_el)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>has_assignment_operator<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>assignment_is_artificial:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_assignment_operator<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_assignment_operator<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Register<sp/>paths<sp/>of<sp/>original<sp/>files<sp/>in<sp/>global<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.original_file_paths[original_file_name_base]<sp/>=<sp/>original_file_name</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>content<sp/>of<sp/>original<sp/>class<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(original_file_name,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_file_content<sp/>=<sp/>f.read()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_file_content_nocomments<sp/>=<sp/>utils.removeComments(original_file_content,<sp/>insert_blanks=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Prepare<sp/>entries<sp/>in<sp/>gb.new_code<sp/>and<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>abstr_class_fname<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[abstr_class_fname]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">True</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[abstr_class_fname<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.FOR_GAMBIT&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">True</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>original_file_name<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[original_file_name]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">False</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>original_file_name<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>includes.keys():</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes[original_file_name]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>extras_src_file_name<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[extras_src_file_name]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">False</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Treat<sp/>the<sp/>first<sp/>specialization<sp/>of<sp/>a<sp/>template<sp/>class<sp/>differently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_template<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>template_done:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template_bracket,<sp/>template_types<sp/>=<sp/>utils.getTemplateBracket(class_el)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_templ_class_decl<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_templ_class_decl<sp/>+=<sp/>classutils.constrEmptyTemplClassDecl(abstr_class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">],<sp/>namespaces,<sp/>template_bracket,<sp/>indent=cfg.indent)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_templ_class_decl<sp/>+=<sp/>classutils.constrTemplForwDecl(class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">],<sp/>namespaces,<sp/>template_bracket,<sp/>indent=cfg.indent)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[abstr_class_fname][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(0,<sp/>empty_templ_class_decl)<sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>template<sp/>arguments<sp/>for<sp/>specialization,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>and<sp/>check<sp/>that<sp/>they<sp/>are<sp/>acceptable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_template<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>templ_spec_done:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_template_types<sp/>=<sp/>utils.getSpecTemplateTypes(class_el)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>template_type<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>spec_template_types:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(template_type<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.accepted_types):</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;The<sp/>template<sp/>specialization<sp/>type<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>template_type<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>for<sp/>class<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>among<sp/>accepted<sp/>types.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>the<sp/>backend:<sp/>Construct<sp/>code<sp/>for<sp/>the<sp/>abstract<sp/>class<sp/>header<sp/>file<sp/>and<sp/>register<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrAbstractClassHeaderCode(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>namespaces,<sp/>is_template,<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_copy_constructor,<sp/>construct_assignment_operator,<sp/>abstr_class_fname,<sp/>file_for_gambit=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>GAMBIT:<sp/>Construct<sp/>code<sp/>for<sp/>the<sp/>abstract<sp/>class<sp/>header<sp/>file<sp/>and<sp/>register<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrAbstractClassHeaderCode(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>namespaces,<sp/>is_template,<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_copy_constructor,<sp/>construct_assignment_operator,<sp/>abstr_class_fname,<sp/>file_for_gambit=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>abstract<sp/>class<sp/>to<sp/>inheritance<sp/>list<sp/>of<sp/>original<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addAbsClassToInheritanceList(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>is_template,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_file_name,<sp/>original_file_content_nocomments)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>code<sp/>for<sp/>#include<sp/>statements<sp/>in<sp/>orginal<sp/>header/source<sp/>file<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addIncludesToOriginalClassFile(class_el,<sp/>namespaces,<sp/>is_template,<sp/>original_file_name,<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_file_content_nocomments,<sp/>original_file_content,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>short_abstr_class_fname)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>additional<sp/>member<sp/>functions<sp/>in<sp/>the<sp/>original<sp/>class:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Abstract<sp/>class<sp/>versions<sp/>of<sp/>member<sp/>functions<sp/>that<sp/>make<sp/>use<sp/>of<sp/>loaded<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Extra<sp/>versions<sp/>of<sp/>functions<sp/>that<sp/>use<sp/>default<sp/>value<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Functions<sp/>for<sp/>returning<sp/>references<sp/>to<sp/>public<sp/>member<sp/>variables.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declarations<sp/>go<sp/>in<sp/>the<sp/>original<sp/>class<sp/>header<sp/>while<sp/>implementations<sp/>go<sp/>in<sp/>a<sp/>separate<sp/>source<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generateClassMemberInterface(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>namespaces,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_file_name,<sp/>original_file_content_nocomments,<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_class_file_el,<sp/>extras_src_file_name,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_copy_constructor,<sp/>construct_assignment_operator)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>factory<sp/>functions<sp/>source<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generateFactoryFunctions(class_el,<sp/>class_name,<sp/>is_template)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>a<sp/>header<sp/>containing<sp/>the<sp/>GAMBIT<sp/>wrapper<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generateWrapperHeader(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>namespaces,<sp/>short_abstr_class_fname,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_assignment_operator,<sp/>has_copy_constructor,<sp/>copy_constructor_id)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Construct<sp/>utility<sp/>functions<sp/>for<sp/>dealing<sp/>with<sp/>pointer-to-wrapper<sp/>from<sp/>Abstract<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(&apos;wrapper_creator&apos;,<sp/>&apos;wrapper_deleter&apos;,<sp/>&apos;set_delete_BEptr&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrWrapperUtils(class_name)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>typedef<sp/>to<sp/>&apos;abstracttypedefs.hpp&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addAbstractTypedefs(abstr_class_name,<sp/>namespaces)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>typedef<sp/>to<sp/>&apos;wrappertypdefs.hpp&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addWrapperTypedefs(class_name,<sp/>namespaces)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>include<sp/>guards<sp/>to<sp/>the<sp/>original<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[original_file_name][</highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[original_file_name][</highlight><highlight class="stringliteral">&apos;include_guard_prefix&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;boss&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Keep<sp/>track<sp/>of<sp/>classes<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.classes_done.append(class_name)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_template:<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>template_done:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template_done.append(class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>templ_spec_done:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>templ_spec_done.append(class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>END:<sp/>Loop<sp/>over<sp/>all<sp/>classes<sp/>in<sp/>gb.loaded_classes_in_xml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>END:<sp/>run<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>constrAbstractClassHeaderCode<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Construct<sp/>code<sp/>for<sp/>the<sp/>abstract<sp/>class<sp/>header<sp/>file<sp/>and<sp/>register<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">constrAbstractClassHeaderCode(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>namespaces,<sp/>is_template,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_copy_constructor,<sp/>construct_assignment_operator,<sp/>abstr_class_fname,<sp/>file_for_gambit=False):</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>file_for_gambit:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abstr_class_fname<sp/>=<sp/>abstr_class_fname<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.FOR_GAMBIT&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>class_decl<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>include<sp/>statements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>include_statements<sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>include_statements<sp/>+=<sp/>[</highlight><highlight class="stringliteral">&apos;#include<sp/>&lt;cstddef&gt;&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gb.debug_mode<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>file_for_gambit:<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_statements<sp/>+=<sp/>[</highlight><highlight class="stringliteral">&apos;#include<sp/>&lt;iostream&gt;&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>include_statements<sp/>+=<sp/>[</highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/></highlight><highlight class="stringliteral">&apos;abstractbase.hpp&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>include_statements<sp/>+=<sp/>[</highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>gb.frwd_decls_abs_fname<sp/>+<sp/>cfg.header_extension<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>include_statements<sp/>+=<sp/>[</highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>gb.frwd_decls_wrp_fname<sp/>+<sp/>cfg.header_extension<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>include_statements<sp/>+=<sp/>utils.getIncludeStatements(class_el,<sp/>convert_loaded_to=</highlight><highlight class="stringliteral">&apos;wrapper_decl&apos;</highlight><highlight class="normal">,<sp/>exclude_types=[class_name],<sp/>include_parents=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>use_full_path=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>forward_declared=</highlight><highlight class="stringliteral">&apos;include&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>include_statements<sp/>=<sp/>utils.orderIncludeStatements(include_statements)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>include_statements_code<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">.join(include_statements)<sp/>+<sp/>2*</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>class_decl<sp/>+=<sp/>include_statements_code</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Add<sp/>include<sp/>statement<sp/>for<sp/>the<sp/>enum<sp/>declaration<sp/>header.<sp/>Put<sp/>this<sp/>inside<sp/>a<sp/>#ifndef<sp/>...<sp/>#endif<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>to<sp/>avoid<sp/>multiple<sp/>declaration<sp/>when<sp/>the<sp/>abstract<sp/>class<sp/>header<sp/>is<sp/>included<sp/>from<sp/>the<sp/>original<sp/>class<sp/>header.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>enum_include_statement_code<sp/><sp/>=<sp/>&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>enum_include_statement_code<sp/>+=<sp/>&apos;#ifndef<sp/>ENUMS_DECLARED\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>enum_include_statement_code<sp/>+=<sp/>&apos;#define<sp/>ENUMS_DECLARED\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>enum_include_statement_code<sp/>+=<sp/>&apos;#include<sp/>&quot;&apos;<sp/>+<sp/>gb.enum_decls_wrp_fname<sp/>+<sp/>cfg.header_extension<sp/>+<sp/>&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>enum_include_statement_code<sp/>+=<sp/>&apos;#include<sp/>&quot;&apos;<sp/>+<sp/>os.path.join(gb.backend_types_basedir,<sp/>gb.gambit_backend_name_full,<sp/>gb.enum_decls_wrp_fname<sp/>+<sp/>cfg.header_extension)<sp/>+<sp/>&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>enum_include_statement_code<sp/>+=<sp/>&apos;#endif\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>enum_include_statement_code<sp/>+=<sp/>&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>class_decl<sp/>+=<sp/>enum_include_statement_code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>the<sp/>code<sp/>for<sp/>the<sp/>abstract<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_template<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>templ_spec_done):</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(is_template<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>templ_spec_done):</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_decl<sp/>+=<sp/>classutils.constrAbstractClassDecl(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>namespaces,<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indent=cfg.indent,<sp/>file_for_gambit=file_for_gambit,<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template_types=spec_template_types,<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_copy_constructor=has_copy_constructor,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_assignment_operator=construct_assignment_operator)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_decl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_decl<sp/>+=<sp/>classutils.constrAbstractClassDecl(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>namespaces,<sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indent=cfg.indent,<sp/>file_for_gambit=file_for_gambit,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_copy_constructor=has_copy_constructor,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_assignment_operator=construct_assignment_operator)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_decl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Register<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[abstr_class_fname][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-1,<sp/>class_decl)<sp/>)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>END:<sp/>constrAbstractClassHeaderCode<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>addAbsClassToInheritanceList<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Add<sp/>abstract<sp/>class<sp/>to<sp/>inheritance<sp/>list<sp/>of<sp/>original<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addAbsClassToInheritanceList(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>is_template,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_file_name,<sp/>original_file_content_nocomments):</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>positions<sp/>in<sp/>the<sp/>original<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>line_number<sp/><sp/><sp/><sp/>=<sp/>int(class_el.get(</highlight><highlight class="stringliteral">&apos;line&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>class_name_pos<sp/>=<sp/>classutils.findClassNamePosition(class_el,<sp/>original_file_content_nocomments)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>newline_pos<sp/><sp/><sp/><sp/>=<sp/>utils.findNewLinePos(original_file_content_nocomments,<sp/>line_number)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Special<sp/>preparations<sp/>for<sp/>template<sp/>classes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_template:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Determine<sp/>whether<sp/>this<sp/>is<sp/>the<sp/>source<sp/>for<sp/>the<sp/>general<sp/>template<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>or<sp/>for<sp/>a<sp/>specialization<sp/>(look<sp/>for<sp/>&apos;&lt;&apos;<sp/>after<sp/>class<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_pos<sp/>=<sp/>class_name_pos<sp/>+<sp/>len(class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_char<sp/>=<sp/>original_file_content_nocomments[temp_pos]</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>next_char<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_pos<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>next_char<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_is_specialization<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_is_specialization<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Prepare<sp/>the<sp/>template<sp/>bracket<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>src_is_specialization:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_template_bracket<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&lt;&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;,&apos;</highlight><highlight class="normal">.join(spec_template_types)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&gt;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_template_bracket<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&lt;&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;,&apos;</highlight><highlight class="normal">.join(template_types)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&gt;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>no<sp/>previous<sp/>parent<sp/>classes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;bases&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>class_el.keys())<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>added_parent):</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Calculate<sp/>insert<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert_pos<sp/>=<sp/>class_name_pos<sp/>+<sp/>len(class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_template<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>src_is_specialization:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert_pos<sp/>+=<sp/>len(add_template_bracket)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Generate<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_code<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>public<sp/>virtual<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>abstr_class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_template<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_code<sp/>+=<sp/>add_template_bracket</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>there<sp/>are<sp/>previous<sp/>parent<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Get<sp/>colon<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_template<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>src_is_specialization:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_pos<sp/>=<sp/>class_name_pos<sp/>+<sp/>len(class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">])<sp/>+<sp/>len(add_template_bracket)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_pos<sp/>=<sp/>class_name_pos<sp/>+<sp/>len(class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colon_pos<sp/>=<sp/>temp_pos<sp/>+<sp/>original_file_content_nocomments[temp_pos:newline_pos].find(</highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Calculate<sp/>insert<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert_pos<sp/>=<sp/>colon_pos<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Generate<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_code<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>public<sp/>virtual<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>abstr_class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_template<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_code<sp/>+=<sp/>add_template_bracket</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;,&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Register<sp/>new<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[original_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(insert_pos,<sp/>add_code)<sp/>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Update<sp/>added_parent<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>added_parent.append(class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>END:<sp/>addAbsClassToInheritanceList<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>addIncludesToOriginalClassFile<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Generate<sp/>code<sp/>for<sp/>#include<sp/>statements<sp/>in<sp/>orginal<sp/>header/source<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addIncludesToOriginalClassFile(class_el,<sp/>namespaces,<sp/>is_template,<sp/>original_file_name,<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_file_content_nocomments,<sp/>original_file_content,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>short_abstr_class_fname):</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>include<sp/>statement<sp/>for<sp/>abstract<sp/>class<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>include_line<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.backend_types_basedir,<sp/>gb.gambit_backend_name_full,<sp/>short_abstr_class_fname<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>that<sp/>we<sp/>haven&apos;t<sp/>included<sp/>that<sp/>statement<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>include_line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>includes[original_file_name]:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>for<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>has_namespace<sp/>=<sp/>bool(len(namespaces))</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>class<sp/>name<sp/>position<sp/>in<sp/>the<sp/>original<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>class_name_pos<sp/>=<sp/>classutils.findClassNamePosition(class_el,<sp/>original_file_content_nocomments)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>insert<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_template<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert_pos<sp/>=<sp/>original_file_content_nocomments[:class_name_pos].rfind(</highlight><highlight class="stringliteral">&apos;template&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert_pos<sp/>=<sp/>max(original_file_content_nocomments[:class_name_pos].rfind(</highlight><highlight class="stringliteral">&apos;class&apos;</highlight><highlight class="normal">),<sp/>original_file_content_nocomments[:class_name_pos].rfind(</highlight><highlight class="stringliteral">&apos;struct&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Adjust<sp/>for<sp/>the<sp/>indentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>use_indent<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>insert_pos<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>=<sp/>original_file_content[insert_pos-1]</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>char<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;\t&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_indent<sp/>+=<sp/>char</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert_pos<sp/>-=<sp/>1</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Construct<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>include_code<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>include_code<sp/>+=<sp/>use_indent</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ns<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>namespaces:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;}<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>include_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">*has_namespace</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>include_code<sp/>+=<sp/>use_indent<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;#define<sp/>ENUMS_DECLARED\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>include_code<sp/>+=<sp/>use_indent<sp/>+<sp/>include_line<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>include_code<sp/>+=<sp/>use_indent<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/>gb.abstract_typedefs_fname<sp/>+<sp/>cfg.header_extension)<sp/>+<sp/><sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>include_code<sp/>+=<sp/>use_indent<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/>gb.wrapper_typedefs_fname<sp/>+<sp/>cfg.header_extension)<sp/>+<sp/><sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>include_code<sp/>+=<sp/>use_indent</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ns<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>namespaces:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;namespace<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>ns<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>{<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>include_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">*has_namespace</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Register<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[original_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(insert_pos,<sp/>include_code)<sp/>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Register<sp/>include<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>includes[original_file_name].append(include_line)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>END:<sp/>addIncludesToOriginalClassFile<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>generateClassMemberInterface<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Generate<sp/>additional<sp/>member<sp/>functions<sp/>in<sp/>the<sp/>original<sp/>class:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>Abstract<sp/>class<sp/>versions<sp/>of<sp/>member<sp/>functions<sp/>that<sp/>make<sp/>use<sp/>of<sp/>loaded<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>Extra<sp/>versions<sp/>of<sp/>functions<sp/>that<sp/>use<sp/>default<sp/>value<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>Functions<sp/>for<sp/>returning<sp/>references<sp/>to<sp/>public<sp/>member<sp/>variables.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Declarations<sp/>go<sp/>in<sp/>the<sp/>original<sp/>class<sp/>header<sp/>while<sp/>implementations<sp/>go<sp/>in<sp/>a<sp/>separate<sp/>source<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">generateClassMemberInterface(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>namespaces,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_file_name,<sp/>original_file_content_nocomments,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_class_file_el,<sp/>extras_src_file_name,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_copy_constructor,<sp/>construct_assignment_operator):</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>class<sp/>name<sp/>position<sp/>in<sp/>the<sp/>original<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>class_name_pos<sp/>=<sp/>classutils.findClassNamePosition(class_el,<sp/>original_file_content_nocomments)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>lists<sp/>of<sp/>all<sp/>public,<sp/>&apos;non-artificial&apos;<sp/>members<sp/>of<sp/>the<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>member_methods<sp/><sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>member_variables<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>member_operators<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;members&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>class_el.keys():</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>mem_id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>class_el.get(</highlight><highlight class="stringliteral">&apos;members&apos;</highlight><highlight class="normal">).split():</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el<sp/>=<sp/>gb.id_dict[mem_id]</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;artificial&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>el.keys():</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>el.get(</highlight><highlight class="stringliteral">&apos;access&apos;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;public&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(el.tag<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;Method&apos;</highlight><highlight class="normal">):<sp/></highlight><highlight class="comment">#<sp/>and<sp/>(not<sp/>funcutils.ignoreFunction(el)):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member_methods.append(el)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(el.tag<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;OperatorMethod&apos;</highlight><highlight class="normal">):<sp/></highlight><highlight class="comment">#and<sp/>(not<sp/>funcutils.ignoreFunction(el)):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>funcutils.usesNativeType(el):</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member_operators.append(el)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(el.tag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;Field&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Variable&apos;</highlight><highlight class="normal">)):</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>classutils.isAcceptedMemberVariable(el):</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member_variables.append(el)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Determine<sp/>insert<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>rel_pos_start,<sp/>rel_pos_end<sp/>=<sp/>utils.getBracketPositions(original_file_content_nocomments[class_name_pos:],<sp/>delims=[</highlight><highlight class="stringliteral">&apos;{&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;}&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>class_body_start<sp/>=<sp/>class_name_pos<sp/>+<sp/>rel_pos_start</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>class_body_end<sp/><sp/><sp/>=<sp/>class_name_pos<sp/>+<sp/>rel_pos_end</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>insert_pos<sp/>=<sp/>class_body_end</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>code<sp/>for<sp/>wrapper<sp/>functions<sp/>for<sp/>each<sp/>each<sp/>member<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>declaration<sp/>goes<sp/>into<sp/>the<sp/>original<sp/>class<sp/>header,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>while<sp/>implementations<sp/>are<sp/>put<sp/>in<sp/>a<sp/>new<sp/>source<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>declaration_code<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>implementation_code<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>current_access<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>method_el<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>member_methods:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>need<sp/>to<sp/>generate<sp/>as<sp/>many<sp/>overloaded<sp/>versions<sp/>as<sp/>there<sp/>are<sp/>arguments<sp/>with<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_overloads<sp/>=<sp/>funcutils.numberOfDefaultArgs(method_el)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>for<sp/>native<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uses_native_type<sp/>=<sp/>funcutils.usesNativeType(method_el)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>no<sp/>native<sp/>types<sp/>are<sp/>used<sp/>and<sp/>no<sp/>arguments<sp/>have<sp/>default<sp/>values,<sp/>we<sp/>don&apos;t<sp/>need<sp/>a<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>uses_native_type)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(n_overloads<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>wrapper<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>remove_n_args<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_overloads+1):</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>that<sp/>function<sp/>is<sp/>acceptable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>funcutils.ignoreFunction(method_el,<sp/>remove_n_args=remove_n_args):</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remove_n_args==0)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>uses_native_type):</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>declaration<sp/>is<sp/>put<sp/>inside<sp/>the<sp/>original<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method_access<sp/>=<sp/>method_el.get(</highlight><highlight class="stringliteral">&apos;access&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>method_access<sp/>!=<sp/>current_access:</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>declaration_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*(len(namespaces)+1)*cfg.indent<sp/>+<sp/>method_access<sp/>+</highlight><highlight class="stringliteral">&apos;:\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_access<sp/>=<sp/>method_access</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>declaration_code<sp/>+=<sp/>classutils.constrWrapperFunction(method_el,<sp/>indent=cfg.indent,<sp/>n_indents=len(namespaces)+2,<sp/></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove_n_args=remove_n_args,<sp/>only_declaration=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>declaration_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>implementation<sp/>goes<sp/>into<sp/>a<sp/>new<sp/>source<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>implementation_code<sp/>+=<sp/>classutils.constrWrapperFunction(method_el,<sp/>indent=cfg.indent,<sp/>n_indents=0,<sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove_n_args=remove_n_args,<sp/>include_full_namespace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>implementation_code<sp/>+=<sp/>2*</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Register<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[original_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(insert_pos,<sp/>declaration_code)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[extras_src_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-1,<sp/>implementation_code)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>code<sp/>for<sp/>each<sp/>member<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>operator_declaration_code<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>operator_implementation_code<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>operator_el<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>member_operators:</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_access<sp/>=<sp/>operator_el.get(</highlight><highlight class="stringliteral">&apos;access&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>operator_access<sp/>!=<sp/>current_access:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_declaration_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*(len(namespaces)+1)*cfg.indent<sp/>+<sp/>operator_access<sp/>+</highlight><highlight class="stringliteral">&apos;:\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_access<sp/>=<sp/>operator_access</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>default<sp/>arguments<sp/>are<sp/>used,<sp/>we<sp/>need<sp/>several<sp/>overloads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_overloads<sp/>=<sp/>funcutils.numberOfDefaultArgs(operator_el)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>remove_n_args<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_overloads+1):</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Put<sp/>declaration<sp/>in<sp/>original<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_declaration_code<sp/>+=<sp/>classutils.constrWrapperFunction(operator_el,<sp/>indent=cfg.indent,<sp/>n_indents=len(namespaces)+2,<sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove_n_args=remove_n_args,<sp/>only_declaration=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_declaration_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Put<sp/>implementation<sp/>in<sp/>a<sp/>new<sp/>source<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_implementation_code<sp/>+=<sp/>classutils.constrWrapperFunction(operator_el,<sp/>indent=cfg.indent,<sp/>n_indents=0,<sp/></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove_n_args=remove_n_args,<sp/>include_full_namespace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_implementation_code<sp/>+=<sp/>2*</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Register<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[original_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(insert_pos,<sp/>operator_declaration_code)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[extras_src_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-1,<sp/>operator_implementation_code)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>a<sp/>reference-returning<sp/>method<sp/>for<sp/>each<sp/>(public)<sp/>member<sp/>variable:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>ref_func_declaration_code<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>ref_func_implementation_code<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(member_variables)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_indents<sp/>=<sp/>len(namespaces)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_func_declaration_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_func_declaration_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*cfg.indent*(n_indents+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;public:\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var_el<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>member_variables:</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Put<sp/>declaration<sp/>in<sp/>original<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_func_declaration_code<sp/>+=<sp/>classutils.constrVariableRefFunction(var_el,<sp/>virtual=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>indent=cfg.indent,<sp/>n_indents=n_indents+2,<sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only_declaration=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>add_return_type_suffix=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_func_declaration_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Put<sp/>implementation<sp/>in<sp/>a<sp/>new<sp/>source<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_func_implementation_code<sp/>+=<sp/>classutils.constrVariableRefFunction(var_el,<sp/>virtual=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>indent=cfg.indent,<sp/>n_indents=0,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_full_namespace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>add_return_type_suffix=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_func_implementation_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Register<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ref_func_declaration_code<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[original_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(insert_pos,<sp/>ref_func_declaration_code)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[extras_src_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-1,<sp/>ref_func_implementation_code)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>pointer-based<sp/>copy<sp/>and<sp/>assignment<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>class<sp/>contains<sp/>pure<sp/>virtual<sp/>members,<sp/>do<sp/>not<sp/>generate<sp/>any<sp/>factory<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>class_name[</highlight><highlight class="stringliteral">&apos;long_templ&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.contains_pure_virtual_members:</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Contains<sp/>pure<sp/>virtual<sp/>member<sp/>functions.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infomsg.NoPointerCopyAndAssignmentFunctions(class_name[</highlight><highlight class="stringliteral">&apos;long_templ&apos;</highlight><highlight class="normal">],<sp/>reason).printMessage()</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_indents<sp/>=<sp/>len(namespaces)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_declaration_code<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_implementation_code<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>has_copy_constructor<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>construct_assignment_operator:</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_declaration_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*cfg.indent*(n_indents+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;public:\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>has_copy_constructor:</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_declaration_code<sp/>+=<sp/>classutils.constrPtrCopyFunc(class_el,<sp/>abstr_class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">],<sp/>class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">],<sp/>virtual=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>indent=cfg.indent,<sp/>n_indents=n_indents+2,<sp/>only_declaration=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_declaration_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>construct_assignment_operator:</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_declaration_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*cfg.indent*(n_indents+2)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;using<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>abstr_class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;::pointer_assign&apos;</highlight><highlight class="normal"><sp/>+<sp/>gb.code_suffix<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_declaration_code<sp/>+=<sp/>classutils.constrPtrAssignFunc(class_el,<sp/>abstr_class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">],<sp/>class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">],<sp/>virtual=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>indent=cfg.indent,<sp/>n_indents=n_indents+2,<sp/>only_declaration=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_implementation_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.backend_types_basedir,<sp/>gb.gambit_backend_name_full,</highlight><highlight class="stringliteral">&apos;identification.hpp&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_implementation_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>has_copy_constructor:</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_implementation_code<sp/>+=<sp/>classutils.constrPtrCopyFunc(class_el,<sp/>abstr_class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">],<sp/>class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">],<sp/>virtual=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>indent=cfg.indent,<sp/>n_indents=0,<sp/>include_full_namespace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_implementation_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>construct_assignment_operator:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_implementation_code<sp/>+=<sp/>classutils.constrPtrAssignFunc(class_el,<sp/>abstr_class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">],<sp/>class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">],<sp/>virtual=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>indent=cfg.indent,<sp/>n_indents=0,<sp/>include_full_namespace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_implementation_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_implementation_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/></highlight><highlight class="stringliteral">&apos;backend_undefs.hpp&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Generate<sp/>include<sp/>statements<sp/>for<sp/>the<sp/>new<sp/>source<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_statements<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_statements<sp/>+=<sp/>utils.getIncludeStatements(class_el,<sp/>convert_loaded_to=</highlight><highlight class="stringliteral">&apos;none&apos;</highlight><highlight class="normal">,<sp/>input_element=</highlight><highlight class="stringliteral">&apos;class&apos;</highlight><highlight class="normal">,<sp/>use_full_path=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>forward_declared=</highlight><highlight class="stringliteral">&apos;only&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_statements<sp/>+=<sp/>utils.getIncludeStatements(class_el,<sp/>convert_loaded_to=</highlight><highlight class="stringliteral">&apos;wrapper&apos;</highlight><highlight class="normal">,<sp/>input_element=</highlight><highlight class="stringliteral">&apos;class&apos;</highlight><highlight class="normal">,<sp/>use_full_path=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>forward_declared=</highlight><highlight class="stringliteral">&apos;exclude&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_statements.append(</highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/>gb.abstract_typedefs_fname<sp/>+<sp/>cfg.header_extension)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_statements.append(</highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/>gb.wrapper_typedefs_fname<sp/>+<sp/>cfg.header_extension)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>utils.isHeader(original_class_file_el):</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_path<sp/>=<sp/>utils.shortenHeaderPath(original_file_name)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_statements.append(<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>use_path<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_statements<sp/>=<sp/>list(<sp/>OrderedDict.fromkeys(include_statements)<sp/>)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_statements<sp/>=<sp/>utils.orderIncludeStatements(include_statements)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_statements_code<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">.join(include_statements)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>Register<sp/>the<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[original_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(insert_pos,<sp/>ptr_declaration_code)<sp/>)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[extras_src_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(0,<sp/>include_statements_code)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[extras_src_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-1,<sp/>ptr_implementation_code)<sp/>)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>END:<sp/>generateClassMemberInterface<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>generateFactoryFunctions<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Generate<sp/>factory<sp/>functions<sp/>source<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">generateFactoryFunctions(class_el,<sp/>class_name,<sp/>is_template):</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>class<sp/>contains<sp/>pure<sp/>virtual<sp/>members,<sp/>do<sp/>not<sp/>generate<sp/>any<sp/>factory<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>class_name[</highlight><highlight class="stringliteral">&apos;long_templ&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.contains_pure_virtual_members:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Contains<sp/>pure<sp/>virtual<sp/>member<sp/>functions.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infomsg.NoFactoryFunctions(class_name[</highlight><highlight class="stringliteral">&apos;long_templ&apos;</highlight><highlight class="normal">],<sp/>reason).printMessage()</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>factory<sp/>file<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>factory_file_content<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_template:</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_template_types<sp/>=<sp/>utils.getSpecTemplateTypes(class_el)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factory_file_content<sp/>+=<sp/>classutils.constrFactoryFunctionCode(class_el,<sp/>class_name,<sp/>indent=cfg.indent,<sp/>template_types=spec_template_types,<sp/>skip_copy_constructors=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>use_wrapper_return=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>use_wrapper_args=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factory_file_content<sp/>+=<sp/>classutils.constrFactoryFunctionCode(class_el,<sp/>class_name,<sp/>indent=cfg.indent,<sp/>skip_copy_constructors=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>use_wrapper_return=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>use_wrapper_args=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>factory_file_content<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>no<sp/>file<sp/>content<sp/>has<sp/>been<sp/>generated<sp/>(no<sp/>public<sp/>constructors),<sp/>return<sp/>without<sp/>doing<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>factory_file_content.strip()<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>factory<sp/>file<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>dir_name<sp/>=<sp/>gb.boss_output_dir</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>factory_file_name<sp/>=<sp/>os.path.join(dir_name,<sp/>gb.factory_file_prefix<sp/>+<sp/>class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">]<sp/>+<sp/>cfg.source_extension)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Register<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>factory_file_name<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[factory_file_name]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">False</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[factory_file_name][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-1,<sp/>factory_file_content)<sp/>)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Register<sp/>that<sp/>this<sp/>class<sp/>has<sp/>a<sp/>factory<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.class_factory_file_dict[class_name[</highlight><highlight class="stringliteral">&apos;long_templ&apos;</highlight><highlight class="normal">]]<sp/>=<sp/>factory_file_name</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>END:<sp/>generateFactoryFunctions<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>generateWrapperHeader<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Generate<sp/>a<sp/>header<sp/>containing<sp/>the<sp/>GAMBIT<sp/>wrapper<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">generateWrapperHeader(class_el,<sp/>class_name,<sp/>abstr_class_name,<sp/>namespaces,<sp/>short_abstr_class_fname,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_assignment_operator,<sp/>has_copy_constructor,<sp/>copy_constructor_id):</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>file<sp/>names<sp/>and<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_decl_header_fname<sp/>=<sp/>gb.new_header_files[class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]][</highlight><highlight class="stringliteral">&apos;wrapper_decl&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_def_header_fname<sp/><sp/>=<sp/>gb.new_header_files[class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]][</highlight><highlight class="stringliteral">&apos;wrapper_def&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_header_fname<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>gb.new_header_files[class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]][</highlight><highlight class="stringliteral">&apos;wrapper&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_decl_header_path<sp/>=<sp/>os.path.join(gb.boss_output_dir,<sp/>wrapper_decl_header_fname)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_def_header_path<sp/><sp/>=<sp/>os.path.join(gb.boss_output_dir,<sp/>wrapper_def_header_fname)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_header_path<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>os.path.join(gb.boss_output_dir,<sp/>wrapper_header_fname)</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>code<sp/>for<sp/>the<sp/>declaration<sp/>and<sp/>implementation<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_decl_header_content,<sp/>wrapper_def_header_content<sp/>=<sp/>classutils.generateWrapperHeaderCode(class_el,<sp/>class_name,<sp/>abstr_class_name,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaces,<sp/>short_abstr_class_fname,<sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_assignment_operator,<sp/>has_copy_constructor,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_constructor_id=copy_constructor_id)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Code<sp/>for<sp/>the<sp/>overall<sp/>header<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_decl_header_include_path<sp/>=<sp/>gb.new_header_files[class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]][</highlight><highlight class="stringliteral">&apos;wrapper_decl&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_def_header_include_path<sp/><sp/>=<sp/>gb.new_header_files[class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]][</highlight><highlight class="stringliteral">&apos;wrapper_def&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_header_content<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_header_content<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>wrapper_decl_header_include_path<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_header_content<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>wrapper_def_header_include_path<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_header_content<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Register<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>wrapper_decl_header_path<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[wrapper_decl_header_path]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">True</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[wrapper_decl_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(0,<sp/>wrapper_decl_header_content)<sp/>)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>wrapper_def_header_path<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[wrapper_def_header_path]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">True</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[wrapper_def_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(0,<sp/>wrapper_def_header_content)<sp/>)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>wrapper_header_path<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[wrapper_header_path]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">True</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[wrapper_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(0,<sp/>wrapper_header_content)<sp/>)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>END:<sp/>generateWrapperHeader<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>constrWrapperUtils<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Construct<sp/>functions<sp/>for<sp/>dealing<sp/>with<sp/>wrapper<sp/>pointer<sp/>from<sp/>abstract<sp/>class<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(&apos;wrapper_creator&apos;,<sp/>&apos;wrapper_deleter&apos;,<sp/>&apos;set_delete_BEptr&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">constrWrapperUtils(class_name):</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_class_name<sp/>=<sp/>classutils.toWrapperType(class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">],<sp/>include_namespace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>abstr_class_name<sp/>=<sp/>classutils.toAbstractType(class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">],<sp/>include_namespace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Include<sp/>statement<sp/>for<sp/>the<sp/>header<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_include_statement_decl<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>gb.new_header_files[class_name[</highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">]][</highlight><highlight class="stringliteral">&apos;wrapper_fullpath&apos;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_decl<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>wrapper_creator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Function<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_decl<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_decl<sp/>+=<sp/>wrapper_class_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;*<sp/>wrapper_creator(&apos;</highlight><highlight class="normal"><sp/>+<sp/>abstr_class_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;*);\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Function<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/>wrapper_class_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;*<sp/>wrapper_creator(&apos;</highlight><highlight class="normal"><sp/>+<sp/>abstr_class_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;*<sp/>abs_ptr)\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;{\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*cfg.indent<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;return<sp/>new<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>wrapper_class_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;(abs_ptr);\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;}\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>wrapper_creator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Function<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>wr_utils_decl<sp/><sp/>=<sp/>&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>wr_utils_decl<sp/>+=<sp/>&apos;void<sp/>wrapper_creator(&apos;<sp/>+<sp/>abstr_class_name<sp/>+<sp/>&apos;*);\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Function<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>wr_utils_impl<sp/><sp/>=<sp/>&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>wr_utils_impl<sp/>+=<sp/>&apos;void<sp/>wrapper_creator(&apos;<sp/>+<sp/>abstr_class_name<sp/>+<sp/>&apos;*<sp/>abs_ptr)\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>wr_utils_impl<sp/>+=<sp/>&apos;{\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>wr_utils_impl<sp/>+=<sp/>&apos;<sp/>&apos;*cfg.indent<sp/>+<sp/>&apos;abs_ptr-&gt;set_wptr(<sp/>new<sp/>&apos;<sp/>+<sp/>wrapper_class_name<sp/>+<sp/>&apos;(abs_ptr)<sp/>);\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>wr_utils_impl<sp/>+=<sp/>&apos;}\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>wrapper_deleter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Function<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_decl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_decl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;void<sp/>wrapper_deleter(&apos;</highlight><highlight class="normal"><sp/>+<sp/>wrapper_class_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;*);\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Function<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;void<sp/>wrapper_deleter(&apos;</highlight><highlight class="normal"><sp/>+<sp/>wrapper_class_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;*<sp/>wptr)\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;{\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*cfg.indent<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;wptr-&gt;set_delete_BEptr(false);\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*cfg.indent<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;delete<sp/>wptr;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;}\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>set_delete_BEptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Function<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_decl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_decl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;void<sp/>set_delete_BEptr(&apos;</highlight><highlight class="normal"><sp/>+<sp/>wrapper_class_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;*,<sp/>bool);\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Function<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;void<sp/>set_delete_BEptr(&apos;</highlight><highlight class="normal"><sp/>+<sp/>wrapper_class_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;*<sp/>wptr,<sp/>bool<sp/>setting)\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;{\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*cfg.indent<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;wptr-&gt;set_delete_BEptr(setting);\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_utils_impl<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;}\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Register<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>w_creator_header_path<sp/>=<sp/>os.path.join(gb.boss_output_dir,<sp/>gb.wrapper_utils_fname<sp/>+<sp/>cfg.header_extension)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>w_creator_source_path<sp/>=<sp/>os.path.join(gb.boss_output_dir,<sp/>gb.wrapper_utils_fname<sp/>+<sp/>cfg.source_extension)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>w_creator_header_path<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[w_creator_header_path]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">True</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[w_creator_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(0,<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/>gb.wrapper_typedefs_fname<sp/>+<sp/>cfg.header_extension)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[w_creator_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(0,<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/>gb.abstract_typedefs_fname<sp/>+<sp/>cfg.header_extension)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[w_creator_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(0,<sp/>wrapper_include_statement_decl)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[w_creator_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-1,<sp/>wr_utils_decl)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>w_creator_source_path<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_creator_include<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/>gb.wrapper_utils_fname<sp/>+<sp/>cfg.header_extension)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[w_creator_source_path]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[(0,w_creator_include)],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">False</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[w_creator_source_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-1,<sp/>wr_utils_impl)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>END:<sp/>constrWrapperUtils<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>addAbstractTypedefs<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Add<sp/>typedef<sp/>to<sp/>&apos;abstracttypedefs.hpp&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addAbstractTypedefs(abstr_class_name,<sp/>namespaces):</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>indent<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*cfg.indent*len(namespaces)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>abstr_typedef_code<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>abstr_typedef_code<sp/>+=<sp/>utils.constrNamespace(namespaces,<sp/></highlight><highlight class="stringliteral">&apos;open&apos;</highlight><highlight class="normal">,<sp/>indent=cfg.indent)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_namespace_list<sp/>=<sp/>[gb.gambit_backend_namespace]<sp/>+<sp/>namespaces</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>abstr_typedef_code<sp/>+=<sp/>indent<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;typedef<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;::&apos;</highlight><highlight class="normal">.join(temp_namespace_list)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;::&apos;</highlight><highlight class="normal"><sp/>+<sp/>abstr_class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>abstr_class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>abstr_typedef_code<sp/>+=<sp/>utils.constrNamespace(namespaces,<sp/></highlight><highlight class="stringliteral">&apos;close&apos;</highlight><highlight class="normal">,<sp/>indent=cfg.indent)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>abstr_typedef_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>frw_decl_include_statement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.backend_types_basedir,<sp/>gb.gambit_backend_name_full,<sp/>gb.frwd_decls_abs_fname<sp/>+<sp/>cfg.header_extension)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>identification_include_statement<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.backend_types_basedir,<sp/>gb.gambit_backend_name_full,<sp/></highlight><highlight class="stringliteral">&apos;identification.hpp&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>undef_include_statement<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/></highlight><highlight class="stringliteral">&apos;backend_undefs.hpp&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>abstracts_typedefs_header_path<sp/>=<sp/>os.path.join(gb.boss_output_dir,<sp/>gb.abstract_typedefs_fname<sp/>+<sp/>cfg.header_extension)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>abstracts_typedefs_header_path<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[abstracts_typedefs_header_path]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">False</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[abstracts_typedefs_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(0,<sp/><sp/>frw_decl_include_statement)<sp/>)<sp/></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[abstracts_typedefs_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(len(frw_decl_include_statement),<sp/>identification_include_statement)<sp/>)<sp/></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[abstracts_typedefs_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-1,<sp/>undef_include_statement)<sp/>)<sp/></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[abstracts_typedefs_header_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-len(undef_include_statement),<sp/>abstr_typedef_code)<sp/>)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>END:<sp/>addAbstractTypedefs<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>addWrapperTypedefs<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Add<sp/>typedef<sp/>to<sp/>&apos;wrappertypdefs.hpp&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addWrapperTypedefs(class_name,<sp/>namespaces):</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>short_wrapper_class_name<sp/>=<sp/>classutils.toWrapperType(class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>indent<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">*cfg.indent*len(namespaces)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_typedef_code<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_typedef_code<sp/>+=<sp/>utils.constrNamespace(namespaces,</highlight><highlight class="stringliteral">&apos;open&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_namespace_list<sp/>=<sp/>[gb.gambit_backend_namespace]<sp/>+<sp/>namespaces</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_typedef_code<sp/>+=<sp/>indent<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;typedef<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;::&apos;</highlight><highlight class="normal">.join(temp_namespace_list)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;::&apos;</highlight><highlight class="normal"><sp/>+<sp/>class_name[</highlight><highlight class="stringliteral">&apos;short&apos;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>short_wrapper_class_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_typedef_code<sp/>+=<sp/>utils.constrNamespace(namespaces,</highlight><highlight class="stringliteral">&apos;close&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_typedef_code<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>frw_decl_include_statement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.backend_types_basedir,<sp/>gb.gambit_backend_name_full,<sp/>gb.frwd_decls_wrp_fname<sp/>+<sp/>cfg.header_extension)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>identification_include_statement<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.backend_types_basedir,<sp/>gb.gambit_backend_name_full,<sp/></highlight><highlight class="stringliteral">&apos;identification.hpp&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>undef_include_statement<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;#include<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>os.path.join(gb.gambit_backend_incl_dir,<sp/></highlight><highlight class="stringliteral">&apos;backend_undefs.hpp&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapper_typedefs_path<sp/>=<sp/>os.path.join(gb.boss_output_dir,<sp/>gb.wrapper_typedefs_fname<sp/>+<sp/>cfg.header_extension)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>wrapper_typedefs_path<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gb.new_code.keys():</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[wrapper_typedefs_path]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&apos;add_include_guard&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">False</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[wrapper_typedefs_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(0,<sp/><sp/>frw_decl_include_statement)<sp/>)<sp/></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[wrapper_typedefs_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(len(frw_decl_include_statement),<sp/>identification_include_statement)<sp/>)<sp/></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gb.new_code[wrapper_typedefs_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-1,<sp/>undef_include_statement)<sp/>)<sp/></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>gb.new_code[wrapper_typedefs_path][</highlight><highlight class="stringliteral">&apos;code_tuples&apos;</highlight><highlight class="normal">].append(<sp/>(-len(undef_include_statement),<sp/>wrapper_typedef_code)<sp/>)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">#<sp/>======<sp/>END:<sp/>addWrapperTypedefs<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/scripts/BOSS/modules/classparse.py"/>
  </compounddef>
</doxygen>
