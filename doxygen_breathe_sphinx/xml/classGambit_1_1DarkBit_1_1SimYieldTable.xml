<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classGambit_1_1DarkBit_1_1SimYieldTable" kind="class" language="C++" prot="public">
    <compoundname>Gambit::DarkBit::SimYieldTable</compoundname>
    <includes refid="DarkBit__types_8hpp" local="no">DarkBit_types.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGambit_1_1DarkBit_1_1SimYieldTable_1aa74e53892cea3100108da86bcf4d9082" prot="private" static="no" mutable="no">
        <type><ref refid="structGambit_1_1DarkBit_1_1SimYieldChannel" kindref="compound">SimYieldChannel</ref></type>
        <definition>SimYieldChannel Gambit::DarkBit::SimYieldTable::dummy_channel</definition>
        <argsstring></argsstring>
        <name>dummy_channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="195" column="29" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a2ddcde241739b73143661b4acdc8ce1d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structGambit_1_1DarkBit_1_1SimYieldChannel" kindref="compound">SimYieldChannel</ref> &gt;</type>
        <definition>std::vector&lt;SimYieldChannel&gt; Gambit::DarkBit::SimYieldTable::channel_list</definition>
        <argsstring></argsstring>
        <name>channel_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="196" column="25" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1aac8814e27bf17c5c2d2a07364f7163a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gambit::DarkBit::SimYieldTable::SimYieldTable</definition>
        <argsstring>()</argsstring>
        <name>SimYieldTable</name>
        <briefdescription>
<para>Sim yield table dummy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="178" column="13" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a40e7a269a5e70cfac942ad1fd461cf4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::SimYieldTable::addChannel</definition>
        <argsstring>(daFunk::Funk dNdE, const std::string &amp;p1, const std::string &amp;p2, const std::string &amp;finalState, double Ecm_min, double Ecm_max, safe_ptr&lt; Options &gt; runOptions)</argsstring>
        <name>addChannel</name>
        <param>
          <type>daFunk::Funk</type>
          <declname>dNdE</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ecm_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ecm_max</declname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr</ref>&lt; Options &gt;</type>
          <declname>runOptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="179" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1ad81559091e118c32d5b6ff8c7ecfe2f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::SimYieldTable::addChannel</definition>
        <argsstring>(daFunk::Funk dNdE, const std::string &amp;p1, const std::string &amp;finalState, double Ecm_min, double Ecm_max, safe_ptr&lt; Options &gt; runOptions)</argsstring>
        <name>addChannel</name>
        <param>
          <type>daFunk::Funk</type>
          <declname>dNdE</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ecm_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ecm_max</declname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr</ref>&lt; Options &gt;</type>
          <declname>runOptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="180" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a77714ea6ecfb16e125e94354f5f20d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::SimYieldTable::addChannel</definition>
        <argsstring>(SimYieldChannel channel)</argsstring>
        <name>addChannel</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1SimYieldChannel" kindref="compound">SimYieldChannel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="181" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="182" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a6ca8e971e5424aa026dcf33869ac7fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::SimYieldTable::replaceFinalState</definition>
        <argsstring>(const std::string &amp;oldFinalState, const std::string &amp;newFinalState)</argsstring>
        <name>replaceFinalState</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>oldFinalState</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>newFinalState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="182" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="188" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a4d5d89afb3c35eb1d781b71d3d8f64be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::SimYieldTable::donateChannels</definition>
        <argsstring>(SimYieldTable &amp;receiver) const</argsstring>
        <name>donateChannels</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>receiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="183" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a8464462445552574a7900718e85ac21f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::DarkBit::SimYieldTable::hasChannel</definition>
        <argsstring>(const std::string &amp;p1, const std::string &amp;p2, const std::string &amp;finalState) const</argsstring>
        <name>hasChannel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="184" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a919c57f283b6f946834d55820d7cb803" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::DarkBit::SimYieldTable::hasChannel</definition>
        <argsstring>(const std::string &amp;p1, const std::string &amp;finalState) const</argsstring>
        <name>hasChannel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="185" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a13c91a7ac79f0836926f48f773b5d25a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::DarkBit::SimYieldTable::hasAnyChannel</definition>
        <argsstring>(const std::string &amp;p1) const</argsstring>
        <name>hasAnyChannel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="186" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1ab506f19a8ef3ea70b8ab6ea72dfbc34a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::DarkBit::SimYieldTable::hasAnyChannel</definition>
        <argsstring>(const std::string &amp;p1, const std::string &amp;p2) const</argsstring>
        <name>hasAnyChannel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="187" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="216" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a6b34bb0267dc57956f06177f3e116118" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structGambit_1_1DarkBit_1_1SimYieldChannel" kindref="compound">SimYieldChannel</ref> &amp;</type>
        <definition>const SimYieldChannel &amp; Gambit::DarkBit::SimYieldTable::getChannel</definition>
        <argsstring>(const std::string &amp;p1, const std::string &amp;p2, const std::string &amp;finalState) const</argsstring>
        <name>getChannel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="188" column="35" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="229" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a90f877f3b15ce1d155286aea6f7bcef4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>daFunk::Funk</type>
        <definition>daFunk::Funk Gambit::DarkBit::SimYieldTable::operator()</definition>
        <argsstring>(const std::string &amp;p1, const std::string &amp;p2, const std::string &amp;finalState, double Ecm) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ecm</declname>
        </param>
        <briefdescription>
<para>Retrieve simyield table entries at given center of mass energy (GeV) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="189" column="26" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1af146558fa11c11a4699b9dd5b0b1560d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>daFunk::Funk</type>
        <definition>daFunk::Funk Gambit::DarkBit::SimYieldTable::operator()</definition>
        <argsstring>(const std::string &amp;p1, const std::string &amp;finalState, double Ecm) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ecm</declname>
        </param>
        <briefdescription>
<para>Retrieve simyield table entries at given center of mass energy (GeV) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="190" column="26" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a8a7468da577c03f6021cb1d51c1e8b60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>daFunk::Funk</type>
        <definition>daFunk::Funk Gambit::DarkBit::SimYieldTable::operator()</definition>
        <argsstring>(const std::string &amp;p1, const std::string &amp;p2, const std::string &amp;finalState) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <briefdescription>
<para>Retrieve simyield table entries at given center of mass energy (GeV) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="191" column="26" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="253" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1af60220ddff00540242ee95fdcd874112" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>daFunk::Funk</type>
        <definition>daFunk::Funk Gambit::DarkBit::SimYieldTable::operator()</definition>
        <argsstring>(const std::string &amp;p1, const std::string &amp;finalState) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="192" column="26" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="264" bodyend="267"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1af38b19d77c4b78155ec1786093f664a9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gambit::DarkBit::SimYieldTable::findChannel</definition>
        <argsstring>(const std::string &amp;p1, const std::string &amp;p2, const std::string &amp;finalState) const</argsstring>
        <name>findChannel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="197" column="17" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="269" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DarkBit_1_1SimYieldTable_1a6ecde6268ee8bd835ac17d2114521dfd" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="DarkBit__types_8hpp_1ae515a362ebed7788d58aabd4b9a6f944" kindref="member">SimYieldChannelCheck</ref></type>
        <definition>SimYieldChannelCheck Gambit::DarkBit::SimYieldTable::checkChannel</definition>
        <argsstring>(const std::string &amp;p1, const std::string &amp;p2, const std::string &amp;finalState) const</argsstring>
        <name>checkChannel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="198" column="34" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="282" bodyend="307"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Channel container Object containing tabularized yields for particle decay and two-body final states. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="176" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" bodystart="175" bodyend="199"/>
    <listofallmembers>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a40e7a269a5e70cfac942ad1fd461cf4a" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>addChannel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1ad81559091e118c32d5b6ff8c7ecfe2f1" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>addChannel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a77714ea6ecfb16e125e94354f5f20d9d" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>addChannel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a2ddcde241739b73143661b4acdc8ce1d" prot="private" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>channel_list</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a6ecde6268ee8bd835ac17d2114521dfd" prot="private" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>checkChannel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a4d5d89afb3c35eb1d781b71d3d8f64be" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>donateChannels</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1aa74e53892cea3100108da86bcf4d9082" prot="private" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>dummy_channel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1af38b19d77c4b78155ec1786093f664a9" prot="private" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>findChannel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a6b34bb0267dc57956f06177f3e116118" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>getChannel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a13c91a7ac79f0836926f48f773b5d25a" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>hasAnyChannel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1ab506f19a8ef3ea70b8ab6ea72dfbc34a" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>hasAnyChannel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a8464462445552574a7900718e85ac21f" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>hasChannel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a919c57f283b6f946834d55820d7cb803" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>hasChannel</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a90f877f3b15ce1d155286aea6f7bcef4" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>operator()</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1af146558fa11c11a4699b9dd5b0b1560d" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>operator()</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a8a7468da577c03f6021cb1d51c1e8b60" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>operator()</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1af60220ddff00540242ee95fdcd874112" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>operator()</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1a6ca8e971e5424aa026dcf33869ac7fef" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>replaceFinalState</name></member>
      <member refid="classGambit_1_1DarkBit_1_1SimYieldTable_1aac8814e27bf17c5c2d2a07364f7163a9" prot="public" virt="non-virtual"><scope>Gambit::DarkBit::SimYieldTable</scope><name>SimYieldTable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
