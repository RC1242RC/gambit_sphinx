<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classMontePythonLike_1_1Likelihood" kind="class" language="Python" prot="public">
    <compoundname>MontePythonLike::Likelihood</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
    <derivedcompoundref refid="classMontePythonLike_1_1Likelihood__clik" prot="public" virt="non-virtual">MontePythonLike.Likelihood_clik</derivedcompoundref>
    <derivedcompoundref refid="classMontePythonLike_1_1Likelihood__clocks" prot="public" virt="non-virtual">MontePythonLike.Likelihood_clocks</derivedcompoundref>
    <derivedcompoundref refid="classMontePythonLike_1_1Likelihood__isw" prot="public" virt="non-virtual">MontePythonLike.Likelihood_isw</derivedcompoundref>
    <derivedcompoundref refid="classMontePythonLike_1_1Likelihood__mock__cmb" prot="public" virt="non-virtual">MontePythonLike.Likelihood_mock_cmb</derivedcompoundref>
    <derivedcompoundref refid="classMontePythonLike_1_1Likelihood__mpk" prot="public" virt="non-virtual">MontePythonLike.Likelihood_mpk</derivedcompoundref>
    <derivedcompoundref refid="classMontePythonLike_1_1Likelihood__newdat" prot="public" virt="non-virtual">MontePythonLike.Likelihood_newdat</derivedcompoundref>
    <derivedcompoundref refid="classMontePythonLike_1_1Likelihood__prior" prot="public" virt="non-virtual">MontePythonLike.Likelihood_prior</derivedcompoundref>
    <derivedcompoundref refid="classMontePythonLike_1_1Likelihood__sd" prot="public" virt="non-virtual">MontePythonLike.Likelihood_sd</derivedcompoundref>
    <derivedcompoundref refid="classMontePythonLike_1_1Likelihood__sn" prot="public" virt="non-virtual">MontePythonLike.Likelihood_sn</derivedcompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" prot="public" static="no" mutable="no">
        <type></type>
        <definition>MontePythonLike.Likelihood::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="59" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMontePythonLike_1_1Likelihood_1affd984f54083d2657a384fd6c2351203" prot="public" static="no" mutable="no">
        <type></type>
        <definition>MontePythonLike.Likelihood::folder</definition>
        <argsstring></argsstring>
        <name>folder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="60" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>MontePythonLike.Likelihood::data_directory</definition>
        <argsstring></argsstring>
        <name>data_directory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="73" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMontePythonLike_1_1Likelihood_1ae9bf5af937608f0cc8d715aaeab46333" prot="public" static="no" mutable="no">
        <type></type>
        <definition>MontePythonLike.Likelihood::default_values</definition>
        <argsstring></argsstring>
        <name>default_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="77" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMontePythonLike_1_1Likelihood_1acf6becb7edae22da01cbbde936c343eb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>MontePythonLike.Likelihood::need_update</definition>
        <argsstring></argsstring>
        <name>need_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="89" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" prot="public" static="no" mutable="no">
        <type></type>
        <definition>MontePythonLike.Likelihood::use_nuisance</definition>
        <argsstring></argsstring>
        <name>use_nuisance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="94" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" prot="public" static="no" mutable="no">
        <type></type>
        <definition>MontePythonLike.Likelihood::nuisance</definition>
        <argsstring></argsstring>
        <name>nuisance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="95" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMontePythonLike_1_1Likelihood_1a9b3ab577e3c9ab16a7254579755078ee" prot="public" static="no" mutable="no">
        <type></type>
        <definition>MontePythonLike.Likelihood::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="167" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMontePythonLike_1_1Likelihood_1aa6c68f2868da79f600c9a1fdc912e799" prot="public" static="no" mutable="no">
        <type></type>
        <definition>MontePythonLike.Likelihood::dictionary</definition>
        <argsstring></argsstring>
        <name>dictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="168" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a9f7492f4aacddc71d387cd98933a20db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.__init__</definition>
        <argsstring>(self, path, data, command_line)</argsstring>
        <name>__init__</name>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__newdat_1a3e4ad84990e9bf3df24cd0d234d3ec85">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__newdat_1a3e4ad84990e9bf3df24cd0d234d3ec85">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clik_1adb5288dd762e47bc3b63944d2ed02539">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clik_1adb5288dd762e47bc3b63944d2ed02539">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a1d2a1eb7dd6e3f84462ad04cb77d62c3">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a1d2a1eb7dd6e3f84462ad04cb77d62c3">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__sd_1ab39a4dbedbec481199b92eb43e604cde">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__sn_1a5a2856ebe1dfd5e0b3d83a5a132d142f">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clocks_1a4b547140b3a3d1839380f675ca89172c">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__isw_1a525b36e44eb86f63040c6f77f2077ebf">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__sn_1a5a2856ebe1dfd5e0b3d83a5a132d142f">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clocks_1a4b547140b3a3d1839380f675ca89172c">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__isw_1a525b36e44eb86f63040c6f77f2077ebf">__init__</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>path</type>
          <defname>path</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <param>
          <type>command_line</type>
          <defname>command_line</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>It copies the content of self.path from the initialization routine of
the :class:`Data &lt;data.Data&gt;` class, and defines a handful of useful
methods, that every likelihood might need.

If the nuisance parameters required to compute this likelihood are not
defined (either fixed or varying), the code will stop.

Parameters
----------
data : class
    Initialized instance of :class:`Data &lt;data.Data&gt;`
command_line : NameSpace
    NameSpace containing the command line arguments</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="41" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="41" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a1bd59854b9f84f9bf89641bf981b3493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.loglkl</definition>
        <argsstring>(self, cosmo, data)</argsstring>
        <name>loglkl</name>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__newdat_1a0ee47a3063871142b7f5257f4859af56">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__newdat_1a0ee47a3063871142b7f5257f4859af56">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clik_1a91692d10242ffe788ee793a550851405">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clik_1a91692d10242ffe788ee793a550851405">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a581ceae56227e19bbaf22c9cde582f4f">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a581ceae56227e19bbaf22c9cde582f4f">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__sd_1a98b95cced9373ac46b222e20d2620965">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mpk_1aa24e6767b1d59fc6bb081056dff92697">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mpk_1aa24e6767b1d59fc6bb081056dff92697">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clocks_1a689ff446e16d03a7d24f97437dd7bc59">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clocks_1a689ff446e16d03a7d24f97437dd7bc59">loglkl</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>cosmo</type>
          <defname>cosmo</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Placeholder to remind that this function needs to be defined for a
new likelihood.

Raises
------
NotImplementedError</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="107" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="107" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a06115ca87159872058c023f95791dd30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.raise_fiducial_model_err</definition>
        <argsstring>(self)</argsstring>
        <name>raise_fiducial_model_err</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>(JR) for use with GAMBIT: GAMBIT does not have an initial best-fit guess 
and the practice of erasing the cosmo container and refilling it does not 
work in the GAMBIT interface. Hence, potential fiducial model parameters
that likelihoods may need have to be provided. 
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="120" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="120" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a18aba084dc45c091734638bbdee49592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.read_from_file</definition>
        <argsstring>(self, path, data, command_line)</argsstring>
        <name>read_from_file</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>path</type>
          <defname>path</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <param>
          <type>command_line</type>
          <defname>command_line</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Extract the information from the log.param concerning this likelihood.

If the log.param is used, check that at least one item for each
likelihood is recovered. Otherwise, it means the log.param does not
contain information on the likelihood. This happens when the first run
fails early, before calling the likelihoods, and the program did not
log the information. This check might not be completely secure, but it
is better than nothing.

.. warning::

    This checks relies on the fact that a likelihood should always have
    at least **one** line of code written in the likelihood.data file.
    This should be always true, but in case a run fails with the error
    message described below, think about it.

.. warning::

    As of version 2.0.2, you can specify likelihood options in the
    parameter file. They have complete priority over the ones specified
    in the `likelihood.data` file, and it will be reflected in the
    `log.param` file.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="137" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="137" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1ac1ff5b8bdb6b8b48db3fbd216f166bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.get_cl</definition>
        <argsstring>(self, cosmo, l_max=-1)</argsstring>
        <name>get_cl</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>cosmo</type>
          <defname>cosmo</defname>
        </param>
        <param>
          <type>l_max</type>
          <defname>l_max</defname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Return the :math:`C_{\ell}` from the cosmological code in
:math:`\mu {\\rm K}^2`</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="211" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="211" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1ae7c283d2d9fbd1592cbd27e35d5554cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.get_unlensed_cl</definition>
        <argsstring>(self, cosmo, l_max=-1)</argsstring>
        <name>get_unlensed_cl</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>cosmo</type>
          <defname>cosmo</defname>
        </param>
        <param>
          <type>l_max</type>
          <defname>l_max</defname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Return the :math:`C_{\ell}` from the cosmological code in
:math:`\mu {\\rm K}^2`</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="231" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="231" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.need_cosmo_arguments</definition>
        <argsstring>(self, data, dictionary)</argsstring>
        <name>need_cosmo_arguments</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <param>
          <type>dictionary</type>
          <defname>dictionary</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Ensure that the arguments of dictionary are defined to the correct
value in the cosmological code

.. warning::

    So far there is no way to enforce a parameter where `smaller is
    better`. A bigger value will always overried any smaller one
    (`cl_max`, etc...)

Parameters
----------
data : dict
    Initialized instance of :class:`data`
dictionary : dict
    Desired precision for some cosmological parameters</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="250" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="250" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a0bc7beb0fbbeed0d73b5d661f1749c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.read_contamination_spectra</definition>
        <argsstring>(self, data)</argsstring>
        <name>read_contamination_spectra</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="305" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="305" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a97ebff9c54532b18e46bca282e91324f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.add_contamination_spectra</definition>
        <argsstring>(self, cl, data)</argsstring>
        <name>add_contamination_spectra</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>cl</type>
          <defname>cl</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="352" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="352" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a292608fe142cbc66bcfc5a62c0c8cba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.add_nuisance_prior</definition>
        <argsstring>(self, lkl, data)</argsstring>
        <name>add_nuisance_prior</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lkl</type>
          <defname>lkl</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="366" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="366" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a71902d23c369807b5f464b1abf418892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.computeLikelihood</definition>
        <argsstring>(self, ctx)</argsstring>
        <name>computeLikelihood</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>ctx</type>
          <defname>ctx</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Interface with CosmoHammer

Parameters
----------
ctx : Context
Contains several dictionaries storing data and cosmological
information</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="400" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="400" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a9f7492f4aacddc71d387cd98933a20db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.__init__</definition>
        <argsstring>(self, path, data, command_line)</argsstring>
        <name>__init__</name>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__newdat_1a3e4ad84990e9bf3df24cd0d234d3ec85">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__newdat_1a3e4ad84990e9bf3df24cd0d234d3ec85">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clik_1adb5288dd762e47bc3b63944d2ed02539">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clik_1adb5288dd762e47bc3b63944d2ed02539">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a1d2a1eb7dd6e3f84462ad04cb77d62c3">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a1d2a1eb7dd6e3f84462ad04cb77d62c3">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__sd_1ab39a4dbedbec481199b92eb43e604cde">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__sn_1a5a2856ebe1dfd5e0b3d83a5a132d142f">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clocks_1a4b547140b3a3d1839380f675ca89172c">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__isw_1a525b36e44eb86f63040c6f77f2077ebf">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__sn_1a5a2856ebe1dfd5e0b3d83a5a132d142f">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clocks_1a4b547140b3a3d1839380f675ca89172c">__init__</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__isw_1a525b36e44eb86f63040c6f77f2077ebf">__init__</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>path</type>
          <defname>path</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <param>
          <type>command_line</type>
          <defname>command_line</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>It copies the content of self.path from the initialization routine of
the :class:`Data &lt;data.Data&gt;` class, and defines a handful of useful
methods, that every likelihood might need.

If the nuisance parameters required to compute this likelihood are not
defined (either fixed or varying), the code will stop.

Parameters
----------
data : class
    Initialized instance of :class:`Data &lt;data.Data&gt;`
command_line : NameSpace
    NameSpace containing the command line arguments</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="41" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="41" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a1bd59854b9f84f9bf89641bf981b3493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.loglkl</definition>
        <argsstring>(self, cosmo, data)</argsstring>
        <name>loglkl</name>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__newdat_1a0ee47a3063871142b7f5257f4859af56">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__newdat_1a0ee47a3063871142b7f5257f4859af56">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clik_1a91692d10242ffe788ee793a550851405">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clik_1a91692d10242ffe788ee793a550851405">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a581ceae56227e19bbaf22c9cde582f4f">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mock__cmb_1a581ceae56227e19bbaf22c9cde582f4f">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__sd_1a98b95cced9373ac46b222e20d2620965">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mpk_1aa24e6767b1d59fc6bb081056dff92697">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__mpk_1aa24e6767b1d59fc6bb081056dff92697">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clocks_1a689ff446e16d03a7d24f97437dd7bc59">loglkl</reimplementedby>
        <reimplementedby refid="classMontePythonLike_1_1Likelihood__clocks_1a689ff446e16d03a7d24f97437dd7bc59">loglkl</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>cosmo</type>
          <defname>cosmo</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Placeholder to remind that this function needs to be defined for a
new likelihood.

Raises
------
NotImplementedError</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="107" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="107" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a06115ca87159872058c023f95791dd30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.raise_fiducial_model_err</definition>
        <argsstring>(self)</argsstring>
        <name>raise_fiducial_model_err</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>(JR) for use with GAMBIT: GAMBIT does not have an initial best-fit guess 
and the practice of erasing the cosmo container and refilling it does not 
work in the GAMBIT interface. Hence, potential fiducial model parameters
that likelihoods may need have to be provided. 
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="120" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="120" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a18aba084dc45c091734638bbdee49592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.read_from_file</definition>
        <argsstring>(self, path, data, command_line)</argsstring>
        <name>read_from_file</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>path</type>
          <defname>path</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <param>
          <type>command_line</type>
          <defname>command_line</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Extract the information from the log.param concerning this likelihood.

If the log.param is used, check that at least one item for each
likelihood is recovered. Otherwise, it means the log.param does not
contain information on the likelihood. This happens when the first run
fails early, before calling the likelihoods, and the program did not
log the information. This check might not be completely secure, but it
is better than nothing.

.. warning::

    This checks relies on the fact that a likelihood should always have
    at least **one** line of code written in the likelihood.data file.
    This should be always true, but in case a run fails with the error
    message described below, think about it.

.. warning::

    As of version 2.0.2, you can specify likelihood options in the
    parameter file. They have complete priority over the ones specified
    in the `likelihood.data` file, and it will be reflected in the
    `log.param` file.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="137" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="137" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1ac1ff5b8bdb6b8b48db3fbd216f166bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.get_cl</definition>
        <argsstring>(self, cosmo, l_max=-1)</argsstring>
        <name>get_cl</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>cosmo</type>
          <defname>cosmo</defname>
        </param>
        <param>
          <type>l_max</type>
          <defname>l_max</defname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Return the :math:`C_{\ell}` from the cosmological code in
:math:`\mu {\\rm K}^2`</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="211" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="211" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1ae7c283d2d9fbd1592cbd27e35d5554cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.get_unlensed_cl</definition>
        <argsstring>(self, cosmo, l_max=-1)</argsstring>
        <name>get_unlensed_cl</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>cosmo</type>
          <defname>cosmo</defname>
        </param>
        <param>
          <type>l_max</type>
          <defname>l_max</defname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Return the :math:`C_{\ell}` from the cosmological code in
:math:`\mu {\\rm K}^2`</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="231" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="231" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.need_cosmo_arguments</definition>
        <argsstring>(self, data, dictionary)</argsstring>
        <name>need_cosmo_arguments</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <param>
          <type>dictionary</type>
          <defname>dictionary</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Ensure that the arguments of dictionary are defined to the correct
value in the cosmological code

.. warning::

    So far there is no way to enforce a parameter where `smaller is
    better`. A bigger value will always overried any smaller one
    (`cl_max`, etc...)

Parameters
----------
data : dict
    Initialized instance of :class:`data`
dictionary : dict
    Desired precision for some cosmological parameters</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="250" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="250" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a0bc7beb0fbbeed0d73b5d661f1749c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.read_contamination_spectra</definition>
        <argsstring>(self, data)</argsstring>
        <name>read_contamination_spectra</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="306" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="306" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a97ebff9c54532b18e46bca282e91324f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.add_contamination_spectra</definition>
        <argsstring>(self, cl, data)</argsstring>
        <name>add_contamination_spectra</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>cl</type>
          <defname>cl</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="353" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="353" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a292608fe142cbc66bcfc5a62c0c8cba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.add_nuisance_prior</definition>
        <argsstring>(self, lkl, data)</argsstring>
        <name>add_nuisance_prior</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lkl</type>
          <defname>lkl</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="367" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="367" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classMontePythonLike_1_1Likelihood_1a71902d23c369807b5f464b1abf418892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def MontePythonLike.Likelihood.computeLikelihood</definition>
        <argsstring>(self, ctx)</argsstring>
        <name>computeLikelihood</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>ctx</type>
          <defname>ctx</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Interface with CosmoHammer

Parameters
----------
ctx : Context
Contains several dictionaries storing data and cosmological
information</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" line="401" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.5.0/MontePythonLike.py" bodystart="401" bodyend="419"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>General class that all likelihoods will inherit from.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>MontePythonLike.Likelihood_mpk</label>
        <link refid="classMontePythonLike_1_1Likelihood__mpk"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>MontePythonLike.Likelihood_sd</label>
        <link refid="classMontePythonLike_1_1Likelihood__sd"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>MontePythonLike.Likelihood_sn</label>
        <link refid="classMontePythonLike_1_1Likelihood__sn"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>MontePythonLike.Likelihood_isw</label>
        <link refid="classMontePythonLike_1_1Likelihood__isw"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>MontePythonLike.Likelihood_clocks</label>
        <link refid="classMontePythonLike_1_1Likelihood__clocks"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>object</label>
      </node>
      <node id="6">
        <label>MontePythonLike.Likelihood_mock_cmb</label>
        <link refid="classMontePythonLike_1_1Likelihood__mock__cmb"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>MontePythonLike.Likelihood_prior</label>
        <link refid="classMontePythonLike_1_1Likelihood__prior"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>MontePythonLike.Likelihood_newdat</label>
        <link refid="classMontePythonLike_1_1Likelihood__newdat"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>MontePythonLike.Likelihood</label>
        <link refid="classMontePythonLike_1_1Likelihood"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MontePythonLike.Likelihood_clik</label>
        <link refid="classMontePythonLike_1_1Likelihood__clik"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>object</label>
      </node>
      <node id="1">
        <label>MontePythonLike.Likelihood</label>
        <link refid="classMontePythonLike_1_1Likelihood"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" line="35" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/patches/montepythonlike/3.3.0/MontePythonLike.py" bodystart="35" bodyend="435"/>
    <listofallmembers>
      <member refid="classMontePythonLike_1_1Likelihood_1a9f7492f4aacddc71d387cd98933a20db" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>__init__</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a9f7492f4aacddc71d387cd98933a20db" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>__init__</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a97ebff9c54532b18e46bca282e91324f" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>add_contamination_spectra</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a97ebff9c54532b18e46bca282e91324f" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>add_contamination_spectra</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a292608fe142cbc66bcfc5a62c0c8cba5" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>add_nuisance_prior</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a292608fe142cbc66bcfc5a62c0c8cba5" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>add_nuisance_prior</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a71902d23c369807b5f464b1abf418892" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>computeLikelihood</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a71902d23c369807b5f464b1abf418892" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>computeLikelihood</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a9fd70c782482cf8ceed633e696308da4" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>data_directory</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1ae9bf5af937608f0cc8d715aaeab46333" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>default_values</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1aa6c68f2868da79f600c9a1fdc912e799" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>dictionary</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1affd984f54083d2657a384fd6c2351203" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>folder</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1ac1ff5b8bdb6b8b48db3fbd216f166bd4" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>get_cl</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1ac1ff5b8bdb6b8b48db3fbd216f166bd4" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>get_cl</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1ae7c283d2d9fbd1592cbd27e35d5554cb" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>get_unlensed_cl</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1ae7c283d2d9fbd1592cbd27e35d5554cb" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>get_unlensed_cl</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a1bd59854b9f84f9bf89641bf981b3493" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>loglkl</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a1bd59854b9f84f9bf89641bf981b3493" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>loglkl</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a10cd4f121ecb1cb51ab9554fadee0d06" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>name</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>need_cosmo_arguments</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a64c1e8d6dddb5bfd86ea2276168cc207" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>need_cosmo_arguments</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1acf6becb7edae22da01cbbde936c343eb" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>need_update</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a57046108c907a13cdd55fcd65b811191" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>nuisance</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a9b3ab577e3c9ab16a7254579755078ee" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>path</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a06115ca87159872058c023f95791dd30" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>raise_fiducial_model_err</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a06115ca87159872058c023f95791dd30" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>raise_fiducial_model_err</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a0bc7beb0fbbeed0d73b5d661f1749c7f" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>read_contamination_spectra</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a0bc7beb0fbbeed0d73b5d661f1749c7f" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>read_contamination_spectra</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a18aba084dc45c091734638bbdee49592" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>read_from_file</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1a18aba084dc45c091734638bbdee49592" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>read_from_file</name></member>
      <member refid="classMontePythonLike_1_1Likelihood_1afa2fc3acbed69456b390f9d5c2665804" prot="public" virt="non-virtual"><scope>MontePythonLike::Likelihood</scope><name>use_nuisance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
