<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface" kind="class" language="C++" prot="public">
    <compoundname>Gambit::Scanner::Plugins::Plugin_Interface</compoundname>
    <basecompoundref refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface__Base" prot="public" virt="non-virtual">Gambit::Scanner::Plugins::Plugin_Interface_Base</basecompoundref>
    <basecompoundref refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Main__Interface__Base" prot="public" virt="non-virtual">Gambit::Scanner::Plugins::Plugin_Main_Interface_Base&lt; T &gt;</basecompoundref>
    <includes refid="plugin__interface_8hpp" local="no">plugin_interface.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface_1a5498ca8d495f02c48e3f0e3cde9d4384" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T1</declname>
            <defname>T1</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gambit::Scanner::Plugins::Plugin_Interface&lt; T &gt;::dummy</definition>
        <argsstring>(T1...)</argsstring>
        <name>dummy</name>
        <param>
          <type>T1...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/ScannerBit/include/gambit/ScannerBit/plugin_interface.hpp" line="166" column="22" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/ScannerBit/include/gambit/ScannerBit/plugin_interface.hpp" bodystart="166" bodyend="166"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface_1a327e369bb1aeb0f93f91c8b1658d16c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>plug_args</declname>
            <defname>plug_args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Gambit::Scanner::Plugins::Plugin_Interface&lt; T &gt;::Plugin_Interface</definition>
        <argsstring>(const std::string &amp;type, const std::string &amp;name, const plug_args &amp;... inputs)</argsstring>
        <name>Plugin_Interface</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const plug_args &amp;...</type>
          <declname>inputs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/ScannerBit/include/gambit/ScannerBit/plugin_interface.hpp" line="169" column="17" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/ScannerBit/include/gambit/ScannerBit/plugin_interface.hpp" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface_1a943f34fcec230840f3534e74b1ed2253" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>args</declname>
            <defname>args</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Gambit::Scanner::Plugins::Plugin_Interface&lt; T &gt;::operator()</definition>
        <argsstring>(args &amp;... params) -&gt; typename find_variadic_type&lt; void(args...), T... &gt;::ret_type</argsstring>
        <name>operator()</name>
        <param>
          <type>args &amp;...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/ScannerBit/include/gambit/ScannerBit/plugin_interface.hpp" line="176" column="22" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/ScannerBit/include/gambit/ScannerBit/plugin_interface.hpp" bodystart="176" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Interface for a ScannerBit plugin. Called like: Plugins::Plugin_Interface&lt;int ()&gt; interface(&quot;scanner&quot;, pluginName, dim, *factory); interface(); </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Gambit::Scanner::Plugins::Plugin_Main_Interface_Base&lt; T &gt;</label>
        <link refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Main__Interface__Base"/>
      </node>
      <node id="2">
        <label>Gambit::Scanner::Plugins::Plugin_Interface_Base</label>
        <link refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface__Base"/>
      </node>
      <node id="1">
        <label>Gambit::Scanner::Plugins::Plugin_Interface&lt; T &gt;</label>
        <link refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Gambit::Scanner::Plugins::Plugin_Main_Interface_Base&lt; T &gt;</label>
        <link refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Main__Interface__Base"/>
      </node>
      <node id="2">
        <label>Gambit::Scanner::Plugins::Plugin_Interface_Base</label>
        <link refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface__Base"/>
      </node>
      <node id="1">
        <label>Gambit::Scanner::Plugins::Plugin_Interface&lt; T &gt;</label>
        <link refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/ScannerBit/include/gambit/ScannerBit/plugin_interface.hpp" line="163" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/ScannerBit/include/gambit/ScannerBit/plugin_interface.hpp" bodystart="162" bodyend="181"/>
    <listofallmembers>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface_1a5498ca8d495f02c48e3f0e3cde9d4384" prot="private" virt="non-virtual"><scope>Gambit::Scanner::Plugins::Plugin_Interface</scope><name>dummy</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface__Base_1ae54af6cfefefefc47acdb4ee29d6cf92" prot="protected" virt="non-virtual"><scope>Gambit::Scanner::Plugins::Plugin_Interface</scope><name>initPlugin</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface_1a943f34fcec230840f3534e74b1ed2253" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::Plugin_Interface</scope><name>operator()</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface__Base_1a152e05d112739ae9e1d9d078d1faf6a5" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::Plugin_Interface</scope><name>operator[]</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface_1a327e369bb1aeb0f93f91c8b1658d16c8" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::Plugin_Interface</scope><name>Plugin_Interface</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface__Base_1acdfbec0bd5d135bb7b39adacb3b40f4b" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::Plugin_Interface</scope><name>Plugin_Interface_Base</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1Plugin__Interface__Base_1a33ece688cbc4da7bbd6853343a307902" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::Plugin_Interface</scope><name>~Plugin_Interface_Base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
