<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceGambit_1_1DarkBit" kind="namespace" language="C++">
    <compoundname>Gambit::DarkBit</compoundname>
    <innerclass refid="structGambit_1_1DarkBit_1_1AxionEDT__params" prot="public">Gambit::DarkBit::AxionEDT_params</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1AxionInterpolator" prot="public">Gambit::DarkBit::AxionInterpolator</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1AxionInterpolator2D" prot="public">Gambit::DarkBit::AxionInterpolator2D</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1CAST__SolarModel__Interpolator" prot="public">Gambit::DarkBit::CAST_SolarModel_Interpolator</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1DiracSingletDM" prot="public">Gambit::DarkBit::DiracSingletDM</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1DMEFT" prot="public">Gambit::DarkBit::DMEFT</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1dRdE__params" prot="public">Gambit::DarkBit::dRdE_params</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1HESS__Interpolator" prot="public">Gambit::DarkBit::HESS_Interpolator</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1Interpolator2D" prot="public">Gambit::DarkBit::Interpolator2D</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1MajoranaSingletDM" prot="public">Gambit::DarkBit::MajoranaSingletDM</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1nudata" prot="public">Gambit::DarkBit::nudata</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1nuyield__info" prot="public">Gambit::DarkBit::nuyield_info</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1PPPC__interpolation" prot="public">Gambit::DarkBit::PPPC_interpolation</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1RD__coannihilating__particle" prot="public">Gambit::DarkBit::RD_coannihilating_particle</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1RD__spectrum__type" prot="public">Gambit::DarkBit::RD_spectrum_type</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1ScalarSingletDM" prot="public">Gambit::DarkBit::ScalarSingletDM</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1SimpleHist" prot="public">Gambit::DarkBit::SimpleHist</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1SimYieldChannel" prot="public">Gambit::DarkBit::SimYieldChannel</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1SimYieldTable" prot="public">Gambit::DarkBit::SimYieldTable</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1SolarModel" prot="public">Gambit::DarkBit::SolarModel</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1SolarModel__params1" prot="public">Gambit::DarkBit::SolarModel_params1</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1SolarModel__params2" prot="public">Gambit::DarkBit::SolarModel_params2</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1SolarModel__params3" prot="public">Gambit::DarkBit::SolarModel_params3</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1SolarModel__params4" prot="public">Gambit::DarkBit::SolarModel_params4</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1TH__Channel" prot="public">Gambit::DarkBit::TH_Channel</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1TH__ParticleProperty" prot="public">Gambit::DarkBit::TH_ParticleProperty</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1TH__Process" prot="public">Gambit::DarkBit::TH_Process</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" prot="public">Gambit::DarkBit::TH_ProcessCatalog</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1TH__Resonance" prot="public">Gambit::DarkBit::TH_Resonance</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1TH__resonances__thresholds" prot="public">Gambit::DarkBit::TH_resonances_thresholds</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1VectorSingletDM" prot="public">Gambit::DarkBit::VectorSingletDM</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1WDInterpolator" prot="public">Gambit::DarkBit::WDInterpolator</innerclass>
    <innerclass refid="classGambit_1_1DarkBit_1_1WIMP__EFT__DM" prot="public">Gambit::DarkBit::WIMP_EFT_DM</innerclass>
    <innerclass refid="structGambit_1_1DarkBit_1_1Wstruct" prot="public">Gambit::DarkBit::Wstruct</innerclass>
    <innernamespace refid="namespaceGambit_1_1DarkBit_1_1DarkBit__utils">Gambit::DarkBit::DarkBit_utils</innernamespace>
    <innernamespace refid="namespaceGambit_1_1DarkBit_1_1DecayChain">Gambit::DarkBit::DecayChain</innernamespace>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a20e5bc74cd244283a4541b02edb8fba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC22_full</definition>
        <argsstring>(nudata &amp;result)</argsstring>
        <name>IC22_full</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1nudata" kindref="compound">nudata</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Likelihood calculators for different IceCube event samples These functions all include the likelihood of the background-only model for the respective sample. We define the final log-likelihood as delta = sum over analyses of (lnL_model - lnL_BG), conservatively forbidding delta &gt; 0 in order to always just use the neutrino likelihood as a limit. This ignores small low-E excesses caused by impending breakdown of approximations used in IceCube response data and the nulike likelihood at very low E. This implies conditioning on all but one parameter (e.g. the cross-section), such that including any particular IC analysis adds just <emphasis>one</emphasis> additional degree of freedom to the fit. </para>
        </briefdescription>
        <detaileddescription>
<para>22-string IceCube sample: predicted signal and background counts, observed counts and likelihoods. </para>
        </detaileddescription>
        <inbodydescription>
<para>Option nulike_speed&lt;int&gt;: Speed setting for nulike backend (default 3)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="553" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="553" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a535115c3f831f8cc8d9721b15bbbc759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WH_full</definition>
        <argsstring>(nudata &amp;result)</argsstring>
        <name>IC79WH_full</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1nudata" kindref="compound">nudata</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>79-string IceCube WH sample: predicted signal and background counts, observed counts and likelihoods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option nulike_speed&lt;int&gt;: Speed setting for nulike backend (default 3)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="585" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="585" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1ac3059f6cbdb18e950b2c2215878b3426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WL_full</definition>
        <argsstring>(nudata &amp;result)</argsstring>
        <name>IC79WL_full</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1nudata" kindref="compound">nudata</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>79-string IceCube WL sample: predicted signal and background counts, observed counts and likelihoods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option nulike_speed&lt;int&gt;: Speed setting for nulike backend (default 3)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="617" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="617" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1af42231f27e2020bd13c0d4f229527a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79SL_full</definition>
        <argsstring>(nudata &amp;result)</argsstring>
        <name>IC79SL_full</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1nudata" kindref="compound">nudata</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>79-string IceCube SL sample: predicted signal and background counts, observed counts and likelihoods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option nulike_speed&lt;int&gt;: Speed setting for nulike backend (default 3)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="649" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="649" bodyend="677"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="SunNeutrinos_8cpp_1ab50a92057265b4364891942f02f8294b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC22_signal</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC22_signal</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>22-string extractor module functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="682" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="682" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a8ab291f3ba28337938d8bac5777acacd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC22_bg</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC22_bg</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="684" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="684" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1acdd0de1bef077bd88c24673a74a04c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC22_nobs</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>IC22_nobs</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="686" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="686" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a3ddb6cb7920353a5b584ae8d368b4fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC22_loglike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC22_loglike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="688" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="688" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a64e018342989acbd13bae0ec83f4c2e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC22_bgloglike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC22_bgloglike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="690" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="690" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a24714818febd7f5e203e8e825c90c122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC22_pvalue</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC22_pvalue</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="692" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="692" bodyend="693"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a44a102d7a68884e991cc21ca22dd5258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WH_signal</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79WH_signal</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>79-string WH extractor module functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="698" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="698" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1aa9008f0320b4b0b920ecf4345d5c56ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WH_bg</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79WH_bg</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="700" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="700" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a8df0aac65d34cacbc5ba16b8586628a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WH_nobs</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>IC79WH_nobs</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="702" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="702" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1affed4b5db7f2d8a85a4943b3a786753b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WH_loglike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79WH_loglike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="704" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="704" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1afccbaac34a9b435e8b22a2ad95aa257d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WH_bgloglike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79WH_bgloglike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="706" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="706" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a65ff56b6f747d1c9fe319edb85eb558c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WH_pvalue</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79WH_pvalue</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="708" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="708" bodyend="709"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="SunNeutrinos_8cpp_1afe1c7f5991822effc4e719b525cfa082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WL_signal</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79WL_signal</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>79-string WL extractor module functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="714" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="714" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a00c43ad5d2f141012a1d9d3b28db442b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WL_bg</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79WL_bg</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="716" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="716" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a8da4af579751280c4cf49d19c275c802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WL_nobs</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>IC79WL_nobs</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="718" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="718" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1afea6debe989956ba6a129bf9890b48e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WL_loglike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79WL_loglike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="720" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="720" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a222bc8624ba2850d239347b002a59177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WL_bgloglike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79WL_bgloglike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="722" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="722" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a3078cfce1a892415d044ff9d156f5a83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79WL_pvalue</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79WL_pvalue</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="724" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="724" bodyend="725"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a9e0c4f4db7bc0113b26fb720c652280f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79SL_signal</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79SL_signal</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>79-string SL extractor module functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="730" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="730" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a381313e8c9688a40de499c7fc553ad30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79SL_bg</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79SL_bg</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="732" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="732" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1ac796e17ddc803d9c2b4bdae6e9c9e411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79SL_nobs</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>IC79SL_nobs</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="734" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="734" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a1cd3fb7c6f34f4ebf16d2287471f59e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79SL_loglike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79SL_loglike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="736" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="736" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a2a21be05805f020418e209f1d582f142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79SL_bgloglike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79SL_bgloglike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="738" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="738" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a92aa5fa454f3f3e811cae909f63ea085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79SL_pvalue</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79SL_pvalue</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="740" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="740" bodyend="741"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="DarkBit__types_8hpp_1ae515a362ebed7788d58aabd4b9a6f944" prot="public" static="no" strong="yes">
        <type></type>
        <name>SimYieldChannelCheck</name>
        <enumvalue id="DarkBit__types_8hpp_1ae515a362ebed7788d58aabd4b9a6f944a260ca9dd8a4577fc00b7bd5810298076" prot="public">
          <name>success</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="DarkBit__types_8hpp_1ae515a362ebed7788d58aabd4b9a6f944a64444bab884cae0156dc0b87d0b06b74" prot="public">
          <name>duplication</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="DarkBit__types_8hpp_1ae515a362ebed7788d58aabd4b9a6f944abbe9114db3c790aefa2520a20f1e104b" prot="public">
          <name>monochromatic_line</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Result of SimYieldTable::checkChannel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="167" column="1" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="enum" id="Axions_8cpp_1a15f8b86d8e39700e02f4a2bbcc3d489a" prot="public" static="no" strong="yes">
        <type></type>
        <name>InterpolationOptions1D</name>
        <enumvalue id="Axions_8cpp_1a15f8b86d8e39700e02f4a2bbcc3d489aa9a932b3cb396238423eb2f33ec17d6aa" prot="public">
          <name>linear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Axions_8cpp_1a15f8b86d8e39700e02f4a2bbcc3d489aa9b40013e5fa3f28d27ec3e3518cf5791" prot="public">
          <name>cspline</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Generic one-dimensional integration container for linear interpolation and cubic splines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="81" column="38" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="enum" id="Axions_8cpp_1a4a7d2ec9d6099eff2900b7b31667ef0c" prot="public" static="no" strong="yes">
        <type></type>
        <name>InterpolationOptions2D</name>
        <enumvalue id="Axions_8cpp_1a4a7d2ec9d6099eff2900b7b31667ef0ca2c5c389d0b455c8246a86f5ca90528a3" prot="public">
          <name>bilinear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Axions_8cpp_1a4a7d2ec9d6099eff2900b7b31667ef0caa006c8fe94896ca114dfb1353b233ab8" prot="public">
          <name>bicubic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Two-dimensional integration container for bilinear interpolation and bicubic splines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="198" column="39" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="enum" id="Cascades_8cpp_1a6f18248d2e1e5110a34af641c2d0e79c" prot="public" static="no" strong="no">
        <type></type>
        <name>cascadeMC_SpecialEvents</name>
        <enumvalue id="Cascades_8cpp_1a6f18248d2e1e5110a34af641c2d0e79ca2c58fcc78195ac0473a29fb447ada564" prot="public">
          <name>MC_INIT</name>
          <initializer>=-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Cascades_8cpp_1a6f18248d2e1e5110a34af641c2d0e79ca162ce7e559f397118407998ca9a2e775" prot="public">
          <name>MC_NEXT_STATE</name>
          <initializer>=-2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Cascades_8cpp_1a6f18248d2e1e5110a34af641c2d0e79ca0681bfedbc078371c33d25fbcfc68c87" prot="public">
          <name>MC_FINALIZE</name>
          <initializer>=-3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Special events for event loop. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="38" column="33" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="38" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="SimpleHist_8hpp_1aa92e44d992842194e881c224a987504a" prot="public" static="no">
        <type>std::map&lt; str, std::map&lt; str, <ref refid="structGambit_1_1DarkBit_1_1SimpleHist" kindref="compound">Gambit::DarkBit::SimpleHist</ref> &gt; &gt;</type>
        <definition>typedef std::map&lt;str, std::map&lt;str, Gambit::DarkBit::SimpleHist&gt; &gt; Gambit::DarkBit::simpleHistContainter</definition>
        <argsstring></argsstring>
        <name>simpleHistContainter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/SimpleHist.hpp" line="99" column="22" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/SimpleHist.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SimpleHist_8hpp_1afca9ad6020ddaef27b5821512c6fa230" prot="public" static="no">
        <type>std::map&lt; str, int &gt;</type>
        <definition>typedef std::map&lt;str, int&gt; Gambit::DarkBit::stringIntMap</definition>
        <argsstring></argsstring>
        <name>stringIntMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/SimpleHist.hpp" line="100" column="22" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/SimpleHist.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SimpleHist_8hpp_1af1ae8c593bbf61b7f989daf34a3bf6b7" prot="public" static="no">
        <type>std::map&lt; str, daFunk::Funk &gt;</type>
        <definition>typedef std::map&lt;str, daFunk::Funk&gt; Gambit::DarkBit::stringFunkMap</definition>
        <argsstring></argsstring>
        <name>stringFunkMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/SimpleHist.hpp" line="101" column="22" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/SimpleHist.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="Axions_8cpp_1a0cc58d8e455f6063eed0c7da9bc8ff11" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Gambit::DarkBit::gagg_conversion</definition>
        <argsstring></argsstring>
        <name>gagg_conversion</name>
        <initializer>= 1.0E-9</initializer>
        <briefdescription>
<para>Supporting classes and functions for the axion module. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="71" column="19" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Axions_8cpp_1a03fda73625db46215397a69b1cc8f3b7" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Gambit::DarkBit::gaee_conversion</definition>
        <argsstring></argsstring>
        <name>gaee_conversion</name>
        <initializer>= 1.0E+13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="72" column="19" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Axions_8cpp_1a576d18ea0d1b4fd02dc9b21eb1e44c4e" prot="public" static="no" mutable="no">
        <type>const std::map&lt; <ref refid="Axions_8cpp_1a15f8b86d8e39700e02f4a2bbcc3d489a" kindref="member">InterpolationOptions1D</ref>, std::string &gt;</type>
        <definition>const std::map&lt;InterpolationOptions1D, std::string&gt; Gambit::DarkBit::int_type_name</definition>
        <argsstring></argsstring>
        <name>int_type_name</name>
        <initializer>= { { InterpolationOptions1D::linear, &quot;linear&quot; }, { InterpolationOptions1D::cspline, &quot;cspline&quot;} }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="82" column="20" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Axions_8cpp_1a273e06f21d1bb3d428a8d2cabed66c8d" prot="public" static="no" mutable="no">
        <type>const std::map&lt; <ref refid="Axions_8cpp_1a4a7d2ec9d6099eff2900b7b31667ef0c" kindref="member">InterpolationOptions2D</ref>, std::string &gt;</type>
        <definition>const std::map&lt;InterpolationOptions2D, std::string&gt; Gambit::DarkBit::int_2d_type_name</definition>
        <argsstring></argsstring>
        <name>int_2d_type_name</name>
        <initializer>= { { InterpolationOptions2D::bilinear, &quot;bilinear&quot; }, { InterpolationOptions2D::bicubic, &quot;bicubic&quot;} }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="199" column="21" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Axions_8cpp_1a42797c4e02b508d90f6ba1ab3669dd87" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Gambit::DarkBit::abs_prec</definition>
        <argsstring></argsstring>
        <name>abs_prec</name>
        <initializer>= 1.0E-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="655" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Axions_8cpp_1aa635beffe0137dc002ca496eb796829a" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Gambit::DarkBit::rel_prec</definition>
        <argsstring></argsstring>
        <name>rel_prec</name>
        <initializer>= 1.0E-6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="655" column="28" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Axions_8cpp_1a1a920ac0a301329c6dfa7ac54072e9cf" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Gambit::DarkBit::method</definition>
        <argsstring></argsstring>
        <name>method</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="656" column="15" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="PPPC_8cpp_1a318c659665db916c83d2b8f928eea6da" prot="public" static="yes" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; Gambit::DarkBit::colnames</definition>
        <argsstring></argsstring>
        <name>colnames</name>
        <initializer>{&quot;mass&quot;, &quot;log10x&quot;, 
                                             &quot;e_L&quot;, &quot;e_R&quot;, &quot;e&quot;,
                                             &quot;mu_L&quot;, &quot;mu_R&quot;, &quot;mu&quot;,
                                             &quot;tau_L&quot;, &quot;tau_R&quot;, &quot;tau&quot;,
                                             &quot;q&quot;, &quot;c&quot;, &quot;b&quot;, &quot;t&quot;,
                                             &quot;W_L&quot;, &quot;W_T&quot;, &quot;W&quot;,
                                             &quot;Z_L&quot;, &quot;Z_T&quot;, &quot;Z&quot;,
                                             &quot;g&quot;, &quot;gamma&quot;, &quot;h&quot;,
                                             &quot;nu_e&quot;, &quot;nu_mu&quot;, &quot;nu_tau&quot;,
                                             &quot;VV_to_4e&quot;, &quot;VV_to_4mu&quot;, &quot;VV_to_4tau&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/PPPC.cpp" line="124" column="24" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/PPPC.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="PPPC_8cpp_1a79f2603fdf770b6d6c8d9cd30d7ac158" prot="public" static="yes" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; Gambit::DarkBit::channels</definition>
        <argsstring></argsstring>
        <name>channels</name>
        <initializer>{&quot;e&quot;, &quot;mu&quot;, &quot;tau&quot;,
                                              &quot;q&quot;, &quot;c&quot;, &quot;b&quot;, &quot;t&quot;,
                                              &quot;W&quot;,&quot;Z&quot;, &quot;g&quot;, &quot;gamma&quot;, &quot;h&quot;,
                                              &quot;nu_e&quot;, &quot;nu_mu&quot;, &quot;nu_tau&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/PPPC.cpp" line="134" column="24" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/PPPC.cpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="DarkBit__standalone__ScalarSingletDM__Z2_8cpp_1a473ff60f13e648dea238a8d777d3ff12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::CMC_dummy</definition>
        <argsstring>(DarkBit::stringFunkMap &amp;result)</argsstring>
        <name>CMC_dummy</name>
        <param>
          <type>DarkBit::stringFunkMap &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_ScalarSingletDM_Z2.cpp" line="43" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_ScalarSingletDM_Z2.cpp" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__standalone__ScalarSingletDM__Z2_8cpp_1a81eb1076094aa748d8969ad5e2f89a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::createSpectrum</definition>
        <argsstring>(Spectrum &amp;outSpec)</argsstring>
        <name>createSpectrum</name>
        <param>
          <type>Spectrum &amp;</type>
          <declname>outSpec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_ScalarSingletDM_Z2.cpp" line="50" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_ScalarSingletDM_Z2.cpp" bodystart="50" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__standalone__ScalarSingletDM__Z2_8cpp_1aac1b0e6770af0243ad5f095fa9b504e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::createDecays</definition>
        <argsstring>(DecayTable &amp;outDecays)</argsstring>
        <name>createDecays</name>
        <param>
          <type>DecayTable &amp;</type>
          <declname>outDecays</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_ScalarSingletDM_Z2.cpp" line="66" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_ScalarSingletDM_Z2.cpp" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__standalone__WIMP_8cpp_1ab4c644a68bb891552af54f49ac6c5ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_WIMP</definition>
        <argsstring>(TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_WIMP</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option mWIMP&lt;double&gt;: WIMP mass in GeV (required)</para>
<para>Option sv&lt;double&gt;: Cross-section in cm3/s (required)</para>
<para>Option brList&lt;std::vector&lt;double&gt;&gt;: List of branching ratios (required)</para>
<para>Option mWIMP&lt;double&gt;: WIMP mass in GeV (required)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="118" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="118" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__standalone__WIMP_8cpp_1a4a1f1dca674b5efcaab52605e43647ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatter_ID_WIMP</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatter_ID_WIMP</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="231" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__standalone__WIMP_8cpp_1a27d9a8610489223894e151e3b18cb920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatterConj_ID_WIMP</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatterConj_ID_WIMP</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="237" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__standalone__WIMP_8cpp_1a34c9fbd5758c281e08f1d87fbff9f761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::WIMP_properties_WIMP</definition>
        <argsstring>(WIMPprops &amp;props)</argsstring>
        <name>WIMP_properties_WIMP</name>
        <param>
          <type>WIMPprops &amp;</type>
          <declname>props</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="243" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="243" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__standalone__WIMP_8cpp_1ac4223af7cf1631f0dce0f5a224a6aba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_couplings_WIMP</definition>
        <argsstring>(DM_nucleon_couplings &amp;result)</argsstring>
        <name>DD_couplings_WIMP</name>
        <param>
          <type><ref refid="structGambit_1_1DM__nucleon__couplings" kindref="compound">DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option gps&lt;double&gt;: gps (default 0)</para>
<para>Option gns&lt;double&gt;: gns (default 0)</para>
<para>Option gpa&lt;double&gt;: gpa (default 0)</para>
<para>Option gna&lt;double&gt;: gna (default 0)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" line="253" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_WIMP.cpp" bodystart="253" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__types_8hpp_1a2b35b566472fa45f89811acda538cc7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>error &amp;</type>
        <definition>error&amp; Gambit::DarkBit::DarkBit_error</definition>
        <argsstring>()</argsstring>
        <name>DarkBit_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="80" column="11" declfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" declline="80" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__types_8hpp_1a8991fe049a0042bd24d4fb79ad567f46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>warning &amp;</type>
        <definition>warning&amp; Gambit::DarkBit::DarkBit_warning</definition>
        <argsstring>()</argsstring>
        <name>DarkBit_warning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" line="81" column="13" declfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/include/gambit/DarkBit/DarkBit_types.hpp" declline="81" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a6afedb6e7e1805062d4e6ecb4a9c4541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::parabola</definition>
        <argsstring>(double x, const double params[])</argsstring>
        <name>parabola</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>params</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>H.E.S.S.-likelihood-related interpolation routines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="352" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="352" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a8171d7aa9f0735557232e1ea7f2da40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::intersect_parabola_line</definition>
        <argsstring>(double a, double b, double sign, const double pparams[])</argsstring>
        <name>intersect_parabola_line</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sign</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>pparams</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="355" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="355" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a08a81cda24b1d8e1764581956537d702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::rho_integrand</definition>
        <argsstring>(double rho, void *params)</argsstring>
        <name>rho_integrand</name>
        <param>
          <type>double</type>
          <declname>rho</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="663" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="663" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a9017ae986ec189adf7ec1f5351c4bf84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::rad_integrand</definition>
        <argsstring>(double rad, void *params)</argsstring>
        <name>rad_integrand</name>
        <param>
          <type>double</type>
          <declname>rad</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="686" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="686" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1aaf61a195e6f951628bbf48ab23264c4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::erg_integrand</definition>
        <argsstring>(double erg, void *params)</argsstring>
        <name>erg_integrand</name>
        <param>
          <type>double</type>
          <declname>erg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="711" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="711" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1ab028c458bf497c3a486df88fcef9ce2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::alt_erg_integrand</definition>
        <argsstring>(double erg, void *params)</argsstring>
        <name>alt_erg_integrand</name>
        <param>
          <type>double</type>
          <declname>erg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="742" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="742" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a4eb66eb88d6bf27e88c86133d22a189d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::gaussian_nuisance_lnL</definition>
        <argsstring>(double theo, double obs, double sigma)</argsstring>
        <name>gaussian_nuisance_lnL</name>
        <param>
          <type>double</type>
          <declname>theo</declname>
        </param>
        <param>
          <type>double</type>
          <declname>obs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1058" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1058" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a6826f9eb486654a2a2ccbe4e145780d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::gStar</definition>
        <argsstring>(double T)</argsstring>
        <name>gStar</name>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Various capabilities and functions to provide SM physics as well as QCD input for axions. </para>
        </briefdescription>
        <detaileddescription>
<para>Supported models: QCDAxion </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1076" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1076" bodyend="1093"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a25b5bd1a48148ac71b805c81761120fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::gStar_S</definition>
        <argsstring>(double T)</argsstring>
        <name>gStar_S</name>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1096" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1096" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a20bc7bca43b3a3f6852dd4d079bf4802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::QCDAxion_ZeroTemperatureMass_Nuisance_lnL</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>QCDAxion_ZeroTemperatureMass_Nuisance_lnL</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1121" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1121" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1acf23f54e583bc3907c48f991aba4572e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::QCDAxion_AxionPhotonConstant_Nuisance_lnL</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>QCDAxion_AxionPhotonConstant_Nuisance_lnL</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1135" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1135" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a0a6513bd3194232f2058a2b60799f05b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::log_chi</definition>
        <argsstring>(double T, double beta, double Tchi)</argsstring>
        <name>log_chi</name>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Tchi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1148" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1148" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a82d71b1acd4e7b205ef7531dd88bde11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::QCDAxion_TemperatureDependence_Nuisance_lnL</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>QCDAxion_TemperatureDependence_Nuisance_lnL</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1157" column="11" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1157" bodyend="1173"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a89a926a553d6a1e51ab254a8300aa864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::ALPS1_signal_general</definition>
        <argsstring>(double power, double nm1, double m_ax, double gagg)</argsstring>
        <name>ALPS1_signal_general</name>
        <param>
          <type>double</type>
          <declname>power</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nm1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m_ax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gagg</declname>
        </param>
        <briefdescription>
<para>Likelihoods for ALPS 1 (LSW), CAST (helioscopes), and ADMX, UF, RBF (haloscopes). </para>
        </briefdescription>
        <detaileddescription>
<para>Supported models: GeneralALP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1192" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1192" bodyend="1216"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a68fb3022a771016f5e160f031c45faf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_ALPS1_signal_vac</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_ALPS1_signal_vac</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1219" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1219" bodyend="1226"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1ae09e915653efc014b92e66e72e08e02f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_ALPS1_signal_gas</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_ALPS1_signal_gas</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1229" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1229" bodyend="1236"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a0d382c49e0384a54837c2bc10c87bcc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::ALPS1_lnL_general</definition>
        <argsstring>(double s, double mu, double sigma)</argsstring>
        <name>ALPS1_lnL_general</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1239" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1239" bodyend="1244"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a618ccc13b1bfb19a3ddc89f23380da17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_ALPS1</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_ALPS1</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1247" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1247" bodyend="1268"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a4ece98707e06b77044b1f048945917a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_CAST2007_signal_vac</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;result)</argsstring>
        <name>calc_CAST2007_signal_vac</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1275" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1275" bodyend="1300"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1abfaa466cb6752bebd0c4e8b32b01e9c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_CAST2017_signal_vac</definition>
        <argsstring>(std::vector&lt; std::vector&lt; double &gt;&gt; &amp;result)</argsstring>
        <name>calc_CAST2017_signal_vac</name>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1303" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1303" bodyend="1348"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a61d49aad310f0da78aaeaddaebd8c8d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::CAST_lnL_general</definition>
        <argsstring>(std::vector&lt; double &gt; s, const std::vector&lt; double &gt; bkg_counts, const std::vector&lt; int &gt; sig_counts)</argsstring>
        <name>CAST_lnL_general</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt;</type>
          <declname>bkg_counts</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt;</type>
          <declname>sig_counts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1351" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1351" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a1d61db000131a682a41f680716d28c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_CAST2007</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_CAST2007</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1366" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1366" bodyend="1387"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a56e91bddb22951cd60b39edc7210a56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_CAST2017</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_CAST2017</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1390" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1390" bodyend="1440"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a81e2fced85393d794401db16731cc059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_Haloscope_signal</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_Haloscope_signal</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1448" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1448" bodyend="1461"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a431df82a47e30877a2840e4c1f427476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_Haloscope_ADMX1</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_Haloscope_ADMX1</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Approximated likelihood for the AxionDarkMatterEXperiment (ADMX). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1467" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1467" bodyend="1504"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a248560936a686d1db3c1e039de4be245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_Haloscope_ADMX2</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_Haloscope_ADMX2</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1507" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1507" bodyend="1531"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1aac5d600038cd2ef3fa575bc12ceb5d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_Haloscope_UF</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_Haloscope_UF</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1534" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1534" bodyend="1555"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1ac7112b25fa33ec40bf4d1a005ce8b42e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_Haloscope_RBF</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_Haloscope_RBF</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1558" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1558" bodyend="1596"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a2f9c887a2abe3b38bc418bf739ec7d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::SpecialFun1</definition>
        <argsstring>(double T)</argsstring>
        <name>SpecialFun1</name>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Capabilities relating to axion cosmology. Currently only provides the energy density in axions today due to the realignment mechanism. </para>
        </briefdescription>
        <detaileddescription>
<para>Supported models: GeneralALP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1617" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1617" bodyend="1626"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a7591874061d9c6386e482c68f651757b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::SpecialFun3</definition>
        <argsstring>(double T)</argsstring>
        <name>SpecialFun3</name>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1629" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1629" bodyend="1638"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1afc5112bdceebf8e27e8e2f31eb3052d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::hubble_rad_dom</definition>
        <argsstring>(double T)</argsstring>
        <name>hubble_rad_dom</name>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1641" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1641" bodyend="1646"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1ad3a79639f0a9c91040dffc4cd2c66093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::axion_mass_temp</definition>
        <argsstring>(double T, double beta, double Tchi)</argsstring>
        <name>axion_mass_temp</name>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Tchi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1649" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1649" bodyend="1654"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1aa2551575aaed0555882daa211c70eaaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::equation_Tosc</definition>
        <argsstring>(double T, void *params)</argsstring>
        <name>equation_Tosc</name>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1662" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1662" bodyend="1674"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1abcb574be92ce2e91d2afce6793e3404b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_AxionOscillationTemperature</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_AxionOscillationTemperature</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1677" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1677" bodyend="1731"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1aa71b11cff98681ab7a11a84787978f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gambit::DarkBit::scal_field_eq</definition>
        <argsstring>(double tau, const double y[], double f[], void *params)</argsstring>
        <name>scal_field_eq</name>
        <param>
          <type>double</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>y</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>f</declname>
          <array>[]</array>
        </param>
        <param>
          <type>void *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1737" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1737" bodyend="1750"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a4e8dc590aeb31e2996d795bfde1b565d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gambit::DarkBit::scal_field_eq_jac</definition>
        <argsstring>(double tau, const double y[], double *dfdy, double dfdt[], void *params)</argsstring>
        <name>scal_field_eq_jac</name>
        <param>
          <type>double</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>y</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>dfdy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dfdt</declname>
          <array>[]</array>
        </param>
        <param>
          <type>void *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1753" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1753" bodyend="1773"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a6ce747ec8df10912bef8f1afeb275581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_oh2_Axions</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>RD_oh2_Axions</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1776" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1776" bodyend="1856"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1adf750d3d49f4154b9c36d506c37dca24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_RParameter</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_RParameter</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Capabilities relating to astrophysical observations (R-parameter, H.E.S.S. telescope search, cooling hints). </para>
        </briefdescription>
        <detaileddescription>
<para>Supported models: GeneralALP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1875" column="11" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1875" bodyend="1898"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a38ad26760010cadc44cafb6b59bfa734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_RParameter</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_RParameter</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1901" column="11" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1901" bodyend="1913"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a9b7e838d74ca184b7800611e91fafa2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_WDVar_G117B15A</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_WDVar_G117B15A</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1954" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1954" bodyend="1977"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a4a9d4dbb51ce5aaa33290f3f6f94c82f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_WDVar_R548</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_WDVar_R548</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="1980" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="1980" bodyend="2003"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a78281a3104c7e959636f153d0a186408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_WDVar_PG1351489</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_WDVar_PG1351489</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="2006" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="2006" bodyend="2029"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a7e2560fa93d5f9c881f78bf94075b8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_WDVar_L192</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_WDVar_L192</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="2032" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="2032" bodyend="2055"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a189074ad18ba38720557ba59d03fecff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_SN1987A</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_SN1987A</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="2063" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="2063" bodyend="2078"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a4c73343a028e0cb51290775d06bfe283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_PhotonFluence_SN1987A_Conversion</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_PhotonFluence_SN1987A_Conversion</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="2086" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="2086" bodyend="2094"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a3ba75c6d406fcd1a8753cfdfb4f3992d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_PhotonFluence_SN1987A_Decay</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_PhotonFluence_SN1987A_Decay</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="2102" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="2102" bodyend="2113"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1ae9dca71a040bff0d6fe34bd37945d6d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_HESS_GCMF</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_HESS_GCMF</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="2120" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="2120" bodyend="2136"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1af2b664f1699afc60f657151334d6c2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_XENON1T_Anomaly</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_XENON1T_Anomaly</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Capability for the XENON1T likelihood from 2006.10035. </para>
        </briefdescription>
        <detaileddescription>
<para>The signal model consists of 3 components: Primakoff, ABC, and Fe57. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="2143" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="2143" bodyend="2248"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a7d899be7e63a6e6467af833fd11eff11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::dRdE</definition>
        <argsstring>(double E, void *params)</argsstring>
        <name>dRdE</name>
        <param>
          <type>double</type>
          <declname>E</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="2252" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="2252" bodyend="2259"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a9e7573b740c176b874649fbda2f63af6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_XENON1T_DM_Anomaly</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_XENON1T_DM_Anomaly</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="2261" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="2261" bodyend="2337"/>
      </memberdef>
      <memberdef kind="function" id="Axions_8cpp_1a1968375bc69a8b4ffb061cd59d94d88a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::calc_lnL_XENON1T_Anomaly_NuisanceParameters</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>calc_lnL_XENON1T_Anomaly_NuisanceParameters</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" line="2339" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Axions.cpp" bodystart="2339" bodyend="2344"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1af814869a1f2f1a3d357364ba08bf4b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_InitialStates</definition>
        <argsstring>(std::set&lt; std::string &gt; &amp;result)</argsstring>
        <name>cascadeMC_InitialStates</name>
        <param>
          <type>std::set&lt; std::string &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Identification of hard-process final states for which yield tables do not exist. </para>
        </briefdescription>
        <detaileddescription>
<sect2 id="Cascades_8cpp_1autotoc_md8">
<title>Structure</title>
<para>1) Go through process catalog and find all hard-process final states that require yields to be calculated with the cascade code. These will constitute initial states for the cascade code. To this end, check whether yield tables exist for two-body channels, and whether one-particle decay yield tables exist for single particles.</para>
<para>2) Calculate via the cascade code the missing energy spectra.</para>
<para>3) Put together the full spectrum. </para>
</sect2>
        </detaileddescription>
        <inbodydescription>
<para>Option ignore_all&lt;bool&gt;: Ignore all missing hard process final states (default false)</para>
<para>Option ignore_two_body&lt;bool&gt;: Ignore two-body missing final states (default false)</para>
<para>Option ignore_three_body&lt;bool&gt;: Ignore three-body missing final states (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="56" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="56" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a97edfd5270c5f0222aa120356445ccaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_FinalStates</definition>
        <argsstring>(std::set&lt; std::string &gt; &amp;states)</argsstring>
        <name>cascadeMC_FinalStates</name>
        <param>
          <type>std::set&lt; std::string &gt; &amp;</type>
          <declname>states</declname>
        </param>
        <briefdescription>
<para>Function for retrieving list of final states for cascade decays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="138" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="138" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a9c52c4c1754eef5e95456be41b2601bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_DecayTable</definition>
        <argsstring>(DarkBit::DecayChain::DecayTable &amp;table)</argsstring>
        <name>cascadeMC_DecayTable</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1DecayChain_1_1DecayTable" kindref="compound">DarkBit::DecayChain::DecayTable</ref> &amp;</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Function setting up the decay table used in decay chains. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="159" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="159" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a9d360a3cc724081297c6024ffb4e9143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_LoopManager</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>cascadeMC_LoopManager</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Loop manager for cascade decays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option cMC_maxEvents&lt;int&gt;: Maximum number of cascade MC runs (default 20000)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="181" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="181" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a45b12802136b30f507974354deecaa4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_EventCount</definition>
        <argsstring>(std::map&lt; std::string, int &gt; &amp;counts)</argsstring>
        <name>cascadeMC_EventCount</name>
        <param>
          <type>std::map&lt; std::string, int &gt; &amp;</type>
          <declname>counts</declname>
        </param>
        <briefdescription>
<para>Event counter for cascade decays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="240" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="240" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1ac4a562d66b2b97e5f8f8ecb3b3e35352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_GenerateChain</definition>
        <argsstring>(DarkBit::DecayChain::ChainContainer &amp;chain)</argsstring>
        <name>cascadeMC_GenerateChain</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1DecayChain_1_1ChainContainer" kindref="compound">DarkBit::DecayChain::ChainContainer</ref> &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
<para>Function for generating decay chains. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option cMC_maxChainLength&lt;int&gt;: Maximum chain length, -1 is infinite (default -1)</para>
<para>Option cMC_Emin&lt;double&gt;: Cutoff energy for cascade particles (default 0)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="263" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="263" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1aac6e88e0b90d505f694f626680c5df24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_sampleSimYield</definition>
        <argsstring>(const SimYieldTable &amp;table, const DarkBit::DecayChain::ChainParticle *endpoint, std::string finalState, const TH_ProcessCatalog &amp;catalog, std::map&lt; std::string, std::map&lt; std::string, SimpleHist &gt; &gt; &amp;histList, std::string initialState, double weight, int cMC_numSpecSamples)</argsstring>
        <name>cascadeMC_sampleSimYield</name>
        <param>
          <type>const <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const <ref refid="classGambit_1_1DarkBit_1_1DecayChain_1_1ChainParticle" kindref="compound">DarkBit::DecayChain::ChainParticle</ref> *</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>finalState</declname>
        </param>
        <param>
          <type>const <ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">TH_ProcessCatalog</ref> &amp;</type>
          <declname>catalog</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::map&lt; std::string, <ref refid="structGambit_1_1DarkBit_1_1SimpleHist" kindref="compound">SimpleHist</ref> &gt; &gt; &amp;</type>
          <declname>histList</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>initialState</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cMC_numSpecSamples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for sampling SimYieldTables (tabulated spectra). This is a convenience function used in cascadeMC_Histograms, and does not have an associated capability. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="299" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="299" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a270268be9d8a3c7cc0df0c757eed789f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_Histograms</definition>
        <argsstring>(std::map&lt; std::string, std::map&lt; std::string, SimpleHist &gt; &gt; &amp;result)</argsstring>
        <name>cascadeMC_Histograms</name>
        <param>
          <type>std::map&lt; std::string, std::map&lt; std::string, <ref refid="structGambit_1_1DarkBit_1_1SimpleHist" kindref="compound">SimpleHist</ref> &gt; &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Function responsible for histogramming, and evaluating end conditions for event loop. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option cMC_numSpecSamples&lt;int&gt;: number of samples to draw from tabulated spectra (default 25)</para>
<para>Option cMC_endCheckFrequency: number of events to wait between successive checks of the convergence criteria (default 25)</para>
<para>Option cMC_gammaBGPower: power-law slope to assume for astrophysical background (default -2.5)</para>
<para>Option cMC_gammaRelError: max allowed relative error in bin with highest expected signal-to-background (default 0.20)</para>
<para>Option cMC_NhistBins&lt;int&gt;: Number of histogram bins (default 140)</para>
<para>Option cMC_binLow&lt;double&gt;: Histogram min energy in GeV (default 0.001)</para>
<para>Option cMC_binHigh&lt;double&gt;: Histogram max energy in GeV (default 10000)</para>
<para>@TODO: consider implementing specific convergence criteria for other final states</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="427" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="427" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a37a6c495b5256b8ca43491f22fe344d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_fetchSpectra</definition>
        <argsstring>(std::map&lt; std::string, daFunk::Funk &gt; &amp;spectra, std::string finalState, const std::set&lt; std::string &gt; &amp;ini, const std::set&lt; std::string &gt; &amp;fin, const std::map&lt; std::string, std::map&lt; std::string, SimpleHist &gt; &gt; &amp;h, const std::map&lt; std::string, int &gt; &amp;eventCounts)</argsstring>
        <name>cascadeMC_fetchSpectra</name>
        <param>
          <type>std::map&lt; std::string, daFunk::Funk &gt; &amp;</type>
          <declname>spectra</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>finalState</declname>
        </param>
        <param>
          <type>const std::set&lt; std::string &gt; &amp;</type>
          <declname>ini</declname>
        </param>
        <param>
          <type>const std::set&lt; std::string &gt; &amp;</type>
          <declname>fin</declname>
        </param>
        <param>
          <type>const std::map&lt; std::string, std::map&lt; std::string, <ref refid="structGambit_1_1DarkBit_1_1SimpleHist" kindref="compound">SimpleHist</ref> &gt; &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const std::map&lt; std::string, int &gt; &amp;</type>
          <declname>eventCounts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function for getting a daFunk::Funk object of a given spectrum. This function has no associated capability. Function retrieving specific spectra (like cascadeMC_gammaSpectra) should call this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="680" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="680" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a1a82edf09ca634be4eddfe8b18bb09f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::print_spectrum_debug_info</definition>
        <argsstring>(const str &amp;fs, const std::map&lt; std::string, daFunk::Funk &gt; &amp;spectra)</argsstring>
        <name>print_spectrum_debug_info</name>
        <param>
          <type>const str &amp;</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const std::map&lt; std::string, daFunk::Funk &gt; &amp;</type>
          <declname>spectra</declname>
        </param>
        <briefdescription>
<para>Debug print function for cascase spectra. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="733" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="733" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1adb0d1580949dcbf94725377b21b002c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_gammaSpectra</definition>
        <argsstring>(std::map&lt; std::string, daFunk::Funk &gt; &amp;spectra)</argsstring>
        <name>cascadeMC_gammaSpectra</name>
        <param>
          <type>std::map&lt; std::string, daFunk::Funk &gt; &amp;</type>
          <declname>spectra</declname>
        </param>
        <briefdescription>
<para>Function requesting and returning gamma ray spectra from cascade decays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="750" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="750" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a31dabca794755caaae3a46d1198e9783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_electronSpectra</definition>
        <argsstring>(std::map&lt; std::string, daFunk::Funk &gt; &amp;spectra)</argsstring>
        <name>cascadeMC_electronSpectra</name>
        <param>
          <type>std::map&lt; std::string, daFunk::Funk &gt; &amp;</type>
          <declname>spectra</declname>
        </param>
        <briefdescription>
<para>Function requesting and returning electron spectra from cascade decays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="762" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="762" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a9d6ad47b6c1dd40c170d8edc34ee6571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_positronSpectra</definition>
        <argsstring>(std::map&lt; std::string, daFunk::Funk &gt; &amp;spectra)</argsstring>
        <name>cascadeMC_positronSpectra</name>
        <param>
          <type>std::map&lt; std::string, daFunk::Funk &gt; &amp;</type>
          <declname>spectra</declname>
        </param>
        <briefdescription>
<para>Function requesting and returning positron spectra from cascade decays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="774" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="774" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a2e4f91f825c9443eba658d013e200073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_antiprotonSpectra</definition>
        <argsstring>(std::map&lt; std::string, daFunk::Funk &gt; &amp;spectra)</argsstring>
        <name>cascadeMC_antiprotonSpectra</name>
        <param>
          <type>std::map&lt; std::string, daFunk::Funk &gt; &amp;</type>
          <declname>spectra</declname>
        </param>
        <briefdescription>
<para>Function requesting and returning pbar spectra from cascade decays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="786" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="786" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="Cascades_8cpp_1a0396900e4afa5a304d34ba9572d89133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::cascadeMC_antideuteronSpectra</definition>
        <argsstring>(std::map&lt; std::string, daFunk::Funk &gt; &amp;spectra)</argsstring>
        <name>cascadeMC_antideuteronSpectra</name>
        <param>
          <type>std::map&lt; std::string, daFunk::Funk &gt; &amp;</type>
          <declname>spectra</declname>
        </param>
        <briefdescription>
<para>Function requesting and returning Dbar spectra from cascade decays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" line="798" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/Cascades.cpp" bodystart="798" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a080ff504af174d45183f07ebf3c97741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::WIMP_properties</definition>
        <argsstring>(WIMPprops &amp;props)</argsstring>
        <name>WIMP_properties</name>
        <param>
          <type>WIMPprops &amp;</type>
          <declname>props</declname>
        </param>
        <briefdescription>
<para>Retrieve the struct of WIMP properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="64" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="64" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a1a65ac2306dd60d61fff98af4701275b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::mwimp_generic</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>mwimp_generic</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Retrieve the DM mass in GeV for generic models (GeV) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="100" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a2e0ecf8d9feefe7a48c2c9c03ce89095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::spinwimpx2_generic</definition>
        <argsstring>(unsigned int &amp;result)</argsstring>
        <name>spinwimpx2_generic</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Retrieve the DM spin (times two) generic models. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="108" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a2929a375399c7f6112b91a8b9735bac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::wimp_sc_generic</definition>
        <argsstring>(bool &amp;result)</argsstring>
        <name>wimp_sc_generic</name>
        <param>
          <type>bool &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Retrieve whether or not the DM is self conjugate or not. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="115" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a350f9c32cb7e15e90599b89280f0ed5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::sigmav_late_universe</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>sigmav_late_universe</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Retrieve the total thermally-averaged annihilation cross-section for indirect detection (cm^3 / s). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="124" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="124" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a2f7df5b37a690c19ae3ade9802615591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::sigmav_late_universe_MicrOmegas</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>sigmav_late_universe_MicrOmegas</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="147" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="147" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a47cfb4f0c5ee54a13d2464f23db17602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DM_process_from_ProcessCatalog</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DM_process_from_ProcessCatalog</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Information about the nature of the DM process in question (i.e. decay or annihilation) to use the correct scaling for ID in terms of the DM density, phase space, etc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="168" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="168" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a9a7cb6ab2fb07ac03549886768daac72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::profile_gNFW</definition>
        <argsstring>(double rhos, double rs, double alpha, double beta, double gamma, double r)</argsstring>
        <name>profile_gNFW</name>
        <param>
          <type>double</type>
          <declname>rhos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Generalized NFW dark matter halo profile function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="197" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="197" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a454da1ed6733f1e0c50255b862c207be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::profile_Einasto</definition>
        <argsstring>(double rhos, double rs, double alpha, double r)</argsstring>
        <name>profile_Einasto</name>
        <param>
          <type>double</type>
          <declname>rhos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Einasto dark matter halo profile function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="201" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="201" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1afe02088f5b0ea21708d56c5380ed7747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::GalacticHalo_gNFW</definition>
        <argsstring>(GalacticHaloProperties &amp;result)</argsstring>
        <name>GalacticHalo_gNFW</name>
        <param>
          <type>GalacticHaloProperties &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Module function to generate GalacticHaloProperties for gNFW profile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="205" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="205" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1ad750ce4cfc57d0b47c2a2f56c8a4ab9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::GalacticHalo_Einasto</definition>
        <argsstring>(GalacticHaloProperties &amp;result)</argsstring>
        <name>GalacticHalo_Einasto</name>
        <param>
          <type>GalacticHaloProperties &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Module function to generate GalacticHaloProperties for Einasto profile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="219" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="219" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a61a1c8167ecfdebe66974cad691f65ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::ExtractLocalMaxwellianHalo</definition>
        <argsstring>(LocalMaxwellianHalo &amp;result)</argsstring>
        <name>ExtractLocalMaxwellianHalo</name>
        <param>
          <type>LocalMaxwellianHalo &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Module function providing local density and velocity dispersion parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="231" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="231" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit_8cpp_1a22f01d5a5b9da2655c7d7d2979b8c42f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::UnitTest_DarkBit</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>UnitTest_DarkBit</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Central unit test routine. </para>
        </briefdescription>
        <detaileddescription>
<para>Dumps various DM related results into yaml files for later inspection. </para>
        </detaileddescription>
        <inbodydescription>
<para>Option filename&lt;std::string&gt;: Output filename (default UnitTest.yaml)</para>
<para>Option GA_AnnYield::Emin&lt;double&gt;: Minimum energy in GeV (default 0.1)</para>
<para>Option GA_AnnYield::Emax&lt;double&gt;: Maximum energy in GeV (default 1e4)</para>
<para>Option GA_AnnYield::nbins&lt;int&gt;: Number of energy bins (default 26)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" line="304" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit.cpp" bodystart="304" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__types_8cpp_1a3949ada7e5af58b1d137e30008373920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::get_finalState_mass</definition>
        <argsstring>(const std::string &amp;finalState)</argsstring>
        <name>get_finalState_mass</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>finalState</declname>
        </param>
        <briefdescription>
<para>Helper function to get the mass of a given final state particle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" line="93" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DarkBit_types.cpp" bodystart="93" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="DiracSingletDM_8cpp_1aed91db7f1f45224bac86bcb3f53f79c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatter_ID_DiracSingletDM</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatter_ID_DiracSingletDM</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DiracSingletDM.cpp" line="206" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DiracSingletDM.cpp" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="DiracSingletDM_8cpp_1a7c0a5a340e75e8cfbfe1ceae2beb7c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatterConj_ID_DiracSingletDM</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatterConj_ID_DiracSingletDM</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DiracSingletDM.cpp" line="207" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DiracSingletDM.cpp" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="DiracSingletDM_8cpp_1a0619d0643eee0371082603ddbfef70ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_nonrel_WCs_DiracSingletDM_Z2</definition>
        <argsstring>(NREO_DM_nucleon_couplings &amp;result)</argsstring>
        <name>DD_nonrel_WCs_DiracSingletDM_Z2</name>
        <param>
          <type><ref refid="structGambit_1_1NREO__DM__nucleon__couplings" kindref="compound">NREO_DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Direct detection couplings for the DiracSingletDM_Z2 model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DiracSingletDM.cpp" line="210" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DiracSingletDM.cpp" bodystart="210" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="DiracSingletDM_8cpp_1a517015ef05a71210296a0f6fba4ddfa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_rel_WCs_flavscheme_DiracSingletDM_Z2</definition>
        <argsstring>(map_str_dbl &amp;result)</argsstring>
        <name>DD_rel_WCs_flavscheme_DiracSingletDM_Z2</name>
        <param>
          <type>map_str_dbl &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Relativistic Wilson Coefficients for direct detection, defined in the flavour scheme </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DiracSingletDM.cpp" line="241" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DiracSingletDM.cpp" bodystart="241" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="DiracSingletDM_8cpp_1a571c22c5590416ef24e2f27fd33361c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_DiracSingletDM_Z2</definition>
        <argsstring>(DarkBit::TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_DiracSingletDM_Z2</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">DarkBit::TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Set up process catalog for the DiracSingletDM_Z2 model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DiracSingletDM.cpp" line="275" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DiracSingletDM.cpp" bodystart="275" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1a6d4999bb4d3f2c75ddcd8efc616b0771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_couplings_DarkSUSY_DS5</definition>
        <argsstring>(DM_nucleon_couplings &amp;result)</argsstring>
        <name>DD_couplings_DarkSUSY_DS5</name>
        <param>
          <type><ref refid="structGambit_1_1DM__nucleon__couplings" kindref="compound">DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Get direct detection couplings from initialized DarkSUSY 5. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option rescale_couplings&lt;double&gt;: Rescaling factor for WIMP-nucleon couplings (default 1.)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="64" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="64" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1a2fd3dcbcf12612c812b8a3d5fc88c988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_couplings_DarkSUSY_MSSM</definition>
        <argsstring>(DM_nucleon_couplings &amp;result)</argsstring>
        <name>DD_couplings_DarkSUSY_MSSM</name>
        <param>
          <type><ref refid="structGambit_1_1DM__nucleon__couplings" kindref="compound">DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Get direct detection couplings from DarkSUSY 6 initialized with MSSM module. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option rescale_couplings&lt;double&gt;: Rescaling factor for WIMP-nucleon couplings (default 1.)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="149" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="149" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1a7bc9a823405d12b79f05629dbe8217c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_couplings_MicrOmegas</definition>
        <argsstring>(DM_nucleon_couplings &amp;result)</argsstring>
        <name>DD_couplings_MicrOmegas</name>
        <param>
          <type><ref refid="structGambit_1_1DM__nucleon__couplings" kindref="compound">DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Get direct detection couplings from initialized MicrOmegas. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="235" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="235" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1a6c8dc089f01db4a962bc86c02aa041c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::sigma_SI_p_simple</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>sigma_SI_p_simple</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Simple calculator of the spin-independent WIMP-proton cross-section. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="302" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="302" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1ad22ead615025e03e55c52836978c379e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::sigma_SI_n_simple</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>sigma_SI_n_simple</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Simple calculator of the spin-independent WIMP-neutron cross-section. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="311" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="311" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1a8d966262752d4f572ced693c6778d80e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::sigma_SD_p_simple</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>sigma_SD_p_simple</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Simple calculator of the spin-dependent WIMP-proton cross-section. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="320" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="320" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1a04f1ddf07c398114c874a5b93acff40d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::sigma_SD_n_simple</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>sigma_SD_n_simple</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Simple calculator of the spin-dependent WIMP-neutron cross-section. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="329" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="329" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1af27330ffdf30698645eecb80ac4544b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::sigma_SI_vnqn_FermionicHiggsPortal</definition>
        <argsstring>(map_intpair_dbl &amp;result)</argsstring>
        <name>sigma_SI_vnqn_FermionicHiggsPortal</name>
        <param>
          <type>map_intpair_dbl &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculation of SI cross sections at a reference momentum q0 for the fermionic Higgs portal models If required add equivalent function for spin-dependent cross section </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="340" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="340" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1a22e585d2858735bfd6d3e20effb1f647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::sigma_SD_vnqn_FermionicHiggsPortal</definition>
        <argsstring>(map_intpair_dbl &amp;result)</argsstring>
        <name>sigma_SD_vnqn_FermionicHiggsPortal</name>
        <param>
          <type>map_intpair_dbl &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculation of SD cross section at a reference momentum q0 for the fermionic Higgs portal models </para>
        </detaileddescription>
        <inbodydescription>
<para>There is no SD contribution to fermionic Higgs portal models So this is just set to 0 (or close enough) Modify if needed</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="362" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="362" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1af8f7ac04e9a585b594bb5093333f4448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DDCalc_Couplings_WIMP_nucleon</definition>
        <argsstring>(DD_coupling_container &amp;result)</argsstring>
        <name>DDCalc_Couplings_WIMP_nucleon</name>
        <param>
          <type><ref refid="structGambit_1_1DD__coupling__container" kindref="compound">DD_coupling_container</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>DDCalc initialisation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="381" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="381" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="DirectDetection_8cpp_1a881e2b8afe6c2f6c61dae85d268cee7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DDCalc_Couplings_NR_WCs</definition>
        <argsstring>(DD_coupling_container &amp;result)</argsstring>
        <name>DDCalc_Couplings_NR_WCs</name>
        <param>
          <type><ref refid="structGambit_1_1DD__coupling__container" kindref="compound">DD_coupling_container</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" line="389" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DirectDetection.cpp" bodystart="389" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="DMEFT_8cpp_1ac1d7ffe0ed698b29bcc646e477452b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_DMEFT</definition>
        <argsstring>(DarkBit::TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_DMEFT</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">DarkBit::TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DMEFT.cpp" line="64" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DMEFT.cpp" bodystart="64" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="DMEFT_8cpp_1a2c1e566a131ac567d5bfd10ec66f2c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatter_ID_DMEFT</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatter_ID_DMEFT</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DMEFT.cpp" line="203" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DMEFT.cpp" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="DMEFT_8cpp_1afddb02be2ca94af71dc3ba6bcc003c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatterConj_ID_DMEFT</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatterConj_ID_DMEFT</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DMEFT.cpp" line="205" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DMEFT.cpp" bodystart="205" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="DMEFT_8cpp_1a96414f3f3e02c5597731daa1ef59a183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_rel_WCs_flavscheme_DMEFT</definition>
        <argsstring>(map_str_dbl &amp;result)</argsstring>
        <name>DD_rel_WCs_flavscheme_DMEFT</name>
        <param>
          <type>map_str_dbl &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Relativistic Wilson Coefficients for direct detection <ref refid="classGambit_1_1DarkBit_1_1DMEFT" kindref="compound">DMEFT</ref> basis is the same as that used in DirectDM </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DMEFT.cpp" line="209" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/DMEFT.cpp" bodystart="209" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="EnergyInjection_8cpp_1a953a1705ad1a6b2d3aa97696b3a071b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatter_ID_AnnihilatingDM_mixture</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatter_ID_AnnihilatingDM_mixture</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" line="27" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="EnergyInjection_8cpp_1a5135f80db3f12669389044ed538cb3e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatterConj_ID_AnnihilatingDM_mixture</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatterConj_ID_AnnihilatingDM_mixture</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" line="28" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="EnergyInjection_8cpp_1affd95a6c15b3fcbe9e4585a5865c32a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatter_ID_DecayingDM_mixture</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatter_ID_DecayingDM_mixture</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" line="30" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="EnergyInjection_8cpp_1a5678047f05371355649ab028d3669522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatterConj_ID_DecayingDM_mixture</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatterConj_ID_DecayingDM_mixture</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" line="31" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="EnergyInjection_8cpp_1a0f0d5344ca5d6ca39b69c4f90ff988fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::energy_injection_spectrum_ProcessCatalog</definition>
        <argsstring>(DarkAges::Energy_injection_spectrum &amp;spectrum)</argsstring>
        <name>energy_injection_spectrum_ProcessCatalog</name>
        <param>
          <type><ref refid="structGambit_1_1DarkAges_1_1Energy__injection__spectrum" kindref="compound">DarkAges::Energy_injection_spectrum</ref> &amp;</type>
          <declname>spectrum</declname>
        </param>
        <briefdescription>
<para>The energy injection spectrum from the ProcessCatalog and FCMC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" line="34" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" bodystart="34" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="EnergyInjection_8cpp_1a496a78aaacfac50d80503897ab5762e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_AnnihilatingDM_mixture</definition>
        <argsstring>(TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_AnnihilatingDM_mixture</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Set up process catalog for AnnihilatingDM_mixture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" line="139" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" bodystart="139" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="EnergyInjection_8cpp_1a1bce7ba309faa5a6f7f1502eedf55026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_DecayingDM_mixture</definition>
        <argsstring>(TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_DecayingDM_mixture</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Set up process catalog for DecayingDM_mixture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" line="214" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/EnergyInjection.cpp" bodystart="214" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a044f84589febb5bc4382fbf92d9cf971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>daFunk::Funk</type>
        <definition>daFunk::Funk Gambit::DarkBit::boost_dNdE</definition>
        <argsstring>(daFunk::Funk dNdE, double gamma, double mass)</argsstring>
        <name>boost_dNdE</name>
        <param>
          <type>daFunk::Funk</type>
          <declname>dNdE</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <briefdescription>
<para>Boosts an energy spectrum of isotropic particles into another frame (and isotropizes again). Parameters: gamma: Lorentz boost factor dNdE: Spectrum mass: mass of particle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="53" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="53" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>daFunk::Funk</type>
        <definition>daFunk::Funk Gambit::DarkBit::getYield</definition>
        <argsstring>(const str &amp;yield, const bool is_annihilation, const str &amp;DMid, const str &amp;DMbarid, TH_ProcessCatalog catalog, SimYieldTable table, double line_width, stringFunkMap cascadeMC_spectra)</argsstring>
        <name>getYield</name>
        <param>
          <type>const str &amp;</type>
          <declname>yield</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>is_annihilation</declname>
        </param>
        <param>
          <type>const str &amp;</type>
          <declname>DMid</declname>
        </param>
        <param>
          <type>const str &amp;</type>
          <declname>DMbarid</declname>
        </param>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">TH_ProcessCatalog</ref></type>
          <declname>catalog</declname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>double</type>
          <declname>line_width</declname>
        </param>
        <param>
          <type>stringFunkMap</type>
          <declname>cascadeMC_spectra</declname>
        </param>
        <briefdescription>
<para>Helper function returning yield from a given DM process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="81" column="18" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="81" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1afc91e2a127d483fd1215573df7a9f164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::GA_AnnYield_General</definition>
        <argsstring>(daFunk::Funk &amp;result)</argsstring>
        <name>GA_AnnYield_General</name>
        <param>
          <type>daFunk::Funk &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine to derive gamma-ray annihilation yield. This function returns k*dN/dE*(sv)/mDM**2 (E, v) [cm^3/s/GeV^3] the energy spectrum of photons times sigma*v/m^2, as function of energy (in GeV) and velocity (as a fraction of c), multiplied by k=1 for self-conjugate DM or k=1/2 for non-self conjugate. By default, only the v=0 component is calculated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option line_width&lt;double&gt;: Set relative line width used in gamma-ray spectra (default 0.03)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="282" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="282" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a922fc2bb2d83425ca6f7b6175fcf418a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::GA_DecayYield_General</definition>
        <argsstring>(daFunk::Funk &amp;result)</argsstring>
        <name>GA_DecayYield_General</name>
        <param>
          <type>daFunk::Funk &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine to derive gamma-ray decay yield. This function returns dN/dE*(Gamma)/mDM (E) [1/s/GeV^2] the energy spectrum of photons times Gamma/m, as function of energy (in GeV). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option line_width&lt;double&gt;: Set relative line width used in gamma-ray spectra (default 0.03)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="297" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="297" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a05ddd905a5fb6ec36e3f96f8700dbdb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::electron_AnnYield_General</definition>
        <argsstring>(daFunk::Funk &amp;result)</argsstring>
        <name>electron_AnnYield_General</name>
        <param>
          <type>daFunk::Funk &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine to derive electron annihilation yield. This function returns k*dN/dE*(sv)/mDM**2 (E, v) [cm^3/s/GeV^3] the energy spectrum of electrons times sigma*v/m^2, as function of energy (in GeV) and velocity (as a fraction of c), multiplied by k=1 for self-conjugate DM or k=1/2 for non-self conjugate. By default, only the v=0 component is calculated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option line_width&lt;double&gt;: Set relative line width used in gamma-ray spectra (default 0.03)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="313" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="313" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a14cc5d5e5a1795697a644cbf4f478dca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::electron_DecayYield_General</definition>
        <argsstring>(daFunk::Funk &amp;result)</argsstring>
        <name>electron_DecayYield_General</name>
        <param>
          <type>daFunk::Funk &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine to derive electron decay yield. This function returns dN/dE*(Gamma)/mDM (E) [1/s/GeV^2] the energy spectrum of electrons times Gamma/m, as function of energy (in GeV). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option line_width&lt;double&gt;: Set relative line width used in gamma-ray spectra (default 0.03)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="328" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="328" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1aed1387b7270539845bcf8939a5ef2d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::positron_AnnYield_General</definition>
        <argsstring>(daFunk::Funk &amp;result)</argsstring>
        <name>positron_AnnYield_General</name>
        <param>
          <type>daFunk::Funk &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine to derive positron annihilation yield. This function returns k*dN/dE*(sv)/mDM**2 (E, v) [cm^3/s/GeV^3] the energy spectrum of positrons times sigma*v/m^2, as function of energy (in GeV) and velocity (as a fraction of c), multiplied by k=1 for self-conjugate DM or k=1/2 for non-self conjugate. By default, only the v=0 component is calculated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option line_width&lt;double&gt;: Set relative line width used in gamma-ray spectra (default 0.03)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="344" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="344" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1af56a531f9ab7c0e5fce1fd4535a2779b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::positron_DecayYield_General</definition>
        <argsstring>(daFunk::Funk &amp;result)</argsstring>
        <name>positron_DecayYield_General</name>
        <param>
          <type>daFunk::Funk &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine to derive positron decay yield. This function returns dN/dE*(Gamma)/mDM (E) [1/s/GeV^2] the energy spectrum of positrons times Gamma/m, as function of energy (in GeV). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option line_width&lt;double&gt;: Set relative line width used in gamma-ray spectra (default 0.03)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="359" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="359" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a656c3a7cc030833a626b7a51d814331f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::antiproton_AnnYield_General</definition>
        <argsstring>(daFunk::Funk &amp;result)</argsstring>
        <name>antiproton_AnnYield_General</name>
        <param>
          <type>daFunk::Funk &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine to derive antiproton annihilation yield. This function returns k*dN/dE*(sv)/mDM**2 (E, v) [cm^3/s/GeV^3] the energy spectrum of antiprotons times sigma*v/m^2, as function of energy (in GeV) and velocity (as a fraction of c), multiplied by k=1 for self-conjugate DM or k=1/2 for non-self conjugate. By default, only the v=0 component is calculated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option line_width&lt;double&gt;: Set relative line width used in gamma-ray spectra (default 0.03)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="375" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="375" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a598ae3a6bf8ff6213ea3c43de1fd4e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::antiproton_DecayYield_General</definition>
        <argsstring>(daFunk::Funk &amp;result)</argsstring>
        <name>antiproton_DecayYield_General</name>
        <param>
          <type>daFunk::Funk &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine to derive antiproton decay yield. This function returns dN/dE*(Gamma)/mDM (E) [1/s/GeV^2] the energy spectrum of antiprotons times Gamma/m, as function of energy (in GeV). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option line_width&lt;double&gt;: Set relative line width used in gamma-ray spectra (default 0.03)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="390" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="390" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1ad12e3f79e1e69ef234ca7b0527d96678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::antideuteron_AnnYield_General</definition>
        <argsstring>(daFunk::Funk &amp;result)</argsstring>
        <name>antideuteron_AnnYield_General</name>
        <param>
          <type>daFunk::Funk &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine to derive antideuteron annihilation yield. This function returns k*dN/dE*(sv)/mDM**2 (E, v) [cm^3/s/GeV^3] the energy spectrum of antideuterons times sigma*v/m^2, as function of energy (in GeV) and velocity (as a fraction of c), multiplied by k=1 for self-conjugate DM or k=1/2 for non-self conjugate. By default, only the v=0 component is calculated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option line_width&lt;double&gt;: Set relative line width used in gamma-ray spectra (default 0.03)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="406" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="406" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1abeb5b35e2ab0baf5a38a8b8fc73a4ac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::antideuteron_DecayYield_General</definition>
        <argsstring>(daFunk::Funk &amp;result)</argsstring>
        <name>antideuteron_DecayYield_General</name>
        <param>
          <type>daFunk::Funk &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine to derive antideuteron decay yield. This function returns dN/dE*(Gamma)/mDM (E) [1/s/GeV^2] the energy spectrum of antideuterons times Gamma/m, as function of energy (in GeV). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option line_width&lt;double&gt;: Set relative line width used in gamma-ray spectra (default 0.03)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="421" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="421" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a44bfdb5a633cc2cc5d1b72ca96e69091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::Combine_SimYields</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>Combine_SimYields</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Combined <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> containing final yields of all stable particles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="436" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="436" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a3b67726bacf740e5bb20c760b706d24f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::GA_SimYieldTable_DS5</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>GA_SimYieldTable_DS5</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Gamma-ray <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on DarkSUSY5 tabulated results. (DS6 below) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option allow_yield_extrapolation&lt;bool&gt;: Spectra extrapolated for masses beyond Pythia results (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="452" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="452" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1ac2606238040b7887a2dc1854665a6d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref></type>
        <definition>SimYieldTable Gambit::DarkBit::SimYieldTable_DarkSUSY</definition>
        <argsstring>(const str &amp;yield, const bool allow_yield_extrapolation, double(*dsanyield)(double &amp;, double &amp;, int &amp;, char *, int &amp;, int &amp;, int &amp;), safe_ptr&lt; Options &gt; runOptions)</argsstring>
        <name>SimYieldTable_DarkSUSY</name>
        <param>
          <type>const str &amp;</type>
          <declname>yield</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>allow_yield_extrapolation</declname>
        </param>
        <param>
          <type>double(*)(double &amp;, double &amp;, int &amp;, char *, int &amp;, int &amp;, int &amp;)</type>
          <declname>dsanyield</declname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr</ref>&lt; Options &gt;</type>
          <declname>runOptions</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on DarkSUSY6 tabulated results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="585" column="19" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="585" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a013113a2f75a02da4eb2b936db6e0685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::GA_SimYieldTable_DarkSUSY</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>GA_SimYieldTable_DarkSUSY</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Gamma-ray <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on DarkSUSY6 tabulated results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option allow_yield_extrapolation&lt;bool&gt;: Spectra extrapolated for masses beyond Pythia results (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="732" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="732" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1aa322856334c1d7f7daf04539de2bec3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::positron_SimYieldTable_DarkSUSY</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>positron_SimYieldTable_DarkSUSY</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Positron <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on DarkSUSY6 tabulated results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option allow_yield_extrapolation&lt;bool&gt;: Spectra extrapolated for masses beyond Pythia results (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="747" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="747" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1aaf5d82a0edcff73727936e38a7e17f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::antiproton_SimYieldTable_DarkSUSY</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>antiproton_SimYieldTable_DarkSUSY</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Anti-proton <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on DarkSUSY6 tabulated results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option allow_yield_extrapolation&lt;bool&gt;: Spectra extrapolated for masses beyond Pythia results (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="762" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="762" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1ab5faf1c8ee81f61ce4bf25c722836339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::antideuteron_SimYieldTable_DarkSUSY</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>antideuteron_SimYieldTable_DarkSUSY</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Anti-deuteron <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on DarkSUSY6 tabulated results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option allow_yield_extrapolation&lt;bool&gt;: Spectra extrapolated for masses beyond Pythia results (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="777" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="777" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a15714f42fe847496bbf18ac7ad1168e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::GA_SimYieldTable_MicrOmegas</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>GA_SimYieldTable_MicrOmegas</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Gamma-ray <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on MicrOmegas tabulated results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="792" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="792" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a87a0574cf6830c4f975f45f800b3ac60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::positron_SimYieldTable_MicrOmegas</definition>
        <argsstring>(SimYieldTable &amp;)</argsstring>
        <name>positron_SimYieldTable_MicrOmegas</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Positron <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on MicrOmegas tabulated results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="912" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="912" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1aaefba896670a984e0e2b6c5ae33d4ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref></type>
        <definition>SimYieldTable Gambit::DarkBit::SimYieldTable_PPPC</definition>
        <argsstring>(const str &amp;yield, bool allow_yield_extrapolation, double(*PPPC_yield)(double, double, std::string), safe_ptr&lt; Options &gt; runOptions)</argsstring>
        <name>SimYieldTable_PPPC</name>
        <param>
          <type>const str &amp;</type>
          <declname>yield</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_yield_extrapolation</declname>
        </param>
        <param>
          <type>double(*)(double, double, std::string)</type>
          <declname>PPPC_yield</declname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr</ref>&lt; Options &gt;</type>
          <declname>runOptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="924" column="19" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="924" bodyend="1057"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1ae24cb042ba6c9644dae7e51bad6adda9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::PPPC_dNdE_gamma</definition>
        <argsstring>(double m, double x, std::string channel)</argsstring>
        <name>PPPC_dNdE_gamma</name>
        <param>
          <type>double</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Conveninence function to get the gamma yield from the interpolated PPPC tables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/PPPC.cpp" line="189" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/PPPC.cpp" bodystart="189" bodyend="193" declfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" declline="1061" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a548db737a4fc74dbb0c8ea6e178148f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::PPPC_dNdE_positron</definition>
        <argsstring>(double m, double x, std::string channel)</argsstring>
        <name>PPPC_dNdE_positron</name>
        <param>
          <type>double</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Conveninence function to get the positiron yield from the interpolated PPPC tables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/PPPC.cpp" line="196" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/PPPC.cpp" bodystart="196" bodyend="200" declfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" declline="1062" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a13d31f9e22c377db5a4df5d87dc3c99a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::GA_SimYieldTable_PPPC</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>GA_SimYieldTable_PPPC</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Gamma-ray <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on PPPC4DMID Cirelli et al. 2010. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option allow_yield_extrapolation&lt;bool&gt;: Spectra extrapolated for masses beyond Pythia results (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1065" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1065" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a1932f64f1d51fa3d0eb375c93befeb18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::positron_SimYieldTable_PPPC</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>positron_SimYieldTable_PPPC</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Positron <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on PPPC4DMID Cirelli et al. 2010. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option allow_yield_extrapolation&lt;bool&gt;: Spectra extrapolated for masses beyond Pythia results (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1081" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1081" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a68b0b3a18b697a8136b01e8474c61d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::GA_SimYieldTable_empty</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>GA_SimYieldTable_empty</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Bypasses to skip specific yields in FullSimYieldTable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1097" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1097" bodyend="1101"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a246d214cbaff9deb5c30e4bfdbe553ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::positron_SimYieldTable_empty</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>positron_SimYieldTable_empty</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1103" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1103" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1adfaeda579d0ba77518a0a1f7256657f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::antiproton_SimYieldTable_empty</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>antiproton_SimYieldTable_empty</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1109" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1109" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1aa393d949639786d078d1bde793a17d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::antideuteron_SimYieldTable_empty</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>antideuteron_SimYieldTable_empty</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1115" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1115" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a49f9c1b957308ac474c9fd18e1a82714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::electron_SimYieldTable_from_positron_SimYieldTable</definition>
        <argsstring>(SimYieldTable &amp;result)</argsstring>
        <name>electron_SimYieldTable_from_positron_SimYieldTable</name>
        <param>
          <type><ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Electron <ref refid="classGambit_1_1DarkBit_1_1SimYieldTable" kindref="compound">SimYieldTable</ref> based on positron table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1122" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1122" bodyend="1132"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a2cf71557344faf0cb23abe0765c12d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gambit::DarkBit::dump</definition>
        <argsstring>(const str &amp;filename, const daFunk::Funk &amp;spectrum)</argsstring>
        <name>dump</name>
        <param>
          <type>const str &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const daFunk::Funk &amp;</type>
          <declname>spectrum</declname>
        </param>
        <briefdescription>
<para>Helper function to dump any spectra. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1137" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1137" bodyend="1155"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a76e1a09054ddce13600d76fe83cb7f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::dump_gammaSpectrum</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>dump_gammaSpectrum</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Helper function to dump gamma-ray spectra. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1158" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1158" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a2d0b250951a585dee724eb68db655e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::dump_electronSpectrum</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>dump_electronSpectrum</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Helper function to dump electron spectra. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1170" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1170" bodyend="1179"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a76da5d131b4e86104e73197a430fcd22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::dump_positronSpectrum</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>dump_positronSpectrum</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Helper function to dump positron spectra. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1182" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1182" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a42092eec2e56ba9f64ff2d17065dbc73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::dump_antiprotonSpectrum</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>dump_antiprotonSpectrum</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Helper function to dump anti-proton spectra. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1194" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1194" bodyend="1203"/>
      </memberdef>
      <memberdef kind="function" id="IndirectDetectionYields_8cpp_1a976f3e7918daee9f72bd14e6584b209c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::dump_antideuteronSpectrum</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>dump_antideuteronSpectrum</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Helper function to dump anti-deuteron spectra. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" line="1206" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp" bodystart="1206" bodyend="1215"/>
      </memberdef>
      <memberdef kind="function" id="MajoranaSingletDM_8cpp_1ae205083ef12f0e4b770e135ca1c9616d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatter_ID_MajoranaSingletDM</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatter_ID_MajoranaSingletDM</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MajoranaSingletDM.cpp" line="210" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MajoranaSingletDM.cpp" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="MajoranaSingletDM_8cpp_1ac0fedf4af12939865a7183c7eacb70d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatterConj_ID_MajoranaSingletDM</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatterConj_ID_MajoranaSingletDM</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MajoranaSingletDM.cpp" line="211" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MajoranaSingletDM.cpp" bodystart="211" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="MajoranaSingletDM_8cpp_1a7f2e34611d6080ad378ea62d68a991ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_nonrel_WCs_MajoranaSingletDM_Z2</definition>
        <argsstring>(NREO_DM_nucleon_couplings &amp;result)</argsstring>
        <name>DD_nonrel_WCs_MajoranaSingletDM_Z2</name>
        <param>
          <type><ref refid="structGambit_1_1NREO__DM__nucleon__couplings" kindref="compound">NREO_DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Direct detection couplings for the MajoranaSingletDM_Z2 model. Non-relativistic Wilson Coefficients for direct detection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MajoranaSingletDM.cpp" line="215" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MajoranaSingletDM.cpp" bodystart="215" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="MajoranaSingletDM_8cpp_1ac074e7bd9d2b5c13e8dce58c327c42d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_rel_WCs_flavscheme_MajoranaSingletDM_Z2</definition>
        <argsstring>(map_str_dbl &amp;result)</argsstring>
        <name>DD_rel_WCs_flavscheme_MajoranaSingletDM_Z2</name>
        <param>
          <type>map_str_dbl &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Relativistic Wilson Coefficients for direct detection, defined in the flavour scheme </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MajoranaSingletDM.cpp" line="246" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MajoranaSingletDM.cpp" bodystart="246" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="MajoranaSingletDM_8cpp_1a582b7e0c032f5767f23c8a958728d199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_MajoranaSingletDM_Z2</definition>
        <argsstring>(DarkBit::TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_MajoranaSingletDM_Z2</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">DarkBit::TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Set up process catalog for the MajoranaSingletDM_Z2 model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MajoranaSingletDM.cpp" line="280" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MajoranaSingletDM.cpp" bodystart="280" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="MSSM_8cpp_1a852ad69092430eded33c5f43ce78c124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::DarkBit::DSgamma3bdy</definition>
        <argsstring>(double(*IBfunc)(int &amp;, double &amp;, double &amp;), int IBch, double Eg, double E1, double M_DM, double m_1, double m_2)</argsstring>
        <name>DSgamma3bdy</name>
        <param>
          <type>double(*)(int &amp;, double &amp;, double &amp;)</type>
          <declname>IBfunc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>IBch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Eg</declname>
        </param>
        <param>
          <type>double</type>
          <declname>E1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>M_DM</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m_1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m_2</declname>
        </param>
        <briefdescription>
<para>Fully initialize DarkSUSY to the current model point. </para>
        </briefdescription>
        <detaileddescription>
<para>Only selected MSSM parameter spaces are implemented. Returns bool indicating if point initialization was successful, which is essentially always true for models that satisfy the dependency resolver.</para>
<para>Supported models: MSSM63atQ Wrapper around DarkSUSY kinematic functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MSSM.cpp" line="61" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MSSM.cpp" bodystart="61" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="MSSM_8cpp_1a348ef56b10fe0d7adfe73cd99a91d987" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_DS5_MSSM</definition>
        <argsstring>(DarkBit::TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_DS5_MSSM</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">DarkBit::TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Initialization of Process Catalog based on DarkSUSY 5 calculations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option ignore_three_body&lt;bool&gt;: Ignore three-body final states (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MSSM.cpp" line="100" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MSSM.cpp" bodystart="100" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="MSSM_8cpp_1a20c06f0ae5c51e03394f75860e46fd5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_DS_MSSM</definition>
        <argsstring>(DarkBit::TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_DS_MSSM</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">DarkBit::TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Initialization of Process Catalog based on DarkSUSY 6 calculations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option ignore_three_body&lt;bool&gt;: Ignore three-body final states (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MSSM.cpp" line="424" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MSSM.cpp" bodystart="424" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="MSSM_8cpp_1a9e3a7d17ef3864cbb46d52d2eb82cb05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatter_ID_MSSM</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatter_ID_MSSM</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MSSM.cpp" line="749" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MSSM.cpp" bodystart="749" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="MSSM_8cpp_1aacf485ef3ebf8ce64b503d43df313149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatterConj_ID_MSSM</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatterConj_ID_MSSM</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MSSM.cpp" line="776" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/MSSM.cpp" bodystart="776" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a89ac77d623f21ba8b39307c56b650251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_spectrum_MSSM</definition>
        <argsstring>(RD_spectrum_type &amp;result)</argsstring>
        <name>RD_spectrum_MSSM</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1RD__spectrum__type" kindref="compound">RD_spectrum_type</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Collects spectrum information about coannihilating particles, resonances and threshold energies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option CoannCharginosNeutralinos&lt;bool&gt;: Specify whether charginos and neutralinos are included in coannihilations (default: true)</para>
<para>Option CoannSfermions&lt;bool&gt;: Specify whether sfermions are included in coannihilations (default: true)</para>
<para>Option CoannMaxMass&lt;double&gt;: Maximal sparticle mass to be included in coannihilations, in units of DM mass (default: 1.6)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="47" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="47" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1ab6841cb0054851279854fa1456d218c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_spectrum_SUSY_DS5</definition>
        <argsstring>(RD_spectrum_type &amp;result)</argsstring>
        <name>RD_spectrum_SUSY_DS5</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1RD__spectrum__type" kindref="compound">RD_spectrum_type</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Collects spectrum information about coannihilating particles, resonances and threshold energies <ndash/> directly from DarkSUSY 5. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option CoannCharginosNeutralinos&lt;bool&gt;: Specify whether charginos and neutralinos are included in coannihilations (default: true)</para>
<para>Option CoannSfermions&lt;bool&gt;: Specify whether sfermions are included in coannihilations (default: true)</para>
<para>Option CoannMaxMass&lt;double&gt;: Maximal sparticle mass to be included in coannihilations, in units of DM mass (default: 1.6)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="192" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="192" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1ad580e53c59bb8d97a390401eef6296e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_spectrum_from_ProcessCatalog</definition>
        <argsstring>(RD_spectrum_type &amp;result)</argsstring>
        <name>RD_spectrum_from_ProcessCatalog</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1RD__spectrum__type" kindref="compound">RD_spectrum_type</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Collects information about resonances and threshold energies directly from the ProcessCatalog [NB: this assumes no coannihilating particles!]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="302" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="302" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a91ad397d72de0713e0ade011b6b63780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_spectrum_ordered_func</definition>
        <argsstring>(RD_spectrum_type &amp;result)</argsstring>
        <name>RD_spectrum_ordered_func</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1RD__spectrum__type" kindref="compound">RD_spectrum_type</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Order RD_spectrum object and derive coannihilation thresholds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="345" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="345" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a58e7a80beaa1f36ae06dcf05424ff548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_annrate_DS5prep_func</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>RD_annrate_DS5prep_func</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Some helper function to prepare evaluation of Weff from DarkSUSY 5. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="417" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="417" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a9d3045551f4e0a0c4ec7b07464dd0f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_annrate_DSprep_MSSM_func</definition>
        <argsstring>(int &amp;result)</argsstring>
        <name>RD_annrate_DSprep_MSSM_func</name>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Some helper function to prepare evaluation of Weff from DarkSUSY 6. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="480" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="480" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1aadfe065dd5b5645c3de28b8ef7a0d68f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_eff_annrate_DS_MSSM</definition>
        <argsstring>(double(*&amp;result)(double &amp;))</argsstring>
        <name>RD_eff_annrate_DS_MSSM</name>
        <param>
          <type>double(*&amp;)(double &amp;)</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Get Weff directly from initialized DarkSUSY. Note that these functions do not (and should not) correct Weff for non-self-conjugate dark matter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="527" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="527" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1aa07dddcbc5d8215c3434d82d4b11d449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_eff_annrate_DS5_MSSM</definition>
        <argsstring>(double(*&amp;result)(double &amp;))</argsstring>
        <name>RD_eff_annrate_DS5_MSSM</name>
        <param>
          <type>double(*&amp;)(double &amp;)</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="538" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="538" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1ac2f48d384ce79fef12757ba81b4c73f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_eff_annrate_from_ProcessCatalog</definition>
        <argsstring>(double(*&amp;result)(double &amp;))</argsstring>
        <name>RD_eff_annrate_from_ProcessCatalog</name>
        <param>
          <type>double(*&amp;)(double &amp;)</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Infer Weff from process catalog. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="555" column="12" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="555" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1aeabdd217c098d8501a8d77a3020864d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_oh2_DS_general</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>RD_oh2_DS_general</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine for calculation of relic density, using DarkSUSY 6+ Boltzmann solver. </para>
        </briefdescription>
        <detaileddescription>
<para>Requires:<itemizedlist>
<listitem><para>RD_thresholds_resonances from RD_spectrum_ordered</para>
</listitem><listitem><para>RD_eff_annrate (Weff) </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Option fast&lt;int&gt;: Numerical performance of Boltzmann solver in DS (default: 1) [NB: accurate is fast = 0 !]</para>
<para>Option timeout&lt;double&gt;: Maximum core time to allow for relic density calculation, in seconds (default: 600s)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="596" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="596" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a9fb0e521d1f3006f3145a5594b69ced3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_oh2_DS5_general</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>RD_oh2_DS5_general</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>General routine for calculation of relic density, using DarkSUSY 5 Boltzmann solver. </para>
        </briefdescription>
        <detaileddescription>
<para>Requires:<itemizedlist>
<listitem><para>RD_thresholds_resonances</para>
</listitem><listitem><para>RD_eff_annrate (Weff) </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Option timeout&lt;double&gt;: Maximum core time to allow for relic density calculation, in seconds (default: 600s)</para>
<para>Option fast&lt;int&gt;: Numerical performance of Boltzmann solver in DS (default: 1) [NB: accurate is fast = 0 !]</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="722" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="722" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1ad1c9ba6c836d432a60b691ecba28113a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_oh2_Xf_MicrOmegas</definition>
        <argsstring>(ddpair &amp;result)</argsstring>
        <name>RD_oh2_Xf_MicrOmegas</name>
        <param>
          <type>ddpair &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Relic density directly from a call of initialized MicrOmegas. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="977" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="977" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1af106281fc5c8e6f62f095dd5619c960b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_oh2_DarkSUSY_DS5</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>RD_oh2_DarkSUSY_DS5</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Relic density directly from a call of initialized DarkSUSY 5. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option omtype&lt;int&gt;: 0 no coann, 1 all coann (default 1)</para>
<para>Option fast&lt;int&gt;: 0 standard, 1 fast, 2 dirty (default 0)</para>
<para>Option timeout&lt;double&gt;: Maximum core time to allow for relic density calculation, in seconds (default: 600s)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="1002" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="1002" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a15741809278c5202b375d4731499c1ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_oh2_MicrOmegas</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>RD_oh2_MicrOmegas</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="1039" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="1039" bodyend="1045"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a472cd2aa8cd14f96c1fce36403b7e20e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::Xf_MicrOmegas</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>Xf_MicrOmegas</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="1047" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="1047" bodyend="1053"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a1966ea2986019a6d69a1f637d1b11782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::print_channel_contributions_MicrOmegas</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>print_channel_contributions_MicrOmegas</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="1056" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="1056" bodyend="1068"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a951756b4ad3639703301c08c3638f91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::get_semi_ann_MicrOmegas</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>get_semi_ann_MicrOmegas</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="1071" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="1071" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a5dae2f518361a7d2f970381486753413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::vSigma_freezeout_MicrOmegas</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>vSigma_freezeout_MicrOmegas</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Return the thermally averaged cross-section at T_freezeout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="1090" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="1090" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a5fd97d3eafe29fc042951ba1206ae8b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_fraction_one</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>RD_fraction_one</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="1115" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="1115" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a9582184cb5db264f06c865ed8379fc22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_fraction_leq_one</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>RD_fraction_leq_one</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option oh2_obs&lt;double&gt;: Set reference dark matter density (Oh2) for this module function (default 0.1188)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="1121" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="1121" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a01ce37e1574b62f7e5966cdec5f43eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_fraction_rescaled</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>RD_fraction_rescaled</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option oh2_obs&lt;double&gt;: Set reference dark matter density (Oh2) for this module function (default 0.1188)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="1131" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="1131" bodyend="1139"/>
      </memberdef>
      <memberdef kind="function" id="RelicDensity_8cpp_1a96039c727a02168cc8ae9ec11b720407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::RD_fraction_rescaled_LCDM</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>RD_fraction_rescaled_LCDM</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" line="1141" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/RelicDensity.cpp" bodystart="1141" bodyend="1150"/>
      </memberdef>
      <memberdef kind="function" id="ScalarSingletDM_8cpp_1aa91ba7757bc2723224acef8414ca4d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatter_ID_ScalarSingletDM</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatter_ID_ScalarSingletDM</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" line="196" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="ScalarSingletDM_8cpp_1a7f4edd7789ac27c554f89cbd5f55ac98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatterConj_ID_ScalarSingletDM</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatterConj_ID_ScalarSingletDM</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" line="197" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="ScalarSingletDM_8cpp_1a982163fd20e6e642db417f3dcfa8e865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::get_ScalarSingletDM_DD_couplings</definition>
        <argsstring>(const Spectrum &amp;spec, DM_nucleon_couplings &amp;result, Models::safe_param_map&lt; safe_ptr&lt; const double &gt; &gt; &amp;Param)</argsstring>
        <name>get_ScalarSingletDM_DD_couplings</name>
        <param>
          <type>const Spectrum &amp;</type>
          <declname>spec</declname>
        </param>
        <param>
          <type><ref refid="structGambit_1_1DM__nucleon__couplings" kindref="compound">DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1Models_1_1safe__param__map" kindref="compound">Models::safe_param_map</ref>&lt; <ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr</ref>&lt; const double &gt; &gt; &amp;</type>
          <declname>Param</declname>
        </param>
        <briefdescription>
<para>Common code for different scalar singlet direct detection coupling routines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" line="200" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" bodystart="200" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="ScalarSingletDM_8cpp_1aeebe10f53bec35e0cdf0e944f08e8660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_couplings_ScalarSingletDM_Z2</definition>
        <argsstring>(DM_nucleon_couplings &amp;result)</argsstring>
        <name>DD_couplings_ScalarSingletDM_Z2</name>
        <param>
          <type><ref refid="structGambit_1_1DM__nucleon__couplings" kindref="compound">DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Direct detection couplings for Z2 scalar singlet DM. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" line="224" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" bodystart="224" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="ScalarSingletDM_8cpp_1a5ff8f3723f3c1a96dbc36ee8caa21cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_couplings_ScalarSingletDM_Z3</definition>
        <argsstring>(DM_nucleon_couplings &amp;result)</argsstring>
        <name>DD_couplings_ScalarSingletDM_Z3</name>
        <param>
          <type><ref refid="structGambit_1_1DM__nucleon__couplings" kindref="compound">DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Direct detection couplings for Z3 scalar singlet DM. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" line="232" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" bodystart="232" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="ScalarSingletDM_8cpp_1af5d1dbd2d7b72fb879b131a626334efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_ScalarSingletDM_Z2</definition>
        <argsstring>(DarkBit::TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_ScalarSingletDM_Z2</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">DarkBit::TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Set up process catalog for Z2 scalar singlet DM. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" line="241" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" bodystart="241" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="ScalarSingletDM_8cpp_1a88c1da4936ed3578b84ee0156d3136de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_ScalarSingletDM_Z3</definition>
        <argsstring>(DarkBit::TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_ScalarSingletDM_Z3</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">DarkBit::TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Set up process catalog for Z3 scalar singlet DM. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" line="435" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/ScalarSingletDM.cpp" bodystart="435" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1aabe988fec6fe85889f60d85d5d6348c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_FermiLATdwarfs_gamLike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_FermiLATdwarfs_gamLike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Fermi LAT dwarf likelihoods, based on arXiv:1108.2914. <zwj/>/ void lnL_FermiLATdwarfsSimple(double &amp;result) { using namespace Pipes::lnL_FermiLATdwarfsSimple; // Koushiappas&apos; limits [arXiv:1108.2914] // // This is the tabulated Phi-Likelihood function from Koushiappas et al. // Above L = 36, we use linear extrapolation up to L = 360000 // // phi (defined as phi = sigmav/mDM**2*Ntot/8/pi * 1e26) double xgridArray [101] = { 0. , 6.74308086122e-05 , 0.000123192463137 , 0.000171713798503 , 0.000215245918518 , 0.000255093268618 , 0.00029207805123 , 0.000326751732695 , 0.000359503469472 , 0.000390620122006 , 0.000420321264006, 0.00044878042576 , 0.000476138421008 , 0.000502511975672 , 0.000527999496499, 0.000552685056887 , 0.000576641243501 , 0.000599931255273 , 0.000622610497068 , 0.000644727821172 , 0.000666326515638 , 0.000687445105269, 0.000708118010141 , 0.000728376093388 , 0.000748247120993 , 0.00076775615078, 0.000786925863514 , 0.000805776846231 , 0.000824327835809 , 0.00084259592922, 0.000860596765645 , 0.000878344684789 , 0.000895852864914 , 0.000913133443547 , 0.000930197623331 , 0.0009470557651 , 0.000963717469925 , 0.00098019165163 , 0.000996486601006 , 0.00101261004288 , 0.00102856918685 , 0.00104437077256 , 0.00106002111016 , 0.00107552611658 , 0.00109089134805 , 0.00110612202935 , 0.00112122308019 , 0.00113619913897 , 0.00115105458439 , 0.00116579355487 , 0.00118041996631 , 0.00119493752815 , 0.00120934975806 , 0.00122365999528 , 0.00123787141289 , 0.00125198702892 , 0.00126600971667 , 0.00127994221404 , 0.00129378713223 , 0.00130754696367 , 0.00132122408935 , 0.00133482078559 , 0.00134833923028 , 0.00136178150869 , 0.0013751496188 , 0.00138844547626 , 0.00140167091906 , 0.00141482771173 , 0.00142791754942 , 0.00144094206154 , 0.0014539028153 , 0.00146680131887 , 0.00147963902447 , 0.00149241733116 , 0.00150513758749 , 0.00151780109399 , 0.00153040910553 , 0.00154296283341 , 0.00155546344754 , 0.00156791207827 , 0.00158030981824 , 0.00159265772411 , 0.00160495681814 , 0.00161720808976 , 0.00162941249692 , 0.00164157096757 , 0.00165368440081 , 0.00166575366823 , 0.00167777961494 , 0.00168976306076 , 0.00170170480119 , 0.00171360560841 , 0.00172546623219 , 0.00173728740083 , 0.00174906982191 , 0.00176081418314 , 0.00177252115315 , 0.00178419138212 , 0.00179582550256 , 0.00180742412988 , 18.0 }; // // Normalization w.r.t. p-value of phi=0 // // chi^2 double ygridArray [101] = { 0.0, 0.0513551, 0.177438, 0.35228, 0.561353, 0.795726, 1.04953, 1.3187, 1.60032, 1.89222, 2.19274, 2.50059, 2.81476, 3.13441, 3.45887, 3.78757, 4.12006, 4.45594, 4.79486, 5.13653, 5.48072, 5.82719, 6.17576, 6.52625, 6.87853, 7.23244, 7.58789, 7.94475, 8.30294, 8.66236, 9.02294, 9.38462, 9.74731, 10.111, 10.4755, 10.841, 11.2072, 11.5742, 11.9419, 12.3104, 12.6795, 13.0492, 13.4195, 13.7904, 14.1619, 14.5339, 14.9063, 15.2793, 15.6527, 16.0266, 16.4008, 16.7755, 17.1506, 17.5261, 17.9019, 18.2781, 18.6546, 19.0315, 19.4087, 19.7861, 20.1639, 20.542, 20.9203, 21.2989, 21.6778, 22.0569, 22.4362, 22.8158, 23.1957, 23.5757, 23.956, 24.3365, 24.7171, 25.098, 25.4791, 25.8604, 26.2418, 26.6235, 27.0053, 27.3872, 27.7694, 28.1517, 28.5342, 28.9168, 29.2996, 29.6825, 30.0655, 30.4487, 30.8321, 31.2155, 31.5992, 31.9829, 32.3667, 32.7507, 33.1348, 33.519, 33.9034, 34.2878, 34.6724, 35.0571, 350000.0 }; // Convert arrays to vectors. std::vector&lt;double&gt; xgrid(xgridArray, xgridArray + sizeof xgridArray / sizeof xgridArray[0]); std::vector&lt;double&gt; ygrid(ygridArray, ygridArray + sizeof ygridArray / sizeof ygridArray[0]); // Construct interpolated function, using GAMBIT base functions. auto dwarf_likelihood = daFunk::interp(&quot;phi&quot;, xgrid, ygrid);. </para>
        </briefdescription>
        <detaileddescription>
<para>double fraction = *Dep::RD_fraction;</para>
<para>// Integate spectrum // (the zero velocity limit of the differential annihilation // cross-section as function of individual final state photons) double AnnYieldint = (*Dep::GA_Yield)-&gt; set(&quot;v&quot;, 0.)-&gt;gsl_integration(&quot;E&quot;, 1, 100)-&gt;set_epsabs(0)-&gt;set_epsrel(1e-3)-&gt;bind()-&gt;eval(); logger() &lt;&lt; &quot;AnnYieldInt (1-100 GeV): &quot; &lt;&lt; AnnYieldint &lt;&lt; EOM;</para>
<para>// Calculate phi-value double phi = AnnYieldint / 8. / M_PI * 1e26 * fraction * fraction;</para>
<para>// And return final likelihood result = 0.5*dwarf_likelihood-&gt;bind(&quot;phi&quot;)-&gt;eval(phi); logger() &lt;&lt; &quot;dwarf_likelihood: &quot; &lt;&lt; result &lt;&lt; EOM; logger() &lt;&lt; &quot;phi: &quot; &lt;&lt; phi &lt;&lt; EOM; }</para>
<para>module function which sets the Milky Way halo profile for the gamlike backend void set_gamLike_GC_halo(bool &amp;result) { using namespace Pipes::set_gamLike_GC_halo;</para>
<para>daFunk::Funk profile = (Dep::GalacticHalo)-&gt;DensityProfile; auto r = daFunk::logspace(-3, 2, 100); auto rho = daFunk::logspace(-3, 2, 100); double dist = (Dep::GalacticHalo)-&gt;r_sun; for ( size_t i = 0; i&lt;r.size(); i++ ) { rho[i] = profile-&gt;bind(&quot;r&quot;)-&gt;eval(r[i]); } BEreq::set_halo_profile(0, r, rho, byVal(dist)); result = true; }</para>
<para><verbatim>/*! \brief Fermi LAT dwarf likelihoods, using gamLike backend.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
<para>Option version<programlisting><codeline><highlight class="normal">&lt;string&gt;<sp/></highlight></codeline>
</programlisting> : Set Fermi LAT dwarf likelihood version (default: pass8)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="144" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="144" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1a8c28991228d6698e25e7167dfe1b1cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_HESSGC_gamLike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_HESSGC_gamLike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option version<programlisting><codeline><highlight class="normal">&lt;string&gt;<sp/></highlight></codeline>
</programlisting> : Set HESS GC likelihood version (default: spectral_externalJ)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="185" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="185" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1a6c7ae7c5b1ff12bb3770f6ecc8fadb07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_CTAGC_gamLike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_CTAGC_gamLike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="228" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="228" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1abcb92f036ad32291dfdce538386f5f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_FermiGC_gamLike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_FermiGC_gamLike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Fermi LAT galactic center likelihoods, using gamLike backend. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option version<programlisting><codeline><highlight class="normal">&lt;string&gt;<sp/></highlight></codeline>
</programlisting> : Set Fermi LAT GC likelihood version (default: externalJ)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="264" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="264" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1a5d4cd514a68ffe9d8032e5d11554ffcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_oh2_Simple</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_oh2_Simple</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Likelihood for cosmological relic density constraints. Default data: Omega_c h^2 = 0.11933 +/- 0.00091 (1 sigma), Gaussian. Planck TT,TE,EE+lowP+lensing+BAO 2018, arxiv:1807.06209 theory error: 5% S.B. 19/3/20 Updated with 2018 Planck results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>option oh2_fractional_theory_err&lt;double&gt;: Relic density fractional 1 sigma theory error (default: 0.05)</para>
<para>option oh2_obs&lt;double&gt;: Observed value of Omega h^2 (default: 0.11933)</para>
<para>option oh2_obserr&lt;double&gt;: 1 sigma error on observed value of Omega h^2 (default: 0.00091)</para>
<para>Option profile_systematics&lt;bool&gt;: Use likelihood version that has been profiled over systematic errors (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="312" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="312" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1a9fc27210097e81a893250f91be29b44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_oh2_upperlimit</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_oh2_upperlimit</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Likelihood for cosmological relic density constraints, implemented as an upper limit only Default data: Omega_c h^2 = 0.11933 +/- 0.00091 (1 sigma), Gaussian. Planck TT,TE,EE+lowP+lensing+BAO 2018, arxiv:1807.06209 theory error: 5% S.B. 19/3/20 Updated with 2018 Planck results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>option oh2_fractional_theory_err&lt;double&gt;: Relic density fractional 1 sigma theory error (default: 0.05)</para>
<para>option oh2_obs&lt;double&gt;: Observed value of Omega h^2 (default: 0.11933)</para>
<para>option oh2_obserr&lt;double&gt;: 1 sigma error on observed value of Omega h^2 (default: 0.00091)</para>
<para>Option profile_systematics&lt;bool&gt;: Use likelihood version that has been profiled over systematic errors (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="334" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="334" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1accbb56c5359d922deb6d3d4c6ce1a25c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_sigmas_sigmal</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_sigmas_sigmal</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Likelihoods for spin independent nuclear parameters. Follows treatment of Cline, et. al. Phys. Rev. D. 88, 055025 (2013) Default data: sigma_s = 43 +/- 8 MeV arXiv:1112.2435v1 sigma_l = 58 +/- 9 MeV. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option sigmas_obs&lt;double&gt;: Experimental value of sigma_s (default 43.)</para>
<para>Option sigmas_obserr&lt;double&gt;: 1 sigma error on sigma_s (default 8.)</para>
<para>Option sigmal_obs&lt;double&gt;: Experimental value of sigma_l (default 58.)</para>
<para>Option sigmal_obserr&lt;double&gt;: 1 sigma error on sigma_l (default 9.)</para>
<para>Option profile_systematics&lt;bool&gt;: Use likelihood version that has been profiled over systematic errors (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="358" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="358" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1ae6a245fa45204691c38401bdd309a622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_deltaq</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_deltaq</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Likelihoods for spin dependent nuclear parameters. Follows treatment of Akrami, et. al. JCAP04 (2011) 012. (Note that all deltaq are for proton.) Default data: a3 = deltau - deltad = 1.2723 +/- 0.0023 PDG 2015 lambda parameter from neutron beta decay a8 = deltau + deltad - 2*deltas = 0.585 +/- 0.025 <ulink url="http://arxiv.org/abs/hep-ph/0001046">http://arxiv.org/abs/hep-ph/0001046</ulink> deltas = -0.09 +/- 0.03 COMPASS: <ulink url="https://arxiv.org/abs/hep-ex/0609038">https://arxiv.org/abs/hep-ex/0609038</ulink>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option a3_obs&lt;double&gt;: Experimental value of a3 (default 1.2723)</para>
<para>Option a3_obserr&lt;double&gt;: 1 sigma error on a3 (default 0.0023)</para>
<para>Option a8_obs&lt;double&gt;: Experimental value of a8 (default 0.585)</para>
<para>Option a8_obserr&lt;double&gt;: 1 sigma error on a8 (default 0.025)</para>
<para>Option deltas_obs&lt;double&gt;: Experimental value of Delta_s (default -0.09)</para>
<para>Option deltas_obserr&lt;double&gt;: 1 sigma error on Delta_s (default 0.03)</para>
<para>Option profile_systematics&lt;bool&gt;: Use likelihood version that has been profiled over systematic errors (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="388" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="388" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1a0b891db1d994e28ec194d0b2380fe383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_sigmapiN_Deltas_gTs_rs2</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_sigmapiN_Deltas_gTs_rs2</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Likelihoods for nuclear parameters (ChPT) as used in DirectDM v2.2.0 Default data: sigmapiN = 0.050 +/- 0.015 GeV Deltas = -0.035 +/- 0.009 gTs = -0.027 +/- 0.016 rs2 = -0.115 +/- 0.035 GeV^-2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Use likelihood version that has been profiled over systematic errors (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="425" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="425" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1a28e2f09425a1da2b0eb58c02cf76ef0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_rho0_lognormal</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_rho0_lognormal</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Likelihoods for halo parameters. The likelihood for the local DM density follows a log normal distribution while for the velocities the distribution is Gaussian. For discussion of the default values for measured halo paramters and their errors, see JCAP04(2011)012. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option rho0_obs&lt;double&gt;: Best fit value for local dark matter density (default .4)</para>
<para>Option rho0_obserr&lt;double&gt;: Error on local dark matter density (default .15)</para>
<para>Option profile_systematics&lt;bool&gt;: Use likelihood version that has been profiled over systematic errors (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="463" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="463" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1a615e217a12f52565bd7c9c8e9db94d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_vrot_gaussian</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_vrot_gaussian</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option vrot_obs&lt;double&gt;: Best fit value for local disk rotational speed (default 235)</para>
<para>Option vrot_obserr&lt;double&gt;: 1 sigma error on local disk rotational speed (default 20)</para>
<para>Option profile_systematics&lt;bool&gt;: Use likelihood version that has been profiled over systematic errors (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="480" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="480" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1ab2568fb9bd60c483972cb4aec45baca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_v0_gaussian</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_v0_gaussian</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option v0_obs&lt;double&gt;: Best fit value for most-probable DM speed (default 235)</para>
<para>Option v0_obserr&lt;double&gt;: 1 sigma error on most-probable DM speed (default 20)</para>
<para>Option profile_systematics&lt;bool&gt;: Use likelihood version that has been profiled over systematic errors (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="495" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="495" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="SimpleLikelihoods_8cpp_1ab97ccc6c949ae0eb0fc6f28f4fcf8613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::lnL_vesc_gaussian</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>lnL_vesc_gaussian</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option vesc_obs&lt;double&gt;: Best fit value for escape velocity (default 550)</para>
<para>Option vesc_obserr&lt;double&gt;: 1 sigma error on escape velocity (default 35)</para>
<para>Option profile_systematics&lt;bool&gt;: Use likelihood version that has been profiled over systematic errors (default false)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" line="510" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SimpleLikelihoods.cpp" bodystart="510" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a034d1c05f23419a5ed832f59673518ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::capture_rate_Sun_const_xsec_DS5</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>capture_rate_Sun_const_xsec_DS5</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Capture rate of regular dark matter in the Sun (no v-dependent or q-dependent cross-sections) (s^-1). DarkSUSY 5 version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="47" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="47" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a2984b5b4867bdc2aa49e8bcc73b904c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::capture_rate_Sun_const_xsec</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>capture_rate_Sun_const_xsec</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Capture rate of regular dark matter in the Sun (no v-dependent or q-dependent cross-sections) (s^-1). DarkSUSY 6 version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="66" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="66" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a3b2bdb8a5ae997248e28ee67e85f5531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::capture_rate_Sun_const_xsec_capgen</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>capture_rate_Sun_const_xsec_capgen</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Alternative to the darkSusy fct, using captn_specific from capgen instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="87" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="87" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a224cc3061c363605d250c739b0d4736b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::capture_rate_Sun_vnqn</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>capture_rate_Sun_vnqn</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Capture rate for v^n and q^n-dependent cross sections. Isoscalar (same proton/neutron coupling) SD only couples to Hydrogen. See <ref refid="DirectDetection_8cpp" kindref="compound">DirectDetection.cpp</ref> to see how to define the cross sections sigma_SD_p, sigma_SI_pi </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="109" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="109" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a60aae5681845be7108f5a66dca2a470c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::capture_rate_Sun_NREO</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>capture_rate_Sun_NREO</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="172" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="172" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a6cc50bfbf1a73e8180c684d56d43f9a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::equilibration_time_Sun</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>equilibration_time_Sun</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="238" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="238" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a4da3f357ccf5f2f02d57ac6e6ddfa015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::annihilation_rate_Sun</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>annihilation_rate_Sun</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Annihilation rate of dark matter in the Sun (s^-1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="277" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="277" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a6e3c4134bd4eeacef886ac1729b1aa67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::nuyield_from_DS</definition>
        <argsstring>(nuyield_info &amp;result)</argsstring>
        <name>nuyield_from_DS</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1nuyield__info" kindref="compound">nuyield_info</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Neutrino yield function pointer and setup. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="285" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="285" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a7a5b518407034b8219f9a7a50ab341b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC79_loglike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC79_loglike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Composite IceCube 79-string likelihood function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="745" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="745" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a5b3eea18699ee765dc3427da32ca3b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::IC_loglike</definition>
        <argsstring>(double &amp;result)</argsstring>
        <name>IC_loglike</name>
        <param>
          <type>double &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Complete composite IceCube likelihood function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="755" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="755" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1a8efdf77638d0369331d914fce9865bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkSUSY5_PointInit_LocalHalo_func</definition>
        <argsstring>(bool &amp;result)</argsstring>
        <name>DarkSUSY5_PointInit_LocalHalo_func</name>
        <param>
          <type>bool &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Function to set Local Halo Parameters in DarkSUSY (DS5 only) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option v_earth&lt;double&gt;: Keplerian velocity of the Earth around the Sun in km/s (default 29.78)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="773" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="773" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="SunNeutrinos_8cpp_1afa477bd3cf4db1348270cbee7143a360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkSUSY_PointInit_LocalHalo_func</definition>
        <argsstring>(bool &amp;result)</argsstring>
        <name>DarkSUSY_PointInit_LocalHalo_func</name>
        <param>
          <type>bool &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Function to set Local Halo Parameters in DarkSUSY (DS 6) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Option v_earth&lt;double&gt;: Keplerian velocity of the Earth around the Sun in km/s (default 29.78)</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" line="815" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/SunNeutrinos.cpp" bodystart="815" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="VectorSingletDM_8cpp_1ad742fbba08173554330728689f32a56f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatter_ID_VectorSingletDM</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatter_ID_VectorSingletDM</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/VectorSingletDM.cpp" line="192" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/VectorSingletDM.cpp" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="VectorSingletDM_8cpp_1a1f2a8713bc230e8e0ad1c0f4519a8208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatterConj_ID_VectorSingletDM</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatterConj_ID_VectorSingletDM</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/VectorSingletDM.cpp" line="193" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/VectorSingletDM.cpp" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="VectorSingletDM_8cpp_1ae342e8c7d32172bce92d962f2c7a25d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_couplings_VectorSingletDM_Z2</definition>
        <argsstring>(DM_nucleon_couplings &amp;result)</argsstring>
        <name>DD_couplings_VectorSingletDM_Z2</name>
        <param>
          <type><ref refid="structGambit_1_1DM__nucleon__couplings" kindref="compound">DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Direct detection couplings for the VectorSingletDM_Z2 model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/VectorSingletDM.cpp" line="196" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/VectorSingletDM.cpp" bodystart="196" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="VectorSingletDM_8cpp_1a3807c576c9f095a84a5ecac2e8a3a44a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_VectorSingletDM_Z2</definition>
        <argsstring>(DarkBit::TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_VectorSingletDM_Z2</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">DarkBit::TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Set up process catalog for the VectorSingletDM_Z2 model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/VectorSingletDM.cpp" line="223" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/VectorSingletDM.cpp" bodystart="223" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="WIMP__EFT_8cpp_1aaf9f0af83002c50bc352f2f0e398da61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatter_ID_EFT</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatter_ID_EFT</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>DarkMatter_ID string for generic EFT dark matter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" line="125" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" bodystart="125" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="WIMP__EFT_8cpp_1a6f5fb49eddcac37a29dc11cdd3e13456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DarkMatterConj_ID_EFT</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>DarkMatterConj_ID_EFT</name>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>DarkMatterConj_ID string for generic EFT dark matter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" line="134" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="WIMP__EFT_8cpp_1abe792369a6272e6e273304d7d2f7b794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::NREO_couplings_from_parameters</definition>
        <argsstring>(NREO_DM_nucleon_couplings &amp;NREO_couplings)</argsstring>
        <name>NREO_couplings_from_parameters</name>
        <param>
          <type><ref refid="structGambit_1_1NREO__DM__nucleon__couplings" kindref="compound">NREO_DM_nucleon_couplings</ref> &amp;</type>
          <declname>NREO_couplings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" line="148" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="WIMP__EFT_8cpp_1aafbec01769c74589d83a479448534aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::NREO_from_DD_couplings</definition>
        <argsstring>(NREO_DM_nucleon_couplings &amp;NREO_couplings)</argsstring>
        <name>NREO_from_DD_couplings</name>
        <param>
          <type><ref refid="structGambit_1_1NREO__DM__nucleon__couplings" kindref="compound">NREO_DM_nucleon_couplings</ref> &amp;</type>
          <declname>NREO_couplings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" line="161" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" bodystart="161" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="WIMP__EFT_8cpp_1a387ede7567afa7a652b0ba399d002256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::DD_nonrel_WCs_flavscheme</definition>
        <argsstring>(NREO_DM_nucleon_couplings &amp;result)</argsstring>
        <name>DD_nonrel_WCs_flavscheme</name>
        <param>
          <type><ref refid="structGambit_1_1NREO__DM__nucleon__couplings" kindref="compound">NREO_DM_nucleon_couplings</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain the non-relativistic Wilson Coefficients from a set of model specific relativistic Wilson Coefficients from DirectDM in the flavour matching scheme (default 5 flavours). NR WCs defined at 2 GeV. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" line="178" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" bodystart="178" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="WIMP__EFT_8cpp_1ae4ffe9eb4f2b5d253d25db36bb72ecde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::ExtractDirectDMNuisanceParameters</definition>
        <argsstring>(map_str_dbl &amp;result)</argsstring>
        <name>ExtractDirectDMNuisanceParameters</name>
        <param>
          <type>map_str_dbl &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Module function providing nuisance parameters for to be passed to DirectDM directly from the model parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" line="219" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" bodystart="219" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="WIMP__EFT_8cpp_1a4cf00e60a1ecde29a2b51792c526b4a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DarkBit::TH_ProcessCatalog_WIMP_EFT</definition>
        <argsstring>(DarkBit::TH_ProcessCatalog &amp;result)</argsstring>
        <name>TH_ProcessCatalog_WIMP_EFT</name>
        <param>
          <type><ref refid="structGambit_1_1DarkBit_1_1TH__ProcessCatalog" kindref="compound">DarkBit::TH_ProcessCatalog</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Set up process catalog for a generic parameterisation of (two body) WIMP dark matter decays and annihilations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Generic parameterisation of WIMP self-annihilation cross-section to various SM two-body final states</para>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" line="286" column="10" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/WIMP_EFT.cpp" bodystart="286" bodyend="469"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/examples/DarkBit_standalone_ScalarSingletDM_Z2.cpp" line="40" column="1"/>
  </compounddef>
</doxygen>
