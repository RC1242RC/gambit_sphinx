<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="IndirectDetectionYields_8cpp" kind="file" language="C++">
    <compoundname>IndirectDetectionYields.cpp</compoundname>
    <includes local="yes">gambit/Elements/gambit_module_headers.hpp</includes>
    <includes local="yes">gambit/DarkBit/DarkBit_rollcall.hpp</includes>
    <includes local="yes">gambit/Utils/ascii_table_reader.hpp</includes>
    <includes refid="DarkBit__utils_8hpp" local="yes">gambit/DarkBit/DarkBit_utils.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>gambit/Elements/gambit_module_headers.hpp</label>
      </node>
      <node id="1">
        <label>IndirectDetectionYields.cpp</label>
        <link refid="IndirectDetectionYields_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="3">
        <label>gambit/DarkBit/DarkBit_rollcall.hpp</label>
      </node>
      <node id="10">
        <label>gambit/Elements/daFunk.hpp</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="9">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="4">
        <label>gambit/Utils/ascii_table_reader.hpp</label>
      </node>
      <node id="5">
        <label>gambit/DarkBit/DarkBit_utils.hpp</label>
        <link refid="DarkBit__utils_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1DarkBit">Gambit::DarkBit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Routines for the calculation of particle yields from dark matter annihilation / decay.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Christoph Weniger (<ulink url="mailto:c.weniger@uva.nl">c.weniger@uva.nl</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 Jul - 2015 May</para>
</simplesect>
<simplesect kind="author"><para>Sebastian Wild (<ulink url="mailto:sebastian.wild@ph.tum.de">sebastian.wild@ph.tum.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Aug</para>
</simplesect>
<simplesect kind="author"><para>Sanjay Bloor (<ulink url="mailto:sanjay.bloor12@imperial.ac.uk">sanjay.bloor12@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2018 Aug</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:pat.scott@uq.edu.au">pat.scott@uq.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 Nov, Dec</para>
</simplesect>
<simplesect kind="author"><para>Patrick Stoecker (<ulink url="mailto:stoecker@physik.rwth-aachen.de">stoecker@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2021 Mar</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Elements/gambit_module_headers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/DarkBit/DarkBit_rollcall.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/ascii_table_reader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DarkBit__utils_8hpp" kindref="compound">gambit/DarkBit/DarkBit_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DARKBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DarkBit</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>daFunk::Funk<sp/><ref refid="IndirectDetectionYields_8cpp_1a044f84589febb5bc4382fbf92d9cf971" kindref="member">boost_dNdE</ref>(daFunk::Funk<sp/>dNdE,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gamma<sp/>&lt;<sp/>1.0<sp/>+<sp/>.02<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>less<sp/>than<sp/>2%<sp/>boosts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkBit_error().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;boost_dNdE:<sp/>Requested<sp/>Lorentz<sp/>boost<sp/>with<sp/>gamma<sp/>&lt;<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dNdE;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>betaGamma<sp/>=<sp/>sqrt(gamma*gamma-1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>E<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>lnE<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;lnE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ep<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ep&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>halfBox_int<sp/>=<sp/>betaGamma*sqrt(E*E-mass*mass);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>halfBox_bound<sp/>=<sp/>betaGamma*sqrt(Ep*Ep-mass*mass);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>integrand<sp/>=<sp/>dNdE/(2*halfBox_int);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>integrand-&gt;gsl_integration(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/>Ep*gamma-halfBox_bound,<sp/>Ep*gamma+halfBox_bound)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;set_epsabs(0)-&gt;set_limit(100)-&gt;set_epsrel(1e-3)-&gt;set_use_log_fallback(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;set(</highlight><highlight class="stringliteral">&quot;Ep&quot;</highlight><highlight class="normal">,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>integration<sp/>over<sp/>lnE<sp/>causes<sp/>problems<sp/>in<sp/>the<sp/>WIMP<sp/>example<sp/>(3)<sp/>as<sp/>the<sp/>singularity<sp/>is<sp/>dropped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>(integrand*E)-&gt;set(&quot;E&quot;,<sp/>exp(lnE))-&gt;gsl_integration(&quot;lnE&quot;,<sp/>log(Ep*gamma-halfBox_bound),<sp/>log(Ep*gamma+halfBox_bound))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-&gt;set_epsabs(0)-&gt;set_epsrel(1e-3)-&gt;set(&quot;Ep&quot;,<sp/>daFunk::var(&quot;E&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>daFunk::Funk<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>yield,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_annihilation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>DMid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>DMbarid,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_ProcessCatalog<sp/>catalog,<sp/>SimYieldTable<sp/>table,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width,<sp/>stringFunkMap<sp/>cascadeMC_spectra)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DarkBit_utils::gamma3bdy_limits;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>ProcessCatalog<sp/>process<sp/>matches<sp/>the<sp/>is_annihilation<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TH_Process*<sp/>p<sp/>=<sp/>(is_annihilation<sp/>?<sp/>catalog.find(DMid,<sp/>DMbarid)<sp/>:<sp/>catalog.find(DMid));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>DarkBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>does<sp/>not<sp/>match<sp/>type<sp/>indicated<sp/>by<sp/>is_annihilation<sp/>flag.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>particle<sp/>mass<sp/>from<sp/>process<sp/>catalog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass<sp/>=<sp/>catalog.getParticleProperty(DMid).mass;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ecm(is_annihilation<sp/>?<sp/>2*mass<sp/>:<sp/>mass);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>annihilation<sp/>or<sp/>decay<sp/>process<sp/>from<sp/>process<sp/>catalog<sp/>and<sp/>set<sp/>up<sp/>yield<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_Process<sp/>process(is_annihilation<sp/>?<sp/>catalog.getProcess(DMid,<sp/>DMbarid)<sp/>:<sp/>catalog.getProcess(DMid));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Yield(is_annihilation<sp/>?<sp/>daFunk::zero(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">)<sp/>:<sp/>daFunk::zero(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adding<sp/>two-body<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;TH_Channel&gt;::iterator<sp/>it<sp/>=<sp/>process.channelList.begin();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>process.channelList.end();<sp/>++it)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>added<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>spectrum<sp/>is<sp/>not<sp/>available<sp/>from<sp/>any<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>only<sp/>take<sp/>care<sp/>of<sp/>two-body<sp/>final<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;nFinalStates<sp/>!=<sp/>2)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>final<sp/>state<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m0<sp/>=<sp/>catalog.getParticleProperty(it-&gt;finalStateIDs[0]).mass;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1<sp/>=<sp/>catalog.getParticleProperty(it-&gt;finalStateIDs[1]).mass;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>channels<sp/>that<sp/>are<sp/>kinematically<sp/>closed<sp/>for<sp/>v=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m0<sp/>+<sp/>m1<sp/>&gt;<sp/>Ecm<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>channels<sp/>with<sp/>0<sp/>BR<sp/>in<sp/>v=0<sp/>limit<sp/>(if<sp/>&quot;v&quot;<sp/>is<sp/>a<sp/>variable<sp/>of<sp/>genRate,<sp/>i.e.<sp/>not<sp/>a<sp/>decay).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;genRate-&gt;hasArg(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>it-&gt;genRate-&gt;bind(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">)-&gt;eval(0.)<sp/>&lt;=<sp/>0.0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(it-&gt;genRate-&gt;hasArgs())<sp/>&amp;&amp;<sp/>it-&gt;genRate-&gt;bind()-&gt;eval()<sp/>&lt;=0.0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E0<sp/>=<sp/>0.5*(Ecm*Ecm+m0*m0-m1*m1)/Ecm;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E1<sp/>=<sp/>Ecm-E0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>two-body<sp/>hard<sp/>process<sp/>final<sp/>state<sp/>is<sp/>in<sp/>SimYield<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>table.hasChannel(it-&gt;finalStateIDs[0],<sp/>it-&gt;finalStateIDs[1],<sp/>yield)<sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yield<sp/>=<sp/>Yield<sp/>+</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;genRate*(table)(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;finalStateIDs[0],<sp/>it-&gt;finalStateIDs[1],<sp/>yield,<sp/>Ecm);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>added<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deal<sp/>with<sp/>composite<sp/>final<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>spec0<sp/>=<sp/>daFunk::zero(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>spec1<sp/>=<sp/>daFunk::zero(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>added<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Final<sp/>state<sp/>particle<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tabulated<sp/>spectrum<sp/>available?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>table.hasChannel(it-&gt;finalStateIDs[0],<sp/>yield)<sp/>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec0<sp/>=<sp/>(table)(it-&gt;finalStateIDs[0],<sp/>yield)-&gt;set(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">,E0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Monochromatic<sp/>line?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it-&gt;finalStateIDs[0]<sp/>==<sp/>yield<sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>E<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec0<sp/>=<sp/>daFunk::delta(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,E0,E0*line_width);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MC<sp/>spectra<sp/>available?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cascadeMC_spectra.count(it-&gt;finalStateIDs[0])<sp/>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma0<sp/>=<sp/>E0/m0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>it-&gt;finalStateIDs[0]<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>gamma0<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec0<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a044f84589febb5bc4382fbf92d9cf971" kindref="member">boost_dNdE</ref>(cascadeMC_spectra.at(it-&gt;finalStateIDs[0]),<sp/>gamma0,<sp/>0.0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>added<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Final<sp/>state<sp/>particle<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>table.hasChannel(it-&gt;finalStateIDs[1],<sp/>yield)<sp/>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec1<sp/>=<sp/>(table)(it-&gt;finalStateIDs[1],<sp/>yield)-&gt;set(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">,<sp/>E1);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it-&gt;finalStateIDs[1]<sp/>==<sp/>yield<sp/>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>E<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec1<sp/>=<sp/>daFunk::delta(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,E1,E1*line_width);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cascadeMC_spectra.count(it-&gt;finalStateIDs[1])<sp/>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma1<sp/>=<sp/>E1/m1;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>it-&gt;finalStateIDs[1]<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>gamma1<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec1<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a044f84589febb5bc4382fbf92d9cf971" kindref="member">boost_dNdE</ref>(cascadeMC_spectra.at(it-&gt;finalStateIDs[1]),<sp/>gamma1,<sp/>0.0);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>added<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DARKBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>it-&gt;finalStateIDs[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;finalStateIDs[1]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;gammas:<sp/>&quot;<sp/>&lt;&lt;<sp/>gamma0<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>gamma1<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>chnSpec<sp/>=<sp/>(daFunk::zero(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>spec0</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>spec1)-&gt;<sp/>set(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>daFunk::logspace(0,<sp/>3,<sp/>10);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>y<sp/>=<sp/>chnSpec-&gt;bind(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">)-&gt;vect(x);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>it-&gt;finalStateIDs[0]<sp/>&lt;&lt;<sp/>it-&gt;finalStateIDs[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>E:<sp/>[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;double&gt;::iterator<sp/>it2<sp/>=<sp/>x.begin();<sp/>it2<sp/>!=<sp/>x.end();<sp/>it2++)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>*it2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>dNdE:<sp/>[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;double&gt;::iterator<sp/>it2<sp/>=<sp/>y.begin();<sp/>it2<sp/>!=<sp/>y.end();<sp/>it2++)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>*it2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!added)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkBit_warning().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;DarkBit::getYield<sp/>(with<sp/>yield<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>yield<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;find<sp/>spectra<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;finalStateIDs[0]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;finalStateIDs[1]);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yield<sp/>=<sp/>Yield<sp/>+<sp/>(spec0<sp/>+<sp/>spec1)<sp/>*<sp/>it-&gt;genRate;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>adding<sp/>two-body<sp/>final<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adding<sp/>three-body<sp/>final<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/><sp/>Three<sp/>body<sp/>processes<sp/>are<sp/>added<sp/>even<sp/>if<sp/>they<sp/>are<sp/>closed<sp/>at<sp/>v=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;TH_Channel&gt;::iterator<sp/>it<sp/>=<sp/>process.channelList.begin();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>process.channelList.end();<sp/>++it)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>added<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>only<sp/>take<sp/>care<sp/>of<sp/>three-body<sp/>final<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;nFinalStates<sp/>!=<sp/>3)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Implement<sp/>tabulated<sp/>three-body<sp/>final<sp/>states</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Keep<sp/>this<sp/>for<sp/>future<sp/>use</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>it-&gt;nFinalStates<sp/>==<sp/>3</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>table-&gt;hasChannel(it-&gt;finalStateIDs[0],<sp/>yield)</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>table-&gt;hasChannel(it-&gt;finalStateIDs[1],<sp/>yield)</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>table-&gt;hasChannel(it-&gt;finalStateIDs[2],<sp/>yield)<sp/>)</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE1dE2<sp/>=<sp/>it-&gt;genRate-&gt;set(&quot;v&quot;,0.);</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>spec0<sp/>=<sp/>(table)(it-&gt;finalStateIDs[0],<sp/>yield);</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>spec1<sp/>=<sp/>(table)(it-&gt;finalStateIDs[1],<sp/>yield);</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>spec2<sp/>=<sp/>(table)(it-&gt;finalStateIDs[2],<sp/>yield);</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yield<sp/>=<sp/>Yield<sp/>+<sp/>convspec(spec0,<sp/>spec1,<sp/>spec2,<sp/>dNdE1dE2);</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it-&gt;finalStateIDs[0]<sp/>==<sp/>yield<sp/>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it-&gt;finalStateIDs[1]<sp/>==<sp/>yield<sp/>or<sp/>it-&gt;finalStateIDs[2]<sp/>==<sp/>yield)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkBit_warning().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Second<sp/>and/or<sp/>third<sp/>primary<sp/>&quot;</highlight><highlight class="normal">+yield+</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>three-body<sp/>final<sp/>states<sp/>ignored.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1<sp/>=<sp/>catalog.getParticleProperty(it-&gt;finalStateIDs[1]).mass;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2<sp/>=<sp/>catalog.getParticleProperty(it-&gt;finalStateIDs[2]).mass;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>E1_low<sp/>=<sp/><sp/>daFunk::func(gamma3bdy_limits&lt;0&gt;,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass,<sp/>m1,<sp/>m2);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>E1_high<sp/>=<sp/><sp/>daFunk::func(gamma3bdy_limits&lt;1&gt;,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass,<sp/>m1,<sp/>m2);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dsigmavde<sp/>=<sp/>it-&gt;genRate-&gt;gsl_integration(</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;E1&quot;</highlight><highlight class="normal">,<sp/>E1_low,<sp/>E1_high);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yield<sp/>=<sp/>Yield<sp/>+<sp/>dsigmavde;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>added<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!added)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkBit_warning().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DarkBit::getYield<sp/>ignoring<sp/>final<sp/>state<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>it-&gt;finalStateIDs[0]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;finalStateIDs[1]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;finalStateIDs[2]);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rescale<sp/>the<sp/>yield<sp/>by<sp/>the<sp/>correct<sp/>kinematic<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_annihilation)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>process<sp/>involves<sp/>non-self-conjugate<sp/>DM<sp/>then<sp/>we<sp/>need<sp/>to<sp/>add<sp/>a<sp/>factor<sp/>of<sp/>1/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>final<sp/>spectrum.<sp/>This<sp/>must<sp/>be<sp/>explicitly<sp/>set<sp/>in<sp/>the<sp/>process<sp/>catalog.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>(process.isSelfConj)<sp/>?<sp/>1.<sp/>:<sp/>0.5;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yield<sp/>=<sp/>k*daFunk::ifelse(1e-6<sp/>-<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">),<sp/>Yield/(mass*mass),</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::throwError(</highlight><highlight class="stringliteral">&quot;Spectrum<sp/>currently<sp/>only<sp/>defined<sp/>for<sp/>v=0.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yield<sp/>=<sp/>Yield/mass;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Yield;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1afc91e2a127d483fd1215573df7a9f164" kindref="member">GA_AnnYield_General</ref>(daFunk::Funk<sp/>&amp;result)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::GA_AnnYield_General;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMid=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMbarid<sp/>=<sp/>*Dep::DarkMatterConj_ID;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.03,<sp/><sp/></highlight><highlight class="stringliteral">&quot;line_width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>DMid,<sp/>DMbarid,<sp/>*Dep::TH_ProcessCatalog,<sp/>*Dep::GA_SimYieldTable,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width,<sp/>*Dep::cascadeMC_gammaSpectra);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a922fc2bb2d83425ca6f7b6175fcf418a" kindref="member">GA_DecayYield_General</ref>(daFunk::Funk<sp/>&amp;result)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::GA_DecayYield_General;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMid<sp/>=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.03,<sp/><sp/></highlight><highlight class="stringliteral">&quot;line_width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>DMid,<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">,<sp/>*Dep::TH_ProcessCatalog,<sp/>*Dep::GA_SimYieldTable,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width,<sp/>*Dep::cascadeMC_gammaSpectra);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a05ddd905a5fb6ec36e3f96f8700dbdb4" kindref="member">electron_AnnYield_General</ref>(daFunk::Funk<sp/>&amp;result)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::electron_AnnYield_General;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMid=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMbarid<sp/>=<sp/>*Dep::DarkMatterConj_ID;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.03,<sp/><sp/></highlight><highlight class="stringliteral">&quot;line_width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="stringliteral">&quot;e-_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>DMid,<sp/>DMbarid,<sp/>*Dep::TH_ProcessCatalog,<sp/>*Dep::electron_SimYieldTable,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width,<sp/>*Dep::cascadeMC_electronSpectra);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a14cc5d5e5a1795697a644cbf4f478dca" kindref="member">electron_DecayYield_General</ref>(daFunk::Funk<sp/>&amp;result)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::electron_DecayYield_General;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMid<sp/>=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.03,<sp/><sp/></highlight><highlight class="stringliteral">&quot;line_width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="stringliteral">&quot;e-_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>DMid,<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">,<sp/>*Dep::TH_ProcessCatalog,<sp/>*Dep::electron_SimYieldTable,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width,<sp/>*Dep::cascadeMC_electronSpectra);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1aed1387b7270539845bcf8939a5ef2d8f" kindref="member">positron_AnnYield_General</ref>(daFunk::Funk<sp/>&amp;result)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::positron_AnnYield_General;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMid=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMbarid<sp/>=<sp/>*Dep::DarkMatterConj_ID;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.03,<sp/><sp/></highlight><highlight class="stringliteral">&quot;line_width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>DMid,<sp/>DMbarid,<sp/>*Dep::TH_ProcessCatalog,<sp/>*Dep::positron_SimYieldTable,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width,<sp/>*Dep::cascadeMC_positronSpectra);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1af56a531f9ab7c0e5fce1fd4535a2779b" kindref="member">positron_DecayYield_General</ref>(daFunk::Funk<sp/>&amp;result)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::positron_DecayYield_General;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMid<sp/>=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.03,<sp/><sp/></highlight><highlight class="stringliteral">&quot;line_width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>DMid,<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">,<sp/>*Dep::TH_ProcessCatalog,<sp/>*Dep::positron_SimYieldTable,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width,<sp/>*Dep::cascadeMC_positronSpectra);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a656c3a7cc030833a626b7a51d814331f" kindref="member">antiproton_AnnYield_General</ref>(daFunk::Funk<sp/>&amp;result)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::antiproton_AnnYield_General;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMid=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMbarid<sp/>=<sp/>*Dep::DarkMatterConj_ID;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.03,<sp/><sp/></highlight><highlight class="stringliteral">&quot;line_width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="stringliteral">&quot;pbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>DMid,<sp/>DMbarid,<sp/>*Dep::TH_ProcessCatalog,<sp/>*Dep::antiproton_SimYieldTable,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width,<sp/>*Dep::cascadeMC_antiprotonSpectra);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a598ae3a6bf8ff6213ea3c43de1fd4e0b" kindref="member">antiproton_DecayYield_General</ref>(daFunk::Funk<sp/>&amp;result)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::antiproton_DecayYield_General;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMid<sp/>=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.03,<sp/><sp/></highlight><highlight class="stringliteral">&quot;line_width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="stringliteral">&quot;pbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>DMid,<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">,<sp/>*Dep::TH_ProcessCatalog,<sp/>*Dep::antiproton_SimYieldTable,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width,<sp/>*Dep::cascadeMC_antiprotonSpectra);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1ad12e3f79e1e69ef234ca7b0527d96678" kindref="member">antideuteron_AnnYield_General</ref>(daFunk::Funk<sp/>&amp;result)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::antideuteron_AnnYield_General;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMid=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMbarid<sp/>=<sp/>*Dep::DarkMatterConj_ID;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.03,<sp/><sp/></highlight><highlight class="stringliteral">&quot;line_width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="stringliteral">&quot;Dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>DMid,<sp/>DMbarid,<sp/>*Dep::TH_ProcessCatalog,<sp/>*Dep::antideuteron_SimYieldTable,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width,<sp/>*Dep::cascadeMC_antideuteronSpectra);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1abeb5b35e2ab0baf5a38a8b8fc73a4ac2" kindref="member">antideuteron_DecayYield_General</ref>(daFunk::Funk<sp/>&amp;result)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::antideuteron_DecayYield_General;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>DMid<sp/>=<sp/>*Dep::DarkMatter_ID;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0.03,<sp/><sp/></highlight><highlight class="stringliteral">&quot;line_width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a34828ff035e4f66e09cb6e4548a3d5dd" kindref="member">getYield</ref>(</highlight><highlight class="stringliteral">&quot;Dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>DMid,<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">,<sp/>*Dep::TH_ProcessCatalog,<sp/>*Dep::antideuteron_SimYieldTable,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width,<sp/>*Dep::cascadeMC_antideuteronSpectra);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SimYields<sp/>=======================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a44bfdb5a633cc2cc5d1b72ca96e69091" kindref="member">Combine_SimYields</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::Combine_SimYields;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Downstream::neededFor(</highlight><highlight class="stringliteral">&quot;cascadeMC_gammaSpectra&quot;</highlight><highlight class="normal">))<sp/>Dep::GA_SimYieldTable-&gt;donateChannels(result);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Downstream::neededFor(</highlight><highlight class="stringliteral">&quot;cascadeMC_electronSpectra&quot;</highlight><highlight class="normal">))<sp/>Dep::positron_SimYieldTable-&gt;donateChannels(result);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Downstream::neededFor(</highlight><highlight class="stringliteral">&quot;cascadeMC_positronSpectra&quot;</highlight><highlight class="normal">))<sp/>Dep::electron_SimYieldTable-&gt;donateChannels(result);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Downstream::neededFor(</highlight><highlight class="stringliteral">&quot;cascadeMC_antiprotonSpectra&quot;</highlight><highlight class="normal">))<sp/>Dep::antiproton_SimYieldTable-&gt;donateChannels(result);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Downstream::neededFor(</highlight><highlight class="stringliteral">&quot;cascadeMC_antideuteronSpectra&quot;</highlight><highlight class="normal">))<sp/>Dep::antideuteron_SimYieldTable-&gt;donateChannels(result);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a3b67726bacf740e5bb20c760b706d24f" kindref="member">GA_SimYieldTable_DS5</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::GA_SimYieldTable_DS5;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yieldk<sp/>=<sp/>152;<sp/><sp/></highlight><highlight class="comment">//<sp/>gamma<sp/>ray<sp/>yield</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DarkBit_utils::str_flav_to_mass;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mDM_min,<sp/>mDM_max;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_yield_extrapolation<sp/>=<sp/>runOptions-&gt;getValueOrDef(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>allow_yield_extrapolation<sp/>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDM_min<sp/>=<sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case,<sp/>the<sp/>minimally<sp/>allowed<sp/>dark<sp/>matter<sp/>mass<sp/>will<sp/>later<sp/>be<sp/>set<sp/>to<sp/>be<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>final<sp/>state<sp/>particle,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>an<sp/>additional<sp/>factor<sp/>0.99<sp/>for<sp/>the<sp/>case<sp/>of<sp/>Z,<sp/>W<sp/>or<sp/>t<sp/>final<sp/>states<sp/>(following<sp/>DarkSUSY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDM_max<sp/>=<sp/>1.0e6;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDM_min<sp/>=<sp/>10.0;<sp/></highlight><highlight class="comment">//<sp/>minimal<sp/>dark<sp/>matter<sp/>mass<sp/>simulated<sp/>in<sp/>DarkSUSY.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDM_max<sp/>=<sp/>5000.;<sp/></highlight><highlight class="comment">//<sp/>maximal<sp/>dark<sp/>matter<sp/>mass<sp/>simulated<sp/>in<sp/>DarkSUSY.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,<sp/>str<sp/>P1,<sp/>str<sp/>P2,<sp/>str<sp/>FINAL,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(BEreq::dshayield.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;mwimp&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>ch,<sp/>yieldk,<sp/>flag)-&gt;set(</highlight><highlight class="stringliteral">&quot;mwimp&quot;</highlight><highlight class="normal">,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">)/2);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE,<sp/>str_flav_to_mass(P1),<sp/>str_flav_to_mass(P2),<sp/>FINAL,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>routine<sp/>adds<sp/>an<sp/>annihilation<sp/>channel,<sp/>for<sp/>which<sp/>the<sp/>yields<sp/>are<sp/>extrapolated<sp/>below<sp/>Ecm_ToScale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>approximation<sp/>that<sp/>x*dN/dx<sp/>is<sp/>a<sp/>constant<sp/>function<sp/>of<sp/>the<sp/>dark<sp/>matter<sp/>mass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel_with_scaling<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,<sp/>str<sp/>P1,<sp/>str<sp/>P2,<sp/>str<sp/>FINAL,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ecm_ToScale)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm_ToUse<sp/>=<sp/>fmax(Ecm_ToScale,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>ScalingFactor<sp/>=<sp/>Ecm_ToUse/daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE<sp/>=<sp/>ScalingFactor<sp/>*<sp/>daFunk::func_fromThreadsafe(BEreq::dshayield.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;mwimp&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalingFactor<sp/>*<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>ch,<sp/>yieldk,<sp/>flag)-&gt;set(</highlight><highlight class="stringliteral">&quot;mwimp&quot;</highlight><highlight class="normal">,<sp/>Ecm_ToUse/2);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE,<sp/>str_flav_to_mass(P1),<sp/>str_flav_to_mass(P2),<sp/>FINAL,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Specifies<sp/>also<sp/>center<sp/>of<sp/>mass<sp/>energy<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(12,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*90.288,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(13,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*79.4475,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(14,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_e&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(15,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(16,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_mu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(17,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(18,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(19,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.7841),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add_channel(20,<sp/>&quot;u&quot;,<sp/>&quot;ubar&quot;,<sp/>&quot;gamma&quot;,<sp/>0.,<sp/>2*mDM_max);<sp/><sp/>//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(22,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>approx<sp/>by<sp/>cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add_channel(21,<sp/>&quot;d&quot;,<sp/>&quot;dbar&quot;,<sp/>&quot;gamma&quot;,<sp/>0.,<sp/>2*mDM_max);<sp/><sp/>//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(22,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>approx<sp/>by<sp/>cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(22,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add_channel(23,<sp/>&quot;s&quot;,<sp/>&quot;sbar&quot;,<sp/>&quot;gamma&quot;,<sp/>0.,<sp/>2*mDM_max);<sp/><sp/>//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(22,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>approx<sp/>by<sp/>cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_with_scaling(24,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*160.0,<sp/>2*mDM_max,<sp/>2*173.3);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(25,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>5.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(26,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>approximations<sp/>for<sp/>single-particle<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Replace<sp/>by<sp/>boosted<sp/>rest<sp/>frame<sp/>spectrum<sp/>Z0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(BEreq::dshayield.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>12,<sp/>yieldk,<sp/>flag);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>90.288,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(BEreq::dshayield.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>13,<sp/>yieldk,<sp/>flag);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>79.4475,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/></highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>79.4475,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(BEreq::dshayield.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>15,<sp/>yieldk,<sp/>flag);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(BEreq::dshayield.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>17,<sp/>yieldk,<sp/>flag);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(BEreq::dshayield.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>19,<sp/>yieldk,<sp/>flag);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>1.7841),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>1.7841),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ecm_ToScale_top<sp/>=<sp/>173.3;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm_ToUse_top<sp/>=<sp/>fmax(Ecm_ToScale_top,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>ScalingFactor_top<sp/>=<sp/>Ecm_ToUse_top/daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>ScalingFactor_top<sp/>*<sp/>daFunk::func_fromThreadsafe(BEreq::dshayield.pointer(),<sp/>Ecm_ToUse_top,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalingFactor_top<sp/>*<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>24,<sp/>yieldk,<sp/>flag);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>160.0,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>160.0,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>channels<sp/>with<sp/>&quot;mixed<sp/>final<sp/>states&quot;,<sp/>i.e.<sp/>final<sp/>state<sp/>particles<sp/>with<sp/>(potentially)<sp/>different<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel_mixedmasses<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch2,<sp/>str<sp/>P1,<sp/>str<sp/>P2,<sp/>str<sp/>FINAL,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE_1<sp/>=<sp/>daFunk::func_fromThreadsafe(BEreq::dshayield.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>ch1,<sp/>yieldk,<sp/>flag)-&gt;set(</highlight><highlight class="stringliteral">&quot;E1&quot;</highlight><highlight class="normal">,<sp/>Ecm/2<sp/>+<sp/>(m1*m1<sp/>-<sp/>m2*m2)/(2*Ecm));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE_2<sp/>=<sp/>daFunk::func_fromThreadsafe(BEreq::dshayield.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>ch2,<sp/>yieldk,<sp/>flag)-&gt;set(</highlight><highlight class="stringliteral">&quot;E2&quot;</highlight><highlight class="normal">,<sp/>Ecm/2<sp/>+<sp/>(m2*m2<sp/>-<sp/>m1*m1)/(2*Ecm));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(0.5*(dNdE_1<sp/>+<sp/>dNdE_2),<sp/>str_flav_to_mass(P1),<sp/>str_flav_to_mass(P2),<sp/>FINAL,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>In<sp/>the<sp/>following:<sp/>approximate<sp/>spectra<sp/>from<sp/>u,d,s<sp/>(20,21,23)<sp/>by<sp/>spectrum<sp/>from<sp/>c<sp/>(22).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>The<sp/>numerical<sp/>values<sp/>for<sp/>EcmMin<sp/>and<sp/>EcmMax<sp/>are<sp/>obtained<sp/>from<sp/>applying<sp/>the<sp/>corresponding<sp/>two-body<sp/>kinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>to<sp/>the<sp/>minimally/maximally<sp/>allowed<sp/>center-of-mass<sp/>energies.<sp/>Hence,<sp/>EcmMin<sp/>depends<sp/>on<sp/>the<sp/>flag<sp/>allow_yield_extrapolation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>it<sp/>is<sp/>false,<sp/>the<sp/>assigmnents<sp/>of<sp/>Ecm_min<sp/>assume<sp/>the<sp/>value<sp/>mDM_min<sp/>=<sp/>10.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>20.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>20.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>20.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>20.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>25,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>5.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.530<sp/>:<sp/>21.181),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(25,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.530<sp/>:<sp/>21.181),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>1.35,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>1.35,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>25,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>5.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.35<sp/>:<sp/>21.099),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(25,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>1.35,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.35<sp/>:<sp/>21.099),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(24,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>175.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>24,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>175.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(24,<sp/>22,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>175.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(22,<sp/>24,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>175.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(24,<sp/>25,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>175.0,<sp/>5.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>180.0<sp/>:<sp/>185.214),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(25,<sp/>24,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>175.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>180.0<sp/>:<sp/>185.214),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>SimYieldTable<sp/><ref refid="IndirectDetectionYields_8cpp_1ac2606238040b7887a2dc1854665a6d58" kindref="member">SimYieldTable_DarkSUSY</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>yield,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_yield_extrapolation,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*dsanyield)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;),<sp/>safe_ptr&lt;Options&gt;<sp/>runOptions)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DarkBit_utils::str_flav_to_mass;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diff=1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>differential<sp/>yields<sp/>(=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*hel<sp/>=<sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>helicity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yieldpdg;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PDG<sp/>code<sp/>of<sp/>final<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mDM_min,<sp/>mDM_max;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Boundaries<sp/>of<sp/>tabulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SimYieldTable<sp/>result;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>table<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>PDG<sp/>code<sp/>of<sp/>the<sp/>particle<sp/>for<sp/>which<sp/>the<sp/>yield<sp/>has<sp/>been<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yield<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/><sp/>22;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yield<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>-11;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yield<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;pbar&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>-2212;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yield<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Dbar&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>-1000010020;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yield<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;pi0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>111;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yield<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nu_e<sp/>+<sp/>nu_ebar&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yield<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nu_mu<sp/>+<sp/>nu_mubar&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yield<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nu_tau<sp/>+<sp/>nu_taubar&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yieldpdg<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;SimYieldTable_DarkSUSY<sp/>called<sp/>with<sp/>unrecognised<sp/>final<sp/>state<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>yield);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>allow_yield_extrapolation<sp/>)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDM_min<sp/>=<sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case,<sp/>the<sp/>minimally<sp/>allowed<sp/>dark<sp/>matter<sp/>mass<sp/>will<sp/>later<sp/>be<sp/>set<sp/>to<sp/>be<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>final<sp/>state<sp/>particle,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>an<sp/>additional<sp/>factor<sp/>0.99<sp/>for<sp/>the<sp/>case<sp/>of<sp/>Z,<sp/>W<sp/>or<sp/>t<sp/>final<sp/>states<sp/>(following<sp/>DarkSUSY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDM_max<sp/>=<sp/>1.0e6;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDM_min<sp/>=<sp/>3.0;<sp/></highlight><highlight class="comment">//<sp/>minimal<sp/>dark<sp/>matter<sp/>mass<sp/>simulated<sp/>in<sp/>DarkSUSY6.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDM_max<sp/>=<sp/>20000.;<sp/></highlight><highlight class="comment">//<sp/>maximal<sp/>dark<sp/>matter<sp/>mass<sp/>simulated<sp/>in<sp/>DarkSUSY6.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdg,<sp/>str<sp/>p1,<sp/>str<sp/>p2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(dsanyield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;mwimp&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>pdg,<sp/>hel,<sp/>yieldpdg,<sp/>diff,<sp/>flag)-&gt;set(</highlight><highlight class="stringliteral">&quot;mwimp&quot;</highlight><highlight class="normal">,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">)/2);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE,<sp/>str_flav_to_mass(p1),<sp/>str_flav_to_mass(p2),<sp/>yield,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>routine<sp/>adds<sp/>an<sp/>annihilation/decay<sp/>channel,<sp/>for<sp/>which<sp/>the<sp/>yields<sp/>are<sp/>extrapolated<sp/>below<sp/>Ecm_ToScale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>approximation<sp/>that<sp/>x*dN/dx<sp/>is<sp/>a<sp/>constant<sp/>function<sp/>of<sp/>the<sp/>dark<sp/>matter<sp/>mass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel_with_scaling<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdg,<sp/>str<sp/>P1,<sp/>str<sp/>P2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ecm_ToScale)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm_ToUse<sp/>=<sp/>fmax(Ecm_ToScale,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>ScalingFactor<sp/>=<sp/>Ecm_ToUse/daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE<sp/>=<sp/>ScalingFactor<sp/>*<sp/>daFunk::func_fromThreadsafe(dsanyield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;mwimp&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalingFactor<sp/>*<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>pdg,<sp/>hel,<sp/>yieldpdg,<sp/>diff,<sp/>flag)-&gt;set(</highlight><highlight class="stringliteral">&quot;mwimp&quot;</highlight><highlight class="normal">,<sp/>Ecm_ToUse/2);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE,<sp/>str_flav_to_mass(P1),<sp/>str_flav_to_mass(P2),<sp/>yield,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specifies<sp/>also<sp/>center<sp/>of<sp/>mass<sp/>energy<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(23,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/>2*90.288,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(24,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/>2*79.4475,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(12,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_e&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(11,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(14,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_mu&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(13,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(16,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_tau&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(15,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.7841),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add_channel(2,<sp/>&quot;u&quot;,<sp/>&quot;ubar&quot;,<sp/>0.,<sp/>2*mDM_max);<sp/><sp/>//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(2,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>approx<sp/>by<sp/>cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add_channel(1,<sp/>&quot;d&quot;,<sp/>&quot;dbar&quot;,<sp/>0.,<sp/>2*mDM_max);<sp/><sp/>//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(1,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>approx<sp/>by<sp/>cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(4,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add_channel(3,<sp/>&quot;s&quot;,<sp/>&quot;sbar&quot;,<sp/>0.,<sp/>2*mDM_max);<sp/><sp/>//<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(3,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>approx<sp/>by<sp/>cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_with_scaling(6,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/>2*160.0,<sp/>2*mDM_max,<sp/>2*173.3);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(5,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>5.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(21,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>approximations<sp/>for<sp/>single-particle<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Replace<sp/>by<sp/>boosted<sp/>rest<sp/>frame<sp/>spectrum<sp/>Z0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(dsanyield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>23,<sp/>hel,yieldpdg,<sp/>diff,flag);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/>yield,<sp/>90.288,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(dsanyield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>24,<sp/>hel,yieldpdg,<sp/>diff,<sp/>flag);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/>yield,<sp/>79.4475,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/></highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/>yield,<sp/>79.4475,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(dsanyield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>11,<sp/>hel,<sp/>yieldpdg,<sp/>diff,<sp/>flag);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">),<sp/>yield,<sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>yield,<sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(dsanyield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>13,<sp/>hel,<sp/>yieldpdg,<sp/>diff,<sp/>flag);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">),<sp/>yield,<sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>yield,<sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(dsanyield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>15,<sp/>hel,<sp/>yieldpdg,<sp/>diff,<sp/>flag);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">),<sp/>yield,<sp/>std::max(mDM_min,<sp/>1.7841),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>yield,<sp/>std::max(mDM_min,<sp/>1.7841),<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ecm_ToScale_top<sp/>=<sp/>173.3;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm_ToUse_top<sp/>=<sp/>fmax(Ecm_ToScale_top,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>ScalingFactor_top<sp/>=<sp/>Ecm_ToUse_top/daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>ScalingFactor_top<sp/>*<sp/>daFunk::func_fromThreadsafe(dsanyield,<sp/>Ecm_ToUse_top,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalingFactor_top<sp/>*<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>6,<sp/>hel,<sp/>yieldpdg,<sp/>diff,<sp/>flag);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">),<sp/>yield,<sp/>160.0,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">),<sp/>yield,<sp/>160.0,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>channels<sp/>with<sp/>&quot;mixed<sp/>final<sp/>states&quot;,<sp/>i.e.<sp/>final<sp/>state<sp/>particles<sp/>with<sp/>(potentially)<sp/>different<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel_mixedmasses<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdg1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdg2,<sp/>str<sp/>P1,<sp/>str<sp/>P2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE_1<sp/>=<sp/>daFunk::func_fromThreadsafe(dsanyield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>pdg1,<sp/>hel,<sp/>yieldpdg,<sp/>diff,<sp/>flag)-&gt;set(</highlight><highlight class="stringliteral">&quot;E1&quot;</highlight><highlight class="normal">,<sp/>Ecm/2<sp/>+<sp/>(m1*m1<sp/>-<sp/>m2*m2)/(2*Ecm));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE_2<sp/>=<sp/>daFunk::func_fromThreadsafe(dsanyield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">),<sp/>pdg2,<sp/>hel,<sp/>yieldpdg,<sp/>diff,<sp/>flag)-&gt;set(</highlight><highlight class="stringliteral">&quot;E2&quot;</highlight><highlight class="normal">,<sp/>Ecm/2<sp/>+<sp/>(m2*m2<sp/>-<sp/>m1*m1)/(2*Ecm));</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(0.5*(dNdE_1<sp/>+<sp/>dNdE_2),<sp/>str_flav_to_mass(P1),<sp/>str_flav_to_mass(P2),<sp/>yield,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>The<sp/>numerical<sp/>values<sp/>for<sp/>EcmMin<sp/>and<sp/>EcmMax<sp/>are<sp/>obtained<sp/>from<sp/>applying<sp/>the<sp/>corresponding<sp/>two-body<sp/>kinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>to<sp/>the<sp/>minimally/maximally<sp/>allowed<sp/>center-of-mass<sp/>energies.<sp/>Hence,<sp/>EcmMin<sp/>depends<sp/>on<sp/>the<sp/>flag<sp/>allow_yield_extrapolation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(2,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>20.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(1,<sp/>-2,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>20.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(2,<sp/>-3,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>20.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(3,<sp/>-2,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>20.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(2,<sp/>-5,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>5.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.530<sp/>:<sp/>21.181),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(5,<sp/>-2,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.530<sp/>:<sp/>21.181),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(4,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(1,<sp/>-4,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>1.35,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(4,<sp/>-3,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(3,<sp/>-4,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>1.35,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(4,<sp/>-5,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>5.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.35<sp/>:<sp/>21.099),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(5,<sp/>-4,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>1.35,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.35<sp/>:<sp/>21.099),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(6,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/>175.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(1,<sp/>-6,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>175.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(6,<sp/>-3,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/>175.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(3,<sp/>-6,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>175.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(6,<sp/>-5,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/>175.0,<sp/>5.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>180.0<sp/>:<sp/>185.214),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(5,<sp/>-6,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>175.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>180.0<sp/>:<sp/>185.214),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a013113a2f75a02da4eb2b936db6e0685" kindref="member">GA_SimYieldTable_DarkSUSY</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::GA_SimYieldTable_DarkSUSY;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_yield_extrapolation<sp/>=<sp/>runOptions-&gt;getValueOrDef(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1ac2606238040b7887a2dc1854665a6d58" kindref="member">SimYieldTable_DarkSUSY</ref>(</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>allow_yield_extrapolation,<sp/>BEreq::dsanyield_sim.pointer(),<sp/>runOptions);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1aa322856334c1d7f7daf04539de2bec3f" kindref="member">positron_SimYieldTable_DarkSUSY</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::positron_SimYieldTable_DarkSUSY;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_yield_extrapolation<sp/>=<sp/>runOptions-&gt;getValueOrDef(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1ac2606238040b7887a2dc1854665a6d58" kindref="member">SimYieldTable_DarkSUSY</ref>(</highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">,<sp/>allow_yield_extrapolation,<sp/>BEreq::dsanyield_sim.pointer(),<sp/>runOptions);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1aaf5d82a0edcff73727936e38a7e17f5d" kindref="member">antiproton_SimYieldTable_DarkSUSY</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::antiproton_SimYieldTable_DarkSUSY;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_yield_extrapolation<sp/>=<sp/>runOptions-&gt;getValueOrDef(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1ac2606238040b7887a2dc1854665a6d58" kindref="member">SimYieldTable_DarkSUSY</ref>(</highlight><highlight class="stringliteral">&quot;pbar&quot;</highlight><highlight class="normal">,<sp/>allow_yield_extrapolation,<sp/>BEreq::dsanyield_sim.pointer(),<sp/>runOptions);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1ab5faf1c8ee81f61ce4bf25c722836339" kindref="member">antideuteron_SimYieldTable_DarkSUSY</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::antideuteron_SimYieldTable_DarkSUSY;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_yield_extrapolation<sp/>=<sp/>runOptions-&gt;getValueOrDef(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1ac2606238040b7887a2dc1854665a6d58" kindref="member">SimYieldTable_DarkSUSY</ref>(</highlight><highlight class="stringliteral">&quot;Dbar&quot;</highlight><highlight class="normal">,<sp/>allow_yield_extrapolation,<sp/>BEreq::dsanyield_sim.pointer(),<sp/>runOptions);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a15714f42fe847496bbf18ac7ad1168e9" kindref="member">GA_SimYieldTable_MicrOmegas</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::GA_SimYieldTable_MicrOmegas;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DarkBit_utils::str_flav_to_mass;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outN<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>gamma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mDM_max;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>runOptions-&gt;getValueOrDef(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;allow_yield_extrapolation&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDM_max<sp/>=<sp/>1.0e6;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDM_max<sp/>=<sp/>5000.;<sp/></highlight><highlight class="comment">//<sp/>maximal<sp/>dark<sp/>matter<sp/>mass<sp/>simulated<sp/>in<sp/>micromegas.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inP,<sp/>str<sp/>P1,<sp/>str<sp/>P2,<sp/>str<sp/>FINAL,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE<sp/>=<sp/>daFunk::func_fromThreadsafe(BEreq::dNdE.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/>inP,<sp/>outN)/daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE,<sp/>str_flav_to_mass(P1),<sp/>str_flav_to_mass(P2),<sp/>FINAL,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);<sp/><sp/></highlight><highlight class="comment">//<sp/>specifies<sp/>also<sp/>center<sp/>of<sp/>mass<sp/>energy<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>routine<sp/>adds<sp/>an<sp/>annihilation<sp/>channel,<sp/>for<sp/>which<sp/>the<sp/>yields<sp/>are<sp/>extrapolated<sp/>below<sp/>Ecm_ToScale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>approximation<sp/>that<sp/>x*dN/dx<sp/>is<sp/>a<sp/>constant<sp/>function<sp/>of<sp/>the<sp/>dark<sp/>matter<sp/>mass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel_with_scaling<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inP,<sp/>str<sp/>P1,<sp/>str<sp/>P2,<sp/>str<sp/>FINAL,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ecm_ToScale)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm_ToUse<sp/>=<sp/>fmax(Ecm_ToScale,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>ScalingFactor<sp/>=<sp/>Ecm_ToUse/daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE<sp/>=<sp/>ScalingFactor<sp/>*<sp/>daFunk::func_fromThreadsafe(BEreq::dNdE.pointer(),<sp/>Ecm_ToUse,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalingFactor<sp/>*<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/>inP,<sp/>outN)/(ScalingFactor<sp/>*<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE,<sp/>str_flav_to_mass(P1),<sp/>str_flav_to_mass(P2),<sp/>FINAL,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(0,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(1,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(2,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(3,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(4,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(5,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*5.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_with_scaling(6,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*160.0,<sp/>2*mDM_max,<sp/>2.0*176.0);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(7,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(8,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(9,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(10,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*90.288,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(13,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*79.497,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(daFunk::zero(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_e&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(daFunk::zero(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_mu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(daFunk::zero(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2*2.,<sp/>2*mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>approximations<sp/>for<sp/>single-particle<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>(daFunk::func_fromThreadsafe(BEreq::dNdE.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;_Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/>8,<sp/>outN)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">))-&gt;set(</highlight><highlight class="stringliteral">&quot;_Ecm&quot;</highlight><highlight class="normal">,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">)*2);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2.,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2.,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>(daFunk::func_fromThreadsafe(BEreq::dNdE.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;_Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/>9,<sp/>outN)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">))-&gt;set(</highlight><highlight class="stringliteral">&quot;_Ecm&quot;</highlight><highlight class="normal">,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">)*2);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2.,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>2.,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>(daFunk::func_fromThreadsafe(BEreq::dNdE.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;_Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/>10,<sp/>outN)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">))-&gt;set(</highlight><highlight class="stringliteral">&quot;_Ecm&quot;</highlight><highlight class="normal">,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">)*2);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>90.288,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>(daFunk::func_fromThreadsafe(BEreq::dNdE.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;_Ecm&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/>13,<sp/>outN)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">))-&gt;set(</highlight><highlight class="stringliteral">&quot;_Ecm&quot;</highlight><highlight class="normal">,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">)*2);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>79.497,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/></highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>79.497,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>single<sp/>particle<sp/>lookup<sp/>for<sp/>t<sp/>tbar<sp/>to<sp/>prevent<sp/>them<sp/>from<sp/>being<sp/>tagged<sp/>as<sp/>missing<sp/>final<sp/>states<sp/>for<sp/>cascades.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ecm_ToScale_top<sp/>=<sp/>176.0;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm_ToUse_top<sp/>=<sp/>fmax(Ecm_ToScale_top,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>ScalingFactor_top<sp/>=<sp/>Ecm_ToUse_top/daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/><sp/>ScalingFactor_top<sp/>*<sp/>(daFunk::func_fromThreadsafe(BEreq::dNdE.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;_Ecm&quot;</highlight><highlight class="normal">),<sp/>ScalingFactor_top<sp/>*<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/>6,<sp/>outN)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/(ScalingFactor_top<sp/>*<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">)))-&gt;set(</highlight><highlight class="stringliteral">&quot;_Ecm&quot;</highlight><highlight class="normal">,<sp/>Ecm_ToUse_top*2.0);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>160.0,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(</highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>160.0,<sp/>mDM_max,<sp/>runOptions);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>channels<sp/>with<sp/>&quot;mixed<sp/>final<sp/>states&quot;,<sp/>i.e.<sp/>final<sp/>state<sp/>particles<sp/>with<sp/>(potentially)<sp/>different<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel_mixedmasses<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inP1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inP2,<sp/>str<sp/>P1,<sp/>str<sp/>P2,<sp/>str<sp/>FINAL,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax)</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE_1<sp/>=<sp/>(daFunk::func_fromThreadsafe(BEreq::dNdE.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/>inP1,<sp/>outN)-&gt;set(</highlight><highlight class="stringliteral">&quot;Ecm1&quot;</highlight><highlight class="normal">,<sp/>Ecm<sp/>+<sp/>(m1*m1<sp/>-<sp/>m2*m2)/Ecm))/daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE_2<sp/>=<sp/>(daFunk::func_fromThreadsafe(BEreq::dNdE.pointer(),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">),<sp/>inP2,<sp/>outN)-&gt;set(</highlight><highlight class="stringliteral">&quot;Ecm2&quot;</highlight><highlight class="normal">,<sp/>Ecm<sp/>+<sp/>(m2*m2<sp/>-<sp/>m1*m1)/Ecm))/daFunk::var(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(0.5*(dNdE_1<sp/>+<sp/>dNdE_2),<sp/>str_flav_to_mass(P1),<sp/>str_flav_to_mass(P2),<sp/>FINAL,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>The<sp/>numerical<sp/>values<sp/>for<sp/>EcmMin<sp/>and<sp/>EcmMax<sp/>are<sp/>obtained<sp/>from<sp/>applying<sp/>the<sp/>corresponding<sp/>two-body<sp/>kinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>to<sp/>the<sp/>minimal/maximal<sp/>center-of-mass<sp/>energies<sp/>allowed<sp/>by<sp/>the<sp/>micromegas<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(2,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(1,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(2,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(3,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>2*2.,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(2,<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>5.0,<sp/>7.386,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(5,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>0.0,<sp/>7.386,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(4,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>0.0,<sp/>4.413,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(1,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>1.35,<sp/>4.413,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(4,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>0.0,<sp/>4.413,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(3,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>1.35,<sp/>4.413,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(4,<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>5.0,<sp/>7.214,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(5,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>1.35,<sp/>7.214,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(6,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>176.0,<sp/>0.0,<sp/>178.011,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(1,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>176.0,<sp/>178.011,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(6,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>176.0,<sp/>0.0,<sp/>178.011,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(3,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>176.0,<sp/>178.011,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(6,<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>176.0,<sp/>5.0,<sp/>181.0,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(5,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>176.0,<sp/>181.0,<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a87a0574cf6830c4f975f45f800b3ac60" kindref="member">positron_SimYieldTable_MicrOmegas</ref>(SimYieldTable&amp;<sp/></highlight><highlight class="comment">/*result*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::positron_SimYieldTable_MicrOmegas;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkBit_error().raise(LOCAL_INFO,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;positron_SimYieldTable_MicrOmegas<sp/>is<sp/>not<sp/>implemented<sp/>yet.<sp/><sp/>Use<sp/>e.g.<sp/>positron_SimYieldTable_DarkSUSY<sp/>instead.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>SimYieldTable<sp/>SimYieldTable_PPPC(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>yield,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_yield_extrapolation,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*PPPC_yield)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,std::string),<sp/>safe_ptr&lt;Options&gt;<sp/>runOptions)</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DarkBit_utils::str_flav_to_mass;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SimYieldTable<sp/>result;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mDM_min<sp/>=<sp/>5.0;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mDM_max<sp/>=<sp/>100000.0;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>channel,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax)</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>m<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>x<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>E<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE<sp/>=<sp/>daFunk::func(<sp/>PPPC_yield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">),<sp/>channel);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>dNdE-&gt;set(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/>E/m);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p2.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>dNdE-&gt;set(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">,Ecm/2);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE,<sp/>str_flav_to_mass(p1),<sp/>str_flav_to_mass(p2),<sp/>yield,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>dNdE-&gt;set(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">,Ecm);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(p1),<sp/>yield,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>routine<sp/>adds<sp/>an<sp/>annihilation/decay<sp/>channel,<sp/>for<sp/>which<sp/>the<sp/>yields<sp/>are<sp/>extrapolated<sp/>below<sp/>Ecm_ToScale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>approximation<sp/>that<sp/>x*dN/dx<sp/>is<sp/>a<sp/>constant<sp/>function<sp/>of<sp/>the<sp/>dark<sp/>matter<sp/>mass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel_with_scaling<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>channel,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ecm_ToScale)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>m<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>x<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>E<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm_ToUse<sp/>=<sp/>fmax(Ecm_ToScale,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>ScalingFactor<sp/>=<sp/>Ecm_ToUse/daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE<sp/>=<sp/>daFunk::func(<sp/>PPPC_yield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">),<sp/>channel);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>(ScalingFactor*dNdE)-&gt;set(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/>E/m);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p2.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>dNdE-&gt;set(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">,Ecm_ToUse/2);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE,<sp/>str_flav_to_mass(p1),<sp/>str_flav_to_mass(p2),<sp/>yield,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE<sp/>=<sp/>dNdE-&gt;set(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">,Ecm_ToUse);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel(dNdE/2,<sp/>str_flav_to_mass(p1),<sp/>yield,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;mu&quot;</highlight><highlight class="normal">,<sp/><sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);<sp/><sp/></highlight><highlight class="comment">//<sp/>u,d,s<sp/>are<sp/>treated<sp/>as<sp/>one<sp/>species</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>1.35),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>5.0),<sp/><sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_with_scaling(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>160.0),<sp/>2*mDM_max,<sp/>2*173.3);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>79.4475),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>90.288),<sp/><sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/><sp/><sp/><sp/><sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add_channel(&quot;gamma&quot;,<sp/><sp/>&quot;gamma&quot;,<sp/><sp/>&quot;gamma&quot;,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add_channel(&quot;h&quot;,<sp/><sp/>&quot;h&quot;,<sp/><sp/>&quot;h&quot;,<sp/>2*std::max(mDM_min,<sp/>125.1),<sp/>2*mDM_max);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nubar_e&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;nubar_mu&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">,<sp/><sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">,<sp/>2*std::max(mDM_min,<sp/>0.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>approximations<sp/>for<sp/>single-particle<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>90.288),<sp/><sp/>mDM_max);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>79.4475),<sp/>mDM_max);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;W-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>79.4475),<sp/>mDM_max);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu&quot;</highlight><highlight class="normal">,<sp/><sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu&quot;</highlight><highlight class="normal">,<sp/><sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel(</highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>0.0),<sp/>mDM_max);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_with_scaling(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>160.0),<sp/>mDM_max,<sp/>173.3);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_with_scaling(</highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/>std::max(mDM_min,<sp/>160.0),<sp/>mDM_max,<sp/>173.3);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>channels<sp/>with<sp/>&quot;mixed<sp/>final<sp/>states&quot;,<sp/>i.e.<sp/>final<sp/>state<sp/>particles<sp/>with<sp/>(potentially)<sp/>different<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_channel_mixedmasses<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>ch1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>ch2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EcmMax)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>m<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>x<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>E<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ekin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>Ecm<sp/>=<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;Ecm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE1<sp/>=<sp/>daFunk::func(<sp/>PPPC_yield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">),<sp/>ch1);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE1<sp/>=<sp/>dNdE1-&gt;set(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/>E/m)-&gt;set(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">,<sp/>Ecm/2<sp/>+<sp/>(m1*m1<sp/>-<sp/>m2*m2)/(2*Ecm));</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>dNdE2<sp/>=<sp/>daFunk::func(<sp/>PPPC_yield,<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">),<sp/>daFunk::var(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">),<sp/>ch2);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNdE2<sp/>=<sp/>dNdE2-&gt;set(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/>E/m)-&gt;set(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">,<sp/>Ecm/2<sp/>+<sp/>(m2*m2<sp/>-<sp/>m1*m1)/(2*Ecm));</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.addChannel((dNdE1+dNdE2)/2,<sp/>str_flav_to_mass(p1),<sp/>str_flav_to_mass(p2),<sp/>yield,<sp/>EcmMin,<sp/>EcmMax,<sp/>runOptions);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>The<sp/>numerical<sp/>values<sp/>for<sp/>EcmMin<sp/>and<sp/>EcmMax<sp/>are<sp/>obtained<sp/>from<sp/>applying<sp/>the<sp/>corresponding<sp/>two-body<sp/>kinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>to<sp/>the<sp/>minimally/maximally<sp/>allowed<sp/>center-of-mass<sp/>energies.<sp/>Hence,<sp/>EcmMin<sp/>depends<sp/>on<sp/>the<sp/>flag<sp/>allow_yield_extrapolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>10.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>10.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>10.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>2*1.35<sp/>:<sp/>10.0),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>5.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.530<sp/>:<sp/>21.181),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.530<sp/>:<sp/>21.181),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>1.35,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>1.35,<sp/>(allow_yield_extrapolation<sp/>?<sp/>3.260<sp/>:<sp/>20.091),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/>1.35,<sp/>5.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.35<sp/>:<sp/>21.099),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>1.35,<sp/>(allow_yield_extrapolation<sp/>?<sp/>6.35<sp/>:<sp/>21.099),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>175.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>175.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,<sp/>175.0,<sp/>0.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>175.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>176.355<sp/>:<sp/>185.285),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/>175.0,<sp/>5.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>180.0<sp/>:<sp/>185.214),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_channel_mixedmasses(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/>5.0,<sp/>175.0,<sp/>(allow_yield_extrapolation<sp/>?<sp/>180.0<sp/>:<sp/>185.214),<sp/>2*mDM_max);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>for<sp/>the<sp/>PPPC<sp/>yields<sp/>are<sp/>defined<sp/>elsewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(in<sp/>PPPC.cpp<sp/>if<sp/>someone<sp/>asks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1ae24cb042ba6c9644dae7e51bad6adda9" kindref="member">PPPC_dNdE_gamma</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>std::string<sp/>channel);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a548db737a4fc74dbb0c8ea6e178148f4" kindref="member">PPPC_dNdE_positron</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>std::string<sp/>channel);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a13d31f9e22c377db5a4df5d87dc3c99a" kindref="member">GA_SimYieldTable_PPPC</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::GA_SimYieldTable_PPPC;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bool<sp/>allow_yield_extrapolation<sp/>=<sp/>runOptions-&gt;getValueOrDef(false,<sp/>&quot;allow_yield_extrapolation&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_yield_extrapolation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>SimYieldTable_PPPC(</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/>allow_yield_extrapolation,<sp/>&amp;PPPC_dNdE_gamma,<sp/>runOptions);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a1932f64f1d51fa3d0eb375c93befeb18" kindref="member">positron_SimYieldTable_PPPC</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::positron_SimYieldTable_PPPC;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bool<sp/>allow_yield_extrapolation<sp/>=<sp/>runOptions-&gt;getValueOrDef(false,<sp/>&quot;allow_yield_extrapolation&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_yield_extrapolation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>SimYieldTable_PPPC(</highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">,<sp/>allow_yield_extrapolation,<sp/>&amp;PPPC_dNdE_positron,<sp/>runOptions);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a68b0b3a18b697a8136b01e8474c61d04" kindref="member">GA_SimYieldTable_empty</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SimYieldTable<sp/>empty_table;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>empty_table;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>positron_SimYieldTable_empty(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SimYieldTable<sp/>empty_table;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>empty_table;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>antiproton_SimYieldTable_empty(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SimYieldTable<sp/>empty_table;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>empty_table;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>antideuteron_SimYieldTable_empty(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SimYieldTable<sp/>empty_table;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>empty_table;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a49f9c1b957308ac474c9fd18e1a82714" kindref="member">electron_SimYieldTable_from_positron_SimYieldTable</ref>(SimYieldTable&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>initialized<sp/>)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>duplicate<sp/>the<sp/>positron<sp/>yield.<sp/><sp/>DarkSUSY<sp/>at<sp/>least<sp/>does<sp/>not<sp/>offer<sp/>separate<sp/>electron<sp/>yields.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::electron_SimYieldTable_from_positron_SimYieldTable::Dep::positron_SimYieldTable;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.replaceFinalState(</highlight><highlight class="stringliteral">&quot;e+_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;e-_1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dumper<sp/>functions<sp/>================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a2cf71557344faf0cb23abe0765c12d94" kindref="member">dump</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>daFunk::Funk&amp;<sp/>spectrum)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>myfile<sp/>(filename);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myfile.is_open())</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;=1200;<sp/>i++)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>energy<sp/>=<sp/><ref refid="scanner__utils_8hpp_1a40cbcd2cdb26318cca622e0584a8d67f" kindref="member">pow</ref>(10.,<sp/>i/200.<sp/>-<sp/>4.);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myfile<sp/>&lt;&lt;<sp/>energy<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>spectrum-&gt;bind(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">)-&gt;eval(energy)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myfile.close();</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DarkBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a76e1a09054ddce13600d76fe83cb7f20" kindref="member">dump_gammaSpectrum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;result)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::dump_gammaSpectrum;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>spectrum<sp/>=<sp/>(*Dep::GA_Yield)-&gt;set(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Option<sp/>filename&lt;string&gt;:<sp/>Filename<sp/>for<sp/>gamma-ray<sp/>spectrum<sp/>dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(default:<sp/>dNdE_gamma.dat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>filename<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;dNdE_gamma.dat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FILENAME<sp/>for<sp/>gamma<sp/>dump:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a2cf71557344faf0cb23abe0765c12d94" kindref="member">dump</ref>(filename,<sp/>spectrum);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a2d0b250951a585dee724eb68db655e01" kindref="member">dump_electronSpectrum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;result)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::dump_electronSpectrum;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>spectrum<sp/>=<sp/>(*Dep::electron_Yield)-&gt;set(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Option<sp/>filename&lt;string&gt;:<sp/>Filename<sp/>for<sp/>electron<sp/>spectrum<sp/>dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(default:<sp/>dNdE_electron.dat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>filename<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;dNdE_electron.dat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FILENAME<sp/>for<sp/>electron<sp/>dump:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a2cf71557344faf0cb23abe0765c12d94" kindref="member">dump</ref>(filename,<sp/>spectrum);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a76da5d131b4e86104e73197a430fcd22" kindref="member">dump_positronSpectrum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;result)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::dump_positronSpectrum;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>spectrum<sp/>=<sp/>(*Dep::positron_Yield)-&gt;set(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Option<sp/>filename&lt;string&gt;:<sp/>Filename<sp/>for<sp/>positron<sp/>spectrum<sp/>dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(default:<sp/>dNdE_positron.dat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>filename<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;dNdE_positron.dat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FILENAME<sp/>for<sp/>positron<sp/>dump:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a2cf71557344faf0cb23abe0765c12d94" kindref="member">dump</ref>(filename,<sp/>spectrum);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a42092eec2e56ba9f64ff2d17065dbc73" kindref="member">dump_antiprotonSpectrum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;result)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::dump_antiprotonSpectrum;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>spectrum<sp/>=<sp/>(*Dep::antiproton_Yield)-&gt;set(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Option<sp/>filename&lt;string&gt;:<sp/>Filename<sp/>for<sp/>antiproton<sp/>spectrum<sp/>dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(default:<sp/>dNdE_antiproton.dat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>filename<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;dNdE_antiproton.dat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FILENAME<sp/>for<sp/>antiproton<sp/>dump:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a2cf71557344faf0cb23abe0765c12d94" kindref="member">dump</ref>(filename,<sp/>spectrum);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="IndirectDetectionYields_8cpp_1a976f3e7918daee9f72bd14e6584b209c" kindref="member">dump_antideuteronSpectrum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;result)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::dump_antideuteronSpectrum;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>daFunk::Funk<sp/>spectrum<sp/>=<sp/>(*Dep::antideuteron_Yield)-&gt;set(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Option<sp/>filename&lt;string&gt;:<sp/>Filename<sp/>for<sp/>antideuteron<sp/>spectrum<sp/>dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(default:<sp/>dNdE_antideuteron.dat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>filename<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;dNdE_antideuteron.dat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FILENAME<sp/>for<sp/>antideuteron<sp/>dump:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>EOM;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="IndirectDetectionYields_8cpp_1a2cf71557344faf0cb23abe0765c12d94" kindref="member">dump</ref>(filename,<sp/>spectrum);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/DarkBit/src/IndirectDetectionYields.cpp"/>
  </compounddef>
</doxygen>
