<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="LibThird__1__2_8hpp" kind="file" language="C++">
    <compoundname>LibThird_1_2.hpp</compoundname>
    <includes refid="include_2gambit_2Backends_2backend__undefs_8hpp" local="yes">gambit/Backends/backend_undefs.hpp</includes>
    <includedby refid="LibThird__1__2_8cpp" local="yes">LibThird_1_2.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>gambit/Backends/backend_undefs.hpp</label>
        <link refid="include_2gambit_2Backends_2backend__undefs_8hpp"/>
      </node>
      <node id="1">
        <label>LibThird_1_2.hpp</label>
        <link refid="LibThird__1__2_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>LibThird_1_2.cpp</label>
        <link refid="LibThird__1__2_8cpp"/>
      </node>
      <node id="1">
        <label>LibThird_1_2.hpp</label>
        <link refid="LibThird__1__2_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="LibThird__1__2_8hpp_1a7f7848301604c58c8962207acd75ff6e" prot="public" static="no">
        <name>BACKENDNAME</name>
        <initializer>LibThird</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp" line="20" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibThird__1__2_8hpp_1a339bf682af9659de270251e5d18011be" prot="public" static="no">
        <name>BACKENDLANG</name>
        <initializer>Python</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp" line="21" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibThird__1__2_8hpp_1a1c6d5de492ac61ad29aec7aa9a436bbf" prot="public" static="no">
        <name>VERSION</name>
        <initializer>1.2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp" line="22" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibThird__1__2_8hpp_1a8d5a383ba38225163529bfcb55b74444" prot="public" static="no">
        <name>SAFE_VERSION</name>
        <initializer>1_2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp" line="23" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LibThird__1__2_8hpp_1a62a0f8a0b822f31ff84bc8252b33e7c8" prot="public" static="no">
        <name>REFERENCE</name>
        <initializer>GAMBIT:2017yxo</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp" line="24" column="9" bodyfile="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Example of how to use the macros in &apos;<ref refid="backend__macros_8hpp" kindref="compound">backend_macros.hpp</ref>&apos; to set up a frontend for a Python library.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2017 Dec</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDNAME<sp/>LibThird</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKENDLANG<sp/>Python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION<sp/>1.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAFE_VERSION<sp/>1_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFERENCE<sp/>GAMBIT:2017yxo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>macro<sp/>imports<sp/>the<sp/>module<sp/>in<sp/>the<sp/>Python<sp/>interpreter</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>when<sp/>this<sp/>header<sp/>file<sp/>is<sp/>included<sp/>somewhere.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="backend__macros_8hpp_1ac7b7c11119ba13dc612df0e3e744b165" kindref="member">LOAD_LIBRARY</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Next<sp/>we<sp/>use<sp/>macros<sp/>BE_VARIABLE<sp/>and<sp/>BE_FUNCTION<sp/>to<sp/>extract<sp/>pointers</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>to<sp/>the<sp/>variables<sp/>and<sp/>functions<sp/>within<sp/>the<sp/>Python<sp/>module.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>The<sp/>macros<sp/>create<sp/>functors<sp/>that<sp/>wrap<sp/>the<sp/>library<sp/>variables<sp/>and<sp/>functions.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>These<sp/>are<sp/>used<sp/>by<sp/>the<sp/>Core<sp/>for<sp/>dependency<sp/>resolution<sp/>and<sp/>to<sp/>set<sp/>up<sp/>a<sp/>suitable</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>interface<sp/>to<sp/>the<sp/>library<sp/>functions/variables<sp/>at<sp/>module<sp/>level.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Syntax<sp/>for<sp/>BE_FUNCTION<sp/>(same<sp/>as<sp/>for<sp/>any<sp/>other<sp/>backend):</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>BE_FUNCTION([choose<sp/>function<sp/>name],<sp/>[type],<sp/>[arguement<sp/>types],<sp/>&quot;[exact<sp/>symbol<sp/>name]&quot;,<sp/>&quot;[choose<sp/>capability<sp/>name]&quot;)</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">BE_FUNCTION(initialize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;initialize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;initialize_capability&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">BE_FUNCTION(someFunction,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;someFunction&quot;,<sp/>&quot;someFunction&quot;)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">BE_FUNCTION(returnResult,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(),<sp/>&quot;returnResult&quot;,&quot;returnResult_capability&quot;)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>now<sp/>created<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>-<sp/>Function<sp/>pointers</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibThird::initialize<sp/><sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>void<sp/>(*)(int)</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibThird::someFunction<sp/><sp/><sp/><sp/><sp/>type:<sp/>void<sp/>(*)()</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibThird::returnResult<sp/><sp/><sp/><sp/><sp/>type:<sp/>double<sp/>(*)()</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>-<sp/>Functors</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibThird::Functown::initialize<sp/><sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>Gambit::backend_functor&lt;void,int&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibThird::Functown::someFunction<sp/><sp/><sp/><sp/><sp/>type:<sp/>Gambit::backend_functor&lt;void&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibThird::Functown::returnResult<sp/><sp/><sp/><sp/><sp/>type:<sp/>Gambit::backend_functor&lt;double&gt;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Syntax<sp/>for<sp/>BE_VARIABLE:</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>BE_VARIABLE([name],<sp/>[type],<sp/>&quot;[exact<sp/>symbol<sp/>name]&quot;,<sp/>&quot;[choose<sp/>capability<sp/>name]&quot;)</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">BE_VARIABLE(SomeInt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>&quot;someInt&quot;,<sp/>&quot;SomeInt&quot;)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">BE_VARIABLE(SomeDouble,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>&quot;someDouble&quot;,<sp/>&quot;SomeDouble&quot;)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>now<sp/>created<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>-<sp/>Pointers</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::SomeInt<sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>int*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::SomeDouble<sp/><sp/><sp/>type:<sp/>double*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>-<sp/>Functors</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::Functown::SomeInt<sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>Gambit::backend_functor&lt;int&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>Gambit::Backends::LibFirst::Functown::SomeDouble<sp/><sp/><sp/>type:<sp/>Gambit::backend_functor&lt;double&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>point<sp/>we<sp/>have<sp/>a<sp/>minimal<sp/>interface<sp/>to<sp/>the<sp/>loaded<sp/>library.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>Any<sp/>additional<sp/>convenience<sp/>functions<sp/>could<sp/>be<sp/>constructed<sp/>below</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>using<sp/>the<sp/>available<sp/>pointers.<sp/>All<sp/>convenience<sp/>functions<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>registred/wrapped<sp/>via<sp/>the<sp/>macro<sp/>BE_CONV_FUNCTION.<sp/>Implementation</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>of<sp/>convenience<sp/>functions<sp/>can<sp/>be<sp/>found<sp/>in<sp/>LibThird_1.1.cpp.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Now<sp/>register<sp/>any<sp/>convenience<sp/>functions<sp/>and<sp/>wrap<sp/>them<sp/>in<sp/>functors.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>Syntax<sp/>for<sp/>BE_CONV_FUNCTION:</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>BE_CONV_FUNCTION([function<sp/>name],<sp/>type,<sp/>(arguments),<sp/>&quot;[choose<sp/>capability<sp/>name]&quot;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">BE_CONV_FUNCTION(awesomenessNotByAnders,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>&quot;awesomeness&quot;)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Undefine<sp/>macros<sp/>to<sp/>avoid<sp/>conflict<sp/>with<sp/>other<sp/>backends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Backends/backend_undefs.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gambit_sphinx/gambit_sphinx/Backends/include/gambit/Backends/frontends/LibThird_1_2.hpp"/>
  </compounddef>
</doxygen>
